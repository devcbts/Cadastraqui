// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ROLE {
  ADMIN
  CANDIDATE
  RESPONSIBLE
  ENTITY
  ASSISTANT
}

enum COUNTRY {
  AC
  AL
  AM
  AP
  BA
  CE
  DF
  ES
  GO
  MA
  MG
  MS
  MT
  PA
  PB
  PE
  PI
  PR
  RJ
  RN
  RO
  RR
  RS
  SC
  SE
  SP
  TO
}

model Candidate {
  id                String   @id() @default(uuid())
  name              String
  CPF               String   @unique
  date_of_birth     DateTime
  phone             String
  address           String
  city              String
  UF                COUNTRY
  CEP               String
  neighborhood      String
  number_of_address Int
  role              ROLE     @default(CANDIDATE)
  created_at        DateTime @default(now())

  user    User   @relation(fields: [user_id], references: [id])
  user_id String

  @@map("candidates")
}

model User {
  id       String @id @default(uuid())
  email    String @unique
  password String
  role     ROLE   @default(CANDIDATE)

  created_at       DateTime           @default(now())
  Candidate        Candidate[]
  LegalResponsible LegalResponsible[]
  Entity           Entity[]
  Assistant        Assistant[]

  @@map("users")
}

model LegalResponsible {
  id                String           @id() @default(uuid())
  name              String
  CPF               String           @unique
  date_of_birth     DateTime
  phone             String
  address           String
  city              String
  UF                COUNTRY
  CEP               String
  neighborhood      String
  number_of_address Int
  role              ROLE             @default(RESPONSIBLE)
  created_at        DateTime         @default(now())
  user              User             @relation(fields: [user_id], references: [id])
  user_id           String
  LegalDependent    LegalDependent[]

  @@map("responsibles")
}

model LegalDependent {
  id            String   @id @default(uuid())
  name          String
  CPF           String   @unique
  date_of_birth DateTime

  responsible    LegalResponsible @relation(fields: [responsible_id], references: [id])
  responsible_id String

  created_at DateTime @default(now())

  @@map("dependents")
}

model Assistant {
  id   String @id @default(uuid())
  name String

  user    User   @relation(fields: [user_id], references: [id])
  user_id String

  entity    Entity @relation(fields: [entity_id], references: [id])
  entity_id String
}

model Entity {
  id      String @id @default(uuid())
  name    String
  phone   String
  address String

  user      User        @relation(fields: [user_id], references: [id])
  user_id   String
  Assistant Assistant[]
}
