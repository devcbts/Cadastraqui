
/**
 * Client
**/

import * as runtime from './runtime/library';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model IdMapping
 * 
 */
export type IdMapping = $Result.DefaultSelection<Prisma.$IdMappingPayload>
/**
 * Model Candidate
 * 
 */
export type Candidate = $Result.DefaultSelection<Prisma.$CandidatePayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model LegalResponsible
 * 
 */
export type LegalResponsible = $Result.DefaultSelection<Prisma.$LegalResponsiblePayload>
/**
 * Model SocialAssistant
 * 
 */
export type SocialAssistant = $Result.DefaultSelection<Prisma.$SocialAssistantPayload>
/**
 * Model Entity
 * 
 */
export type Entity = $Result.DefaultSelection<Prisma.$EntityPayload>
/**
 * Model EntitySubsidiary
 * 
 */
export type EntitySubsidiary = $Result.DefaultSelection<Prisma.$EntitySubsidiaryPayload>
/**
 * Model EntityDirector
 * 
 */
export type EntityDirector = $Result.DefaultSelection<Prisma.$EntityDirectorPayload>
/**
 * Model IdentityDetails
 * 
 */
export type IdentityDetails = $Result.DefaultSelection<Prisma.$IdentityDetailsPayload>
/**
 * Model FamilyMember
 * 
 */
export type FamilyMember = $Result.DefaultSelection<Prisma.$FamilyMemberPayload>
/**
 * Model Housing
 * 
 */
export type Housing = $Result.DefaultSelection<Prisma.$HousingPayload>
/**
 * Model Vehicle
 * 
 */
export type Vehicle = $Result.DefaultSelection<Prisma.$VehiclePayload>
/**
 * Model FamilyMemberIncome
 * 
 */
export type FamilyMemberIncome = $Result.DefaultSelection<Prisma.$FamilyMemberIncomePayload>
/**
 * Model MonthlyIncome
 * 
 */
export type MonthlyIncome = $Result.DefaultSelection<Prisma.$MonthlyIncomePayload>
/**
 * Model BankAccount
 * 
 */
export type BankAccount = $Result.DefaultSelection<Prisma.$BankAccountPayload>
/**
 * Model Expense
 * 
 */
export type Expense = $Result.DefaultSelection<Prisma.$ExpensePayload>
/**
 * Model Loan
 * 
 */
export type Loan = $Result.DefaultSelection<Prisma.$LoanPayload>
/**
 * Model Financing
 * 
 */
export type Financing = $Result.DefaultSelection<Prisma.$FinancingPayload>
/**
 * Model CreditCard
 * 
 */
export type CreditCard = $Result.DefaultSelection<Prisma.$CreditCardPayload>
/**
 * Model OtherExpense
 * 
 */
export type OtherExpense = $Result.DefaultSelection<Prisma.$OtherExpensePayload>
/**
 * Model FamilyMemberDisease
 * 
 */
export type FamilyMemberDisease = $Result.DefaultSelection<Prisma.$FamilyMemberDiseasePayload>
/**
 * Model Medication
 * 
 */
export type Medication = $Result.DefaultSelection<Prisma.$MedicationPayload>
/**
 * Model Declarations
 * 
 */
export type Declarations = $Result.DefaultSelection<Prisma.$DeclarationsPayload>
/**
 * Model AnnouncementInterview
 * 
 */
export type AnnouncementInterview = $Result.DefaultSelection<Prisma.$AnnouncementInterviewPayload>
/**
 * Model Announcement
 * 
 */
export type Announcement = $Result.DefaultSelection<Prisma.$AnnouncementPayload>
/**
 * Model Timeline
 * 
 */
export type Timeline = $Result.DefaultSelection<Prisma.$TimelinePayload>
/**
 * Model EducationLevel
 * 
 */
export type EducationLevel = $Result.DefaultSelection<Prisma.$EducationLevelPayload>
/**
 * Model Application
 * 
 */
export type Application = $Result.DefaultSelection<Prisma.$ApplicationPayload>
/**
 * Model ApplicationHistory
 * 
 */
export type ApplicationHistory = $Result.DefaultSelection<Prisma.$ApplicationHistoryPayload>
/**
 * Model ScholarshipGranted
 * 
 */
export type ScholarshipGranted = $Result.DefaultSelection<Prisma.$ScholarshipGrantedPayload>
/**
 * Model FamilyMemberToVehicle
 * 
 */
export type FamilyMemberToVehicle = $Result.DefaultSelection<Prisma.$FamilyMemberToVehiclePayload>

/**
 * Enums
 */
export namespace $Enums {
  export const ROLE: {
  ADMIN: 'ADMIN',
  CANDIDATE: 'CANDIDATE',
  RESPONSIBLE: 'RESPONSIBLE',
  ENTITY: 'ENTITY',
  ASSISTANT: 'ASSISTANT',
  ENTITY_SUB: 'ENTITY_SUB',
  ENTITY_DIRECTOR: 'ENTITY_DIRECTOR',
  SELECTION_RESPONSIBLE: 'SELECTION_RESPONSIBLE'
};

export type ROLE = (typeof ROLE)[keyof typeof ROLE]


export const INSTITUTION_TYPE: {
  Public: 'Public',
  Private: 'Private'
};

export type INSTITUTION_TYPE = (typeof INSTITUTION_TYPE)[keyof typeof INSTITUTION_TYPE]


export const EDUCATION_TYPE: {
  Alfabetizacao: 'Alfabetizacao',
  Ensino_Medio: 'Ensino_Medio',
  Ensino_Tecnico: 'Ensino_Tecnico',
  Ensino_Superior: 'Ensino_Superior'
};

export type EDUCATION_TYPE = (typeof EDUCATION_TYPE)[keyof typeof EDUCATION_TYPE]


export const SHIFT: {
  Matutino: 'Matutino',
  Vespertino: 'Vespertino',
  Noturno: 'Noturno',
  Integral: 'Integral'
};

export type SHIFT = (typeof SHIFT)[keyof typeof SHIFT]


export const COUNTRY: {
  AC: 'AC',
  AL: 'AL',
  AM: 'AM',
  AP: 'AP',
  BA: 'BA',
  CE: 'CE',
  DF: 'DF',
  ES: 'ES',
  GO: 'GO',
  MA: 'MA',
  MG: 'MG',
  MS: 'MS',
  MT: 'MT',
  PA: 'PA',
  PB: 'PB',
  PE: 'PE',
  PI: 'PI',
  PR: 'PR',
  RJ: 'RJ',
  RN: 'RN',
  RO: 'RO',
  RR: 'RR',
  RS: 'RS',
  SC: 'SC',
  SE: 'SE',
  SP: 'SP',
  TO: 'TO'
};

export type COUNTRY = (typeof COUNTRY)[keyof typeof COUNTRY]


export const GENDER: {
  MALE: 'MALE',
  FEMALE: 'FEMALE'
};

export type GENDER = (typeof GENDER)[keyof typeof GENDER]


export const DOCUMENT_TYPE: {
  DriversLicense: 'DriversLicense',
  FunctionalCard: 'FunctionalCard',
  MilitaryID: 'MilitaryID',
  Foreignerapplication: 'Foreignerapplication',
  Passport: 'Passport',
  WorkCard: 'WorkCard'
};

export type DOCUMENT_TYPE = (typeof DOCUMENT_TYPE)[keyof typeof DOCUMENT_TYPE]


export const MARITAL_STATUS: {
  Single: 'Single',
  Married: 'Married',
  Separated: 'Separated',
  Divorced: 'Divorced',
  Widowed: 'Widowed',
  StableUnion: 'StableUnion'
};

export type MARITAL_STATUS = (typeof MARITAL_STATUS)[keyof typeof MARITAL_STATUS]


export const SkinColor: {
  Yellow: 'Yellow',
  White: 'White',
  Indigenous: 'Indigenous',
  Brown: 'Brown',
  Black: 'Black',
  NotDeclared: 'NotDeclared'
};

export type SkinColor = (typeof SkinColor)[keyof typeof SkinColor]


export const RELIGION: {
  Catholic: 'Catholic',
  Evangelical: 'Evangelical',
  Spiritist: 'Spiritist',
  Atheist: 'Atheist',
  Other: 'Other',
  NotDeclared: 'NotDeclared'
};

export type RELIGION = (typeof RELIGION)[keyof typeof RELIGION]


export const SCHOLARSHIP: {
  Illiterate: 'Illiterate',
  ElementarySchool: 'ElementarySchool',
  HighSchool: 'HighSchool',
  CollegeGraduate: 'CollegeGraduate',
  CollegeUndergraduate: 'CollegeUndergraduate',
  Postgraduate: 'Postgraduate',
  Masters: 'Masters',
  Doctorate: 'Doctorate',
  PostDoctorate: 'PostDoctorate'
};

export type SCHOLARSHIP = (typeof SCHOLARSHIP)[keyof typeof SCHOLARSHIP]


export const ScholarshipType: {
  integralScholarchip: 'integralScholarchip',
  halfScholarchip: 'halfScholarchip'
};

export type ScholarshipType = (typeof ScholarshipType)[keyof typeof ScholarshipType]


export const IncomeSource: {
  PrivateEmployee: 'PrivateEmployee',
  PublicEmployee: 'PublicEmployee',
  DomesticEmployee: 'DomesticEmployee',
  TemporaryRuralEmployee: 'TemporaryRuralEmployee',
  BusinessOwnerSimplifiedTax: 'BusinessOwnerSimplifiedTax',
  BusinessOwner: 'BusinessOwner',
  IndividualEntrepreneur: 'IndividualEntrepreneur',
  SelfEmployed: 'SelfEmployed',
  Retired: 'Retired',
  Pensioner: 'Pensioner',
  Apprentice: 'Apprentice',
  Volunteer: 'Volunteer',
  RentalIncome: 'RentalIncome',
  Student: 'Student',
  InformalWorker: 'InformalWorker',
  Unemployed: 'Unemployed',
  TemporaryDisabilityBenefit: 'TemporaryDisabilityBenefit',
  LiberalProfessional: 'LiberalProfessional',
  FinancialHelpFromOthers: 'FinancialHelpFromOthers',
  Alimony: 'Alimony',
  PrivatePension: 'PrivatePension'
};

export type IncomeSource = (typeof IncomeSource)[keyof typeof IncomeSource]


export const Relationship: {
  Wife: 'Wife',
  Husband: 'Husband',
  Father: 'Father',
  Mother: 'Mother',
  Stepfather: 'Stepfather',
  Stepmother: 'Stepmother',
  Sibling: 'Sibling',
  Grandparent: 'Grandparent',
  Child: 'Child',
  Other: 'Other'
};

export type Relationship = (typeof Relationship)[keyof typeof Relationship]


export const PropertyStatus: {
  OwnPaidOff: 'OwnPaidOff',
  OwnFinanced: 'OwnFinanced',
  Rented: 'Rented',
  ProvidedByEmployer: 'ProvidedByEmployer',
  ProvidedByFamily: 'ProvidedByFamily',
  ProvidedOtherWay: 'ProvidedOtherWay',
  Irregular: 'Irregular'
};

export type PropertyStatus = (typeof PropertyStatus)[keyof typeof PropertyStatus]


export const ContractType: {
  Verbal: 'Verbal',
  ThroughRealEstateAgency: 'ThroughRealEstateAgency',
  DirectWithOwner: 'DirectWithOwner'
};

export type ContractType = (typeof ContractType)[keyof typeof ContractType]


export const TimeLivingInProperty: {
  UpTo11Months: 'UpTo11Months',
  From1To10Years: 'From1To10Years',
  From10To20Years: 'From10To20Years',
  Over20Years: 'Over20Years'
};

export type TimeLivingInProperty = (typeof TimeLivingInProperty)[keyof typeof TimeLivingInProperty]


export const DomicileType: {
  House: 'House',
  CondominiumHouse: 'CondominiumHouse',
  Apartment: 'Apartment',
  RoomingHouse: 'RoomingHouse'
};

export type DomicileType = (typeof DomicileType)[keyof typeof DomicileType]


export const NumberOfRooms: {
  One: 'One',
  Two: 'Two',
  Three: 'Three',
  Four: 'Four',
  Five: 'Five',
  Six: 'Six',
  Seven: 'Seven',
  Eight: 'Eight',
  Nine: 'Nine',
  Ten: 'Ten',
  Eleven: 'Eleven',
  Twelve: 'Twelve'
};

export type NumberOfRooms = (typeof NumberOfRooms)[keyof typeof NumberOfRooms]


export const VehicleType: {
  SmallCarsAndUtilities: 'SmallCarsAndUtilities',
  TrucksAndMinibuses: 'TrucksAndMinibuses',
  Motorcycles: 'Motorcycles'
};

export type VehicleType = (typeof VehicleType)[keyof typeof VehicleType]


export const VehicleSituation: {
  PaidOff: 'PaidOff',
  Financed: 'Financed'
};

export type VehicleSituation = (typeof VehicleSituation)[keyof typeof VehicleSituation]


export const VehicleUsage: {
  WorkInstrument: 'WorkInstrument',
  NecessaryDisplacement: 'NecessaryDisplacement'
};

export type VehicleUsage = (typeof VehicleUsage)[keyof typeof VehicleUsage]


export const EmploymentType: {
  PrivateEmployee: 'PrivateEmployee',
  PublicEmployee: 'PublicEmployee',
  DomesticEmployee: 'DomesticEmployee',
  TemporaryRuralEmployee: 'TemporaryRuralEmployee',
  BusinessOwnerSimplifiedTax: 'BusinessOwnerSimplifiedTax',
  BusinessOwner: 'BusinessOwner',
  IndividualEntrepreneur: 'IndividualEntrepreneur',
  SelfEmployed: 'SelfEmployed',
  Retired: 'Retired',
  Pensioner: 'Pensioner',
  Apprentice: 'Apprentice',
  Volunteer: 'Volunteer',
  RentalIncome: 'RentalIncome',
  Student: 'Student',
  InformalWorker: 'InformalWorker',
  Unemployed: 'Unemployed',
  TemporaryDisabilityBenefit: 'TemporaryDisabilityBenefit',
  LiberalProfessional: 'LiberalProfessional',
  FinancialHelpFromOthers: 'FinancialHelpFromOthers',
  Alimony: 'Alimony',
  PrivatePension: 'PrivatePension'
};

export type EmploymentType = (typeof EmploymentType)[keyof typeof EmploymentType]


export const AccountType: {
  CHECKING_ACCOUNT: 'CHECKING_ACCOUNT',
  SAVINGS_ACCOUNT: 'SAVINGS_ACCOUNT',
  PAYMENT_ACCOUNT: 'PAYMENT_ACCOUNT',
  SALARY_ACCOUNT: 'SALARY_ACCOUNT',
  STUDENT_ACCOUNT: 'STUDENT_ACCOUNT',
  DIGITAL_ACCOUNT: 'DIGITAL_ACCOUNT',
  MINORS_ACCOUNT: 'MINORS_ACCOUNT',
  BUSINESS_ACCOUNT: 'BUSINESS_ACCOUNT',
  JOINT_ACCOUNT: 'JOINT_ACCOUNT'
};

export type AccountType = (typeof AccountType)[keyof typeof AccountType]


export const FinancingType: {
  Car: 'Car',
  Motorcycle: 'Motorcycle',
  Truck: 'Truck',
  House_Apartment_Land: 'House_Apartment_Land',
  Other: 'Other'
};

export type FinancingType = (typeof FinancingType)[keyof typeof FinancingType]


export const Disease: {
  ALIENATION_MENTAL: 'ALIENATION_MENTAL',
  CARDIOPATHY_SEVERE: 'CARDIOPATHY_SEVERE',
  BLINDNESS: 'BLINDNESS',
  RADIATION_CONTAMINATION: 'RADIATION_CONTAMINATION',
  PARKINSONS_DISEASE: 'PARKINSONS_DISEASE',
  ANKYLOSING_SPONDYLITIS: 'ANKYLOSING_SPONDYLITIS',
  PAGETS_DISEASE: 'PAGETS_DISEASE',
  HANSENS_DISEASE: 'HANSENS_DISEASE',
  SEVERE_HEPATOPATHY: 'SEVERE_HEPATOPATHY',
  SEVERE_NEPHROPATHY: 'SEVERE_NEPHROPATHY',
  PARALYSIS: 'PARALYSIS',
  ACTIVE_TUBERCULOSIS: 'ACTIVE_TUBERCULOSIS',
  HIV_AIDS: 'HIV_AIDS',
  MALIGNANT_NEOPLASM: 'MALIGNANT_NEOPLASM',
  TERMINAL_STAGE: 'TERMINAL_STAGE',
  MICROCEPHALY: 'MICROCEPHALY',
  AUTISM_SPECTRUM_DISORDER: 'AUTISM_SPECTRUM_DISORDER',
  RARE_DISEASE: 'RARE_DISEASE',
  OTHER_HIGH_COST_DISEASE: 'OTHER_HIGH_COST_DISEASE'
};

export type Disease = (typeof Disease)[keyof typeof Disease]


export const Declaration_Type: {
  Form: 'Form',
  Activity: 'Activity',
  AddressProof: 'AddressProof',
  Autonomo: 'Autonomo',
  Card: 'Card',
  ChildPension: 'ChildPension',
  ChildSupport: 'ChildSupport',
  ContributionStatement: 'ContributionStatement',
  Data: 'Data',
  Empresario: 'Empresario',
  InactiveCompany: 'InactiveCompany',
  IncomeTaxExemption: 'IncomeTaxExemption',
  MEI: 'MEI',
  NoAddressProof: 'NoAddressProof',
  Penseion: 'Penseion',
  Pension: 'Pension',
  Rent: 'Rent',
  RentDetails: 'RentDetails',
  RentIncome: 'RentIncome',
  RentedHouse: 'RentedHouse',
  RuralWorker: 'RuralWorker',
  SingleStatus: 'SingleStatus',
  StableUnion: 'StableUnion',
  Status: 'Status',
  WorkCard: 'WorkCard'
};

export type Declaration_Type = (typeof Declaration_Type)[keyof typeof Declaration_Type]


export const AnnouncementType: {
  ScholarshipGrant: 'ScholarshipGrant',
  PeriodicVerification: 'PeriodicVerification'
};

export type AnnouncementType = (typeof AnnouncementType)[keyof typeof AnnouncementType]


export const TiebreakerCriterias: {
  CadUnico: 'CadUnico',
  LeastFamilyIncome: 'LeastFamilyIncome',
  SeriousIllness: 'SeriousIllness',
  Draw: 'Draw'
};

export type TiebreakerCriterias = (typeof TiebreakerCriterias)[keyof typeof TiebreakerCriterias]


export const scholarshipGrantedType: {
  UNIFORM: 'UNIFORM',
  TRANSPORT: 'TRANSPORT',
  FOOD: 'FOOD',
  HOUSING: 'HOUSING',
  STUDY_MATERIAL: 'STUDY_MATERIAL'
};

export type scholarshipGrantedType = (typeof scholarshipGrantedType)[keyof typeof scholarshipGrantedType]


export const LevelType: {
  BasicEducation: 'BasicEducation',
  HigherEducation: 'HigherEducation'
};

export type LevelType = (typeof LevelType)[keyof typeof LevelType]


export const BasicEducationType: {
  Preschool: 'Preschool',
  Elementary: 'Elementary',
  HighSchool: 'HighSchool',
  ProfessionalEducation: 'ProfessionalEducation'
};

export type BasicEducationType = (typeof BasicEducationType)[keyof typeof BasicEducationType]


export const ScholarshipOfferType: {
  Law187ScholarshipPartial: 'Law187ScholarshipPartial',
  Law187Scholarship: 'Law187Scholarship',
  StudentWithDisabilityPartial: 'StudentWithDisabilityPartial',
  StudentWithDisability: 'StudentWithDisability',
  FullTimePartial: 'FullTimePartial',
  FullTime: 'FullTime',
  EntityWorkersPartial: 'EntityWorkersPartial',
  EntityWorkers: 'EntityWorkers'
};

export type ScholarshipOfferType = (typeof ScholarshipOfferType)[keyof typeof ScholarshipOfferType]


export const HigherEducationScholarshipType: {
  PROUNIFull: 'PROUNIFull',
  PROUNIPartial: 'PROUNIPartial',
  StateGovernment: 'StateGovernment',
  StateGovernmentPartial: 'StateGovernmentPartial',
  CityGovernment: 'CityGovernment',
  CityGovernmentPartial: 'CityGovernmentPartial',
  ExternalEntities: 'ExternalEntities',
  ExternalEntitiesPartial: 'ExternalEntitiesPartial',
  HigherEduInstitutionFull: 'HigherEduInstitutionFull',
  HigherEduInstitutionPartial: 'HigherEduInstitutionPartial',
  HigherEduInstitutionWorkers: 'HigherEduInstitutionWorkers',
  HigherEduInstitutionWorkersPartial: 'HigherEduInstitutionWorkersPartial',
  PostgraduateStrictoSensu: 'PostgraduateStrictoSensu',
  PostgraduateStrictoSensuPartial: 'PostgraduateStrictoSensuPartial'
};

export type HigherEducationScholarshipType = (typeof HigherEducationScholarshipType)[keyof typeof HigherEducationScholarshipType]


export const OfferedCourseType: {
  UndergraduateBachelor: 'UndergraduateBachelor',
  UndergraduateLicense: 'UndergraduateLicense',
  UndergraduateTechnologist: 'UndergraduateTechnologist',
  Postgraduate: 'Postgraduate'
};

export type OfferedCourseType = (typeof OfferedCourseType)[keyof typeof OfferedCourseType]


export const ApplicationStatus: {
  Approved: 'Approved',
  Rejected: 'Rejected',
  Pending: 'Pending',
  WaitingList: 'WaitingList'
};

export type ApplicationStatus = (typeof ApplicationStatus)[keyof typeof ApplicationStatus]


export const SolicitationType: {
  Document: 'Document',
  Interview: 'Interview',
  Visit: 'Visit'
};

export type SolicitationType = (typeof SolicitationType)[keyof typeof SolicitationType]

}

export type ROLE = $Enums.ROLE

export const ROLE: typeof $Enums.ROLE

export type INSTITUTION_TYPE = $Enums.INSTITUTION_TYPE

export const INSTITUTION_TYPE: typeof $Enums.INSTITUTION_TYPE

export type EDUCATION_TYPE = $Enums.EDUCATION_TYPE

export const EDUCATION_TYPE: typeof $Enums.EDUCATION_TYPE

export type SHIFT = $Enums.SHIFT

export const SHIFT: typeof $Enums.SHIFT

export type COUNTRY = $Enums.COUNTRY

export const COUNTRY: typeof $Enums.COUNTRY

export type GENDER = $Enums.GENDER

export const GENDER: typeof $Enums.GENDER

export type DOCUMENT_TYPE = $Enums.DOCUMENT_TYPE

export const DOCUMENT_TYPE: typeof $Enums.DOCUMENT_TYPE

export type MARITAL_STATUS = $Enums.MARITAL_STATUS

export const MARITAL_STATUS: typeof $Enums.MARITAL_STATUS

export type SkinColor = $Enums.SkinColor

export const SkinColor: typeof $Enums.SkinColor

export type RELIGION = $Enums.RELIGION

export const RELIGION: typeof $Enums.RELIGION

export type SCHOLARSHIP = $Enums.SCHOLARSHIP

export const SCHOLARSHIP: typeof $Enums.SCHOLARSHIP

export type ScholarshipType = $Enums.ScholarshipType

export const ScholarshipType: typeof $Enums.ScholarshipType

export type IncomeSource = $Enums.IncomeSource

export const IncomeSource: typeof $Enums.IncomeSource

export type Relationship = $Enums.Relationship

export const Relationship: typeof $Enums.Relationship

export type PropertyStatus = $Enums.PropertyStatus

export const PropertyStatus: typeof $Enums.PropertyStatus

export type ContractType = $Enums.ContractType

export const ContractType: typeof $Enums.ContractType

export type TimeLivingInProperty = $Enums.TimeLivingInProperty

export const TimeLivingInProperty: typeof $Enums.TimeLivingInProperty

export type DomicileType = $Enums.DomicileType

export const DomicileType: typeof $Enums.DomicileType

export type NumberOfRooms = $Enums.NumberOfRooms

export const NumberOfRooms: typeof $Enums.NumberOfRooms

export type VehicleType = $Enums.VehicleType

export const VehicleType: typeof $Enums.VehicleType

export type VehicleSituation = $Enums.VehicleSituation

export const VehicleSituation: typeof $Enums.VehicleSituation

export type VehicleUsage = $Enums.VehicleUsage

export const VehicleUsage: typeof $Enums.VehicleUsage

export type EmploymentType = $Enums.EmploymentType

export const EmploymentType: typeof $Enums.EmploymentType

export type AccountType = $Enums.AccountType

export const AccountType: typeof $Enums.AccountType

export type FinancingType = $Enums.FinancingType

export const FinancingType: typeof $Enums.FinancingType

export type Disease = $Enums.Disease

export const Disease: typeof $Enums.Disease

export type Declaration_Type = $Enums.Declaration_Type

export const Declaration_Type: typeof $Enums.Declaration_Type

export type AnnouncementType = $Enums.AnnouncementType

export const AnnouncementType: typeof $Enums.AnnouncementType

export type TiebreakerCriterias = $Enums.TiebreakerCriterias

export const TiebreakerCriterias: typeof $Enums.TiebreakerCriterias

export type scholarshipGrantedType = $Enums.scholarshipGrantedType

export const scholarshipGrantedType: typeof $Enums.scholarshipGrantedType

export type LevelType = $Enums.LevelType

export const LevelType: typeof $Enums.LevelType

export type BasicEducationType = $Enums.BasicEducationType

export const BasicEducationType: typeof $Enums.BasicEducationType

export type ScholarshipOfferType = $Enums.ScholarshipOfferType

export const ScholarshipOfferType: typeof $Enums.ScholarshipOfferType

export type HigherEducationScholarshipType = $Enums.HigherEducationScholarshipType

export const HigherEducationScholarshipType: typeof $Enums.HigherEducationScholarshipType

export type OfferedCourseType = $Enums.OfferedCourseType

export const OfferedCourseType: typeof $Enums.OfferedCourseType

export type ApplicationStatus = $Enums.ApplicationStatus

export const ApplicationStatus: typeof $Enums.ApplicationStatus

export type SolicitationType = $Enums.SolicitationType

export const SolicitationType: typeof $Enums.SolicitationType

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more IdMappings
 * const idMappings = await prisma.idMapping.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more IdMappings
   * const idMappings = await prisma.idMapping.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.idMapping`: Exposes CRUD operations for the **IdMapping** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more IdMappings
    * const idMappings = await prisma.idMapping.findMany()
    * ```
    */
  get idMapping(): Prisma.IdMappingDelegate<ExtArgs>;

  /**
   * `prisma.candidate`: Exposes CRUD operations for the **Candidate** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Candidates
    * const candidates = await prisma.candidate.findMany()
    * ```
    */
  get candidate(): Prisma.CandidateDelegate<ExtArgs>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs>;

  /**
   * `prisma.legalResponsible`: Exposes CRUD operations for the **LegalResponsible** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LegalResponsibles
    * const legalResponsibles = await prisma.legalResponsible.findMany()
    * ```
    */
  get legalResponsible(): Prisma.LegalResponsibleDelegate<ExtArgs>;

  /**
   * `prisma.socialAssistant`: Exposes CRUD operations for the **SocialAssistant** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SocialAssistants
    * const socialAssistants = await prisma.socialAssistant.findMany()
    * ```
    */
  get socialAssistant(): Prisma.SocialAssistantDelegate<ExtArgs>;

  /**
   * `prisma.entity`: Exposes CRUD operations for the **Entity** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Entities
    * const entities = await prisma.entity.findMany()
    * ```
    */
  get entity(): Prisma.EntityDelegate<ExtArgs>;

  /**
   * `prisma.entitySubsidiary`: Exposes CRUD operations for the **EntitySubsidiary** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EntitySubsidiaries
    * const entitySubsidiaries = await prisma.entitySubsidiary.findMany()
    * ```
    */
  get entitySubsidiary(): Prisma.EntitySubsidiaryDelegate<ExtArgs>;

  /**
   * `prisma.entityDirector`: Exposes CRUD operations for the **EntityDirector** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EntityDirectors
    * const entityDirectors = await prisma.entityDirector.findMany()
    * ```
    */
  get entityDirector(): Prisma.EntityDirectorDelegate<ExtArgs>;

  /**
   * `prisma.identityDetails`: Exposes CRUD operations for the **IdentityDetails** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more IdentityDetails
    * const identityDetails = await prisma.identityDetails.findMany()
    * ```
    */
  get identityDetails(): Prisma.IdentityDetailsDelegate<ExtArgs>;

  /**
   * `prisma.familyMember`: Exposes CRUD operations for the **FamilyMember** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FamilyMembers
    * const familyMembers = await prisma.familyMember.findMany()
    * ```
    */
  get familyMember(): Prisma.FamilyMemberDelegate<ExtArgs>;

  /**
   * `prisma.housing`: Exposes CRUD operations for the **Housing** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Housings
    * const housings = await prisma.housing.findMany()
    * ```
    */
  get housing(): Prisma.HousingDelegate<ExtArgs>;

  /**
   * `prisma.vehicle`: Exposes CRUD operations for the **Vehicle** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Vehicles
    * const vehicles = await prisma.vehicle.findMany()
    * ```
    */
  get vehicle(): Prisma.VehicleDelegate<ExtArgs>;

  /**
   * `prisma.familyMemberIncome`: Exposes CRUD operations for the **FamilyMemberIncome** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FamilyMemberIncomes
    * const familyMemberIncomes = await prisma.familyMemberIncome.findMany()
    * ```
    */
  get familyMemberIncome(): Prisma.FamilyMemberIncomeDelegate<ExtArgs>;

  /**
   * `prisma.monthlyIncome`: Exposes CRUD operations for the **MonthlyIncome** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MonthlyIncomes
    * const monthlyIncomes = await prisma.monthlyIncome.findMany()
    * ```
    */
  get monthlyIncome(): Prisma.MonthlyIncomeDelegate<ExtArgs>;

  /**
   * `prisma.bankAccount`: Exposes CRUD operations for the **BankAccount** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BankAccounts
    * const bankAccounts = await prisma.bankAccount.findMany()
    * ```
    */
  get bankAccount(): Prisma.BankAccountDelegate<ExtArgs>;

  /**
   * `prisma.expense`: Exposes CRUD operations for the **Expense** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Expenses
    * const expenses = await prisma.expense.findMany()
    * ```
    */
  get expense(): Prisma.ExpenseDelegate<ExtArgs>;

  /**
   * `prisma.loan`: Exposes CRUD operations for the **Loan** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Loans
    * const loans = await prisma.loan.findMany()
    * ```
    */
  get loan(): Prisma.LoanDelegate<ExtArgs>;

  /**
   * `prisma.financing`: Exposes CRUD operations for the **Financing** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Financings
    * const financings = await prisma.financing.findMany()
    * ```
    */
  get financing(): Prisma.FinancingDelegate<ExtArgs>;

  /**
   * `prisma.creditCard`: Exposes CRUD operations for the **CreditCard** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CreditCards
    * const creditCards = await prisma.creditCard.findMany()
    * ```
    */
  get creditCard(): Prisma.CreditCardDelegate<ExtArgs>;

  /**
   * `prisma.otherExpense`: Exposes CRUD operations for the **OtherExpense** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OtherExpenses
    * const otherExpenses = await prisma.otherExpense.findMany()
    * ```
    */
  get otherExpense(): Prisma.OtherExpenseDelegate<ExtArgs>;

  /**
   * `prisma.familyMemberDisease`: Exposes CRUD operations for the **FamilyMemberDisease** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FamilyMemberDiseases
    * const familyMemberDiseases = await prisma.familyMemberDisease.findMany()
    * ```
    */
  get familyMemberDisease(): Prisma.FamilyMemberDiseaseDelegate<ExtArgs>;

  /**
   * `prisma.medication`: Exposes CRUD operations for the **Medication** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Medications
    * const medications = await prisma.medication.findMany()
    * ```
    */
  get medication(): Prisma.MedicationDelegate<ExtArgs>;

  /**
   * `prisma.declarations`: Exposes CRUD operations for the **Declarations** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Declarations
    * const declarations = await prisma.declarations.findMany()
    * ```
    */
  get declarations(): Prisma.DeclarationsDelegate<ExtArgs>;

  /**
   * `prisma.announcementInterview`: Exposes CRUD operations for the **AnnouncementInterview** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AnnouncementInterviews
    * const announcementInterviews = await prisma.announcementInterview.findMany()
    * ```
    */
  get announcementInterview(): Prisma.AnnouncementInterviewDelegate<ExtArgs>;

  /**
   * `prisma.announcement`: Exposes CRUD operations for the **Announcement** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Announcements
    * const announcements = await prisma.announcement.findMany()
    * ```
    */
  get announcement(): Prisma.AnnouncementDelegate<ExtArgs>;

  /**
   * `prisma.timeline`: Exposes CRUD operations for the **Timeline** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Timelines
    * const timelines = await prisma.timeline.findMany()
    * ```
    */
  get timeline(): Prisma.TimelineDelegate<ExtArgs>;

  /**
   * `prisma.educationLevel`: Exposes CRUD operations for the **EducationLevel** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EducationLevels
    * const educationLevels = await prisma.educationLevel.findMany()
    * ```
    */
  get educationLevel(): Prisma.EducationLevelDelegate<ExtArgs>;

  /**
   * `prisma.application`: Exposes CRUD operations for the **Application** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Applications
    * const applications = await prisma.application.findMany()
    * ```
    */
  get application(): Prisma.ApplicationDelegate<ExtArgs>;

  /**
   * `prisma.applicationHistory`: Exposes CRUD operations for the **ApplicationHistory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ApplicationHistories
    * const applicationHistories = await prisma.applicationHistory.findMany()
    * ```
    */
  get applicationHistory(): Prisma.ApplicationHistoryDelegate<ExtArgs>;

  /**
   * `prisma.scholarshipGranted`: Exposes CRUD operations for the **ScholarshipGranted** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ScholarshipGranteds
    * const scholarshipGranteds = await prisma.scholarshipGranted.findMany()
    * ```
    */
  get scholarshipGranted(): Prisma.ScholarshipGrantedDelegate<ExtArgs>;

  /**
   * `prisma.familyMemberToVehicle`: Exposes CRUD operations for the **FamilyMemberToVehicle** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FamilyMemberToVehicles
    * const familyMemberToVehicles = await prisma.familyMemberToVehicle.findMany()
    * ```
    */
  get familyMemberToVehicle(): Prisma.FamilyMemberToVehicleDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.3.1
   * Query Engine version: 61e140623197a131c2a6189271ffee05a7aa9a59
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    IdMapping: 'IdMapping',
    Candidate: 'Candidate',
    User: 'User',
    LegalResponsible: 'LegalResponsible',
    SocialAssistant: 'SocialAssistant',
    Entity: 'Entity',
    EntitySubsidiary: 'EntitySubsidiary',
    EntityDirector: 'EntityDirector',
    IdentityDetails: 'IdentityDetails',
    FamilyMember: 'FamilyMember',
    Housing: 'Housing',
    Vehicle: 'Vehicle',
    FamilyMemberIncome: 'FamilyMemberIncome',
    MonthlyIncome: 'MonthlyIncome',
    BankAccount: 'BankAccount',
    Expense: 'Expense',
    Loan: 'Loan',
    Financing: 'Financing',
    CreditCard: 'CreditCard',
    OtherExpense: 'OtherExpense',
    FamilyMemberDisease: 'FamilyMemberDisease',
    Medication: 'Medication',
    Declarations: 'Declarations',
    AnnouncementInterview: 'AnnouncementInterview',
    Announcement: 'Announcement',
    Timeline: 'Timeline',
    EducationLevel: 'EducationLevel',
    Application: 'Application',
    ApplicationHistory: 'ApplicationHistory',
    ScholarshipGranted: 'ScholarshipGranted',
    FamilyMemberToVehicle: 'FamilyMemberToVehicle'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.Args}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'idMapping' | 'candidate' | 'user' | 'legalResponsible' | 'socialAssistant' | 'entity' | 'entitySubsidiary' | 'entityDirector' | 'identityDetails' | 'familyMember' | 'housing' | 'vehicle' | 'familyMemberIncome' | 'monthlyIncome' | 'bankAccount' | 'expense' | 'loan' | 'financing' | 'creditCard' | 'otherExpense' | 'familyMemberDisease' | 'medication' | 'declarations' | 'announcementInterview' | 'announcement' | 'timeline' | 'educationLevel' | 'application' | 'applicationHistory' | 'scholarshipGranted' | 'familyMemberToVehicle'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      IdMapping: {
        payload: Prisma.$IdMappingPayload<ExtArgs>
        fields: Prisma.IdMappingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.IdMappingFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$IdMappingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.IdMappingFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$IdMappingPayload>
          }
          findFirst: {
            args: Prisma.IdMappingFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$IdMappingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.IdMappingFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$IdMappingPayload>
          }
          findMany: {
            args: Prisma.IdMappingFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$IdMappingPayload>[]
          }
          create: {
            args: Prisma.IdMappingCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$IdMappingPayload>
          }
          createMany: {
            args: Prisma.IdMappingCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.IdMappingDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$IdMappingPayload>
          }
          update: {
            args: Prisma.IdMappingUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$IdMappingPayload>
          }
          deleteMany: {
            args: Prisma.IdMappingDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.IdMappingUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.IdMappingUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$IdMappingPayload>
          }
          aggregate: {
            args: Prisma.IdMappingAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateIdMapping>
          }
          groupBy: {
            args: Prisma.IdMappingGroupByArgs<ExtArgs>,
            result: $Utils.Optional<IdMappingGroupByOutputType>[]
          }
          count: {
            args: Prisma.IdMappingCountArgs<ExtArgs>,
            result: $Utils.Optional<IdMappingCountAggregateOutputType> | number
          }
        }
      }
      Candidate: {
        payload: Prisma.$CandidatePayload<ExtArgs>
        fields: Prisma.CandidateFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CandidateFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CandidatePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CandidateFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CandidatePayload>
          }
          findFirst: {
            args: Prisma.CandidateFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CandidatePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CandidateFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CandidatePayload>
          }
          findMany: {
            args: Prisma.CandidateFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CandidatePayload>[]
          }
          create: {
            args: Prisma.CandidateCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CandidatePayload>
          }
          createMany: {
            args: Prisma.CandidateCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.CandidateDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CandidatePayload>
          }
          update: {
            args: Prisma.CandidateUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CandidatePayload>
          }
          deleteMany: {
            args: Prisma.CandidateDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.CandidateUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.CandidateUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CandidatePayload>
          }
          aggregate: {
            args: Prisma.CandidateAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCandidate>
          }
          groupBy: {
            args: Prisma.CandidateGroupByArgs<ExtArgs>,
            result: $Utils.Optional<CandidateGroupByOutputType>[]
          }
          count: {
            args: Prisma.CandidateCountArgs<ExtArgs>,
            result: $Utils.Optional<CandidateCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>,
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>,
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      LegalResponsible: {
        payload: Prisma.$LegalResponsiblePayload<ExtArgs>
        fields: Prisma.LegalResponsibleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LegalResponsibleFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LegalResponsiblePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LegalResponsibleFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LegalResponsiblePayload>
          }
          findFirst: {
            args: Prisma.LegalResponsibleFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LegalResponsiblePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LegalResponsibleFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LegalResponsiblePayload>
          }
          findMany: {
            args: Prisma.LegalResponsibleFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LegalResponsiblePayload>[]
          }
          create: {
            args: Prisma.LegalResponsibleCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LegalResponsiblePayload>
          }
          createMany: {
            args: Prisma.LegalResponsibleCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.LegalResponsibleDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LegalResponsiblePayload>
          }
          update: {
            args: Prisma.LegalResponsibleUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LegalResponsiblePayload>
          }
          deleteMany: {
            args: Prisma.LegalResponsibleDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.LegalResponsibleUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.LegalResponsibleUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LegalResponsiblePayload>
          }
          aggregate: {
            args: Prisma.LegalResponsibleAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateLegalResponsible>
          }
          groupBy: {
            args: Prisma.LegalResponsibleGroupByArgs<ExtArgs>,
            result: $Utils.Optional<LegalResponsibleGroupByOutputType>[]
          }
          count: {
            args: Prisma.LegalResponsibleCountArgs<ExtArgs>,
            result: $Utils.Optional<LegalResponsibleCountAggregateOutputType> | number
          }
        }
      }
      SocialAssistant: {
        payload: Prisma.$SocialAssistantPayload<ExtArgs>
        fields: Prisma.SocialAssistantFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SocialAssistantFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SocialAssistantPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SocialAssistantFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SocialAssistantPayload>
          }
          findFirst: {
            args: Prisma.SocialAssistantFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SocialAssistantPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SocialAssistantFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SocialAssistantPayload>
          }
          findMany: {
            args: Prisma.SocialAssistantFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SocialAssistantPayload>[]
          }
          create: {
            args: Prisma.SocialAssistantCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SocialAssistantPayload>
          }
          createMany: {
            args: Prisma.SocialAssistantCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.SocialAssistantDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SocialAssistantPayload>
          }
          update: {
            args: Prisma.SocialAssistantUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SocialAssistantPayload>
          }
          deleteMany: {
            args: Prisma.SocialAssistantDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.SocialAssistantUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.SocialAssistantUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SocialAssistantPayload>
          }
          aggregate: {
            args: Prisma.SocialAssistantAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateSocialAssistant>
          }
          groupBy: {
            args: Prisma.SocialAssistantGroupByArgs<ExtArgs>,
            result: $Utils.Optional<SocialAssistantGroupByOutputType>[]
          }
          count: {
            args: Prisma.SocialAssistantCountArgs<ExtArgs>,
            result: $Utils.Optional<SocialAssistantCountAggregateOutputType> | number
          }
        }
      }
      Entity: {
        payload: Prisma.$EntityPayload<ExtArgs>
        fields: Prisma.EntityFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EntityFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EntityPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EntityFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EntityPayload>
          }
          findFirst: {
            args: Prisma.EntityFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EntityPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EntityFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EntityPayload>
          }
          findMany: {
            args: Prisma.EntityFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EntityPayload>[]
          }
          create: {
            args: Prisma.EntityCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EntityPayload>
          }
          createMany: {
            args: Prisma.EntityCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.EntityDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EntityPayload>
          }
          update: {
            args: Prisma.EntityUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EntityPayload>
          }
          deleteMany: {
            args: Prisma.EntityDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.EntityUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.EntityUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EntityPayload>
          }
          aggregate: {
            args: Prisma.EntityAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateEntity>
          }
          groupBy: {
            args: Prisma.EntityGroupByArgs<ExtArgs>,
            result: $Utils.Optional<EntityGroupByOutputType>[]
          }
          count: {
            args: Prisma.EntityCountArgs<ExtArgs>,
            result: $Utils.Optional<EntityCountAggregateOutputType> | number
          }
        }
      }
      EntitySubsidiary: {
        payload: Prisma.$EntitySubsidiaryPayload<ExtArgs>
        fields: Prisma.EntitySubsidiaryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EntitySubsidiaryFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EntitySubsidiaryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EntitySubsidiaryFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EntitySubsidiaryPayload>
          }
          findFirst: {
            args: Prisma.EntitySubsidiaryFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EntitySubsidiaryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EntitySubsidiaryFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EntitySubsidiaryPayload>
          }
          findMany: {
            args: Prisma.EntitySubsidiaryFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EntitySubsidiaryPayload>[]
          }
          create: {
            args: Prisma.EntitySubsidiaryCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EntitySubsidiaryPayload>
          }
          createMany: {
            args: Prisma.EntitySubsidiaryCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.EntitySubsidiaryDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EntitySubsidiaryPayload>
          }
          update: {
            args: Prisma.EntitySubsidiaryUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EntitySubsidiaryPayload>
          }
          deleteMany: {
            args: Prisma.EntitySubsidiaryDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.EntitySubsidiaryUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.EntitySubsidiaryUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EntitySubsidiaryPayload>
          }
          aggregate: {
            args: Prisma.EntitySubsidiaryAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateEntitySubsidiary>
          }
          groupBy: {
            args: Prisma.EntitySubsidiaryGroupByArgs<ExtArgs>,
            result: $Utils.Optional<EntitySubsidiaryGroupByOutputType>[]
          }
          count: {
            args: Prisma.EntitySubsidiaryCountArgs<ExtArgs>,
            result: $Utils.Optional<EntitySubsidiaryCountAggregateOutputType> | number
          }
        }
      }
      EntityDirector: {
        payload: Prisma.$EntityDirectorPayload<ExtArgs>
        fields: Prisma.EntityDirectorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EntityDirectorFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EntityDirectorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EntityDirectorFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EntityDirectorPayload>
          }
          findFirst: {
            args: Prisma.EntityDirectorFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EntityDirectorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EntityDirectorFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EntityDirectorPayload>
          }
          findMany: {
            args: Prisma.EntityDirectorFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EntityDirectorPayload>[]
          }
          create: {
            args: Prisma.EntityDirectorCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EntityDirectorPayload>
          }
          createMany: {
            args: Prisma.EntityDirectorCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.EntityDirectorDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EntityDirectorPayload>
          }
          update: {
            args: Prisma.EntityDirectorUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EntityDirectorPayload>
          }
          deleteMany: {
            args: Prisma.EntityDirectorDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.EntityDirectorUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.EntityDirectorUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EntityDirectorPayload>
          }
          aggregate: {
            args: Prisma.EntityDirectorAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateEntityDirector>
          }
          groupBy: {
            args: Prisma.EntityDirectorGroupByArgs<ExtArgs>,
            result: $Utils.Optional<EntityDirectorGroupByOutputType>[]
          }
          count: {
            args: Prisma.EntityDirectorCountArgs<ExtArgs>,
            result: $Utils.Optional<EntityDirectorCountAggregateOutputType> | number
          }
        }
      }
      IdentityDetails: {
        payload: Prisma.$IdentityDetailsPayload<ExtArgs>
        fields: Prisma.IdentityDetailsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.IdentityDetailsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$IdentityDetailsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.IdentityDetailsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$IdentityDetailsPayload>
          }
          findFirst: {
            args: Prisma.IdentityDetailsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$IdentityDetailsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.IdentityDetailsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$IdentityDetailsPayload>
          }
          findMany: {
            args: Prisma.IdentityDetailsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$IdentityDetailsPayload>[]
          }
          create: {
            args: Prisma.IdentityDetailsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$IdentityDetailsPayload>
          }
          createMany: {
            args: Prisma.IdentityDetailsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.IdentityDetailsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$IdentityDetailsPayload>
          }
          update: {
            args: Prisma.IdentityDetailsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$IdentityDetailsPayload>
          }
          deleteMany: {
            args: Prisma.IdentityDetailsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.IdentityDetailsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.IdentityDetailsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$IdentityDetailsPayload>
          }
          aggregate: {
            args: Prisma.IdentityDetailsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateIdentityDetails>
          }
          groupBy: {
            args: Prisma.IdentityDetailsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<IdentityDetailsGroupByOutputType>[]
          }
          count: {
            args: Prisma.IdentityDetailsCountArgs<ExtArgs>,
            result: $Utils.Optional<IdentityDetailsCountAggregateOutputType> | number
          }
        }
      }
      FamilyMember: {
        payload: Prisma.$FamilyMemberPayload<ExtArgs>
        fields: Prisma.FamilyMemberFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FamilyMemberFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FamilyMemberFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberPayload>
          }
          findFirst: {
            args: Prisma.FamilyMemberFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FamilyMemberFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberPayload>
          }
          findMany: {
            args: Prisma.FamilyMemberFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberPayload>[]
          }
          create: {
            args: Prisma.FamilyMemberCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberPayload>
          }
          createMany: {
            args: Prisma.FamilyMemberCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.FamilyMemberDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberPayload>
          }
          update: {
            args: Prisma.FamilyMemberUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberPayload>
          }
          deleteMany: {
            args: Prisma.FamilyMemberDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.FamilyMemberUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.FamilyMemberUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberPayload>
          }
          aggregate: {
            args: Prisma.FamilyMemberAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateFamilyMember>
          }
          groupBy: {
            args: Prisma.FamilyMemberGroupByArgs<ExtArgs>,
            result: $Utils.Optional<FamilyMemberGroupByOutputType>[]
          }
          count: {
            args: Prisma.FamilyMemberCountArgs<ExtArgs>,
            result: $Utils.Optional<FamilyMemberCountAggregateOutputType> | number
          }
        }
      }
      Housing: {
        payload: Prisma.$HousingPayload<ExtArgs>
        fields: Prisma.HousingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.HousingFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$HousingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.HousingFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$HousingPayload>
          }
          findFirst: {
            args: Prisma.HousingFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$HousingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.HousingFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$HousingPayload>
          }
          findMany: {
            args: Prisma.HousingFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$HousingPayload>[]
          }
          create: {
            args: Prisma.HousingCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$HousingPayload>
          }
          createMany: {
            args: Prisma.HousingCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.HousingDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$HousingPayload>
          }
          update: {
            args: Prisma.HousingUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$HousingPayload>
          }
          deleteMany: {
            args: Prisma.HousingDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.HousingUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.HousingUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$HousingPayload>
          }
          aggregate: {
            args: Prisma.HousingAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateHousing>
          }
          groupBy: {
            args: Prisma.HousingGroupByArgs<ExtArgs>,
            result: $Utils.Optional<HousingGroupByOutputType>[]
          }
          count: {
            args: Prisma.HousingCountArgs<ExtArgs>,
            result: $Utils.Optional<HousingCountAggregateOutputType> | number
          }
        }
      }
      Vehicle: {
        payload: Prisma.$VehiclePayload<ExtArgs>
        fields: Prisma.VehicleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VehicleFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$VehiclePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VehicleFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$VehiclePayload>
          }
          findFirst: {
            args: Prisma.VehicleFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$VehiclePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VehicleFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$VehiclePayload>
          }
          findMany: {
            args: Prisma.VehicleFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$VehiclePayload>[]
          }
          create: {
            args: Prisma.VehicleCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$VehiclePayload>
          }
          createMany: {
            args: Prisma.VehicleCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.VehicleDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$VehiclePayload>
          }
          update: {
            args: Prisma.VehicleUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$VehiclePayload>
          }
          deleteMany: {
            args: Prisma.VehicleDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.VehicleUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.VehicleUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$VehiclePayload>
          }
          aggregate: {
            args: Prisma.VehicleAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateVehicle>
          }
          groupBy: {
            args: Prisma.VehicleGroupByArgs<ExtArgs>,
            result: $Utils.Optional<VehicleGroupByOutputType>[]
          }
          count: {
            args: Prisma.VehicleCountArgs<ExtArgs>,
            result: $Utils.Optional<VehicleCountAggregateOutputType> | number
          }
        }
      }
      FamilyMemberIncome: {
        payload: Prisma.$FamilyMemberIncomePayload<ExtArgs>
        fields: Prisma.FamilyMemberIncomeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FamilyMemberIncomeFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberIncomePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FamilyMemberIncomeFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberIncomePayload>
          }
          findFirst: {
            args: Prisma.FamilyMemberIncomeFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberIncomePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FamilyMemberIncomeFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberIncomePayload>
          }
          findMany: {
            args: Prisma.FamilyMemberIncomeFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberIncomePayload>[]
          }
          create: {
            args: Prisma.FamilyMemberIncomeCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberIncomePayload>
          }
          createMany: {
            args: Prisma.FamilyMemberIncomeCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.FamilyMemberIncomeDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberIncomePayload>
          }
          update: {
            args: Prisma.FamilyMemberIncomeUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberIncomePayload>
          }
          deleteMany: {
            args: Prisma.FamilyMemberIncomeDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.FamilyMemberIncomeUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.FamilyMemberIncomeUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberIncomePayload>
          }
          aggregate: {
            args: Prisma.FamilyMemberIncomeAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateFamilyMemberIncome>
          }
          groupBy: {
            args: Prisma.FamilyMemberIncomeGroupByArgs<ExtArgs>,
            result: $Utils.Optional<FamilyMemberIncomeGroupByOutputType>[]
          }
          count: {
            args: Prisma.FamilyMemberIncomeCountArgs<ExtArgs>,
            result: $Utils.Optional<FamilyMemberIncomeCountAggregateOutputType> | number
          }
        }
      }
      MonthlyIncome: {
        payload: Prisma.$MonthlyIncomePayload<ExtArgs>
        fields: Prisma.MonthlyIncomeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MonthlyIncomeFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MonthlyIncomePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MonthlyIncomeFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MonthlyIncomePayload>
          }
          findFirst: {
            args: Prisma.MonthlyIncomeFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MonthlyIncomePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MonthlyIncomeFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MonthlyIncomePayload>
          }
          findMany: {
            args: Prisma.MonthlyIncomeFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MonthlyIncomePayload>[]
          }
          create: {
            args: Prisma.MonthlyIncomeCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MonthlyIncomePayload>
          }
          createMany: {
            args: Prisma.MonthlyIncomeCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.MonthlyIncomeDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MonthlyIncomePayload>
          }
          update: {
            args: Prisma.MonthlyIncomeUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MonthlyIncomePayload>
          }
          deleteMany: {
            args: Prisma.MonthlyIncomeDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.MonthlyIncomeUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.MonthlyIncomeUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MonthlyIncomePayload>
          }
          aggregate: {
            args: Prisma.MonthlyIncomeAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateMonthlyIncome>
          }
          groupBy: {
            args: Prisma.MonthlyIncomeGroupByArgs<ExtArgs>,
            result: $Utils.Optional<MonthlyIncomeGroupByOutputType>[]
          }
          count: {
            args: Prisma.MonthlyIncomeCountArgs<ExtArgs>,
            result: $Utils.Optional<MonthlyIncomeCountAggregateOutputType> | number
          }
        }
      }
      BankAccount: {
        payload: Prisma.$BankAccountPayload<ExtArgs>
        fields: Prisma.BankAccountFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BankAccountFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$BankAccountPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BankAccountFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$BankAccountPayload>
          }
          findFirst: {
            args: Prisma.BankAccountFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$BankAccountPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BankAccountFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$BankAccountPayload>
          }
          findMany: {
            args: Prisma.BankAccountFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$BankAccountPayload>[]
          }
          create: {
            args: Prisma.BankAccountCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$BankAccountPayload>
          }
          createMany: {
            args: Prisma.BankAccountCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.BankAccountDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$BankAccountPayload>
          }
          update: {
            args: Prisma.BankAccountUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$BankAccountPayload>
          }
          deleteMany: {
            args: Prisma.BankAccountDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.BankAccountUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.BankAccountUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$BankAccountPayload>
          }
          aggregate: {
            args: Prisma.BankAccountAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateBankAccount>
          }
          groupBy: {
            args: Prisma.BankAccountGroupByArgs<ExtArgs>,
            result: $Utils.Optional<BankAccountGroupByOutputType>[]
          }
          count: {
            args: Prisma.BankAccountCountArgs<ExtArgs>,
            result: $Utils.Optional<BankAccountCountAggregateOutputType> | number
          }
        }
      }
      Expense: {
        payload: Prisma.$ExpensePayload<ExtArgs>
        fields: Prisma.ExpenseFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ExpenseFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ExpensePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ExpenseFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ExpensePayload>
          }
          findFirst: {
            args: Prisma.ExpenseFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ExpensePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ExpenseFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ExpensePayload>
          }
          findMany: {
            args: Prisma.ExpenseFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ExpensePayload>[]
          }
          create: {
            args: Prisma.ExpenseCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ExpensePayload>
          }
          createMany: {
            args: Prisma.ExpenseCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.ExpenseDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ExpensePayload>
          }
          update: {
            args: Prisma.ExpenseUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ExpensePayload>
          }
          deleteMany: {
            args: Prisma.ExpenseDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.ExpenseUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.ExpenseUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ExpensePayload>
          }
          aggregate: {
            args: Prisma.ExpenseAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateExpense>
          }
          groupBy: {
            args: Prisma.ExpenseGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ExpenseGroupByOutputType>[]
          }
          count: {
            args: Prisma.ExpenseCountArgs<ExtArgs>,
            result: $Utils.Optional<ExpenseCountAggregateOutputType> | number
          }
        }
      }
      Loan: {
        payload: Prisma.$LoanPayload<ExtArgs>
        fields: Prisma.LoanFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LoanFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LoanPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LoanFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LoanPayload>
          }
          findFirst: {
            args: Prisma.LoanFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LoanPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LoanFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LoanPayload>
          }
          findMany: {
            args: Prisma.LoanFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LoanPayload>[]
          }
          create: {
            args: Prisma.LoanCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LoanPayload>
          }
          createMany: {
            args: Prisma.LoanCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.LoanDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LoanPayload>
          }
          update: {
            args: Prisma.LoanUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LoanPayload>
          }
          deleteMany: {
            args: Prisma.LoanDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.LoanUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.LoanUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LoanPayload>
          }
          aggregate: {
            args: Prisma.LoanAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateLoan>
          }
          groupBy: {
            args: Prisma.LoanGroupByArgs<ExtArgs>,
            result: $Utils.Optional<LoanGroupByOutputType>[]
          }
          count: {
            args: Prisma.LoanCountArgs<ExtArgs>,
            result: $Utils.Optional<LoanCountAggregateOutputType> | number
          }
        }
      }
      Financing: {
        payload: Prisma.$FinancingPayload<ExtArgs>
        fields: Prisma.FinancingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FinancingFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FinancingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FinancingFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FinancingPayload>
          }
          findFirst: {
            args: Prisma.FinancingFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FinancingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FinancingFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FinancingPayload>
          }
          findMany: {
            args: Prisma.FinancingFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FinancingPayload>[]
          }
          create: {
            args: Prisma.FinancingCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FinancingPayload>
          }
          createMany: {
            args: Prisma.FinancingCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.FinancingDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FinancingPayload>
          }
          update: {
            args: Prisma.FinancingUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FinancingPayload>
          }
          deleteMany: {
            args: Prisma.FinancingDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.FinancingUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.FinancingUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FinancingPayload>
          }
          aggregate: {
            args: Prisma.FinancingAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateFinancing>
          }
          groupBy: {
            args: Prisma.FinancingGroupByArgs<ExtArgs>,
            result: $Utils.Optional<FinancingGroupByOutputType>[]
          }
          count: {
            args: Prisma.FinancingCountArgs<ExtArgs>,
            result: $Utils.Optional<FinancingCountAggregateOutputType> | number
          }
        }
      }
      CreditCard: {
        payload: Prisma.$CreditCardPayload<ExtArgs>
        fields: Prisma.CreditCardFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CreditCardFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CreditCardPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CreditCardFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CreditCardPayload>
          }
          findFirst: {
            args: Prisma.CreditCardFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CreditCardPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CreditCardFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CreditCardPayload>
          }
          findMany: {
            args: Prisma.CreditCardFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CreditCardPayload>[]
          }
          create: {
            args: Prisma.CreditCardCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CreditCardPayload>
          }
          createMany: {
            args: Prisma.CreditCardCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.CreditCardDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CreditCardPayload>
          }
          update: {
            args: Prisma.CreditCardUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CreditCardPayload>
          }
          deleteMany: {
            args: Prisma.CreditCardDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.CreditCardUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.CreditCardUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CreditCardPayload>
          }
          aggregate: {
            args: Prisma.CreditCardAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCreditCard>
          }
          groupBy: {
            args: Prisma.CreditCardGroupByArgs<ExtArgs>,
            result: $Utils.Optional<CreditCardGroupByOutputType>[]
          }
          count: {
            args: Prisma.CreditCardCountArgs<ExtArgs>,
            result: $Utils.Optional<CreditCardCountAggregateOutputType> | number
          }
        }
      }
      OtherExpense: {
        payload: Prisma.$OtherExpensePayload<ExtArgs>
        fields: Prisma.OtherExpenseFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OtherExpenseFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$OtherExpensePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OtherExpenseFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$OtherExpensePayload>
          }
          findFirst: {
            args: Prisma.OtherExpenseFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$OtherExpensePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OtherExpenseFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$OtherExpensePayload>
          }
          findMany: {
            args: Prisma.OtherExpenseFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$OtherExpensePayload>[]
          }
          create: {
            args: Prisma.OtherExpenseCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$OtherExpensePayload>
          }
          createMany: {
            args: Prisma.OtherExpenseCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.OtherExpenseDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$OtherExpensePayload>
          }
          update: {
            args: Prisma.OtherExpenseUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$OtherExpensePayload>
          }
          deleteMany: {
            args: Prisma.OtherExpenseDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.OtherExpenseUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.OtherExpenseUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$OtherExpensePayload>
          }
          aggregate: {
            args: Prisma.OtherExpenseAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateOtherExpense>
          }
          groupBy: {
            args: Prisma.OtherExpenseGroupByArgs<ExtArgs>,
            result: $Utils.Optional<OtherExpenseGroupByOutputType>[]
          }
          count: {
            args: Prisma.OtherExpenseCountArgs<ExtArgs>,
            result: $Utils.Optional<OtherExpenseCountAggregateOutputType> | number
          }
        }
      }
      FamilyMemberDisease: {
        payload: Prisma.$FamilyMemberDiseasePayload<ExtArgs>
        fields: Prisma.FamilyMemberDiseaseFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FamilyMemberDiseaseFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberDiseasePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FamilyMemberDiseaseFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberDiseasePayload>
          }
          findFirst: {
            args: Prisma.FamilyMemberDiseaseFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberDiseasePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FamilyMemberDiseaseFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberDiseasePayload>
          }
          findMany: {
            args: Prisma.FamilyMemberDiseaseFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberDiseasePayload>[]
          }
          create: {
            args: Prisma.FamilyMemberDiseaseCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberDiseasePayload>
          }
          createMany: {
            args: Prisma.FamilyMemberDiseaseCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.FamilyMemberDiseaseDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberDiseasePayload>
          }
          update: {
            args: Prisma.FamilyMemberDiseaseUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberDiseasePayload>
          }
          deleteMany: {
            args: Prisma.FamilyMemberDiseaseDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.FamilyMemberDiseaseUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.FamilyMemberDiseaseUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberDiseasePayload>
          }
          aggregate: {
            args: Prisma.FamilyMemberDiseaseAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateFamilyMemberDisease>
          }
          groupBy: {
            args: Prisma.FamilyMemberDiseaseGroupByArgs<ExtArgs>,
            result: $Utils.Optional<FamilyMemberDiseaseGroupByOutputType>[]
          }
          count: {
            args: Prisma.FamilyMemberDiseaseCountArgs<ExtArgs>,
            result: $Utils.Optional<FamilyMemberDiseaseCountAggregateOutputType> | number
          }
        }
      }
      Medication: {
        payload: Prisma.$MedicationPayload<ExtArgs>
        fields: Prisma.MedicationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MedicationFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MedicationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MedicationFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MedicationPayload>
          }
          findFirst: {
            args: Prisma.MedicationFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MedicationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MedicationFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MedicationPayload>
          }
          findMany: {
            args: Prisma.MedicationFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MedicationPayload>[]
          }
          create: {
            args: Prisma.MedicationCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MedicationPayload>
          }
          createMany: {
            args: Prisma.MedicationCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.MedicationDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MedicationPayload>
          }
          update: {
            args: Prisma.MedicationUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MedicationPayload>
          }
          deleteMany: {
            args: Prisma.MedicationDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.MedicationUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.MedicationUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MedicationPayload>
          }
          aggregate: {
            args: Prisma.MedicationAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateMedication>
          }
          groupBy: {
            args: Prisma.MedicationGroupByArgs<ExtArgs>,
            result: $Utils.Optional<MedicationGroupByOutputType>[]
          }
          count: {
            args: Prisma.MedicationCountArgs<ExtArgs>,
            result: $Utils.Optional<MedicationCountAggregateOutputType> | number
          }
        }
      }
      Declarations: {
        payload: Prisma.$DeclarationsPayload<ExtArgs>
        fields: Prisma.DeclarationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DeclarationsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DeclarationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DeclarationsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DeclarationsPayload>
          }
          findFirst: {
            args: Prisma.DeclarationsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DeclarationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DeclarationsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DeclarationsPayload>
          }
          findMany: {
            args: Prisma.DeclarationsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DeclarationsPayload>[]
          }
          create: {
            args: Prisma.DeclarationsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DeclarationsPayload>
          }
          createMany: {
            args: Prisma.DeclarationsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.DeclarationsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DeclarationsPayload>
          }
          update: {
            args: Prisma.DeclarationsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DeclarationsPayload>
          }
          deleteMany: {
            args: Prisma.DeclarationsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.DeclarationsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.DeclarationsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DeclarationsPayload>
          }
          aggregate: {
            args: Prisma.DeclarationsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateDeclarations>
          }
          groupBy: {
            args: Prisma.DeclarationsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<DeclarationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.DeclarationsCountArgs<ExtArgs>,
            result: $Utils.Optional<DeclarationsCountAggregateOutputType> | number
          }
        }
      }
      AnnouncementInterview: {
        payload: Prisma.$AnnouncementInterviewPayload<ExtArgs>
        fields: Prisma.AnnouncementInterviewFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AnnouncementInterviewFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AnnouncementInterviewPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AnnouncementInterviewFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AnnouncementInterviewPayload>
          }
          findFirst: {
            args: Prisma.AnnouncementInterviewFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AnnouncementInterviewPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AnnouncementInterviewFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AnnouncementInterviewPayload>
          }
          findMany: {
            args: Prisma.AnnouncementInterviewFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AnnouncementInterviewPayload>[]
          }
          create: {
            args: Prisma.AnnouncementInterviewCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AnnouncementInterviewPayload>
          }
          createMany: {
            args: Prisma.AnnouncementInterviewCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.AnnouncementInterviewDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AnnouncementInterviewPayload>
          }
          update: {
            args: Prisma.AnnouncementInterviewUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AnnouncementInterviewPayload>
          }
          deleteMany: {
            args: Prisma.AnnouncementInterviewDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.AnnouncementInterviewUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.AnnouncementInterviewUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AnnouncementInterviewPayload>
          }
          aggregate: {
            args: Prisma.AnnouncementInterviewAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateAnnouncementInterview>
          }
          groupBy: {
            args: Prisma.AnnouncementInterviewGroupByArgs<ExtArgs>,
            result: $Utils.Optional<AnnouncementInterviewGroupByOutputType>[]
          }
          count: {
            args: Prisma.AnnouncementInterviewCountArgs<ExtArgs>,
            result: $Utils.Optional<AnnouncementInterviewCountAggregateOutputType> | number
          }
        }
      }
      Announcement: {
        payload: Prisma.$AnnouncementPayload<ExtArgs>
        fields: Prisma.AnnouncementFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AnnouncementFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AnnouncementPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AnnouncementFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AnnouncementPayload>
          }
          findFirst: {
            args: Prisma.AnnouncementFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AnnouncementPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AnnouncementFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AnnouncementPayload>
          }
          findMany: {
            args: Prisma.AnnouncementFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AnnouncementPayload>[]
          }
          create: {
            args: Prisma.AnnouncementCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AnnouncementPayload>
          }
          createMany: {
            args: Prisma.AnnouncementCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.AnnouncementDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AnnouncementPayload>
          }
          update: {
            args: Prisma.AnnouncementUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AnnouncementPayload>
          }
          deleteMany: {
            args: Prisma.AnnouncementDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.AnnouncementUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.AnnouncementUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AnnouncementPayload>
          }
          aggregate: {
            args: Prisma.AnnouncementAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateAnnouncement>
          }
          groupBy: {
            args: Prisma.AnnouncementGroupByArgs<ExtArgs>,
            result: $Utils.Optional<AnnouncementGroupByOutputType>[]
          }
          count: {
            args: Prisma.AnnouncementCountArgs<ExtArgs>,
            result: $Utils.Optional<AnnouncementCountAggregateOutputType> | number
          }
        }
      }
      Timeline: {
        payload: Prisma.$TimelinePayload<ExtArgs>
        fields: Prisma.TimelineFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TimelineFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TimelinePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TimelineFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TimelinePayload>
          }
          findFirst: {
            args: Prisma.TimelineFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TimelinePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TimelineFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TimelinePayload>
          }
          findMany: {
            args: Prisma.TimelineFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TimelinePayload>[]
          }
          create: {
            args: Prisma.TimelineCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TimelinePayload>
          }
          createMany: {
            args: Prisma.TimelineCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.TimelineDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TimelinePayload>
          }
          update: {
            args: Prisma.TimelineUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TimelinePayload>
          }
          deleteMany: {
            args: Prisma.TimelineDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.TimelineUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.TimelineUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TimelinePayload>
          }
          aggregate: {
            args: Prisma.TimelineAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTimeline>
          }
          groupBy: {
            args: Prisma.TimelineGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TimelineGroupByOutputType>[]
          }
          count: {
            args: Prisma.TimelineCountArgs<ExtArgs>,
            result: $Utils.Optional<TimelineCountAggregateOutputType> | number
          }
        }
      }
      EducationLevel: {
        payload: Prisma.$EducationLevelPayload<ExtArgs>
        fields: Prisma.EducationLevelFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EducationLevelFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EducationLevelPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EducationLevelFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EducationLevelPayload>
          }
          findFirst: {
            args: Prisma.EducationLevelFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EducationLevelPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EducationLevelFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EducationLevelPayload>
          }
          findMany: {
            args: Prisma.EducationLevelFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EducationLevelPayload>[]
          }
          create: {
            args: Prisma.EducationLevelCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EducationLevelPayload>
          }
          createMany: {
            args: Prisma.EducationLevelCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.EducationLevelDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EducationLevelPayload>
          }
          update: {
            args: Prisma.EducationLevelUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EducationLevelPayload>
          }
          deleteMany: {
            args: Prisma.EducationLevelDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.EducationLevelUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.EducationLevelUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EducationLevelPayload>
          }
          aggregate: {
            args: Prisma.EducationLevelAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateEducationLevel>
          }
          groupBy: {
            args: Prisma.EducationLevelGroupByArgs<ExtArgs>,
            result: $Utils.Optional<EducationLevelGroupByOutputType>[]
          }
          count: {
            args: Prisma.EducationLevelCountArgs<ExtArgs>,
            result: $Utils.Optional<EducationLevelCountAggregateOutputType> | number
          }
        }
      }
      Application: {
        payload: Prisma.$ApplicationPayload<ExtArgs>
        fields: Prisma.ApplicationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ApplicationFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ApplicationFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>
          }
          findFirst: {
            args: Prisma.ApplicationFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ApplicationFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>
          }
          findMany: {
            args: Prisma.ApplicationFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>[]
          }
          create: {
            args: Prisma.ApplicationCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>
          }
          createMany: {
            args: Prisma.ApplicationCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.ApplicationDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>
          }
          update: {
            args: Prisma.ApplicationUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>
          }
          deleteMany: {
            args: Prisma.ApplicationDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.ApplicationUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.ApplicationUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>
          }
          aggregate: {
            args: Prisma.ApplicationAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateApplication>
          }
          groupBy: {
            args: Prisma.ApplicationGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ApplicationGroupByOutputType>[]
          }
          count: {
            args: Prisma.ApplicationCountArgs<ExtArgs>,
            result: $Utils.Optional<ApplicationCountAggregateOutputType> | number
          }
        }
      }
      ApplicationHistory: {
        payload: Prisma.$ApplicationHistoryPayload<ExtArgs>
        fields: Prisma.ApplicationHistoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ApplicationHistoryFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ApplicationHistoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ApplicationHistoryFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ApplicationHistoryPayload>
          }
          findFirst: {
            args: Prisma.ApplicationHistoryFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ApplicationHistoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ApplicationHistoryFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ApplicationHistoryPayload>
          }
          findMany: {
            args: Prisma.ApplicationHistoryFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ApplicationHistoryPayload>[]
          }
          create: {
            args: Prisma.ApplicationHistoryCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ApplicationHistoryPayload>
          }
          createMany: {
            args: Prisma.ApplicationHistoryCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.ApplicationHistoryDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ApplicationHistoryPayload>
          }
          update: {
            args: Prisma.ApplicationHistoryUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ApplicationHistoryPayload>
          }
          deleteMany: {
            args: Prisma.ApplicationHistoryDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.ApplicationHistoryUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.ApplicationHistoryUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ApplicationHistoryPayload>
          }
          aggregate: {
            args: Prisma.ApplicationHistoryAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateApplicationHistory>
          }
          groupBy: {
            args: Prisma.ApplicationHistoryGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ApplicationHistoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.ApplicationHistoryCountArgs<ExtArgs>,
            result: $Utils.Optional<ApplicationHistoryCountAggregateOutputType> | number
          }
        }
      }
      ScholarshipGranted: {
        payload: Prisma.$ScholarshipGrantedPayload<ExtArgs>
        fields: Prisma.ScholarshipGrantedFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ScholarshipGrantedFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ScholarshipGrantedPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ScholarshipGrantedFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ScholarshipGrantedPayload>
          }
          findFirst: {
            args: Prisma.ScholarshipGrantedFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ScholarshipGrantedPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ScholarshipGrantedFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ScholarshipGrantedPayload>
          }
          findMany: {
            args: Prisma.ScholarshipGrantedFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ScholarshipGrantedPayload>[]
          }
          create: {
            args: Prisma.ScholarshipGrantedCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ScholarshipGrantedPayload>
          }
          createMany: {
            args: Prisma.ScholarshipGrantedCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.ScholarshipGrantedDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ScholarshipGrantedPayload>
          }
          update: {
            args: Prisma.ScholarshipGrantedUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ScholarshipGrantedPayload>
          }
          deleteMany: {
            args: Prisma.ScholarshipGrantedDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.ScholarshipGrantedUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.ScholarshipGrantedUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ScholarshipGrantedPayload>
          }
          aggregate: {
            args: Prisma.ScholarshipGrantedAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateScholarshipGranted>
          }
          groupBy: {
            args: Prisma.ScholarshipGrantedGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ScholarshipGrantedGroupByOutputType>[]
          }
          count: {
            args: Prisma.ScholarshipGrantedCountArgs<ExtArgs>,
            result: $Utils.Optional<ScholarshipGrantedCountAggregateOutputType> | number
          }
        }
      }
      FamilyMemberToVehicle: {
        payload: Prisma.$FamilyMemberToVehiclePayload<ExtArgs>
        fields: Prisma.FamilyMemberToVehicleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FamilyMemberToVehicleFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberToVehiclePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FamilyMemberToVehicleFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberToVehiclePayload>
          }
          findFirst: {
            args: Prisma.FamilyMemberToVehicleFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberToVehiclePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FamilyMemberToVehicleFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberToVehiclePayload>
          }
          findMany: {
            args: Prisma.FamilyMemberToVehicleFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberToVehiclePayload>[]
          }
          create: {
            args: Prisma.FamilyMemberToVehicleCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberToVehiclePayload>
          }
          createMany: {
            args: Prisma.FamilyMemberToVehicleCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.FamilyMemberToVehicleDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberToVehiclePayload>
          }
          update: {
            args: Prisma.FamilyMemberToVehicleUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberToVehiclePayload>
          }
          deleteMany: {
            args: Prisma.FamilyMemberToVehicleDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.FamilyMemberToVehicleUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.FamilyMemberToVehicleUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberToVehiclePayload>
          }
          aggregate: {
            args: Prisma.FamilyMemberToVehicleAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateFamilyMemberToVehicle>
          }
          groupBy: {
            args: Prisma.FamilyMemberToVehicleGroupByArgs<ExtArgs>,
            result: $Utils.Optional<FamilyMemberToVehicleGroupByOutputType>[]
          }
          count: {
            args: Prisma.FamilyMemberToVehicleCountArgs<ExtArgs>,
            result: $Utils.Optional<FamilyMemberToVehicleCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'

  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources

    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string

    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat

    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: Array<LogLevel | LogDefinition>
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type CandidateCountOutputType
   */

  export type CandidateCountOutputType = {
    Application: number
    CreditCard: number
    Expense: number
    Financing: number
    IdentityDetails: number
    FamilyMemberIncome: number
    Loan: number
    OtherExpense: number
    Vehicle: number
    FamillyMember: number
    Housing: number
    MonthlyIncome: number
    FamilyMemberDisease: number
    Medication: number
    BankAccount: number
    Declarations: number
  }

  export type CandidateCountOutputTypeSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    Application?: boolean | CandidateCountOutputTypeCountApplicationArgs
    CreditCard?: boolean | CandidateCountOutputTypeCountCreditCardArgs
    Expense?: boolean | CandidateCountOutputTypeCountExpenseArgs
    Financing?: boolean | CandidateCountOutputTypeCountFinancingArgs
    IdentityDetails?: boolean | CandidateCountOutputTypeCountIdentityDetailsArgs
    FamilyMemberIncome?: boolean | CandidateCountOutputTypeCountFamilyMemberIncomeArgs
    Loan?: boolean | CandidateCountOutputTypeCountLoanArgs
    OtherExpense?: boolean | CandidateCountOutputTypeCountOtherExpenseArgs
    Vehicle?: boolean | CandidateCountOutputTypeCountVehicleArgs
    FamillyMember?: boolean | CandidateCountOutputTypeCountFamillyMemberArgs
    Housing?: boolean | CandidateCountOutputTypeCountHousingArgs
    MonthlyIncome?: boolean | CandidateCountOutputTypeCountMonthlyIncomeArgs
    FamilyMemberDisease?: boolean | CandidateCountOutputTypeCountFamilyMemberDiseaseArgs
    Medication?: boolean | CandidateCountOutputTypeCountMedicationArgs
    BankAccount?: boolean | CandidateCountOutputTypeCountBankAccountArgs
    Declarations?: boolean | CandidateCountOutputTypeCountDeclarationsArgs
  }

  // Custom InputTypes

  /**
   * CandidateCountOutputType without action
   */
  export type CandidateCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidateCountOutputType
     */
    select?: CandidateCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * CandidateCountOutputType without action
   */
  export type CandidateCountOutputTypeCountApplicationArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: ApplicationWhereInput
  }


  /**
   * CandidateCountOutputType without action
   */
  export type CandidateCountOutputTypeCountCreditCardArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: CreditCardWhereInput
  }


  /**
   * CandidateCountOutputType without action
   */
  export type CandidateCountOutputTypeCountExpenseArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: ExpenseWhereInput
  }


  /**
   * CandidateCountOutputType without action
   */
  export type CandidateCountOutputTypeCountFinancingArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: FinancingWhereInput
  }


  /**
   * CandidateCountOutputType without action
   */
  export type CandidateCountOutputTypeCountIdentityDetailsArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: IdentityDetailsWhereInput
  }


  /**
   * CandidateCountOutputType without action
   */
  export type CandidateCountOutputTypeCountFamilyMemberIncomeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: FamilyMemberIncomeWhereInput
  }


  /**
   * CandidateCountOutputType without action
   */
  export type CandidateCountOutputTypeCountLoanArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: LoanWhereInput
  }


  /**
   * CandidateCountOutputType without action
   */
  export type CandidateCountOutputTypeCountOtherExpenseArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: OtherExpenseWhereInput
  }


  /**
   * CandidateCountOutputType without action
   */
  export type CandidateCountOutputTypeCountVehicleArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: VehicleWhereInput
  }


  /**
   * CandidateCountOutputType without action
   */
  export type CandidateCountOutputTypeCountFamillyMemberArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: FamilyMemberWhereInput
  }


  /**
   * CandidateCountOutputType without action
   */
  export type CandidateCountOutputTypeCountHousingArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: HousingWhereInput
  }


  /**
   * CandidateCountOutputType without action
   */
  export type CandidateCountOutputTypeCountMonthlyIncomeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: MonthlyIncomeWhereInput
  }


  /**
   * CandidateCountOutputType without action
   */
  export type CandidateCountOutputTypeCountFamilyMemberDiseaseArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: FamilyMemberDiseaseWhereInput
  }


  /**
   * CandidateCountOutputType without action
   */
  export type CandidateCountOutputTypeCountMedicationArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: MedicationWhereInput
  }


  /**
   * CandidateCountOutputType without action
   */
  export type CandidateCountOutputTypeCountBankAccountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: BankAccountWhereInput
  }


  /**
   * CandidateCountOutputType without action
   */
  export type CandidateCountOutputTypeCountDeclarationsArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: DeclarationsWhereInput
  }



  /**
   * Count Type LegalResponsibleCountOutputType
   */

  export type LegalResponsibleCountOutputType = {
    IdentityDetails: number
    Candidate: number
    Housing: number
    FamillyMember: number
    CreditCard: number
    Expense: number
    Financing: number
    Loan: number
    OtherExpense: number
    Vehicle: number
    FamilyMemberDisease: number
    Medication: number
    Application: number
    FamilyMemberIncome: number
    MonthlyIncome: number
    BankAccount: number
    Declarations: number
  }

  export type LegalResponsibleCountOutputTypeSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    IdentityDetails?: boolean | LegalResponsibleCountOutputTypeCountIdentityDetailsArgs
    Candidate?: boolean | LegalResponsibleCountOutputTypeCountCandidateArgs
    Housing?: boolean | LegalResponsibleCountOutputTypeCountHousingArgs
    FamillyMember?: boolean | LegalResponsibleCountOutputTypeCountFamillyMemberArgs
    CreditCard?: boolean | LegalResponsibleCountOutputTypeCountCreditCardArgs
    Expense?: boolean | LegalResponsibleCountOutputTypeCountExpenseArgs
    Financing?: boolean | LegalResponsibleCountOutputTypeCountFinancingArgs
    Loan?: boolean | LegalResponsibleCountOutputTypeCountLoanArgs
    OtherExpense?: boolean | LegalResponsibleCountOutputTypeCountOtherExpenseArgs
    Vehicle?: boolean | LegalResponsibleCountOutputTypeCountVehicleArgs
    FamilyMemberDisease?: boolean | LegalResponsibleCountOutputTypeCountFamilyMemberDiseaseArgs
    Medication?: boolean | LegalResponsibleCountOutputTypeCountMedicationArgs
    Application?: boolean | LegalResponsibleCountOutputTypeCountApplicationArgs
    FamilyMemberIncome?: boolean | LegalResponsibleCountOutputTypeCountFamilyMemberIncomeArgs
    MonthlyIncome?: boolean | LegalResponsibleCountOutputTypeCountMonthlyIncomeArgs
    BankAccount?: boolean | LegalResponsibleCountOutputTypeCountBankAccountArgs
    Declarations?: boolean | LegalResponsibleCountOutputTypeCountDeclarationsArgs
  }

  // Custom InputTypes

  /**
   * LegalResponsibleCountOutputType without action
   */
  export type LegalResponsibleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalResponsibleCountOutputType
     */
    select?: LegalResponsibleCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * LegalResponsibleCountOutputType without action
   */
  export type LegalResponsibleCountOutputTypeCountIdentityDetailsArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: IdentityDetailsWhereInput
  }


  /**
   * LegalResponsibleCountOutputType without action
   */
  export type LegalResponsibleCountOutputTypeCountCandidateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: CandidateWhereInput
  }


  /**
   * LegalResponsibleCountOutputType without action
   */
  export type LegalResponsibleCountOutputTypeCountHousingArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: HousingWhereInput
  }


  /**
   * LegalResponsibleCountOutputType without action
   */
  export type LegalResponsibleCountOutputTypeCountFamillyMemberArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: FamilyMemberWhereInput
  }


  /**
   * LegalResponsibleCountOutputType without action
   */
  export type LegalResponsibleCountOutputTypeCountCreditCardArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: CreditCardWhereInput
  }


  /**
   * LegalResponsibleCountOutputType without action
   */
  export type LegalResponsibleCountOutputTypeCountExpenseArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: ExpenseWhereInput
  }


  /**
   * LegalResponsibleCountOutputType without action
   */
  export type LegalResponsibleCountOutputTypeCountFinancingArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: FinancingWhereInput
  }


  /**
   * LegalResponsibleCountOutputType without action
   */
  export type LegalResponsibleCountOutputTypeCountLoanArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: LoanWhereInput
  }


  /**
   * LegalResponsibleCountOutputType without action
   */
  export type LegalResponsibleCountOutputTypeCountOtherExpenseArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: OtherExpenseWhereInput
  }


  /**
   * LegalResponsibleCountOutputType without action
   */
  export type LegalResponsibleCountOutputTypeCountVehicleArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: VehicleWhereInput
  }


  /**
   * LegalResponsibleCountOutputType without action
   */
  export type LegalResponsibleCountOutputTypeCountFamilyMemberDiseaseArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: FamilyMemberDiseaseWhereInput
  }


  /**
   * LegalResponsibleCountOutputType without action
   */
  export type LegalResponsibleCountOutputTypeCountMedicationArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: MedicationWhereInput
  }


  /**
   * LegalResponsibleCountOutputType without action
   */
  export type LegalResponsibleCountOutputTypeCountApplicationArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: ApplicationWhereInput
  }


  /**
   * LegalResponsibleCountOutputType without action
   */
  export type LegalResponsibleCountOutputTypeCountFamilyMemberIncomeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: FamilyMemberIncomeWhereInput
  }


  /**
   * LegalResponsibleCountOutputType without action
   */
  export type LegalResponsibleCountOutputTypeCountMonthlyIncomeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: MonthlyIncomeWhereInput
  }


  /**
   * LegalResponsibleCountOutputType without action
   */
  export type LegalResponsibleCountOutputTypeCountBankAccountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: BankAccountWhereInput
  }


  /**
   * LegalResponsibleCountOutputType without action
   */
  export type LegalResponsibleCountOutputTypeCountDeclarationsArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: DeclarationsWhereInput
  }



  /**
   * Count Type SocialAssistantCountOutputType
   */

  export type SocialAssistantCountOutputType = {
    Application: number
    Announcement: number
    entity_subsidiary: number
  }

  export type SocialAssistantCountOutputTypeSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    Application?: boolean | SocialAssistantCountOutputTypeCountApplicationArgs
    Announcement?: boolean | SocialAssistantCountOutputTypeCountAnnouncementArgs
    entity_subsidiary?: boolean | SocialAssistantCountOutputTypeCountEntity_subsidiaryArgs
  }

  // Custom InputTypes

  /**
   * SocialAssistantCountOutputType without action
   */
  export type SocialAssistantCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocialAssistantCountOutputType
     */
    select?: SocialAssistantCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * SocialAssistantCountOutputType without action
   */
  export type SocialAssistantCountOutputTypeCountApplicationArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: ApplicationWhereInput
  }


  /**
   * SocialAssistantCountOutputType without action
   */
  export type SocialAssistantCountOutputTypeCountAnnouncementArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: AnnouncementWhereInput
  }


  /**
   * SocialAssistantCountOutputType without action
   */
  export type SocialAssistantCountOutputTypeCountEntity_subsidiaryArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: EntitySubsidiaryWhereInput
  }



  /**
   * Count Type EntityCountOutputType
   */

  export type EntityCountOutputType = {
    Announcement: number
    EntityDirector: number
    EntitySubsidiary: number
    SocialAssistant: number
  }

  export type EntityCountOutputTypeSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    Announcement?: boolean | EntityCountOutputTypeCountAnnouncementArgs
    EntityDirector?: boolean | EntityCountOutputTypeCountEntityDirectorArgs
    EntitySubsidiary?: boolean | EntityCountOutputTypeCountEntitySubsidiaryArgs
    SocialAssistant?: boolean | EntityCountOutputTypeCountSocialAssistantArgs
  }

  // Custom InputTypes

  /**
   * EntityCountOutputType without action
   */
  export type EntityCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntityCountOutputType
     */
    select?: EntityCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * EntityCountOutputType without action
   */
  export type EntityCountOutputTypeCountAnnouncementArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: AnnouncementWhereInput
  }


  /**
   * EntityCountOutputType without action
   */
  export type EntityCountOutputTypeCountEntityDirectorArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: EntityDirectorWhereInput
  }


  /**
   * EntityCountOutputType without action
   */
  export type EntityCountOutputTypeCountEntitySubsidiaryArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: EntitySubsidiaryWhereInput
  }


  /**
   * EntityCountOutputType without action
   */
  export type EntityCountOutputTypeCountSocialAssistantArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: SocialAssistantWhereInput
  }



  /**
   * Count Type EntitySubsidiaryCountOutputType
   */

  export type EntitySubsidiaryCountOutputType = {
    Announcement: number
    EntityDirector: number
    SocialAssistant: number
    EducationLevel: number
  }

  export type EntitySubsidiaryCountOutputTypeSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    Announcement?: boolean | EntitySubsidiaryCountOutputTypeCountAnnouncementArgs
    EntityDirector?: boolean | EntitySubsidiaryCountOutputTypeCountEntityDirectorArgs
    SocialAssistant?: boolean | EntitySubsidiaryCountOutputTypeCountSocialAssistantArgs
    EducationLevel?: boolean | EntitySubsidiaryCountOutputTypeCountEducationLevelArgs
  }

  // Custom InputTypes

  /**
   * EntitySubsidiaryCountOutputType without action
   */
  export type EntitySubsidiaryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntitySubsidiaryCountOutputType
     */
    select?: EntitySubsidiaryCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * EntitySubsidiaryCountOutputType without action
   */
  export type EntitySubsidiaryCountOutputTypeCountAnnouncementArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: AnnouncementWhereInput
  }


  /**
   * EntitySubsidiaryCountOutputType without action
   */
  export type EntitySubsidiaryCountOutputTypeCountEntityDirectorArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: EntityDirectorWhereInput
  }


  /**
   * EntitySubsidiaryCountOutputType without action
   */
  export type EntitySubsidiaryCountOutputTypeCountSocialAssistantArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: SocialAssistantWhereInput
  }


  /**
   * EntitySubsidiaryCountOutputType without action
   */
  export type EntitySubsidiaryCountOutputTypeCountEducationLevelArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: EducationLevelWhereInput
  }



  /**
   * Count Type FamilyMemberCountOutputType
   */

  export type FamilyMemberCountOutputType = {
    CreditCard: number
    FamilyMemberIncome: number
    Financing: number
    Loan: number
    MonthlyIncome: number
    OtherExpense: number
    FamilyMemberToVehicle: number
    FamilyMemberDisease: number
    Medication: number
    BankAccount: number
    Declarations: number
  }

  export type FamilyMemberCountOutputTypeSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    CreditCard?: boolean | FamilyMemberCountOutputTypeCountCreditCardArgs
    FamilyMemberIncome?: boolean | FamilyMemberCountOutputTypeCountFamilyMemberIncomeArgs
    Financing?: boolean | FamilyMemberCountOutputTypeCountFinancingArgs
    Loan?: boolean | FamilyMemberCountOutputTypeCountLoanArgs
    MonthlyIncome?: boolean | FamilyMemberCountOutputTypeCountMonthlyIncomeArgs
    OtherExpense?: boolean | FamilyMemberCountOutputTypeCountOtherExpenseArgs
    FamilyMemberToVehicle?: boolean | FamilyMemberCountOutputTypeCountFamilyMemberToVehicleArgs
    FamilyMemberDisease?: boolean | FamilyMemberCountOutputTypeCountFamilyMemberDiseaseArgs
    Medication?: boolean | FamilyMemberCountOutputTypeCountMedicationArgs
    BankAccount?: boolean | FamilyMemberCountOutputTypeCountBankAccountArgs
    Declarations?: boolean | FamilyMemberCountOutputTypeCountDeclarationsArgs
  }

  // Custom InputTypes

  /**
   * FamilyMemberCountOutputType without action
   */
  export type FamilyMemberCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberCountOutputType
     */
    select?: FamilyMemberCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * FamilyMemberCountOutputType without action
   */
  export type FamilyMemberCountOutputTypeCountCreditCardArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: CreditCardWhereInput
  }


  /**
   * FamilyMemberCountOutputType without action
   */
  export type FamilyMemberCountOutputTypeCountFamilyMemberIncomeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: FamilyMemberIncomeWhereInput
  }


  /**
   * FamilyMemberCountOutputType without action
   */
  export type FamilyMemberCountOutputTypeCountFinancingArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: FinancingWhereInput
  }


  /**
   * FamilyMemberCountOutputType without action
   */
  export type FamilyMemberCountOutputTypeCountLoanArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: LoanWhereInput
  }


  /**
   * FamilyMemberCountOutputType without action
   */
  export type FamilyMemberCountOutputTypeCountMonthlyIncomeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: MonthlyIncomeWhereInput
  }


  /**
   * FamilyMemberCountOutputType without action
   */
  export type FamilyMemberCountOutputTypeCountOtherExpenseArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: OtherExpenseWhereInput
  }


  /**
   * FamilyMemberCountOutputType without action
   */
  export type FamilyMemberCountOutputTypeCountFamilyMemberToVehicleArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: FamilyMemberToVehicleWhereInput
  }


  /**
   * FamilyMemberCountOutputType without action
   */
  export type FamilyMemberCountOutputTypeCountFamilyMemberDiseaseArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: FamilyMemberDiseaseWhereInput
  }


  /**
   * FamilyMemberCountOutputType without action
   */
  export type FamilyMemberCountOutputTypeCountMedicationArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: MedicationWhereInput
  }


  /**
   * FamilyMemberCountOutputType without action
   */
  export type FamilyMemberCountOutputTypeCountBankAccountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: BankAccountWhereInput
  }


  /**
   * FamilyMemberCountOutputType without action
   */
  export type FamilyMemberCountOutputTypeCountDeclarationsArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: DeclarationsWhereInput
  }



  /**
   * Count Type VehicleCountOutputType
   */

  export type VehicleCountOutputType = {
    FamilyMemberToVehicle: number
  }

  export type VehicleCountOutputTypeSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    FamilyMemberToVehicle?: boolean | VehicleCountOutputTypeCountFamilyMemberToVehicleArgs
  }

  // Custom InputTypes

  /**
   * VehicleCountOutputType without action
   */
  export type VehicleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehicleCountOutputType
     */
    select?: VehicleCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * VehicleCountOutputType without action
   */
  export type VehicleCountOutputTypeCountFamilyMemberToVehicleArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: FamilyMemberToVehicleWhereInput
  }



  /**
   * Count Type FamilyMemberDiseaseCountOutputType
   */

  export type FamilyMemberDiseaseCountOutputType = {
    Medication: number
  }

  export type FamilyMemberDiseaseCountOutputTypeSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    Medication?: boolean | FamilyMemberDiseaseCountOutputTypeCountMedicationArgs
  }

  // Custom InputTypes

  /**
   * FamilyMemberDiseaseCountOutputType without action
   */
  export type FamilyMemberDiseaseCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberDiseaseCountOutputType
     */
    select?: FamilyMemberDiseaseCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * FamilyMemberDiseaseCountOutputType without action
   */
  export type FamilyMemberDiseaseCountOutputTypeCountMedicationArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: MedicationWhereInput
  }



  /**
   * Count Type AnnouncementCountOutputType
   */

  export type AnnouncementCountOutputType = {
    entity_subsidiary: number
    Application: number
    educationLevels: number
    ScholarshipGranted: number
    timelines: number
    socialAssistant: number
  }

  export type AnnouncementCountOutputTypeSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    entity_subsidiary?: boolean | AnnouncementCountOutputTypeCountEntity_subsidiaryArgs
    Application?: boolean | AnnouncementCountOutputTypeCountApplicationArgs
    educationLevels?: boolean | AnnouncementCountOutputTypeCountEducationLevelsArgs
    ScholarshipGranted?: boolean | AnnouncementCountOutputTypeCountScholarshipGrantedArgs
    timelines?: boolean | AnnouncementCountOutputTypeCountTimelinesArgs
    socialAssistant?: boolean | AnnouncementCountOutputTypeCountSocialAssistantArgs
  }

  // Custom InputTypes

  /**
   * AnnouncementCountOutputType without action
   */
  export type AnnouncementCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AnnouncementCountOutputType
     */
    select?: AnnouncementCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * AnnouncementCountOutputType without action
   */
  export type AnnouncementCountOutputTypeCountEntity_subsidiaryArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: EntitySubsidiaryWhereInput
  }


  /**
   * AnnouncementCountOutputType without action
   */
  export type AnnouncementCountOutputTypeCountApplicationArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: ApplicationWhereInput
  }


  /**
   * AnnouncementCountOutputType without action
   */
  export type AnnouncementCountOutputTypeCountEducationLevelsArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: EducationLevelWhereInput
  }


  /**
   * AnnouncementCountOutputType without action
   */
  export type AnnouncementCountOutputTypeCountScholarshipGrantedArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: ScholarshipGrantedWhereInput
  }


  /**
   * AnnouncementCountOutputType without action
   */
  export type AnnouncementCountOutputTypeCountTimelinesArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: TimelineWhereInput
  }


  /**
   * AnnouncementCountOutputType without action
   */
  export type AnnouncementCountOutputTypeCountSocialAssistantArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: SocialAssistantWhereInput
  }



  /**
   * Count Type EducationLevelCountOutputType
   */

  export type EducationLevelCountOutputType = {
    Application: number
  }

  export type EducationLevelCountOutputTypeSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    Application?: boolean | EducationLevelCountOutputTypeCountApplicationArgs
  }

  // Custom InputTypes

  /**
   * EducationLevelCountOutputType without action
   */
  export type EducationLevelCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EducationLevelCountOutputType
     */
    select?: EducationLevelCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * EducationLevelCountOutputType without action
   */
  export type EducationLevelCountOutputTypeCountApplicationArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: ApplicationWhereInput
  }



  /**
   * Count Type ApplicationCountOutputType
   */

  export type ApplicationCountOutputType = {
    applicationHistories: number
  }

  export type ApplicationCountOutputTypeSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    applicationHistories?: boolean | ApplicationCountOutputTypeCountApplicationHistoriesArgs
  }

  // Custom InputTypes

  /**
   * ApplicationCountOutputType without action
   */
  export type ApplicationCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationCountOutputType
     */
    select?: ApplicationCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * ApplicationCountOutputType without action
   */
  export type ApplicationCountOutputTypeCountApplicationHistoriesArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: ApplicationHistoryWhereInput
  }



  /**
   * Models
   */

  /**
   * Model IdMapping
   */

  export type AggregateIdMapping = {
    _count: IdMappingCountAggregateOutputType | null
    _min: IdMappingMinAggregateOutputType | null
    _max: IdMappingMaxAggregateOutputType | null
  }

  export type IdMappingMinAggregateOutputType = {
    id: string | null
    mainId: string | null
    newId: string | null
    application_id: string | null
  }

  export type IdMappingMaxAggregateOutputType = {
    id: string | null
    mainId: string | null
    newId: string | null
    application_id: string | null
  }

  export type IdMappingCountAggregateOutputType = {
    id: number
    mainId: number
    newId: number
    application_id: number
    _all: number
  }


  export type IdMappingMinAggregateInputType = {
    id?: true
    mainId?: true
    newId?: true
    application_id?: true
  }

  export type IdMappingMaxAggregateInputType = {
    id?: true
    mainId?: true
    newId?: true
    application_id?: true
  }

  export type IdMappingCountAggregateInputType = {
    id?: true
    mainId?: true
    newId?: true
    application_id?: true
    _all?: true
  }

  export type IdMappingAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which IdMapping to aggregate.
     */
    where?: IdMappingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IdMappings to fetch.
     */
    orderBy?: IdMappingOrderByWithRelationInput | IdMappingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: IdMappingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IdMappings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IdMappings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned IdMappings
    **/
    _count?: true | IdMappingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: IdMappingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: IdMappingMaxAggregateInputType
  }

  export type GetIdMappingAggregateType<T extends IdMappingAggregateArgs> = {
        [P in keyof T & keyof AggregateIdMapping]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateIdMapping[P]>
      : GetScalarType<T[P], AggregateIdMapping[P]>
  }




  export type IdMappingGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: IdMappingWhereInput
    orderBy?: IdMappingOrderByWithAggregationInput | IdMappingOrderByWithAggregationInput[]
    by: IdMappingScalarFieldEnum[] | IdMappingScalarFieldEnum
    having?: IdMappingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: IdMappingCountAggregateInputType | true
    _min?: IdMappingMinAggregateInputType
    _max?: IdMappingMaxAggregateInputType
  }

  export type IdMappingGroupByOutputType = {
    id: string
    mainId: string
    newId: string
    application_id: string
    _count: IdMappingCountAggregateOutputType | null
    _min: IdMappingMinAggregateOutputType | null
    _max: IdMappingMaxAggregateOutputType | null
  }

  type GetIdMappingGroupByPayload<T extends IdMappingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<IdMappingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof IdMappingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], IdMappingGroupByOutputType[P]>
            : GetScalarType<T[P], IdMappingGroupByOutputType[P]>
        }
      >
    >


  export type IdMappingSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mainId?: boolean
    newId?: boolean
    application_id?: boolean
  }, ExtArgs["result"]["idMapping"]>

  export type IdMappingSelectScalar = {
    id?: boolean
    mainId?: boolean
    newId?: boolean
    application_id?: boolean
  }


  export type $IdMappingPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "IdMapping"
    objects: {}
    scalars: $Extensions.GetResult<{
      id: string
      mainId: string
      newId: string
      application_id: string
    }, ExtArgs["result"]["idMapping"]>
    composites: {}
  }


  type IdMappingGetPayload<S extends boolean | null | undefined | IdMappingDefaultArgs> = $Result.GetResult<Prisma.$IdMappingPayload, S>

  type IdMappingCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<IdMappingFindManyArgs, 'select' | 'include'> & {
      select?: IdMappingCountAggregateInputType | true
    }

  export interface IdMappingDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['IdMapping'], meta: { name: 'IdMapping' } }
    /**
     * Find zero or one IdMapping that matches the filter.
     * @param {IdMappingFindUniqueArgs} args - Arguments to find a IdMapping
     * @example
     * // Get one IdMapping
     * const idMapping = await prisma.idMapping.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends IdMappingFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, IdMappingFindUniqueArgs<ExtArgs>>
    ): Prisma__IdMappingClient<$Result.GetResult<Prisma.$IdMappingPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one IdMapping that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {IdMappingFindUniqueOrThrowArgs} args - Arguments to find a IdMapping
     * @example
     * // Get one IdMapping
     * const idMapping = await prisma.idMapping.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends IdMappingFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, IdMappingFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__IdMappingClient<$Result.GetResult<Prisma.$IdMappingPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first IdMapping that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdMappingFindFirstArgs} args - Arguments to find a IdMapping
     * @example
     * // Get one IdMapping
     * const idMapping = await prisma.idMapping.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends IdMappingFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, IdMappingFindFirstArgs<ExtArgs>>
    ): Prisma__IdMappingClient<$Result.GetResult<Prisma.$IdMappingPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first IdMapping that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdMappingFindFirstOrThrowArgs} args - Arguments to find a IdMapping
     * @example
     * // Get one IdMapping
     * const idMapping = await prisma.idMapping.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends IdMappingFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, IdMappingFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__IdMappingClient<$Result.GetResult<Prisma.$IdMappingPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more IdMappings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdMappingFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all IdMappings
     * const idMappings = await prisma.idMapping.findMany()
     * 
     * // Get first 10 IdMappings
     * const idMappings = await prisma.idMapping.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const idMappingWithIdOnly = await prisma.idMapping.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends IdMappingFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, IdMappingFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IdMappingPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a IdMapping.
     * @param {IdMappingCreateArgs} args - Arguments to create a IdMapping.
     * @example
     * // Create one IdMapping
     * const IdMapping = await prisma.idMapping.create({
     *   data: {
     *     // ... data to create a IdMapping
     *   }
     * })
     * 
    **/
    create<T extends IdMappingCreateArgs<ExtArgs>>(
      args: SelectSubset<T, IdMappingCreateArgs<ExtArgs>>
    ): Prisma__IdMappingClient<$Result.GetResult<Prisma.$IdMappingPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many IdMappings.
     *     @param {IdMappingCreateManyArgs} args - Arguments to create many IdMappings.
     *     @example
     *     // Create many IdMappings
     *     const idMapping = await prisma.idMapping.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends IdMappingCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, IdMappingCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a IdMapping.
     * @param {IdMappingDeleteArgs} args - Arguments to delete one IdMapping.
     * @example
     * // Delete one IdMapping
     * const IdMapping = await prisma.idMapping.delete({
     *   where: {
     *     // ... filter to delete one IdMapping
     *   }
     * })
     * 
    **/
    delete<T extends IdMappingDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, IdMappingDeleteArgs<ExtArgs>>
    ): Prisma__IdMappingClient<$Result.GetResult<Prisma.$IdMappingPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one IdMapping.
     * @param {IdMappingUpdateArgs} args - Arguments to update one IdMapping.
     * @example
     * // Update one IdMapping
     * const idMapping = await prisma.idMapping.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends IdMappingUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, IdMappingUpdateArgs<ExtArgs>>
    ): Prisma__IdMappingClient<$Result.GetResult<Prisma.$IdMappingPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more IdMappings.
     * @param {IdMappingDeleteManyArgs} args - Arguments to filter IdMappings to delete.
     * @example
     * // Delete a few IdMappings
     * const { count } = await prisma.idMapping.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends IdMappingDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, IdMappingDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more IdMappings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdMappingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many IdMappings
     * const idMapping = await prisma.idMapping.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends IdMappingUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, IdMappingUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one IdMapping.
     * @param {IdMappingUpsertArgs} args - Arguments to update or create a IdMapping.
     * @example
     * // Update or create a IdMapping
     * const idMapping = await prisma.idMapping.upsert({
     *   create: {
     *     // ... data to create a IdMapping
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the IdMapping we want to update
     *   }
     * })
    **/
    upsert<T extends IdMappingUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, IdMappingUpsertArgs<ExtArgs>>
    ): Prisma__IdMappingClient<$Result.GetResult<Prisma.$IdMappingPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of IdMappings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdMappingCountArgs} args - Arguments to filter IdMappings to count.
     * @example
     * // Count the number of IdMappings
     * const count = await prisma.idMapping.count({
     *   where: {
     *     // ... the filter for the IdMappings we want to count
     *   }
     * })
    **/
    count<T extends IdMappingCountArgs>(
      args?: Subset<T, IdMappingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], IdMappingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a IdMapping.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdMappingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends IdMappingAggregateArgs>(args: Subset<T, IdMappingAggregateArgs>): Prisma.PrismaPromise<GetIdMappingAggregateType<T>>

    /**
     * Group by IdMapping.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdMappingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends IdMappingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: IdMappingGroupByArgs['orderBy'] }
        : { orderBy?: IdMappingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, IdMappingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetIdMappingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the IdMapping model
   */
  readonly fields: IdMappingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for IdMapping.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__IdMappingClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the IdMapping model
   */ 
  interface IdMappingFieldRefs {
    readonly id: FieldRef<"IdMapping", 'String'>
    readonly mainId: FieldRef<"IdMapping", 'String'>
    readonly newId: FieldRef<"IdMapping", 'String'>
    readonly application_id: FieldRef<"IdMapping", 'String'>
  }
    

  // Custom InputTypes

  /**
   * IdMapping findUnique
   */
  export type IdMappingFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdMapping
     */
    select?: IdMappingSelect<ExtArgs> | null
    /**
     * Filter, which IdMapping to fetch.
     */
    where: IdMappingWhereUniqueInput
  }


  /**
   * IdMapping findUniqueOrThrow
   */
  export type IdMappingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdMapping
     */
    select?: IdMappingSelect<ExtArgs> | null
    /**
     * Filter, which IdMapping to fetch.
     */
    where: IdMappingWhereUniqueInput
  }


  /**
   * IdMapping findFirst
   */
  export type IdMappingFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdMapping
     */
    select?: IdMappingSelect<ExtArgs> | null
    /**
     * Filter, which IdMapping to fetch.
     */
    where?: IdMappingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IdMappings to fetch.
     */
    orderBy?: IdMappingOrderByWithRelationInput | IdMappingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for IdMappings.
     */
    cursor?: IdMappingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IdMappings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IdMappings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of IdMappings.
     */
    distinct?: IdMappingScalarFieldEnum | IdMappingScalarFieldEnum[]
  }


  /**
   * IdMapping findFirstOrThrow
   */
  export type IdMappingFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdMapping
     */
    select?: IdMappingSelect<ExtArgs> | null
    /**
     * Filter, which IdMapping to fetch.
     */
    where?: IdMappingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IdMappings to fetch.
     */
    orderBy?: IdMappingOrderByWithRelationInput | IdMappingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for IdMappings.
     */
    cursor?: IdMappingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IdMappings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IdMappings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of IdMappings.
     */
    distinct?: IdMappingScalarFieldEnum | IdMappingScalarFieldEnum[]
  }


  /**
   * IdMapping findMany
   */
  export type IdMappingFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdMapping
     */
    select?: IdMappingSelect<ExtArgs> | null
    /**
     * Filter, which IdMappings to fetch.
     */
    where?: IdMappingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IdMappings to fetch.
     */
    orderBy?: IdMappingOrderByWithRelationInput | IdMappingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing IdMappings.
     */
    cursor?: IdMappingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IdMappings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IdMappings.
     */
    skip?: number
    distinct?: IdMappingScalarFieldEnum | IdMappingScalarFieldEnum[]
  }


  /**
   * IdMapping create
   */
  export type IdMappingCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdMapping
     */
    select?: IdMappingSelect<ExtArgs> | null
    /**
     * The data needed to create a IdMapping.
     */
    data?: XOR<IdMappingCreateInput, IdMappingUncheckedCreateInput>
  }


  /**
   * IdMapping createMany
   */
  export type IdMappingCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many IdMappings.
     */
    data: IdMappingCreateManyInput | IdMappingCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * IdMapping update
   */
  export type IdMappingUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdMapping
     */
    select?: IdMappingSelect<ExtArgs> | null
    /**
     * The data needed to update a IdMapping.
     */
    data: XOR<IdMappingUpdateInput, IdMappingUncheckedUpdateInput>
    /**
     * Choose, which IdMapping to update.
     */
    where: IdMappingWhereUniqueInput
  }


  /**
   * IdMapping updateMany
   */
  export type IdMappingUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update IdMappings.
     */
    data: XOR<IdMappingUpdateManyMutationInput, IdMappingUncheckedUpdateManyInput>
    /**
     * Filter which IdMappings to update
     */
    where?: IdMappingWhereInput
  }


  /**
   * IdMapping upsert
   */
  export type IdMappingUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdMapping
     */
    select?: IdMappingSelect<ExtArgs> | null
    /**
     * The filter to search for the IdMapping to update in case it exists.
     */
    where: IdMappingWhereUniqueInput
    /**
     * In case the IdMapping found by the `where` argument doesn't exist, create a new IdMapping with this data.
     */
    create: XOR<IdMappingCreateInput, IdMappingUncheckedCreateInput>
    /**
     * In case the IdMapping was found with the provided `where` argument, update it with this data.
     */
    update: XOR<IdMappingUpdateInput, IdMappingUncheckedUpdateInput>
  }


  /**
   * IdMapping delete
   */
  export type IdMappingDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdMapping
     */
    select?: IdMappingSelect<ExtArgs> | null
    /**
     * Filter which IdMapping to delete.
     */
    where: IdMappingWhereUniqueInput
  }


  /**
   * IdMapping deleteMany
   */
  export type IdMappingDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which IdMappings to delete
     */
    where?: IdMappingWhereInput
  }


  /**
   * IdMapping without action
   */
  export type IdMappingDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdMapping
     */
    select?: IdMappingSelect<ExtArgs> | null
  }



  /**
   * Model Candidate
   */

  export type AggregateCandidate = {
    _count: CandidateCountAggregateOutputType | null
    _min: CandidateMinAggregateOutputType | null
    _max: CandidateMaxAggregateOutputType | null
  }

  export type CandidateMinAggregateOutputType = {
    id: string | null
    name: string | null
    CPF: string | null
    main_id: string | null
    birthDate: Date | null
    role: $Enums.ROLE | null
    createdAt: Date | null
    user_id: string | null
    responsible_id: string | null
    profilePicture: string | null
    email: string | null
    finishedapplication: boolean | null
    application_id: string | null
  }

  export type CandidateMaxAggregateOutputType = {
    id: string | null
    name: string | null
    CPF: string | null
    main_id: string | null
    birthDate: Date | null
    role: $Enums.ROLE | null
    createdAt: Date | null
    user_id: string | null
    responsible_id: string | null
    profilePicture: string | null
    email: string | null
    finishedapplication: boolean | null
    application_id: string | null
  }

  export type CandidateCountAggregateOutputType = {
    id: number
    name: number
    CPF: number
    main_id: number
    birthDate: number
    role: number
    createdAt: number
    user_id: number
    responsible_id: number
    profilePicture: number
    email: number
    finishedapplication: number
    application_id: number
    _all: number
  }


  export type CandidateMinAggregateInputType = {
    id?: true
    name?: true
    CPF?: true
    main_id?: true
    birthDate?: true
    role?: true
    createdAt?: true
    user_id?: true
    responsible_id?: true
    profilePicture?: true
    email?: true
    finishedapplication?: true
    application_id?: true
  }

  export type CandidateMaxAggregateInputType = {
    id?: true
    name?: true
    CPF?: true
    main_id?: true
    birthDate?: true
    role?: true
    createdAt?: true
    user_id?: true
    responsible_id?: true
    profilePicture?: true
    email?: true
    finishedapplication?: true
    application_id?: true
  }

  export type CandidateCountAggregateInputType = {
    id?: true
    name?: true
    CPF?: true
    main_id?: true
    birthDate?: true
    role?: true
    createdAt?: true
    user_id?: true
    responsible_id?: true
    profilePicture?: true
    email?: true
    finishedapplication?: true
    application_id?: true
    _all?: true
  }

  export type CandidateAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which Candidate to aggregate.
     */
    where?: CandidateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Candidates to fetch.
     */
    orderBy?: CandidateOrderByWithRelationInput | CandidateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CandidateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Candidates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Candidates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Candidates
    **/
    _count?: true | CandidateCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CandidateMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CandidateMaxAggregateInputType
  }

  export type GetCandidateAggregateType<T extends CandidateAggregateArgs> = {
        [P in keyof T & keyof AggregateCandidate]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCandidate[P]>
      : GetScalarType<T[P], AggregateCandidate[P]>
  }




  export type CandidateGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: CandidateWhereInput
    orderBy?: CandidateOrderByWithAggregationInput | CandidateOrderByWithAggregationInput[]
    by: CandidateScalarFieldEnum[] | CandidateScalarFieldEnum
    having?: CandidateScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CandidateCountAggregateInputType | true
    _min?: CandidateMinAggregateInputType
    _max?: CandidateMaxAggregateInputType
  }

  export type CandidateGroupByOutputType = {
    id: string
    name: string
    CPF: string
    main_id: string | null
    birthDate: Date
    role: $Enums.ROLE
    createdAt: Date
    user_id: string | null
    responsible_id: string | null
    profilePicture: string | null
    email: string | null
    finishedapplication: boolean
    application_id: string | null
    _count: CandidateCountAggregateOutputType | null
    _min: CandidateMinAggregateOutputType | null
    _max: CandidateMaxAggregateOutputType | null
  }

  type GetCandidateGroupByPayload<T extends CandidateGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CandidateGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CandidateGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CandidateGroupByOutputType[P]>
            : GetScalarType<T[P], CandidateGroupByOutputType[P]>
        }
      >
    >


  export type CandidateSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    CPF?: boolean
    main_id?: boolean
    birthDate?: boolean
    role?: boolean
    createdAt?: boolean
    user_id?: boolean
    responsible_id?: boolean
    profilePicture?: boolean
    email?: boolean
    finishedapplication?: boolean
    application_id?: boolean
    Application?: boolean | Candidate$ApplicationArgs<ExtArgs>
    CreditCard?: boolean | Candidate$CreditCardArgs<ExtArgs>
    Expense?: boolean | Candidate$ExpenseArgs<ExtArgs>
    Financing?: boolean | Candidate$FinancingArgs<ExtArgs>
    IdentityDetails?: boolean | Candidate$IdentityDetailsArgs<ExtArgs>
    FamilyMemberIncome?: boolean | Candidate$FamilyMemberIncomeArgs<ExtArgs>
    Loan?: boolean | Candidate$LoanArgs<ExtArgs>
    OtherExpense?: boolean | Candidate$OtherExpenseArgs<ExtArgs>
    Vehicle?: boolean | Candidate$VehicleArgs<ExtArgs>
    responsible?: boolean | Candidate$responsibleArgs<ExtArgs>
    FamillyMember?: boolean | Candidate$FamillyMemberArgs<ExtArgs>
    Housing?: boolean | Candidate$HousingArgs<ExtArgs>
    MonthlyIncome?: boolean | Candidate$MonthlyIncomeArgs<ExtArgs>
    FamilyMemberDisease?: boolean | Candidate$FamilyMemberDiseaseArgs<ExtArgs>
    Medication?: boolean | Candidate$MedicationArgs<ExtArgs>
    BankAccount?: boolean | Candidate$BankAccountArgs<ExtArgs>
    Declarations?: boolean | Candidate$DeclarationsArgs<ExtArgs>
    _count?: boolean | CandidateCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["candidate"]>

  export type CandidateSelectScalar = {
    id?: boolean
    name?: boolean
    CPF?: boolean
    main_id?: boolean
    birthDate?: boolean
    role?: boolean
    createdAt?: boolean
    user_id?: boolean
    responsible_id?: boolean
    profilePicture?: boolean
    email?: boolean
    finishedapplication?: boolean
    application_id?: boolean
  }

  export type CandidateInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    Application?: boolean | Candidate$ApplicationArgs<ExtArgs>
    CreditCard?: boolean | Candidate$CreditCardArgs<ExtArgs>
    Expense?: boolean | Candidate$ExpenseArgs<ExtArgs>
    Financing?: boolean | Candidate$FinancingArgs<ExtArgs>
    IdentityDetails?: boolean | Candidate$IdentityDetailsArgs<ExtArgs>
    FamilyMemberIncome?: boolean | Candidate$FamilyMemberIncomeArgs<ExtArgs>
    Loan?: boolean | Candidate$LoanArgs<ExtArgs>
    OtherExpense?: boolean | Candidate$OtherExpenseArgs<ExtArgs>
    Vehicle?: boolean | Candidate$VehicleArgs<ExtArgs>
    responsible?: boolean | Candidate$responsibleArgs<ExtArgs>
    FamillyMember?: boolean | Candidate$FamillyMemberArgs<ExtArgs>
    Housing?: boolean | Candidate$HousingArgs<ExtArgs>
    MonthlyIncome?: boolean | Candidate$MonthlyIncomeArgs<ExtArgs>
    FamilyMemberDisease?: boolean | Candidate$FamilyMemberDiseaseArgs<ExtArgs>
    Medication?: boolean | Candidate$MedicationArgs<ExtArgs>
    BankAccount?: boolean | Candidate$BankAccountArgs<ExtArgs>
    Declarations?: boolean | Candidate$DeclarationsArgs<ExtArgs>
    _count?: boolean | CandidateCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $CandidatePayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "Candidate"
    objects: {
      Application: Prisma.$ApplicationPayload<ExtArgs>[]
      CreditCard: Prisma.$CreditCardPayload<ExtArgs>[]
      Expense: Prisma.$ExpensePayload<ExtArgs>[]
      Financing: Prisma.$FinancingPayload<ExtArgs>[]
      IdentityDetails: Prisma.$IdentityDetailsPayload<ExtArgs>[]
      FamilyMemberIncome: Prisma.$FamilyMemberIncomePayload<ExtArgs>[]
      Loan: Prisma.$LoanPayload<ExtArgs>[]
      OtherExpense: Prisma.$OtherExpensePayload<ExtArgs>[]
      Vehicle: Prisma.$VehiclePayload<ExtArgs>[]
      responsible: Prisma.$LegalResponsiblePayload<ExtArgs> | null
      FamillyMember: Prisma.$FamilyMemberPayload<ExtArgs>[]
      Housing: Prisma.$HousingPayload<ExtArgs>[]
      MonthlyIncome: Prisma.$MonthlyIncomePayload<ExtArgs>[]
      FamilyMemberDisease: Prisma.$FamilyMemberDiseasePayload<ExtArgs>[]
      Medication: Prisma.$MedicationPayload<ExtArgs>[]
      BankAccount: Prisma.$BankAccountPayload<ExtArgs>[]
      Declarations: Prisma.$DeclarationsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetResult<{
      id: string
      name: string
      CPF: string
      main_id: string | null
      birthDate: Date
      role: $Enums.ROLE
      createdAt: Date
      user_id: string | null
      responsible_id: string | null
      profilePicture: string | null
      email: string | null
      finishedapplication: boolean
      application_id: string | null
    }, ExtArgs["result"]["candidate"]>
    composites: {}
  }


  type CandidateGetPayload<S extends boolean | null | undefined | CandidateDefaultArgs> = $Result.GetResult<Prisma.$CandidatePayload, S>

  type CandidateCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<CandidateFindManyArgs, 'select' | 'include'> & {
      select?: CandidateCountAggregateInputType | true
    }

  export interface CandidateDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Candidate'], meta: { name: 'Candidate' } }
    /**
     * Find zero or one Candidate that matches the filter.
     * @param {CandidateFindUniqueArgs} args - Arguments to find a Candidate
     * @example
     * // Get one Candidate
     * const candidate = await prisma.candidate.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends CandidateFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, CandidateFindUniqueArgs<ExtArgs>>
    ): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Candidate that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {CandidateFindUniqueOrThrowArgs} args - Arguments to find a Candidate
     * @example
     * // Get one Candidate
     * const candidate = await prisma.candidate.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends CandidateFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CandidateFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Candidate that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidateFindFirstArgs} args - Arguments to find a Candidate
     * @example
     * // Get one Candidate
     * const candidate = await prisma.candidate.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends CandidateFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, CandidateFindFirstArgs<ExtArgs>>
    ): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Candidate that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidateFindFirstOrThrowArgs} args - Arguments to find a Candidate
     * @example
     * // Get one Candidate
     * const candidate = await prisma.candidate.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends CandidateFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CandidateFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Candidates that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidateFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Candidates
     * const candidates = await prisma.candidate.findMany()
     * 
     * // Get first 10 Candidates
     * const candidates = await prisma.candidate.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const candidateWithIdOnly = await prisma.candidate.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends CandidateFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CandidateFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Candidate.
     * @param {CandidateCreateArgs} args - Arguments to create a Candidate.
     * @example
     * // Create one Candidate
     * const Candidate = await prisma.candidate.create({
     *   data: {
     *     // ... data to create a Candidate
     *   }
     * })
     * 
    **/
    create<T extends CandidateCreateArgs<ExtArgs>>(
      args: SelectSubset<T, CandidateCreateArgs<ExtArgs>>
    ): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Candidates.
     *     @param {CandidateCreateManyArgs} args - Arguments to create many Candidates.
     *     @example
     *     // Create many Candidates
     *     const candidate = await prisma.candidate.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends CandidateCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CandidateCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Candidate.
     * @param {CandidateDeleteArgs} args - Arguments to delete one Candidate.
     * @example
     * // Delete one Candidate
     * const Candidate = await prisma.candidate.delete({
     *   where: {
     *     // ... filter to delete one Candidate
     *   }
     * })
     * 
    **/
    delete<T extends CandidateDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, CandidateDeleteArgs<ExtArgs>>
    ): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Candidate.
     * @param {CandidateUpdateArgs} args - Arguments to update one Candidate.
     * @example
     * // Update one Candidate
     * const candidate = await prisma.candidate.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends CandidateUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, CandidateUpdateArgs<ExtArgs>>
    ): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Candidates.
     * @param {CandidateDeleteManyArgs} args - Arguments to filter Candidates to delete.
     * @example
     * // Delete a few Candidates
     * const { count } = await prisma.candidate.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends CandidateDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CandidateDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Candidates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidateUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Candidates
     * const candidate = await prisma.candidate.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends CandidateUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, CandidateUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Candidate.
     * @param {CandidateUpsertArgs} args - Arguments to update or create a Candidate.
     * @example
     * // Update or create a Candidate
     * const candidate = await prisma.candidate.upsert({
     *   create: {
     *     // ... data to create a Candidate
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Candidate we want to update
     *   }
     * })
    **/
    upsert<T extends CandidateUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, CandidateUpsertArgs<ExtArgs>>
    ): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Candidates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidateCountArgs} args - Arguments to filter Candidates to count.
     * @example
     * // Count the number of Candidates
     * const count = await prisma.candidate.count({
     *   where: {
     *     // ... the filter for the Candidates we want to count
     *   }
     * })
    **/
    count<T extends CandidateCountArgs>(
      args?: Subset<T, CandidateCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CandidateCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Candidate.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidateAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CandidateAggregateArgs>(args: Subset<T, CandidateAggregateArgs>): Prisma.PrismaPromise<GetCandidateAggregateType<T>>

    /**
     * Group by Candidate.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidateGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CandidateGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CandidateGroupByArgs['orderBy'] }
        : { orderBy?: CandidateGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CandidateGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCandidateGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Candidate model
   */
  readonly fields: CandidateFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Candidate.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CandidateClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    Application<T extends Candidate$ApplicationArgs<ExtArgs> = {}>(args?: Subset<T, Candidate$ApplicationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, 'findMany'> | Null>;

    CreditCard<T extends Candidate$CreditCardArgs<ExtArgs> = {}>(args?: Subset<T, Candidate$CreditCardArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CreditCardPayload<ExtArgs>, T, 'findMany'> | Null>;

    Expense<T extends Candidate$ExpenseArgs<ExtArgs> = {}>(args?: Subset<T, Candidate$ExpenseArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, 'findMany'> | Null>;

    Financing<T extends Candidate$FinancingArgs<ExtArgs> = {}>(args?: Subset<T, Candidate$FinancingArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FinancingPayload<ExtArgs>, T, 'findMany'> | Null>;

    IdentityDetails<T extends Candidate$IdentityDetailsArgs<ExtArgs> = {}>(args?: Subset<T, Candidate$IdentityDetailsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IdentityDetailsPayload<ExtArgs>, T, 'findMany'> | Null>;

    FamilyMemberIncome<T extends Candidate$FamilyMemberIncomeArgs<ExtArgs> = {}>(args?: Subset<T, Candidate$FamilyMemberIncomeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FamilyMemberIncomePayload<ExtArgs>, T, 'findMany'> | Null>;

    Loan<T extends Candidate$LoanArgs<ExtArgs> = {}>(args?: Subset<T, Candidate$LoanArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LoanPayload<ExtArgs>, T, 'findMany'> | Null>;

    OtherExpense<T extends Candidate$OtherExpenseArgs<ExtArgs> = {}>(args?: Subset<T, Candidate$OtherExpenseArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OtherExpensePayload<ExtArgs>, T, 'findMany'> | Null>;

    Vehicle<T extends Candidate$VehicleArgs<ExtArgs> = {}>(args?: Subset<T, Candidate$VehicleArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VehiclePayload<ExtArgs>, T, 'findMany'> | Null>;

    responsible<T extends Candidate$responsibleArgs<ExtArgs> = {}>(args?: Subset<T, Candidate$responsibleArgs<ExtArgs>>): Prisma__LegalResponsibleClient<$Result.GetResult<Prisma.$LegalResponsiblePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    FamillyMember<T extends Candidate$FamillyMemberArgs<ExtArgs> = {}>(args?: Subset<T, Candidate$FamillyMemberArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, 'findMany'> | Null>;

    Housing<T extends Candidate$HousingArgs<ExtArgs> = {}>(args?: Subset<T, Candidate$HousingArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HousingPayload<ExtArgs>, T, 'findMany'> | Null>;

    MonthlyIncome<T extends Candidate$MonthlyIncomeArgs<ExtArgs> = {}>(args?: Subset<T, Candidate$MonthlyIncomeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MonthlyIncomePayload<ExtArgs>, T, 'findMany'> | Null>;

    FamilyMemberDisease<T extends Candidate$FamilyMemberDiseaseArgs<ExtArgs> = {}>(args?: Subset<T, Candidate$FamilyMemberDiseaseArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FamilyMemberDiseasePayload<ExtArgs>, T, 'findMany'> | Null>;

    Medication<T extends Candidate$MedicationArgs<ExtArgs> = {}>(args?: Subset<T, Candidate$MedicationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MedicationPayload<ExtArgs>, T, 'findMany'> | Null>;

    BankAccount<T extends Candidate$BankAccountArgs<ExtArgs> = {}>(args?: Subset<T, Candidate$BankAccountArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BankAccountPayload<ExtArgs>, T, 'findMany'> | Null>;

    Declarations<T extends Candidate$DeclarationsArgs<ExtArgs> = {}>(args?: Subset<T, Candidate$DeclarationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeclarationsPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Candidate model
   */ 
  interface CandidateFieldRefs {
    readonly id: FieldRef<"Candidate", 'String'>
    readonly name: FieldRef<"Candidate", 'String'>
    readonly CPF: FieldRef<"Candidate", 'String'>
    readonly main_id: FieldRef<"Candidate", 'String'>
    readonly birthDate: FieldRef<"Candidate", 'DateTime'>
    readonly role: FieldRef<"Candidate", 'ROLE'>
    readonly createdAt: FieldRef<"Candidate", 'DateTime'>
    readonly user_id: FieldRef<"Candidate", 'String'>
    readonly responsible_id: FieldRef<"Candidate", 'String'>
    readonly profilePicture: FieldRef<"Candidate", 'String'>
    readonly email: FieldRef<"Candidate", 'String'>
    readonly finishedapplication: FieldRef<"Candidate", 'Boolean'>
    readonly application_id: FieldRef<"Candidate", 'String'>
  }
    

  // Custom InputTypes

  /**
   * Candidate findUnique
   */
  export type CandidateFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CandidateInclude<ExtArgs> | null
    /**
     * Filter, which Candidate to fetch.
     */
    where: CandidateWhereUniqueInput
  }


  /**
   * Candidate findUniqueOrThrow
   */
  export type CandidateFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CandidateInclude<ExtArgs> | null
    /**
     * Filter, which Candidate to fetch.
     */
    where: CandidateWhereUniqueInput
  }


  /**
   * Candidate findFirst
   */
  export type CandidateFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CandidateInclude<ExtArgs> | null
    /**
     * Filter, which Candidate to fetch.
     */
    where?: CandidateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Candidates to fetch.
     */
    orderBy?: CandidateOrderByWithRelationInput | CandidateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Candidates.
     */
    cursor?: CandidateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Candidates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Candidates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Candidates.
     */
    distinct?: CandidateScalarFieldEnum | CandidateScalarFieldEnum[]
  }


  /**
   * Candidate findFirstOrThrow
   */
  export type CandidateFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CandidateInclude<ExtArgs> | null
    /**
     * Filter, which Candidate to fetch.
     */
    where?: CandidateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Candidates to fetch.
     */
    orderBy?: CandidateOrderByWithRelationInput | CandidateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Candidates.
     */
    cursor?: CandidateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Candidates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Candidates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Candidates.
     */
    distinct?: CandidateScalarFieldEnum | CandidateScalarFieldEnum[]
  }


  /**
   * Candidate findMany
   */
  export type CandidateFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CandidateInclude<ExtArgs> | null
    /**
     * Filter, which Candidates to fetch.
     */
    where?: CandidateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Candidates to fetch.
     */
    orderBy?: CandidateOrderByWithRelationInput | CandidateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Candidates.
     */
    cursor?: CandidateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Candidates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Candidates.
     */
    skip?: number
    distinct?: CandidateScalarFieldEnum | CandidateScalarFieldEnum[]
  }


  /**
   * Candidate create
   */
  export type CandidateCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CandidateInclude<ExtArgs> | null
    /**
     * The data needed to create a Candidate.
     */
    data: XOR<CandidateCreateInput, CandidateUncheckedCreateInput>
  }


  /**
   * Candidate createMany
   */
  export type CandidateCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Candidates.
     */
    data: CandidateCreateManyInput | CandidateCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Candidate update
   */
  export type CandidateUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CandidateInclude<ExtArgs> | null
    /**
     * The data needed to update a Candidate.
     */
    data: XOR<CandidateUpdateInput, CandidateUncheckedUpdateInput>
    /**
     * Choose, which Candidate to update.
     */
    where: CandidateWhereUniqueInput
  }


  /**
   * Candidate updateMany
   */
  export type CandidateUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Candidates.
     */
    data: XOR<CandidateUpdateManyMutationInput, CandidateUncheckedUpdateManyInput>
    /**
     * Filter which Candidates to update
     */
    where?: CandidateWhereInput
  }


  /**
   * Candidate upsert
   */
  export type CandidateUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CandidateInclude<ExtArgs> | null
    /**
     * The filter to search for the Candidate to update in case it exists.
     */
    where: CandidateWhereUniqueInput
    /**
     * In case the Candidate found by the `where` argument doesn't exist, create a new Candidate with this data.
     */
    create: XOR<CandidateCreateInput, CandidateUncheckedCreateInput>
    /**
     * In case the Candidate was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CandidateUpdateInput, CandidateUncheckedUpdateInput>
  }


  /**
   * Candidate delete
   */
  export type CandidateDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CandidateInclude<ExtArgs> | null
    /**
     * Filter which Candidate to delete.
     */
    where: CandidateWhereUniqueInput
  }


  /**
   * Candidate deleteMany
   */
  export type CandidateDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which Candidates to delete
     */
    where?: CandidateWhereInput
  }


  /**
   * Candidate.Application
   */
  export type Candidate$ApplicationArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ApplicationInclude<ExtArgs> | null
    where?: ApplicationWhereInput
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    cursor?: ApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ApplicationScalarFieldEnum | ApplicationScalarFieldEnum[]
  }


  /**
   * Candidate.CreditCard
   */
  export type Candidate$CreditCardArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreditCard
     */
    select?: CreditCardSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CreditCardInclude<ExtArgs> | null
    where?: CreditCardWhereInput
    orderBy?: CreditCardOrderByWithRelationInput | CreditCardOrderByWithRelationInput[]
    cursor?: CreditCardWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CreditCardScalarFieldEnum | CreditCardScalarFieldEnum[]
  }


  /**
   * Candidate.Expense
   */
  export type Candidate$ExpenseArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ExpenseInclude<ExtArgs> | null
    where?: ExpenseWhereInput
    orderBy?: ExpenseOrderByWithRelationInput | ExpenseOrderByWithRelationInput[]
    cursor?: ExpenseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ExpenseScalarFieldEnum | ExpenseScalarFieldEnum[]
  }


  /**
   * Candidate.Financing
   */
  export type Candidate$FinancingArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Financing
     */
    select?: FinancingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FinancingInclude<ExtArgs> | null
    where?: FinancingWhereInput
    orderBy?: FinancingOrderByWithRelationInput | FinancingOrderByWithRelationInput[]
    cursor?: FinancingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FinancingScalarFieldEnum | FinancingScalarFieldEnum[]
  }


  /**
   * Candidate.IdentityDetails
   */
  export type Candidate$IdentityDetailsArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityDetails
     */
    select?: IdentityDetailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: IdentityDetailsInclude<ExtArgs> | null
    where?: IdentityDetailsWhereInput
    orderBy?: IdentityDetailsOrderByWithRelationInput | IdentityDetailsOrderByWithRelationInput[]
    cursor?: IdentityDetailsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: IdentityDetailsScalarFieldEnum | IdentityDetailsScalarFieldEnum[]
  }


  /**
   * Candidate.FamilyMemberIncome
   */
  export type Candidate$FamilyMemberIncomeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberIncome
     */
    select?: FamilyMemberIncomeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberIncomeInclude<ExtArgs> | null
    where?: FamilyMemberIncomeWhereInput
    orderBy?: FamilyMemberIncomeOrderByWithRelationInput | FamilyMemberIncomeOrderByWithRelationInput[]
    cursor?: FamilyMemberIncomeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FamilyMemberIncomeScalarFieldEnum | FamilyMemberIncomeScalarFieldEnum[]
  }


  /**
   * Candidate.Loan
   */
  export type Candidate$LoanArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Loan
     */
    select?: LoanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LoanInclude<ExtArgs> | null
    where?: LoanWhereInput
    orderBy?: LoanOrderByWithRelationInput | LoanOrderByWithRelationInput[]
    cursor?: LoanWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LoanScalarFieldEnum | LoanScalarFieldEnum[]
  }


  /**
   * Candidate.OtherExpense
   */
  export type Candidate$OtherExpenseArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OtherExpense
     */
    select?: OtherExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: OtherExpenseInclude<ExtArgs> | null
    where?: OtherExpenseWhereInput
    orderBy?: OtherExpenseOrderByWithRelationInput | OtherExpenseOrderByWithRelationInput[]
    cursor?: OtherExpenseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OtherExpenseScalarFieldEnum | OtherExpenseScalarFieldEnum[]
  }


  /**
   * Candidate.Vehicle
   */
  export type Candidate$VehicleArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vehicle
     */
    select?: VehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: VehicleInclude<ExtArgs> | null
    where?: VehicleWhereInput
    orderBy?: VehicleOrderByWithRelationInput | VehicleOrderByWithRelationInput[]
    cursor?: VehicleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VehicleScalarFieldEnum | VehicleScalarFieldEnum[]
  }


  /**
   * Candidate.responsible
   */
  export type Candidate$responsibleArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalResponsible
     */
    select?: LegalResponsibleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LegalResponsibleInclude<ExtArgs> | null
    where?: LegalResponsibleWhereInput
  }


  /**
   * Candidate.FamillyMember
   */
  export type Candidate$FamillyMemberArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    where?: FamilyMemberWhereInput
    orderBy?: FamilyMemberOrderByWithRelationInput | FamilyMemberOrderByWithRelationInput[]
    cursor?: FamilyMemberWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FamilyMemberScalarFieldEnum | FamilyMemberScalarFieldEnum[]
  }


  /**
   * Candidate.Housing
   */
  export type Candidate$HousingArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Housing
     */
    select?: HousingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: HousingInclude<ExtArgs> | null
    where?: HousingWhereInput
    orderBy?: HousingOrderByWithRelationInput | HousingOrderByWithRelationInput[]
    cursor?: HousingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HousingScalarFieldEnum | HousingScalarFieldEnum[]
  }


  /**
   * Candidate.MonthlyIncome
   */
  export type Candidate$MonthlyIncomeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MonthlyIncome
     */
    select?: MonthlyIncomeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MonthlyIncomeInclude<ExtArgs> | null
    where?: MonthlyIncomeWhereInput
    orderBy?: MonthlyIncomeOrderByWithRelationInput | MonthlyIncomeOrderByWithRelationInput[]
    cursor?: MonthlyIncomeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MonthlyIncomeScalarFieldEnum | MonthlyIncomeScalarFieldEnum[]
  }


  /**
   * Candidate.FamilyMemberDisease
   */
  export type Candidate$FamilyMemberDiseaseArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberDisease
     */
    select?: FamilyMemberDiseaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberDiseaseInclude<ExtArgs> | null
    where?: FamilyMemberDiseaseWhereInput
    orderBy?: FamilyMemberDiseaseOrderByWithRelationInput | FamilyMemberDiseaseOrderByWithRelationInput[]
    cursor?: FamilyMemberDiseaseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FamilyMemberDiseaseScalarFieldEnum | FamilyMemberDiseaseScalarFieldEnum[]
  }


  /**
   * Candidate.Medication
   */
  export type Candidate$MedicationArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Medication
     */
    select?: MedicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MedicationInclude<ExtArgs> | null
    where?: MedicationWhereInput
    orderBy?: MedicationOrderByWithRelationInput | MedicationOrderByWithRelationInput[]
    cursor?: MedicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MedicationScalarFieldEnum | MedicationScalarFieldEnum[]
  }


  /**
   * Candidate.BankAccount
   */
  export type Candidate$BankAccountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankAccount
     */
    select?: BankAccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: BankAccountInclude<ExtArgs> | null
    where?: BankAccountWhereInput
    orderBy?: BankAccountOrderByWithRelationInput | BankAccountOrderByWithRelationInput[]
    cursor?: BankAccountWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BankAccountScalarFieldEnum | BankAccountScalarFieldEnum[]
  }


  /**
   * Candidate.Declarations
   */
  export type Candidate$DeclarationsArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Declarations
     */
    select?: DeclarationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: DeclarationsInclude<ExtArgs> | null
    where?: DeclarationsWhereInput
    orderBy?: DeclarationsOrderByWithRelationInput | DeclarationsOrderByWithRelationInput[]
    cursor?: DeclarationsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DeclarationsScalarFieldEnum | DeclarationsScalarFieldEnum[]
  }


  /**
   * Candidate without action
   */
  export type CandidateDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CandidateInclude<ExtArgs> | null
  }



  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    email: string | null
    password: string | null
    role: $Enums.ROLE | null
    createdAt: Date | null
    profilePicture: string | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    email: string | null
    password: string | null
    role: $Enums.ROLE | null
    createdAt: Date | null
    profilePicture: string | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    email: number
    password: number
    role: number
    createdAt: number
    profilePicture: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    email?: true
    password?: true
    role?: true
    createdAt?: true
    profilePicture?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    email?: true
    password?: true
    role?: true
    createdAt?: true
    profilePicture?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    email?: true
    password?: true
    role?: true
    createdAt?: true
    profilePicture?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    email: string
    password: string
    role: $Enums.ROLE
    createdAt: Date
    profilePicture: string | null
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    role?: boolean
    createdAt?: boolean
    profilePicture?: boolean
    EntityDirector?: boolean | User$EntityDirectorArgs<ExtArgs>
    EntitySubsidiary?: boolean | User$EntitySubsidiaryArgs<ExtArgs>
    SocialAssistant?: boolean | User$SocialAssistantArgs<ExtArgs>
    Entity?: boolean | User$EntityArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    email?: boolean
    password?: boolean
    role?: boolean
    createdAt?: boolean
    profilePicture?: boolean
  }

  export type UserInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    EntityDirector?: boolean | User$EntityDirectorArgs<ExtArgs>
    EntitySubsidiary?: boolean | User$EntitySubsidiaryArgs<ExtArgs>
    SocialAssistant?: boolean | User$SocialAssistantArgs<ExtArgs>
    Entity?: boolean | User$EntityArgs<ExtArgs>
  }


  export type $UserPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      EntityDirector: Prisma.$EntityDirectorPayload<ExtArgs> | null
      EntitySubsidiary: Prisma.$EntitySubsidiaryPayload<ExtArgs> | null
      SocialAssistant: Prisma.$SocialAssistantPayload<ExtArgs> | null
      Entity: Prisma.$EntityPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetResult<{
      id: string
      email: string
      password: string
      role: $Enums.ROLE
      createdAt: Date
      profilePicture: string | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }


  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<UserFindManyArgs, 'select' | 'include'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends UserFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>
    ): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends UserFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>
    ): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends UserFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
    **/
    create<T extends UserCreateArgs<ExtArgs>>(
      args: SelectSubset<T, UserCreateArgs<ExtArgs>>
    ): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Users.
     *     @param {UserCreateManyArgs} args - Arguments to create many Users.
     *     @example
     *     // Create many Users
     *     const user = await prisma.user.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends UserCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
    **/
    delete<T extends UserDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, UserDeleteArgs<ExtArgs>>
    ): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends UserUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, UserUpdateArgs<ExtArgs>>
    ): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends UserDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends UserUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
    **/
    upsert<T extends UserUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, UserUpsertArgs<ExtArgs>>
    ): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    EntityDirector<T extends User$EntityDirectorArgs<ExtArgs> = {}>(args?: Subset<T, User$EntityDirectorArgs<ExtArgs>>): Prisma__EntityDirectorClient<$Result.GetResult<Prisma.$EntityDirectorPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    EntitySubsidiary<T extends User$EntitySubsidiaryArgs<ExtArgs> = {}>(args?: Subset<T, User$EntitySubsidiaryArgs<ExtArgs>>): Prisma__EntitySubsidiaryClient<$Result.GetResult<Prisma.$EntitySubsidiaryPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    SocialAssistant<T extends User$SocialAssistantArgs<ExtArgs> = {}>(args?: Subset<T, User$SocialAssistantArgs<ExtArgs>>): Prisma__SocialAssistantClient<$Result.GetResult<Prisma.$SocialAssistantPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    Entity<T extends User$EntityArgs<ExtArgs> = {}>(args?: Subset<T, User$EntityArgs<ExtArgs>>): Prisma__EntityClient<$Result.GetResult<Prisma.$EntityPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly role: FieldRef<"User", 'ROLE'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly profilePicture: FieldRef<"User", 'String'>
  }
    

  // Custom InputTypes

  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }


  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }


  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }


  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }


  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }


  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }


  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }


  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
  }


  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }


  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }


  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
  }


  /**
   * User.EntityDirector
   */
  export type User$EntityDirectorArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntityDirector
     */
    select?: EntityDirectorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntityDirectorInclude<ExtArgs> | null
    where?: EntityDirectorWhereInput
  }


  /**
   * User.EntitySubsidiary
   */
  export type User$EntitySubsidiaryArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntitySubsidiary
     */
    select?: EntitySubsidiarySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntitySubsidiaryInclude<ExtArgs> | null
    where?: EntitySubsidiaryWhereInput
  }


  /**
   * User.SocialAssistant
   */
  export type User$SocialAssistantArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocialAssistant
     */
    select?: SocialAssistantSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SocialAssistantInclude<ExtArgs> | null
    where?: SocialAssistantWhereInput
  }


  /**
   * User.Entity
   */
  export type User$EntityArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Entity
     */
    select?: EntitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntityInclude<ExtArgs> | null
    where?: EntityWhereInput
  }


  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UserInclude<ExtArgs> | null
  }



  /**
   * Model LegalResponsible
   */

  export type AggregateLegalResponsible = {
    _count: LegalResponsibleCountAggregateOutputType | null
    _min: LegalResponsibleMinAggregateOutputType | null
    _max: LegalResponsibleMaxAggregateOutputType | null
  }

  export type LegalResponsibleMinAggregateOutputType = {
    id: string | null
    name: string | null
    main_id: string | null
    CPF: string | null
    birthDate: Date | null
    livesAtSameAddress: boolean | null
    institutionType: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester: string | null
    responsibleShift: $Enums.SHIFT | null
    ResponsibleEducationInstitution: string | null
    role: $Enums.ROLE | null
    createdAt: Date | null
    user_id: string | null
    hasScholarship: boolean | null
    monthlyAmount: string | null
    percentageOfScholarship: string | null
    application_id: string | null
  }

  export type LegalResponsibleMaxAggregateOutputType = {
    id: string | null
    name: string | null
    main_id: string | null
    CPF: string | null
    birthDate: Date | null
    livesAtSameAddress: boolean | null
    institutionType: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester: string | null
    responsibleShift: $Enums.SHIFT | null
    ResponsibleEducationInstitution: string | null
    role: $Enums.ROLE | null
    createdAt: Date | null
    user_id: string | null
    hasScholarship: boolean | null
    monthlyAmount: string | null
    percentageOfScholarship: string | null
    application_id: string | null
  }

  export type LegalResponsibleCountAggregateOutputType = {
    id: number
    name: number
    main_id: number
    CPF: number
    birthDate: number
    livesAtSameAddress: number
    institutionType: number
    responsibleEducationLevel: number
    responsibleGradeOrSemester: number
    responsibleShift: number
    ResponsibleEducationInstitution: number
    role: number
    createdAt: number
    user_id: number
    hasScholarship: number
    monthlyAmount: number
    percentageOfScholarship: number
    application_id: number
    _all: number
  }


  export type LegalResponsibleMinAggregateInputType = {
    id?: true
    name?: true
    main_id?: true
    CPF?: true
    birthDate?: true
    livesAtSameAddress?: true
    institutionType?: true
    responsibleEducationLevel?: true
    responsibleGradeOrSemester?: true
    responsibleShift?: true
    ResponsibleEducationInstitution?: true
    role?: true
    createdAt?: true
    user_id?: true
    hasScholarship?: true
    monthlyAmount?: true
    percentageOfScholarship?: true
    application_id?: true
  }

  export type LegalResponsibleMaxAggregateInputType = {
    id?: true
    name?: true
    main_id?: true
    CPF?: true
    birthDate?: true
    livesAtSameAddress?: true
    institutionType?: true
    responsibleEducationLevel?: true
    responsibleGradeOrSemester?: true
    responsibleShift?: true
    ResponsibleEducationInstitution?: true
    role?: true
    createdAt?: true
    user_id?: true
    hasScholarship?: true
    monthlyAmount?: true
    percentageOfScholarship?: true
    application_id?: true
  }

  export type LegalResponsibleCountAggregateInputType = {
    id?: true
    name?: true
    main_id?: true
    CPF?: true
    birthDate?: true
    livesAtSameAddress?: true
    institutionType?: true
    responsibleEducationLevel?: true
    responsibleGradeOrSemester?: true
    responsibleShift?: true
    ResponsibleEducationInstitution?: true
    role?: true
    createdAt?: true
    user_id?: true
    hasScholarship?: true
    monthlyAmount?: true
    percentageOfScholarship?: true
    application_id?: true
    _all?: true
  }

  export type LegalResponsibleAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which LegalResponsible to aggregate.
     */
    where?: LegalResponsibleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LegalResponsibles to fetch.
     */
    orderBy?: LegalResponsibleOrderByWithRelationInput | LegalResponsibleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LegalResponsibleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LegalResponsibles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LegalResponsibles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned LegalResponsibles
    **/
    _count?: true | LegalResponsibleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LegalResponsibleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LegalResponsibleMaxAggregateInputType
  }

  export type GetLegalResponsibleAggregateType<T extends LegalResponsibleAggregateArgs> = {
        [P in keyof T & keyof AggregateLegalResponsible]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLegalResponsible[P]>
      : GetScalarType<T[P], AggregateLegalResponsible[P]>
  }




  export type LegalResponsibleGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: LegalResponsibleWhereInput
    orderBy?: LegalResponsibleOrderByWithAggregationInput | LegalResponsibleOrderByWithAggregationInput[]
    by: LegalResponsibleScalarFieldEnum[] | LegalResponsibleScalarFieldEnum
    having?: LegalResponsibleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LegalResponsibleCountAggregateInputType | true
    _min?: LegalResponsibleMinAggregateInputType
    _max?: LegalResponsibleMaxAggregateInputType
  }

  export type LegalResponsibleGroupByOutputType = {
    id: string
    name: string
    main_id: string | null
    CPF: string
    birthDate: Date
    livesAtSameAddress: boolean | null
    institutionType: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester: string | null
    responsibleShift: $Enums.SHIFT | null
    ResponsibleEducationInstitution: string | null
    role: $Enums.ROLE
    createdAt: Date
    user_id: string
    hasScholarship: boolean | null
    monthlyAmount: string | null
    percentageOfScholarship: string | null
    application_id: string | null
    _count: LegalResponsibleCountAggregateOutputType | null
    _min: LegalResponsibleMinAggregateOutputType | null
    _max: LegalResponsibleMaxAggregateOutputType | null
  }

  type GetLegalResponsibleGroupByPayload<T extends LegalResponsibleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LegalResponsibleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LegalResponsibleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LegalResponsibleGroupByOutputType[P]>
            : GetScalarType<T[P], LegalResponsibleGroupByOutputType[P]>
        }
      >
    >


  export type LegalResponsibleSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    main_id?: boolean
    CPF?: boolean
    birthDate?: boolean
    livesAtSameAddress?: boolean
    institutionType?: boolean
    responsibleEducationLevel?: boolean
    responsibleGradeOrSemester?: boolean
    responsibleShift?: boolean
    ResponsibleEducationInstitution?: boolean
    role?: boolean
    createdAt?: boolean
    user_id?: boolean
    hasScholarship?: boolean
    monthlyAmount?: boolean
    percentageOfScholarship?: boolean
    application_id?: boolean
    IdentityDetails?: boolean | LegalResponsible$IdentityDetailsArgs<ExtArgs>
    Candidate?: boolean | LegalResponsible$CandidateArgs<ExtArgs>
    Housing?: boolean | LegalResponsible$HousingArgs<ExtArgs>
    FamillyMember?: boolean | LegalResponsible$FamillyMemberArgs<ExtArgs>
    CreditCard?: boolean | LegalResponsible$CreditCardArgs<ExtArgs>
    Expense?: boolean | LegalResponsible$ExpenseArgs<ExtArgs>
    Financing?: boolean | LegalResponsible$FinancingArgs<ExtArgs>
    Loan?: boolean | LegalResponsible$LoanArgs<ExtArgs>
    OtherExpense?: boolean | LegalResponsible$OtherExpenseArgs<ExtArgs>
    Vehicle?: boolean | LegalResponsible$VehicleArgs<ExtArgs>
    FamilyMemberDisease?: boolean | LegalResponsible$FamilyMemberDiseaseArgs<ExtArgs>
    Medication?: boolean | LegalResponsible$MedicationArgs<ExtArgs>
    Application?: boolean | LegalResponsible$ApplicationArgs<ExtArgs>
    FamilyMemberIncome?: boolean | LegalResponsible$FamilyMemberIncomeArgs<ExtArgs>
    MonthlyIncome?: boolean | LegalResponsible$MonthlyIncomeArgs<ExtArgs>
    BankAccount?: boolean | LegalResponsible$BankAccountArgs<ExtArgs>
    Declarations?: boolean | LegalResponsible$DeclarationsArgs<ExtArgs>
    _count?: boolean | LegalResponsibleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["legalResponsible"]>

  export type LegalResponsibleSelectScalar = {
    id?: boolean
    name?: boolean
    main_id?: boolean
    CPF?: boolean
    birthDate?: boolean
    livesAtSameAddress?: boolean
    institutionType?: boolean
    responsibleEducationLevel?: boolean
    responsibleGradeOrSemester?: boolean
    responsibleShift?: boolean
    ResponsibleEducationInstitution?: boolean
    role?: boolean
    createdAt?: boolean
    user_id?: boolean
    hasScholarship?: boolean
    monthlyAmount?: boolean
    percentageOfScholarship?: boolean
    application_id?: boolean
  }

  export type LegalResponsibleInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    IdentityDetails?: boolean | LegalResponsible$IdentityDetailsArgs<ExtArgs>
    Candidate?: boolean | LegalResponsible$CandidateArgs<ExtArgs>
    Housing?: boolean | LegalResponsible$HousingArgs<ExtArgs>
    FamillyMember?: boolean | LegalResponsible$FamillyMemberArgs<ExtArgs>
    CreditCard?: boolean | LegalResponsible$CreditCardArgs<ExtArgs>
    Expense?: boolean | LegalResponsible$ExpenseArgs<ExtArgs>
    Financing?: boolean | LegalResponsible$FinancingArgs<ExtArgs>
    Loan?: boolean | LegalResponsible$LoanArgs<ExtArgs>
    OtherExpense?: boolean | LegalResponsible$OtherExpenseArgs<ExtArgs>
    Vehicle?: boolean | LegalResponsible$VehicleArgs<ExtArgs>
    FamilyMemberDisease?: boolean | LegalResponsible$FamilyMemberDiseaseArgs<ExtArgs>
    Medication?: boolean | LegalResponsible$MedicationArgs<ExtArgs>
    Application?: boolean | LegalResponsible$ApplicationArgs<ExtArgs>
    FamilyMemberIncome?: boolean | LegalResponsible$FamilyMemberIncomeArgs<ExtArgs>
    MonthlyIncome?: boolean | LegalResponsible$MonthlyIncomeArgs<ExtArgs>
    BankAccount?: boolean | LegalResponsible$BankAccountArgs<ExtArgs>
    Declarations?: boolean | LegalResponsible$DeclarationsArgs<ExtArgs>
    _count?: boolean | LegalResponsibleCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $LegalResponsiblePayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "LegalResponsible"
    objects: {
      IdentityDetails: Prisma.$IdentityDetailsPayload<ExtArgs>[]
      Candidate: Prisma.$CandidatePayload<ExtArgs>[]
      Housing: Prisma.$HousingPayload<ExtArgs>[]
      FamillyMember: Prisma.$FamilyMemberPayload<ExtArgs>[]
      CreditCard: Prisma.$CreditCardPayload<ExtArgs>[]
      Expense: Prisma.$ExpensePayload<ExtArgs>[]
      Financing: Prisma.$FinancingPayload<ExtArgs>[]
      Loan: Prisma.$LoanPayload<ExtArgs>[]
      OtherExpense: Prisma.$OtherExpensePayload<ExtArgs>[]
      Vehicle: Prisma.$VehiclePayload<ExtArgs>[]
      FamilyMemberDisease: Prisma.$FamilyMemberDiseasePayload<ExtArgs>[]
      Medication: Prisma.$MedicationPayload<ExtArgs>[]
      Application: Prisma.$ApplicationPayload<ExtArgs>[]
      FamilyMemberIncome: Prisma.$FamilyMemberIncomePayload<ExtArgs>[]
      MonthlyIncome: Prisma.$MonthlyIncomePayload<ExtArgs>[]
      BankAccount: Prisma.$BankAccountPayload<ExtArgs>[]
      Declarations: Prisma.$DeclarationsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetResult<{
      id: string
      name: string
      main_id: string | null
      CPF: string
      birthDate: Date
      livesAtSameAddress: boolean | null
      institutionType: $Enums.INSTITUTION_TYPE | null
      responsibleEducationLevel: $Enums.EDUCATION_TYPE | null
      responsibleGradeOrSemester: string | null
      responsibleShift: $Enums.SHIFT | null
      ResponsibleEducationInstitution: string | null
      role: $Enums.ROLE
      createdAt: Date
      user_id: string
      hasScholarship: boolean | null
      monthlyAmount: string | null
      percentageOfScholarship: string | null
      application_id: string | null
    }, ExtArgs["result"]["legalResponsible"]>
    composites: {}
  }


  type LegalResponsibleGetPayload<S extends boolean | null | undefined | LegalResponsibleDefaultArgs> = $Result.GetResult<Prisma.$LegalResponsiblePayload, S>

  type LegalResponsibleCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<LegalResponsibleFindManyArgs, 'select' | 'include'> & {
      select?: LegalResponsibleCountAggregateInputType | true
    }

  export interface LegalResponsibleDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['LegalResponsible'], meta: { name: 'LegalResponsible' } }
    /**
     * Find zero or one LegalResponsible that matches the filter.
     * @param {LegalResponsibleFindUniqueArgs} args - Arguments to find a LegalResponsible
     * @example
     * // Get one LegalResponsible
     * const legalResponsible = await prisma.legalResponsible.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends LegalResponsibleFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, LegalResponsibleFindUniqueArgs<ExtArgs>>
    ): Prisma__LegalResponsibleClient<$Result.GetResult<Prisma.$LegalResponsiblePayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one LegalResponsible that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {LegalResponsibleFindUniqueOrThrowArgs} args - Arguments to find a LegalResponsible
     * @example
     * // Get one LegalResponsible
     * const legalResponsible = await prisma.legalResponsible.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends LegalResponsibleFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, LegalResponsibleFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__LegalResponsibleClient<$Result.GetResult<Prisma.$LegalResponsiblePayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first LegalResponsible that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LegalResponsibleFindFirstArgs} args - Arguments to find a LegalResponsible
     * @example
     * // Get one LegalResponsible
     * const legalResponsible = await prisma.legalResponsible.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends LegalResponsibleFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, LegalResponsibleFindFirstArgs<ExtArgs>>
    ): Prisma__LegalResponsibleClient<$Result.GetResult<Prisma.$LegalResponsiblePayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first LegalResponsible that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LegalResponsibleFindFirstOrThrowArgs} args - Arguments to find a LegalResponsible
     * @example
     * // Get one LegalResponsible
     * const legalResponsible = await prisma.legalResponsible.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends LegalResponsibleFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, LegalResponsibleFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__LegalResponsibleClient<$Result.GetResult<Prisma.$LegalResponsiblePayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more LegalResponsibles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LegalResponsibleFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LegalResponsibles
     * const legalResponsibles = await prisma.legalResponsible.findMany()
     * 
     * // Get first 10 LegalResponsibles
     * const legalResponsibles = await prisma.legalResponsible.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const legalResponsibleWithIdOnly = await prisma.legalResponsible.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends LegalResponsibleFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, LegalResponsibleFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LegalResponsiblePayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a LegalResponsible.
     * @param {LegalResponsibleCreateArgs} args - Arguments to create a LegalResponsible.
     * @example
     * // Create one LegalResponsible
     * const LegalResponsible = await prisma.legalResponsible.create({
     *   data: {
     *     // ... data to create a LegalResponsible
     *   }
     * })
     * 
    **/
    create<T extends LegalResponsibleCreateArgs<ExtArgs>>(
      args: SelectSubset<T, LegalResponsibleCreateArgs<ExtArgs>>
    ): Prisma__LegalResponsibleClient<$Result.GetResult<Prisma.$LegalResponsiblePayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many LegalResponsibles.
     *     @param {LegalResponsibleCreateManyArgs} args - Arguments to create many LegalResponsibles.
     *     @example
     *     // Create many LegalResponsibles
     *     const legalResponsible = await prisma.legalResponsible.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends LegalResponsibleCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, LegalResponsibleCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a LegalResponsible.
     * @param {LegalResponsibleDeleteArgs} args - Arguments to delete one LegalResponsible.
     * @example
     * // Delete one LegalResponsible
     * const LegalResponsible = await prisma.legalResponsible.delete({
     *   where: {
     *     // ... filter to delete one LegalResponsible
     *   }
     * })
     * 
    **/
    delete<T extends LegalResponsibleDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, LegalResponsibleDeleteArgs<ExtArgs>>
    ): Prisma__LegalResponsibleClient<$Result.GetResult<Prisma.$LegalResponsiblePayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one LegalResponsible.
     * @param {LegalResponsibleUpdateArgs} args - Arguments to update one LegalResponsible.
     * @example
     * // Update one LegalResponsible
     * const legalResponsible = await prisma.legalResponsible.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends LegalResponsibleUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, LegalResponsibleUpdateArgs<ExtArgs>>
    ): Prisma__LegalResponsibleClient<$Result.GetResult<Prisma.$LegalResponsiblePayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more LegalResponsibles.
     * @param {LegalResponsibleDeleteManyArgs} args - Arguments to filter LegalResponsibles to delete.
     * @example
     * // Delete a few LegalResponsibles
     * const { count } = await prisma.legalResponsible.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends LegalResponsibleDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, LegalResponsibleDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LegalResponsibles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LegalResponsibleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LegalResponsibles
     * const legalResponsible = await prisma.legalResponsible.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends LegalResponsibleUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, LegalResponsibleUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one LegalResponsible.
     * @param {LegalResponsibleUpsertArgs} args - Arguments to update or create a LegalResponsible.
     * @example
     * // Update or create a LegalResponsible
     * const legalResponsible = await prisma.legalResponsible.upsert({
     *   create: {
     *     // ... data to create a LegalResponsible
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LegalResponsible we want to update
     *   }
     * })
    **/
    upsert<T extends LegalResponsibleUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, LegalResponsibleUpsertArgs<ExtArgs>>
    ): Prisma__LegalResponsibleClient<$Result.GetResult<Prisma.$LegalResponsiblePayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of LegalResponsibles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LegalResponsibleCountArgs} args - Arguments to filter LegalResponsibles to count.
     * @example
     * // Count the number of LegalResponsibles
     * const count = await prisma.legalResponsible.count({
     *   where: {
     *     // ... the filter for the LegalResponsibles we want to count
     *   }
     * })
    **/
    count<T extends LegalResponsibleCountArgs>(
      args?: Subset<T, LegalResponsibleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LegalResponsibleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LegalResponsible.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LegalResponsibleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LegalResponsibleAggregateArgs>(args: Subset<T, LegalResponsibleAggregateArgs>): Prisma.PrismaPromise<GetLegalResponsibleAggregateType<T>>

    /**
     * Group by LegalResponsible.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LegalResponsibleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LegalResponsibleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LegalResponsibleGroupByArgs['orderBy'] }
        : { orderBy?: LegalResponsibleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LegalResponsibleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLegalResponsibleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the LegalResponsible model
   */
  readonly fields: LegalResponsibleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for LegalResponsible.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LegalResponsibleClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    IdentityDetails<T extends LegalResponsible$IdentityDetailsArgs<ExtArgs> = {}>(args?: Subset<T, LegalResponsible$IdentityDetailsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IdentityDetailsPayload<ExtArgs>, T, 'findMany'> | Null>;

    Candidate<T extends LegalResponsible$CandidateArgs<ExtArgs> = {}>(args?: Subset<T, LegalResponsible$CandidateArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, 'findMany'> | Null>;

    Housing<T extends LegalResponsible$HousingArgs<ExtArgs> = {}>(args?: Subset<T, LegalResponsible$HousingArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HousingPayload<ExtArgs>, T, 'findMany'> | Null>;

    FamillyMember<T extends LegalResponsible$FamillyMemberArgs<ExtArgs> = {}>(args?: Subset<T, LegalResponsible$FamillyMemberArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, 'findMany'> | Null>;

    CreditCard<T extends LegalResponsible$CreditCardArgs<ExtArgs> = {}>(args?: Subset<T, LegalResponsible$CreditCardArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CreditCardPayload<ExtArgs>, T, 'findMany'> | Null>;

    Expense<T extends LegalResponsible$ExpenseArgs<ExtArgs> = {}>(args?: Subset<T, LegalResponsible$ExpenseArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, 'findMany'> | Null>;

    Financing<T extends LegalResponsible$FinancingArgs<ExtArgs> = {}>(args?: Subset<T, LegalResponsible$FinancingArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FinancingPayload<ExtArgs>, T, 'findMany'> | Null>;

    Loan<T extends LegalResponsible$LoanArgs<ExtArgs> = {}>(args?: Subset<T, LegalResponsible$LoanArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LoanPayload<ExtArgs>, T, 'findMany'> | Null>;

    OtherExpense<T extends LegalResponsible$OtherExpenseArgs<ExtArgs> = {}>(args?: Subset<T, LegalResponsible$OtherExpenseArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OtherExpensePayload<ExtArgs>, T, 'findMany'> | Null>;

    Vehicle<T extends LegalResponsible$VehicleArgs<ExtArgs> = {}>(args?: Subset<T, LegalResponsible$VehicleArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VehiclePayload<ExtArgs>, T, 'findMany'> | Null>;

    FamilyMemberDisease<T extends LegalResponsible$FamilyMemberDiseaseArgs<ExtArgs> = {}>(args?: Subset<T, LegalResponsible$FamilyMemberDiseaseArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FamilyMemberDiseasePayload<ExtArgs>, T, 'findMany'> | Null>;

    Medication<T extends LegalResponsible$MedicationArgs<ExtArgs> = {}>(args?: Subset<T, LegalResponsible$MedicationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MedicationPayload<ExtArgs>, T, 'findMany'> | Null>;

    Application<T extends LegalResponsible$ApplicationArgs<ExtArgs> = {}>(args?: Subset<T, LegalResponsible$ApplicationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, 'findMany'> | Null>;

    FamilyMemberIncome<T extends LegalResponsible$FamilyMemberIncomeArgs<ExtArgs> = {}>(args?: Subset<T, LegalResponsible$FamilyMemberIncomeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FamilyMemberIncomePayload<ExtArgs>, T, 'findMany'> | Null>;

    MonthlyIncome<T extends LegalResponsible$MonthlyIncomeArgs<ExtArgs> = {}>(args?: Subset<T, LegalResponsible$MonthlyIncomeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MonthlyIncomePayload<ExtArgs>, T, 'findMany'> | Null>;

    BankAccount<T extends LegalResponsible$BankAccountArgs<ExtArgs> = {}>(args?: Subset<T, LegalResponsible$BankAccountArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BankAccountPayload<ExtArgs>, T, 'findMany'> | Null>;

    Declarations<T extends LegalResponsible$DeclarationsArgs<ExtArgs> = {}>(args?: Subset<T, LegalResponsible$DeclarationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeclarationsPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the LegalResponsible model
   */ 
  interface LegalResponsibleFieldRefs {
    readonly id: FieldRef<"LegalResponsible", 'String'>
    readonly name: FieldRef<"LegalResponsible", 'String'>
    readonly main_id: FieldRef<"LegalResponsible", 'String'>
    readonly CPF: FieldRef<"LegalResponsible", 'String'>
    readonly birthDate: FieldRef<"LegalResponsible", 'DateTime'>
    readonly livesAtSameAddress: FieldRef<"LegalResponsible", 'Boolean'>
    readonly institutionType: FieldRef<"LegalResponsible", 'INSTITUTION_TYPE'>
    readonly responsibleEducationLevel: FieldRef<"LegalResponsible", 'EDUCATION_TYPE'>
    readonly responsibleGradeOrSemester: FieldRef<"LegalResponsible", 'String'>
    readonly responsibleShift: FieldRef<"LegalResponsible", 'SHIFT'>
    readonly ResponsibleEducationInstitution: FieldRef<"LegalResponsible", 'String'>
    readonly role: FieldRef<"LegalResponsible", 'ROLE'>
    readonly createdAt: FieldRef<"LegalResponsible", 'DateTime'>
    readonly user_id: FieldRef<"LegalResponsible", 'String'>
    readonly hasScholarship: FieldRef<"LegalResponsible", 'Boolean'>
    readonly monthlyAmount: FieldRef<"LegalResponsible", 'String'>
    readonly percentageOfScholarship: FieldRef<"LegalResponsible", 'String'>
    readonly application_id: FieldRef<"LegalResponsible", 'String'>
  }
    

  // Custom InputTypes

  /**
   * LegalResponsible findUnique
   */
  export type LegalResponsibleFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalResponsible
     */
    select?: LegalResponsibleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LegalResponsibleInclude<ExtArgs> | null
    /**
     * Filter, which LegalResponsible to fetch.
     */
    where: LegalResponsibleWhereUniqueInput
  }


  /**
   * LegalResponsible findUniqueOrThrow
   */
  export type LegalResponsibleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalResponsible
     */
    select?: LegalResponsibleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LegalResponsibleInclude<ExtArgs> | null
    /**
     * Filter, which LegalResponsible to fetch.
     */
    where: LegalResponsibleWhereUniqueInput
  }


  /**
   * LegalResponsible findFirst
   */
  export type LegalResponsibleFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalResponsible
     */
    select?: LegalResponsibleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LegalResponsibleInclude<ExtArgs> | null
    /**
     * Filter, which LegalResponsible to fetch.
     */
    where?: LegalResponsibleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LegalResponsibles to fetch.
     */
    orderBy?: LegalResponsibleOrderByWithRelationInput | LegalResponsibleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LegalResponsibles.
     */
    cursor?: LegalResponsibleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LegalResponsibles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LegalResponsibles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LegalResponsibles.
     */
    distinct?: LegalResponsibleScalarFieldEnum | LegalResponsibleScalarFieldEnum[]
  }


  /**
   * LegalResponsible findFirstOrThrow
   */
  export type LegalResponsibleFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalResponsible
     */
    select?: LegalResponsibleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LegalResponsibleInclude<ExtArgs> | null
    /**
     * Filter, which LegalResponsible to fetch.
     */
    where?: LegalResponsibleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LegalResponsibles to fetch.
     */
    orderBy?: LegalResponsibleOrderByWithRelationInput | LegalResponsibleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LegalResponsibles.
     */
    cursor?: LegalResponsibleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LegalResponsibles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LegalResponsibles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LegalResponsibles.
     */
    distinct?: LegalResponsibleScalarFieldEnum | LegalResponsibleScalarFieldEnum[]
  }


  /**
   * LegalResponsible findMany
   */
  export type LegalResponsibleFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalResponsible
     */
    select?: LegalResponsibleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LegalResponsibleInclude<ExtArgs> | null
    /**
     * Filter, which LegalResponsibles to fetch.
     */
    where?: LegalResponsibleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LegalResponsibles to fetch.
     */
    orderBy?: LegalResponsibleOrderByWithRelationInput | LegalResponsibleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing LegalResponsibles.
     */
    cursor?: LegalResponsibleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LegalResponsibles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LegalResponsibles.
     */
    skip?: number
    distinct?: LegalResponsibleScalarFieldEnum | LegalResponsibleScalarFieldEnum[]
  }


  /**
   * LegalResponsible create
   */
  export type LegalResponsibleCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalResponsible
     */
    select?: LegalResponsibleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LegalResponsibleInclude<ExtArgs> | null
    /**
     * The data needed to create a LegalResponsible.
     */
    data: XOR<LegalResponsibleCreateInput, LegalResponsibleUncheckedCreateInput>
  }


  /**
   * LegalResponsible createMany
   */
  export type LegalResponsibleCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many LegalResponsibles.
     */
    data: LegalResponsibleCreateManyInput | LegalResponsibleCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * LegalResponsible update
   */
  export type LegalResponsibleUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalResponsible
     */
    select?: LegalResponsibleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LegalResponsibleInclude<ExtArgs> | null
    /**
     * The data needed to update a LegalResponsible.
     */
    data: XOR<LegalResponsibleUpdateInput, LegalResponsibleUncheckedUpdateInput>
    /**
     * Choose, which LegalResponsible to update.
     */
    where: LegalResponsibleWhereUniqueInput
  }


  /**
   * LegalResponsible updateMany
   */
  export type LegalResponsibleUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update LegalResponsibles.
     */
    data: XOR<LegalResponsibleUpdateManyMutationInput, LegalResponsibleUncheckedUpdateManyInput>
    /**
     * Filter which LegalResponsibles to update
     */
    where?: LegalResponsibleWhereInput
  }


  /**
   * LegalResponsible upsert
   */
  export type LegalResponsibleUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalResponsible
     */
    select?: LegalResponsibleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LegalResponsibleInclude<ExtArgs> | null
    /**
     * The filter to search for the LegalResponsible to update in case it exists.
     */
    where: LegalResponsibleWhereUniqueInput
    /**
     * In case the LegalResponsible found by the `where` argument doesn't exist, create a new LegalResponsible with this data.
     */
    create: XOR<LegalResponsibleCreateInput, LegalResponsibleUncheckedCreateInput>
    /**
     * In case the LegalResponsible was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LegalResponsibleUpdateInput, LegalResponsibleUncheckedUpdateInput>
  }


  /**
   * LegalResponsible delete
   */
  export type LegalResponsibleDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalResponsible
     */
    select?: LegalResponsibleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LegalResponsibleInclude<ExtArgs> | null
    /**
     * Filter which LegalResponsible to delete.
     */
    where: LegalResponsibleWhereUniqueInput
  }


  /**
   * LegalResponsible deleteMany
   */
  export type LegalResponsibleDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which LegalResponsibles to delete
     */
    where?: LegalResponsibleWhereInput
  }


  /**
   * LegalResponsible.IdentityDetails
   */
  export type LegalResponsible$IdentityDetailsArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityDetails
     */
    select?: IdentityDetailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: IdentityDetailsInclude<ExtArgs> | null
    where?: IdentityDetailsWhereInput
    orderBy?: IdentityDetailsOrderByWithRelationInput | IdentityDetailsOrderByWithRelationInput[]
    cursor?: IdentityDetailsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: IdentityDetailsScalarFieldEnum | IdentityDetailsScalarFieldEnum[]
  }


  /**
   * LegalResponsible.Candidate
   */
  export type LegalResponsible$CandidateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CandidateInclude<ExtArgs> | null
    where?: CandidateWhereInput
    orderBy?: CandidateOrderByWithRelationInput | CandidateOrderByWithRelationInput[]
    cursor?: CandidateWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CandidateScalarFieldEnum | CandidateScalarFieldEnum[]
  }


  /**
   * LegalResponsible.Housing
   */
  export type LegalResponsible$HousingArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Housing
     */
    select?: HousingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: HousingInclude<ExtArgs> | null
    where?: HousingWhereInput
    orderBy?: HousingOrderByWithRelationInput | HousingOrderByWithRelationInput[]
    cursor?: HousingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HousingScalarFieldEnum | HousingScalarFieldEnum[]
  }


  /**
   * LegalResponsible.FamillyMember
   */
  export type LegalResponsible$FamillyMemberArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    where?: FamilyMemberWhereInput
    orderBy?: FamilyMemberOrderByWithRelationInput | FamilyMemberOrderByWithRelationInput[]
    cursor?: FamilyMemberWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FamilyMemberScalarFieldEnum | FamilyMemberScalarFieldEnum[]
  }


  /**
   * LegalResponsible.CreditCard
   */
  export type LegalResponsible$CreditCardArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreditCard
     */
    select?: CreditCardSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CreditCardInclude<ExtArgs> | null
    where?: CreditCardWhereInput
    orderBy?: CreditCardOrderByWithRelationInput | CreditCardOrderByWithRelationInput[]
    cursor?: CreditCardWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CreditCardScalarFieldEnum | CreditCardScalarFieldEnum[]
  }


  /**
   * LegalResponsible.Expense
   */
  export type LegalResponsible$ExpenseArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ExpenseInclude<ExtArgs> | null
    where?: ExpenseWhereInput
    orderBy?: ExpenseOrderByWithRelationInput | ExpenseOrderByWithRelationInput[]
    cursor?: ExpenseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ExpenseScalarFieldEnum | ExpenseScalarFieldEnum[]
  }


  /**
   * LegalResponsible.Financing
   */
  export type LegalResponsible$FinancingArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Financing
     */
    select?: FinancingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FinancingInclude<ExtArgs> | null
    where?: FinancingWhereInput
    orderBy?: FinancingOrderByWithRelationInput | FinancingOrderByWithRelationInput[]
    cursor?: FinancingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FinancingScalarFieldEnum | FinancingScalarFieldEnum[]
  }


  /**
   * LegalResponsible.Loan
   */
  export type LegalResponsible$LoanArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Loan
     */
    select?: LoanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LoanInclude<ExtArgs> | null
    where?: LoanWhereInput
    orderBy?: LoanOrderByWithRelationInput | LoanOrderByWithRelationInput[]
    cursor?: LoanWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LoanScalarFieldEnum | LoanScalarFieldEnum[]
  }


  /**
   * LegalResponsible.OtherExpense
   */
  export type LegalResponsible$OtherExpenseArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OtherExpense
     */
    select?: OtherExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: OtherExpenseInclude<ExtArgs> | null
    where?: OtherExpenseWhereInput
    orderBy?: OtherExpenseOrderByWithRelationInput | OtherExpenseOrderByWithRelationInput[]
    cursor?: OtherExpenseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OtherExpenseScalarFieldEnum | OtherExpenseScalarFieldEnum[]
  }


  /**
   * LegalResponsible.Vehicle
   */
  export type LegalResponsible$VehicleArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vehicle
     */
    select?: VehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: VehicleInclude<ExtArgs> | null
    where?: VehicleWhereInput
    orderBy?: VehicleOrderByWithRelationInput | VehicleOrderByWithRelationInput[]
    cursor?: VehicleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VehicleScalarFieldEnum | VehicleScalarFieldEnum[]
  }


  /**
   * LegalResponsible.FamilyMemberDisease
   */
  export type LegalResponsible$FamilyMemberDiseaseArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberDisease
     */
    select?: FamilyMemberDiseaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberDiseaseInclude<ExtArgs> | null
    where?: FamilyMemberDiseaseWhereInput
    orderBy?: FamilyMemberDiseaseOrderByWithRelationInput | FamilyMemberDiseaseOrderByWithRelationInput[]
    cursor?: FamilyMemberDiseaseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FamilyMemberDiseaseScalarFieldEnum | FamilyMemberDiseaseScalarFieldEnum[]
  }


  /**
   * LegalResponsible.Medication
   */
  export type LegalResponsible$MedicationArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Medication
     */
    select?: MedicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MedicationInclude<ExtArgs> | null
    where?: MedicationWhereInput
    orderBy?: MedicationOrderByWithRelationInput | MedicationOrderByWithRelationInput[]
    cursor?: MedicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MedicationScalarFieldEnum | MedicationScalarFieldEnum[]
  }


  /**
   * LegalResponsible.Application
   */
  export type LegalResponsible$ApplicationArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ApplicationInclude<ExtArgs> | null
    where?: ApplicationWhereInput
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    cursor?: ApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ApplicationScalarFieldEnum | ApplicationScalarFieldEnum[]
  }


  /**
   * LegalResponsible.FamilyMemberIncome
   */
  export type LegalResponsible$FamilyMemberIncomeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberIncome
     */
    select?: FamilyMemberIncomeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberIncomeInclude<ExtArgs> | null
    where?: FamilyMemberIncomeWhereInput
    orderBy?: FamilyMemberIncomeOrderByWithRelationInput | FamilyMemberIncomeOrderByWithRelationInput[]
    cursor?: FamilyMemberIncomeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FamilyMemberIncomeScalarFieldEnum | FamilyMemberIncomeScalarFieldEnum[]
  }


  /**
   * LegalResponsible.MonthlyIncome
   */
  export type LegalResponsible$MonthlyIncomeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MonthlyIncome
     */
    select?: MonthlyIncomeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MonthlyIncomeInclude<ExtArgs> | null
    where?: MonthlyIncomeWhereInput
    orderBy?: MonthlyIncomeOrderByWithRelationInput | MonthlyIncomeOrderByWithRelationInput[]
    cursor?: MonthlyIncomeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MonthlyIncomeScalarFieldEnum | MonthlyIncomeScalarFieldEnum[]
  }


  /**
   * LegalResponsible.BankAccount
   */
  export type LegalResponsible$BankAccountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankAccount
     */
    select?: BankAccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: BankAccountInclude<ExtArgs> | null
    where?: BankAccountWhereInput
    orderBy?: BankAccountOrderByWithRelationInput | BankAccountOrderByWithRelationInput[]
    cursor?: BankAccountWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BankAccountScalarFieldEnum | BankAccountScalarFieldEnum[]
  }


  /**
   * LegalResponsible.Declarations
   */
  export type LegalResponsible$DeclarationsArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Declarations
     */
    select?: DeclarationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: DeclarationsInclude<ExtArgs> | null
    where?: DeclarationsWhereInput
    orderBy?: DeclarationsOrderByWithRelationInput | DeclarationsOrderByWithRelationInput[]
    cursor?: DeclarationsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DeclarationsScalarFieldEnum | DeclarationsScalarFieldEnum[]
  }


  /**
   * LegalResponsible without action
   */
  export type LegalResponsibleDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalResponsible
     */
    select?: LegalResponsibleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LegalResponsibleInclude<ExtArgs> | null
  }



  /**
   * Model SocialAssistant
   */

  export type AggregateSocialAssistant = {
    _count: SocialAssistantCountAggregateOutputType | null
    _min: SocialAssistantMinAggregateOutputType | null
    _max: SocialAssistantMaxAggregateOutputType | null
  }

  export type SocialAssistantMinAggregateOutputType = {
    id: string | null
    name: string | null
    CPF: string | null
    RG: string | null
    CRESS: string | null
    phone: string | null
    user_id: string | null
    entity_id: string | null
  }

  export type SocialAssistantMaxAggregateOutputType = {
    id: string | null
    name: string | null
    CPF: string | null
    RG: string | null
    CRESS: string | null
    phone: string | null
    user_id: string | null
    entity_id: string | null
  }

  export type SocialAssistantCountAggregateOutputType = {
    id: number
    name: number
    CPF: number
    RG: number
    CRESS: number
    phone: number
    user_id: number
    entity_id: number
    _all: number
  }


  export type SocialAssistantMinAggregateInputType = {
    id?: true
    name?: true
    CPF?: true
    RG?: true
    CRESS?: true
    phone?: true
    user_id?: true
    entity_id?: true
  }

  export type SocialAssistantMaxAggregateInputType = {
    id?: true
    name?: true
    CPF?: true
    RG?: true
    CRESS?: true
    phone?: true
    user_id?: true
    entity_id?: true
  }

  export type SocialAssistantCountAggregateInputType = {
    id?: true
    name?: true
    CPF?: true
    RG?: true
    CRESS?: true
    phone?: true
    user_id?: true
    entity_id?: true
    _all?: true
  }

  export type SocialAssistantAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which SocialAssistant to aggregate.
     */
    where?: SocialAssistantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SocialAssistants to fetch.
     */
    orderBy?: SocialAssistantOrderByWithRelationInput | SocialAssistantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SocialAssistantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SocialAssistants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SocialAssistants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SocialAssistants
    **/
    _count?: true | SocialAssistantCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SocialAssistantMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SocialAssistantMaxAggregateInputType
  }

  export type GetSocialAssistantAggregateType<T extends SocialAssistantAggregateArgs> = {
        [P in keyof T & keyof AggregateSocialAssistant]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSocialAssistant[P]>
      : GetScalarType<T[P], AggregateSocialAssistant[P]>
  }




  export type SocialAssistantGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: SocialAssistantWhereInput
    orderBy?: SocialAssistantOrderByWithAggregationInput | SocialAssistantOrderByWithAggregationInput[]
    by: SocialAssistantScalarFieldEnum[] | SocialAssistantScalarFieldEnum
    having?: SocialAssistantScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SocialAssistantCountAggregateInputType | true
    _min?: SocialAssistantMinAggregateInputType
    _max?: SocialAssistantMaxAggregateInputType
  }

  export type SocialAssistantGroupByOutputType = {
    id: string
    name: string
    CPF: string
    RG: string
    CRESS: string
    phone: string
    user_id: string
    entity_id: string
    _count: SocialAssistantCountAggregateOutputType | null
    _min: SocialAssistantMinAggregateOutputType | null
    _max: SocialAssistantMaxAggregateOutputType | null
  }

  type GetSocialAssistantGroupByPayload<T extends SocialAssistantGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SocialAssistantGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SocialAssistantGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SocialAssistantGroupByOutputType[P]>
            : GetScalarType<T[P], SocialAssistantGroupByOutputType[P]>
        }
      >
    >


  export type SocialAssistantSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    CPF?: boolean
    RG?: boolean
    CRESS?: boolean
    phone?: boolean
    user_id?: boolean
    entity_id?: boolean
    Application?: boolean | SocialAssistant$ApplicationArgs<ExtArgs>
    entity?: boolean | EntityDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    Announcement?: boolean | SocialAssistant$AnnouncementArgs<ExtArgs>
    entity_subsidiary?: boolean | SocialAssistant$entity_subsidiaryArgs<ExtArgs>
    _count?: boolean | SocialAssistantCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["socialAssistant"]>

  export type SocialAssistantSelectScalar = {
    id?: boolean
    name?: boolean
    CPF?: boolean
    RG?: boolean
    CRESS?: boolean
    phone?: boolean
    user_id?: boolean
    entity_id?: boolean
  }

  export type SocialAssistantInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    Application?: boolean | SocialAssistant$ApplicationArgs<ExtArgs>
    entity?: boolean | EntityDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    Announcement?: boolean | SocialAssistant$AnnouncementArgs<ExtArgs>
    entity_subsidiary?: boolean | SocialAssistant$entity_subsidiaryArgs<ExtArgs>
    _count?: boolean | SocialAssistantCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $SocialAssistantPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "SocialAssistant"
    objects: {
      Application: Prisma.$ApplicationPayload<ExtArgs>[]
      entity: Prisma.$EntityPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
      Announcement: Prisma.$AnnouncementPayload<ExtArgs>[]
      entity_subsidiary: Prisma.$EntitySubsidiaryPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetResult<{
      id: string
      name: string
      CPF: string
      RG: string
      CRESS: string
      phone: string
      user_id: string
      entity_id: string
    }, ExtArgs["result"]["socialAssistant"]>
    composites: {}
  }


  type SocialAssistantGetPayload<S extends boolean | null | undefined | SocialAssistantDefaultArgs> = $Result.GetResult<Prisma.$SocialAssistantPayload, S>

  type SocialAssistantCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<SocialAssistantFindManyArgs, 'select' | 'include'> & {
      select?: SocialAssistantCountAggregateInputType | true
    }

  export interface SocialAssistantDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SocialAssistant'], meta: { name: 'SocialAssistant' } }
    /**
     * Find zero or one SocialAssistant that matches the filter.
     * @param {SocialAssistantFindUniqueArgs} args - Arguments to find a SocialAssistant
     * @example
     * // Get one SocialAssistant
     * const socialAssistant = await prisma.socialAssistant.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends SocialAssistantFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, SocialAssistantFindUniqueArgs<ExtArgs>>
    ): Prisma__SocialAssistantClient<$Result.GetResult<Prisma.$SocialAssistantPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one SocialAssistant that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {SocialAssistantFindUniqueOrThrowArgs} args - Arguments to find a SocialAssistant
     * @example
     * // Get one SocialAssistant
     * const socialAssistant = await prisma.socialAssistant.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends SocialAssistantFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, SocialAssistantFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__SocialAssistantClient<$Result.GetResult<Prisma.$SocialAssistantPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first SocialAssistant that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SocialAssistantFindFirstArgs} args - Arguments to find a SocialAssistant
     * @example
     * // Get one SocialAssistant
     * const socialAssistant = await prisma.socialAssistant.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends SocialAssistantFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, SocialAssistantFindFirstArgs<ExtArgs>>
    ): Prisma__SocialAssistantClient<$Result.GetResult<Prisma.$SocialAssistantPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first SocialAssistant that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SocialAssistantFindFirstOrThrowArgs} args - Arguments to find a SocialAssistant
     * @example
     * // Get one SocialAssistant
     * const socialAssistant = await prisma.socialAssistant.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends SocialAssistantFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, SocialAssistantFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__SocialAssistantClient<$Result.GetResult<Prisma.$SocialAssistantPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more SocialAssistants that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SocialAssistantFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SocialAssistants
     * const socialAssistants = await prisma.socialAssistant.findMany()
     * 
     * // Get first 10 SocialAssistants
     * const socialAssistants = await prisma.socialAssistant.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const socialAssistantWithIdOnly = await prisma.socialAssistant.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends SocialAssistantFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, SocialAssistantFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SocialAssistantPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a SocialAssistant.
     * @param {SocialAssistantCreateArgs} args - Arguments to create a SocialAssistant.
     * @example
     * // Create one SocialAssistant
     * const SocialAssistant = await prisma.socialAssistant.create({
     *   data: {
     *     // ... data to create a SocialAssistant
     *   }
     * })
     * 
    **/
    create<T extends SocialAssistantCreateArgs<ExtArgs>>(
      args: SelectSubset<T, SocialAssistantCreateArgs<ExtArgs>>
    ): Prisma__SocialAssistantClient<$Result.GetResult<Prisma.$SocialAssistantPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many SocialAssistants.
     *     @param {SocialAssistantCreateManyArgs} args - Arguments to create many SocialAssistants.
     *     @example
     *     // Create many SocialAssistants
     *     const socialAssistant = await prisma.socialAssistant.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends SocialAssistantCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, SocialAssistantCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a SocialAssistant.
     * @param {SocialAssistantDeleteArgs} args - Arguments to delete one SocialAssistant.
     * @example
     * // Delete one SocialAssistant
     * const SocialAssistant = await prisma.socialAssistant.delete({
     *   where: {
     *     // ... filter to delete one SocialAssistant
     *   }
     * })
     * 
    **/
    delete<T extends SocialAssistantDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, SocialAssistantDeleteArgs<ExtArgs>>
    ): Prisma__SocialAssistantClient<$Result.GetResult<Prisma.$SocialAssistantPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one SocialAssistant.
     * @param {SocialAssistantUpdateArgs} args - Arguments to update one SocialAssistant.
     * @example
     * // Update one SocialAssistant
     * const socialAssistant = await prisma.socialAssistant.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends SocialAssistantUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, SocialAssistantUpdateArgs<ExtArgs>>
    ): Prisma__SocialAssistantClient<$Result.GetResult<Prisma.$SocialAssistantPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more SocialAssistants.
     * @param {SocialAssistantDeleteManyArgs} args - Arguments to filter SocialAssistants to delete.
     * @example
     * // Delete a few SocialAssistants
     * const { count } = await prisma.socialAssistant.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends SocialAssistantDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, SocialAssistantDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SocialAssistants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SocialAssistantUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SocialAssistants
     * const socialAssistant = await prisma.socialAssistant.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends SocialAssistantUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, SocialAssistantUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SocialAssistant.
     * @param {SocialAssistantUpsertArgs} args - Arguments to update or create a SocialAssistant.
     * @example
     * // Update or create a SocialAssistant
     * const socialAssistant = await prisma.socialAssistant.upsert({
     *   create: {
     *     // ... data to create a SocialAssistant
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SocialAssistant we want to update
     *   }
     * })
    **/
    upsert<T extends SocialAssistantUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, SocialAssistantUpsertArgs<ExtArgs>>
    ): Prisma__SocialAssistantClient<$Result.GetResult<Prisma.$SocialAssistantPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of SocialAssistants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SocialAssistantCountArgs} args - Arguments to filter SocialAssistants to count.
     * @example
     * // Count the number of SocialAssistants
     * const count = await prisma.socialAssistant.count({
     *   where: {
     *     // ... the filter for the SocialAssistants we want to count
     *   }
     * })
    **/
    count<T extends SocialAssistantCountArgs>(
      args?: Subset<T, SocialAssistantCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SocialAssistantCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SocialAssistant.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SocialAssistantAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SocialAssistantAggregateArgs>(args: Subset<T, SocialAssistantAggregateArgs>): Prisma.PrismaPromise<GetSocialAssistantAggregateType<T>>

    /**
     * Group by SocialAssistant.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SocialAssistantGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SocialAssistantGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SocialAssistantGroupByArgs['orderBy'] }
        : { orderBy?: SocialAssistantGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SocialAssistantGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSocialAssistantGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SocialAssistant model
   */
  readonly fields: SocialAssistantFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SocialAssistant.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SocialAssistantClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    Application<T extends SocialAssistant$ApplicationArgs<ExtArgs> = {}>(args?: Subset<T, SocialAssistant$ApplicationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, 'findMany'> | Null>;

    entity<T extends EntityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EntityDefaultArgs<ExtArgs>>): Prisma__EntityClient<$Result.GetResult<Prisma.$EntityPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    Announcement<T extends SocialAssistant$AnnouncementArgs<ExtArgs> = {}>(args?: Subset<T, SocialAssistant$AnnouncementArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, 'findMany'> | Null>;

    entity_subsidiary<T extends SocialAssistant$entity_subsidiaryArgs<ExtArgs> = {}>(args?: Subset<T, SocialAssistant$entity_subsidiaryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EntitySubsidiaryPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the SocialAssistant model
   */ 
  interface SocialAssistantFieldRefs {
    readonly id: FieldRef<"SocialAssistant", 'String'>
    readonly name: FieldRef<"SocialAssistant", 'String'>
    readonly CPF: FieldRef<"SocialAssistant", 'String'>
    readonly RG: FieldRef<"SocialAssistant", 'String'>
    readonly CRESS: FieldRef<"SocialAssistant", 'String'>
    readonly phone: FieldRef<"SocialAssistant", 'String'>
    readonly user_id: FieldRef<"SocialAssistant", 'String'>
    readonly entity_id: FieldRef<"SocialAssistant", 'String'>
  }
    

  // Custom InputTypes

  /**
   * SocialAssistant findUnique
   */
  export type SocialAssistantFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocialAssistant
     */
    select?: SocialAssistantSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SocialAssistantInclude<ExtArgs> | null
    /**
     * Filter, which SocialAssistant to fetch.
     */
    where: SocialAssistantWhereUniqueInput
  }


  /**
   * SocialAssistant findUniqueOrThrow
   */
  export type SocialAssistantFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocialAssistant
     */
    select?: SocialAssistantSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SocialAssistantInclude<ExtArgs> | null
    /**
     * Filter, which SocialAssistant to fetch.
     */
    where: SocialAssistantWhereUniqueInput
  }


  /**
   * SocialAssistant findFirst
   */
  export type SocialAssistantFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocialAssistant
     */
    select?: SocialAssistantSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SocialAssistantInclude<ExtArgs> | null
    /**
     * Filter, which SocialAssistant to fetch.
     */
    where?: SocialAssistantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SocialAssistants to fetch.
     */
    orderBy?: SocialAssistantOrderByWithRelationInput | SocialAssistantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SocialAssistants.
     */
    cursor?: SocialAssistantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SocialAssistants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SocialAssistants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SocialAssistants.
     */
    distinct?: SocialAssistantScalarFieldEnum | SocialAssistantScalarFieldEnum[]
  }


  /**
   * SocialAssistant findFirstOrThrow
   */
  export type SocialAssistantFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocialAssistant
     */
    select?: SocialAssistantSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SocialAssistantInclude<ExtArgs> | null
    /**
     * Filter, which SocialAssistant to fetch.
     */
    where?: SocialAssistantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SocialAssistants to fetch.
     */
    orderBy?: SocialAssistantOrderByWithRelationInput | SocialAssistantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SocialAssistants.
     */
    cursor?: SocialAssistantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SocialAssistants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SocialAssistants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SocialAssistants.
     */
    distinct?: SocialAssistantScalarFieldEnum | SocialAssistantScalarFieldEnum[]
  }


  /**
   * SocialAssistant findMany
   */
  export type SocialAssistantFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocialAssistant
     */
    select?: SocialAssistantSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SocialAssistantInclude<ExtArgs> | null
    /**
     * Filter, which SocialAssistants to fetch.
     */
    where?: SocialAssistantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SocialAssistants to fetch.
     */
    orderBy?: SocialAssistantOrderByWithRelationInput | SocialAssistantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SocialAssistants.
     */
    cursor?: SocialAssistantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SocialAssistants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SocialAssistants.
     */
    skip?: number
    distinct?: SocialAssistantScalarFieldEnum | SocialAssistantScalarFieldEnum[]
  }


  /**
   * SocialAssistant create
   */
  export type SocialAssistantCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocialAssistant
     */
    select?: SocialAssistantSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SocialAssistantInclude<ExtArgs> | null
    /**
     * The data needed to create a SocialAssistant.
     */
    data: XOR<SocialAssistantCreateInput, SocialAssistantUncheckedCreateInput>
  }


  /**
   * SocialAssistant createMany
   */
  export type SocialAssistantCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SocialAssistants.
     */
    data: SocialAssistantCreateManyInput | SocialAssistantCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * SocialAssistant update
   */
  export type SocialAssistantUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocialAssistant
     */
    select?: SocialAssistantSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SocialAssistantInclude<ExtArgs> | null
    /**
     * The data needed to update a SocialAssistant.
     */
    data: XOR<SocialAssistantUpdateInput, SocialAssistantUncheckedUpdateInput>
    /**
     * Choose, which SocialAssistant to update.
     */
    where: SocialAssistantWhereUniqueInput
  }


  /**
   * SocialAssistant updateMany
   */
  export type SocialAssistantUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SocialAssistants.
     */
    data: XOR<SocialAssistantUpdateManyMutationInput, SocialAssistantUncheckedUpdateManyInput>
    /**
     * Filter which SocialAssistants to update
     */
    where?: SocialAssistantWhereInput
  }


  /**
   * SocialAssistant upsert
   */
  export type SocialAssistantUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocialAssistant
     */
    select?: SocialAssistantSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SocialAssistantInclude<ExtArgs> | null
    /**
     * The filter to search for the SocialAssistant to update in case it exists.
     */
    where: SocialAssistantWhereUniqueInput
    /**
     * In case the SocialAssistant found by the `where` argument doesn't exist, create a new SocialAssistant with this data.
     */
    create: XOR<SocialAssistantCreateInput, SocialAssistantUncheckedCreateInput>
    /**
     * In case the SocialAssistant was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SocialAssistantUpdateInput, SocialAssistantUncheckedUpdateInput>
  }


  /**
   * SocialAssistant delete
   */
  export type SocialAssistantDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocialAssistant
     */
    select?: SocialAssistantSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SocialAssistantInclude<ExtArgs> | null
    /**
     * Filter which SocialAssistant to delete.
     */
    where: SocialAssistantWhereUniqueInput
  }


  /**
   * SocialAssistant deleteMany
   */
  export type SocialAssistantDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which SocialAssistants to delete
     */
    where?: SocialAssistantWhereInput
  }


  /**
   * SocialAssistant.Application
   */
  export type SocialAssistant$ApplicationArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ApplicationInclude<ExtArgs> | null
    where?: ApplicationWhereInput
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    cursor?: ApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ApplicationScalarFieldEnum | ApplicationScalarFieldEnum[]
  }


  /**
   * SocialAssistant.Announcement
   */
  export type SocialAssistant$AnnouncementArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Announcement
     */
    select?: AnnouncementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AnnouncementInclude<ExtArgs> | null
    where?: AnnouncementWhereInput
    orderBy?: AnnouncementOrderByWithRelationInput | AnnouncementOrderByWithRelationInput[]
    cursor?: AnnouncementWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AnnouncementScalarFieldEnum | AnnouncementScalarFieldEnum[]
  }


  /**
   * SocialAssistant.entity_subsidiary
   */
  export type SocialAssistant$entity_subsidiaryArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntitySubsidiary
     */
    select?: EntitySubsidiarySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntitySubsidiaryInclude<ExtArgs> | null
    where?: EntitySubsidiaryWhereInput
    orderBy?: EntitySubsidiaryOrderByWithRelationInput | EntitySubsidiaryOrderByWithRelationInput[]
    cursor?: EntitySubsidiaryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EntitySubsidiaryScalarFieldEnum | EntitySubsidiaryScalarFieldEnum[]
  }


  /**
   * SocialAssistant without action
   */
  export type SocialAssistantDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocialAssistant
     */
    select?: SocialAssistantSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SocialAssistantInclude<ExtArgs> | null
  }



  /**
   * Model Entity
   */

  export type AggregateEntity = {
    _count: EntityCountAggregateOutputType | null
    _avg: EntityAvgAggregateOutputType | null
    _sum: EntitySumAggregateOutputType | null
    _min: EntityMinAggregateOutputType | null
    _max: EntityMaxAggregateOutputType | null
  }

  export type EntityAvgAggregateOutputType = {
    addressNumber: number | null
  }

  export type EntitySumAggregateOutputType = {
    addressNumber: number | null
  }

  export type EntityMinAggregateOutputType = {
    id: string | null
    name: string | null
    socialReason: string | null
    logo: string | null
    CNPJ: string | null
    CEP: string | null
    address: string | null
    addressNumber: number | null
    neighborhood: string | null
    UF: $Enums.COUNTRY | null
    city: string | null
    educationalInstitutionCode: string | null
    user_id: string | null
  }

  export type EntityMaxAggregateOutputType = {
    id: string | null
    name: string | null
    socialReason: string | null
    logo: string | null
    CNPJ: string | null
    CEP: string | null
    address: string | null
    addressNumber: number | null
    neighborhood: string | null
    UF: $Enums.COUNTRY | null
    city: string | null
    educationalInstitutionCode: string | null
    user_id: string | null
  }

  export type EntityCountAggregateOutputType = {
    id: number
    name: number
    socialReason: number
    logo: number
    CNPJ: number
    CEP: number
    address: number
    addressNumber: number
    neighborhood: number
    UF: number
    city: number
    educationalInstitutionCode: number
    user_id: number
    _all: number
  }


  export type EntityAvgAggregateInputType = {
    addressNumber?: true
  }

  export type EntitySumAggregateInputType = {
    addressNumber?: true
  }

  export type EntityMinAggregateInputType = {
    id?: true
    name?: true
    socialReason?: true
    logo?: true
    CNPJ?: true
    CEP?: true
    address?: true
    addressNumber?: true
    neighborhood?: true
    UF?: true
    city?: true
    educationalInstitutionCode?: true
    user_id?: true
  }

  export type EntityMaxAggregateInputType = {
    id?: true
    name?: true
    socialReason?: true
    logo?: true
    CNPJ?: true
    CEP?: true
    address?: true
    addressNumber?: true
    neighborhood?: true
    UF?: true
    city?: true
    educationalInstitutionCode?: true
    user_id?: true
  }

  export type EntityCountAggregateInputType = {
    id?: true
    name?: true
    socialReason?: true
    logo?: true
    CNPJ?: true
    CEP?: true
    address?: true
    addressNumber?: true
    neighborhood?: true
    UF?: true
    city?: true
    educationalInstitutionCode?: true
    user_id?: true
    _all?: true
  }

  export type EntityAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which Entity to aggregate.
     */
    where?: EntityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Entities to fetch.
     */
    orderBy?: EntityOrderByWithRelationInput | EntityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EntityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Entities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Entities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Entities
    **/
    _count?: true | EntityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EntityAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EntitySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EntityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EntityMaxAggregateInputType
  }

  export type GetEntityAggregateType<T extends EntityAggregateArgs> = {
        [P in keyof T & keyof AggregateEntity]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEntity[P]>
      : GetScalarType<T[P], AggregateEntity[P]>
  }




  export type EntityGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: EntityWhereInput
    orderBy?: EntityOrderByWithAggregationInput | EntityOrderByWithAggregationInput[]
    by: EntityScalarFieldEnum[] | EntityScalarFieldEnum
    having?: EntityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EntityCountAggregateInputType | true
    _avg?: EntityAvgAggregateInputType
    _sum?: EntitySumAggregateInputType
    _min?: EntityMinAggregateInputType
    _max?: EntityMaxAggregateInputType
  }

  export type EntityGroupByOutputType = {
    id: string
    name: string | null
    socialReason: string
    logo: string | null
    CNPJ: string
    CEP: string
    address: string
    addressNumber: number | null
    neighborhood: string
    UF: $Enums.COUNTRY | null
    city: string
    educationalInstitutionCode: string | null
    user_id: string
    _count: EntityCountAggregateOutputType | null
    _avg: EntityAvgAggregateOutputType | null
    _sum: EntitySumAggregateOutputType | null
    _min: EntityMinAggregateOutputType | null
    _max: EntityMaxAggregateOutputType | null
  }

  type GetEntityGroupByPayload<T extends EntityGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EntityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EntityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EntityGroupByOutputType[P]>
            : GetScalarType<T[P], EntityGroupByOutputType[P]>
        }
      >
    >


  export type EntitySelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    socialReason?: boolean
    logo?: boolean
    CNPJ?: boolean
    CEP?: boolean
    address?: boolean
    addressNumber?: boolean
    neighborhood?: boolean
    UF?: boolean
    city?: boolean
    educationalInstitutionCode?: boolean
    user_id?: boolean
    Announcement?: boolean | Entity$AnnouncementArgs<ExtArgs>
    EntityDirector?: boolean | Entity$EntityDirectorArgs<ExtArgs>
    EntitySubsidiary?: boolean | Entity$EntitySubsidiaryArgs<ExtArgs>
    SocialAssistant?: boolean | Entity$SocialAssistantArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    _count?: boolean | EntityCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["entity"]>

  export type EntitySelectScalar = {
    id?: boolean
    name?: boolean
    socialReason?: boolean
    logo?: boolean
    CNPJ?: boolean
    CEP?: boolean
    address?: boolean
    addressNumber?: boolean
    neighborhood?: boolean
    UF?: boolean
    city?: boolean
    educationalInstitutionCode?: boolean
    user_id?: boolean
  }

  export type EntityInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    Announcement?: boolean | Entity$AnnouncementArgs<ExtArgs>
    EntityDirector?: boolean | Entity$EntityDirectorArgs<ExtArgs>
    EntitySubsidiary?: boolean | Entity$EntitySubsidiaryArgs<ExtArgs>
    SocialAssistant?: boolean | Entity$SocialAssistantArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    _count?: boolean | EntityCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $EntityPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "Entity"
    objects: {
      Announcement: Prisma.$AnnouncementPayload<ExtArgs>[]
      EntityDirector: Prisma.$EntityDirectorPayload<ExtArgs>[]
      EntitySubsidiary: Prisma.$EntitySubsidiaryPayload<ExtArgs>[]
      SocialAssistant: Prisma.$SocialAssistantPayload<ExtArgs>[]
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetResult<{
      id: string
      name: string | null
      socialReason: string
      logo: string | null
      CNPJ: string
      CEP: string
      address: string
      addressNumber: number | null
      neighborhood: string
      UF: $Enums.COUNTRY | null
      city: string
      educationalInstitutionCode: string | null
      user_id: string
    }, ExtArgs["result"]["entity"]>
    composites: {}
  }


  type EntityGetPayload<S extends boolean | null | undefined | EntityDefaultArgs> = $Result.GetResult<Prisma.$EntityPayload, S>

  type EntityCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<EntityFindManyArgs, 'select' | 'include'> & {
      select?: EntityCountAggregateInputType | true
    }

  export interface EntityDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Entity'], meta: { name: 'Entity' } }
    /**
     * Find zero or one Entity that matches the filter.
     * @param {EntityFindUniqueArgs} args - Arguments to find a Entity
     * @example
     * // Get one Entity
     * const entity = await prisma.entity.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends EntityFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, EntityFindUniqueArgs<ExtArgs>>
    ): Prisma__EntityClient<$Result.GetResult<Prisma.$EntityPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Entity that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {EntityFindUniqueOrThrowArgs} args - Arguments to find a Entity
     * @example
     * // Get one Entity
     * const entity = await prisma.entity.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends EntityFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, EntityFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__EntityClient<$Result.GetResult<Prisma.$EntityPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Entity that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntityFindFirstArgs} args - Arguments to find a Entity
     * @example
     * // Get one Entity
     * const entity = await prisma.entity.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends EntityFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, EntityFindFirstArgs<ExtArgs>>
    ): Prisma__EntityClient<$Result.GetResult<Prisma.$EntityPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Entity that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntityFindFirstOrThrowArgs} args - Arguments to find a Entity
     * @example
     * // Get one Entity
     * const entity = await prisma.entity.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends EntityFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, EntityFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__EntityClient<$Result.GetResult<Prisma.$EntityPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Entities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntityFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Entities
     * const entities = await prisma.entity.findMany()
     * 
     * // Get first 10 Entities
     * const entities = await prisma.entity.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const entityWithIdOnly = await prisma.entity.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends EntityFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, EntityFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EntityPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Entity.
     * @param {EntityCreateArgs} args - Arguments to create a Entity.
     * @example
     * // Create one Entity
     * const Entity = await prisma.entity.create({
     *   data: {
     *     // ... data to create a Entity
     *   }
     * })
     * 
    **/
    create<T extends EntityCreateArgs<ExtArgs>>(
      args: SelectSubset<T, EntityCreateArgs<ExtArgs>>
    ): Prisma__EntityClient<$Result.GetResult<Prisma.$EntityPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Entities.
     *     @param {EntityCreateManyArgs} args - Arguments to create many Entities.
     *     @example
     *     // Create many Entities
     *     const entity = await prisma.entity.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends EntityCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, EntityCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Entity.
     * @param {EntityDeleteArgs} args - Arguments to delete one Entity.
     * @example
     * // Delete one Entity
     * const Entity = await prisma.entity.delete({
     *   where: {
     *     // ... filter to delete one Entity
     *   }
     * })
     * 
    **/
    delete<T extends EntityDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, EntityDeleteArgs<ExtArgs>>
    ): Prisma__EntityClient<$Result.GetResult<Prisma.$EntityPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Entity.
     * @param {EntityUpdateArgs} args - Arguments to update one Entity.
     * @example
     * // Update one Entity
     * const entity = await prisma.entity.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends EntityUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, EntityUpdateArgs<ExtArgs>>
    ): Prisma__EntityClient<$Result.GetResult<Prisma.$EntityPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Entities.
     * @param {EntityDeleteManyArgs} args - Arguments to filter Entities to delete.
     * @example
     * // Delete a few Entities
     * const { count } = await prisma.entity.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends EntityDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, EntityDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Entities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Entities
     * const entity = await prisma.entity.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends EntityUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, EntityUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Entity.
     * @param {EntityUpsertArgs} args - Arguments to update or create a Entity.
     * @example
     * // Update or create a Entity
     * const entity = await prisma.entity.upsert({
     *   create: {
     *     // ... data to create a Entity
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Entity we want to update
     *   }
     * })
    **/
    upsert<T extends EntityUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, EntityUpsertArgs<ExtArgs>>
    ): Prisma__EntityClient<$Result.GetResult<Prisma.$EntityPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Entities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntityCountArgs} args - Arguments to filter Entities to count.
     * @example
     * // Count the number of Entities
     * const count = await prisma.entity.count({
     *   where: {
     *     // ... the filter for the Entities we want to count
     *   }
     * })
    **/
    count<T extends EntityCountArgs>(
      args?: Subset<T, EntityCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EntityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Entity.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EntityAggregateArgs>(args: Subset<T, EntityAggregateArgs>): Prisma.PrismaPromise<GetEntityAggregateType<T>>

    /**
     * Group by Entity.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EntityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EntityGroupByArgs['orderBy'] }
        : { orderBy?: EntityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EntityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEntityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Entity model
   */
  readonly fields: EntityFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Entity.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EntityClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    Announcement<T extends Entity$AnnouncementArgs<ExtArgs> = {}>(args?: Subset<T, Entity$AnnouncementArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, 'findMany'> | Null>;

    EntityDirector<T extends Entity$EntityDirectorArgs<ExtArgs> = {}>(args?: Subset<T, Entity$EntityDirectorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EntityDirectorPayload<ExtArgs>, T, 'findMany'> | Null>;

    EntitySubsidiary<T extends Entity$EntitySubsidiaryArgs<ExtArgs> = {}>(args?: Subset<T, Entity$EntitySubsidiaryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EntitySubsidiaryPayload<ExtArgs>, T, 'findMany'> | Null>;

    SocialAssistant<T extends Entity$SocialAssistantArgs<ExtArgs> = {}>(args?: Subset<T, Entity$SocialAssistantArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SocialAssistantPayload<ExtArgs>, T, 'findMany'> | Null>;

    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Entity model
   */ 
  interface EntityFieldRefs {
    readonly id: FieldRef<"Entity", 'String'>
    readonly name: FieldRef<"Entity", 'String'>
    readonly socialReason: FieldRef<"Entity", 'String'>
    readonly logo: FieldRef<"Entity", 'String'>
    readonly CNPJ: FieldRef<"Entity", 'String'>
    readonly CEP: FieldRef<"Entity", 'String'>
    readonly address: FieldRef<"Entity", 'String'>
    readonly addressNumber: FieldRef<"Entity", 'Int'>
    readonly neighborhood: FieldRef<"Entity", 'String'>
    readonly UF: FieldRef<"Entity", 'COUNTRY'>
    readonly city: FieldRef<"Entity", 'String'>
    readonly educationalInstitutionCode: FieldRef<"Entity", 'String'>
    readonly user_id: FieldRef<"Entity", 'String'>
  }
    

  // Custom InputTypes

  /**
   * Entity findUnique
   */
  export type EntityFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Entity
     */
    select?: EntitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntityInclude<ExtArgs> | null
    /**
     * Filter, which Entity to fetch.
     */
    where: EntityWhereUniqueInput
  }


  /**
   * Entity findUniqueOrThrow
   */
  export type EntityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Entity
     */
    select?: EntitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntityInclude<ExtArgs> | null
    /**
     * Filter, which Entity to fetch.
     */
    where: EntityWhereUniqueInput
  }


  /**
   * Entity findFirst
   */
  export type EntityFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Entity
     */
    select?: EntitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntityInclude<ExtArgs> | null
    /**
     * Filter, which Entity to fetch.
     */
    where?: EntityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Entities to fetch.
     */
    orderBy?: EntityOrderByWithRelationInput | EntityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Entities.
     */
    cursor?: EntityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Entities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Entities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Entities.
     */
    distinct?: EntityScalarFieldEnum | EntityScalarFieldEnum[]
  }


  /**
   * Entity findFirstOrThrow
   */
  export type EntityFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Entity
     */
    select?: EntitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntityInclude<ExtArgs> | null
    /**
     * Filter, which Entity to fetch.
     */
    where?: EntityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Entities to fetch.
     */
    orderBy?: EntityOrderByWithRelationInput | EntityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Entities.
     */
    cursor?: EntityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Entities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Entities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Entities.
     */
    distinct?: EntityScalarFieldEnum | EntityScalarFieldEnum[]
  }


  /**
   * Entity findMany
   */
  export type EntityFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Entity
     */
    select?: EntitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntityInclude<ExtArgs> | null
    /**
     * Filter, which Entities to fetch.
     */
    where?: EntityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Entities to fetch.
     */
    orderBy?: EntityOrderByWithRelationInput | EntityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Entities.
     */
    cursor?: EntityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Entities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Entities.
     */
    skip?: number
    distinct?: EntityScalarFieldEnum | EntityScalarFieldEnum[]
  }


  /**
   * Entity create
   */
  export type EntityCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Entity
     */
    select?: EntitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntityInclude<ExtArgs> | null
    /**
     * The data needed to create a Entity.
     */
    data: XOR<EntityCreateInput, EntityUncheckedCreateInput>
  }


  /**
   * Entity createMany
   */
  export type EntityCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Entities.
     */
    data: EntityCreateManyInput | EntityCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Entity update
   */
  export type EntityUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Entity
     */
    select?: EntitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntityInclude<ExtArgs> | null
    /**
     * The data needed to update a Entity.
     */
    data: XOR<EntityUpdateInput, EntityUncheckedUpdateInput>
    /**
     * Choose, which Entity to update.
     */
    where: EntityWhereUniqueInput
  }


  /**
   * Entity updateMany
   */
  export type EntityUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Entities.
     */
    data: XOR<EntityUpdateManyMutationInput, EntityUncheckedUpdateManyInput>
    /**
     * Filter which Entities to update
     */
    where?: EntityWhereInput
  }


  /**
   * Entity upsert
   */
  export type EntityUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Entity
     */
    select?: EntitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntityInclude<ExtArgs> | null
    /**
     * The filter to search for the Entity to update in case it exists.
     */
    where: EntityWhereUniqueInput
    /**
     * In case the Entity found by the `where` argument doesn't exist, create a new Entity with this data.
     */
    create: XOR<EntityCreateInput, EntityUncheckedCreateInput>
    /**
     * In case the Entity was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EntityUpdateInput, EntityUncheckedUpdateInput>
  }


  /**
   * Entity delete
   */
  export type EntityDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Entity
     */
    select?: EntitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntityInclude<ExtArgs> | null
    /**
     * Filter which Entity to delete.
     */
    where: EntityWhereUniqueInput
  }


  /**
   * Entity deleteMany
   */
  export type EntityDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which Entities to delete
     */
    where?: EntityWhereInput
  }


  /**
   * Entity.Announcement
   */
  export type Entity$AnnouncementArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Announcement
     */
    select?: AnnouncementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AnnouncementInclude<ExtArgs> | null
    where?: AnnouncementWhereInput
    orderBy?: AnnouncementOrderByWithRelationInput | AnnouncementOrderByWithRelationInput[]
    cursor?: AnnouncementWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AnnouncementScalarFieldEnum | AnnouncementScalarFieldEnum[]
  }


  /**
   * Entity.EntityDirector
   */
  export type Entity$EntityDirectorArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntityDirector
     */
    select?: EntityDirectorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntityDirectorInclude<ExtArgs> | null
    where?: EntityDirectorWhereInput
    orderBy?: EntityDirectorOrderByWithRelationInput | EntityDirectorOrderByWithRelationInput[]
    cursor?: EntityDirectorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EntityDirectorScalarFieldEnum | EntityDirectorScalarFieldEnum[]
  }


  /**
   * Entity.EntitySubsidiary
   */
  export type Entity$EntitySubsidiaryArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntitySubsidiary
     */
    select?: EntitySubsidiarySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntitySubsidiaryInclude<ExtArgs> | null
    where?: EntitySubsidiaryWhereInput
    orderBy?: EntitySubsidiaryOrderByWithRelationInput | EntitySubsidiaryOrderByWithRelationInput[]
    cursor?: EntitySubsidiaryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EntitySubsidiaryScalarFieldEnum | EntitySubsidiaryScalarFieldEnum[]
  }


  /**
   * Entity.SocialAssistant
   */
  export type Entity$SocialAssistantArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocialAssistant
     */
    select?: SocialAssistantSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SocialAssistantInclude<ExtArgs> | null
    where?: SocialAssistantWhereInput
    orderBy?: SocialAssistantOrderByWithRelationInput | SocialAssistantOrderByWithRelationInput[]
    cursor?: SocialAssistantWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SocialAssistantScalarFieldEnum | SocialAssistantScalarFieldEnum[]
  }


  /**
   * Entity without action
   */
  export type EntityDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Entity
     */
    select?: EntitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntityInclude<ExtArgs> | null
  }



  /**
   * Model EntitySubsidiary
   */

  export type AggregateEntitySubsidiary = {
    _count: EntitySubsidiaryCountAggregateOutputType | null
    _avg: EntitySubsidiaryAvgAggregateOutputType | null
    _sum: EntitySubsidiarySumAggregateOutputType | null
    _min: EntitySubsidiaryMinAggregateOutputType | null
    _max: EntitySubsidiaryMaxAggregateOutputType | null
  }

  export type EntitySubsidiaryAvgAggregateOutputType = {
    addressNumber: number | null
  }

  export type EntitySubsidiarySumAggregateOutputType = {
    addressNumber: number | null
  }

  export type EntitySubsidiaryMinAggregateOutputType = {
    id: string | null
    CNPJ: string | null
    name: string | null
    socialReason: string | null
    CEP: string | null
    address: string | null
    addressNumber: number | null
    city: string | null
    neighborhood: string | null
    UF: $Enums.COUNTRY | null
    educationalInstitutionCode: string | null
    entity_id: string | null
    user_id: string | null
  }

  export type EntitySubsidiaryMaxAggregateOutputType = {
    id: string | null
    CNPJ: string | null
    name: string | null
    socialReason: string | null
    CEP: string | null
    address: string | null
    addressNumber: number | null
    city: string | null
    neighborhood: string | null
    UF: $Enums.COUNTRY | null
    educationalInstitutionCode: string | null
    entity_id: string | null
    user_id: string | null
  }

  export type EntitySubsidiaryCountAggregateOutputType = {
    id: number
    CNPJ: number
    name: number
    socialReason: number
    CEP: number
    address: number
    addressNumber: number
    city: number
    neighborhood: number
    UF: number
    educationalInstitutionCode: number
    entity_id: number
    user_id: number
    _all: number
  }


  export type EntitySubsidiaryAvgAggregateInputType = {
    addressNumber?: true
  }

  export type EntitySubsidiarySumAggregateInputType = {
    addressNumber?: true
  }

  export type EntitySubsidiaryMinAggregateInputType = {
    id?: true
    CNPJ?: true
    name?: true
    socialReason?: true
    CEP?: true
    address?: true
    addressNumber?: true
    city?: true
    neighborhood?: true
    UF?: true
    educationalInstitutionCode?: true
    entity_id?: true
    user_id?: true
  }

  export type EntitySubsidiaryMaxAggregateInputType = {
    id?: true
    CNPJ?: true
    name?: true
    socialReason?: true
    CEP?: true
    address?: true
    addressNumber?: true
    city?: true
    neighborhood?: true
    UF?: true
    educationalInstitutionCode?: true
    entity_id?: true
    user_id?: true
  }

  export type EntitySubsidiaryCountAggregateInputType = {
    id?: true
    CNPJ?: true
    name?: true
    socialReason?: true
    CEP?: true
    address?: true
    addressNumber?: true
    city?: true
    neighborhood?: true
    UF?: true
    educationalInstitutionCode?: true
    entity_id?: true
    user_id?: true
    _all?: true
  }

  export type EntitySubsidiaryAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which EntitySubsidiary to aggregate.
     */
    where?: EntitySubsidiaryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EntitySubsidiaries to fetch.
     */
    orderBy?: EntitySubsidiaryOrderByWithRelationInput | EntitySubsidiaryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EntitySubsidiaryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EntitySubsidiaries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EntitySubsidiaries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EntitySubsidiaries
    **/
    _count?: true | EntitySubsidiaryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EntitySubsidiaryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EntitySubsidiarySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EntitySubsidiaryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EntitySubsidiaryMaxAggregateInputType
  }

  export type GetEntitySubsidiaryAggregateType<T extends EntitySubsidiaryAggregateArgs> = {
        [P in keyof T & keyof AggregateEntitySubsidiary]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEntitySubsidiary[P]>
      : GetScalarType<T[P], AggregateEntitySubsidiary[P]>
  }




  export type EntitySubsidiaryGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: EntitySubsidiaryWhereInput
    orderBy?: EntitySubsidiaryOrderByWithAggregationInput | EntitySubsidiaryOrderByWithAggregationInput[]
    by: EntitySubsidiaryScalarFieldEnum[] | EntitySubsidiaryScalarFieldEnum
    having?: EntitySubsidiaryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EntitySubsidiaryCountAggregateInputType | true
    _avg?: EntitySubsidiaryAvgAggregateInputType
    _sum?: EntitySubsidiarySumAggregateInputType
    _min?: EntitySubsidiaryMinAggregateInputType
    _max?: EntitySubsidiaryMaxAggregateInputType
  }

  export type EntitySubsidiaryGroupByOutputType = {
    id: string
    CNPJ: string
    name: string
    socialReason: string
    CEP: string
    address: string
    addressNumber: number | null
    city: string | null
    neighborhood: string | null
    UF: $Enums.COUNTRY | null
    educationalInstitutionCode: string | null
    entity_id: string
    user_id: string
    _count: EntitySubsidiaryCountAggregateOutputType | null
    _avg: EntitySubsidiaryAvgAggregateOutputType | null
    _sum: EntitySubsidiarySumAggregateOutputType | null
    _min: EntitySubsidiaryMinAggregateOutputType | null
    _max: EntitySubsidiaryMaxAggregateOutputType | null
  }

  type GetEntitySubsidiaryGroupByPayload<T extends EntitySubsidiaryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EntitySubsidiaryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EntitySubsidiaryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EntitySubsidiaryGroupByOutputType[P]>
            : GetScalarType<T[P], EntitySubsidiaryGroupByOutputType[P]>
        }
      >
    >


  export type EntitySubsidiarySelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    CNPJ?: boolean
    name?: boolean
    socialReason?: boolean
    CEP?: boolean
    address?: boolean
    addressNumber?: boolean
    city?: boolean
    neighborhood?: boolean
    UF?: boolean
    educationalInstitutionCode?: boolean
    entity_id?: boolean
    user_id?: boolean
    Announcement?: boolean | EntitySubsidiary$AnnouncementArgs<ExtArgs>
    EntityDirector?: boolean | EntitySubsidiary$EntityDirectorArgs<ExtArgs>
    entity?: boolean | EntityDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    SocialAssistant?: boolean | EntitySubsidiary$SocialAssistantArgs<ExtArgs>
    EducationLevel?: boolean | EntitySubsidiary$EducationLevelArgs<ExtArgs>
    _count?: boolean | EntitySubsidiaryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["entitySubsidiary"]>

  export type EntitySubsidiarySelectScalar = {
    id?: boolean
    CNPJ?: boolean
    name?: boolean
    socialReason?: boolean
    CEP?: boolean
    address?: boolean
    addressNumber?: boolean
    city?: boolean
    neighborhood?: boolean
    UF?: boolean
    educationalInstitutionCode?: boolean
    entity_id?: boolean
    user_id?: boolean
  }

  export type EntitySubsidiaryInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    Announcement?: boolean | EntitySubsidiary$AnnouncementArgs<ExtArgs>
    EntityDirector?: boolean | EntitySubsidiary$EntityDirectorArgs<ExtArgs>
    entity?: boolean | EntityDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    SocialAssistant?: boolean | EntitySubsidiary$SocialAssistantArgs<ExtArgs>
    EducationLevel?: boolean | EntitySubsidiary$EducationLevelArgs<ExtArgs>
    _count?: boolean | EntitySubsidiaryCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $EntitySubsidiaryPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "EntitySubsidiary"
    objects: {
      Announcement: Prisma.$AnnouncementPayload<ExtArgs>[]
      EntityDirector: Prisma.$EntityDirectorPayload<ExtArgs>[]
      entity: Prisma.$EntityPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
      SocialAssistant: Prisma.$SocialAssistantPayload<ExtArgs>[]
      EducationLevel: Prisma.$EducationLevelPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetResult<{
      id: string
      CNPJ: string
      name: string
      socialReason: string
      CEP: string
      address: string
      addressNumber: number | null
      city: string | null
      neighborhood: string | null
      UF: $Enums.COUNTRY | null
      educationalInstitutionCode: string | null
      entity_id: string
      user_id: string
    }, ExtArgs["result"]["entitySubsidiary"]>
    composites: {}
  }


  type EntitySubsidiaryGetPayload<S extends boolean | null | undefined | EntitySubsidiaryDefaultArgs> = $Result.GetResult<Prisma.$EntitySubsidiaryPayload, S>

  type EntitySubsidiaryCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<EntitySubsidiaryFindManyArgs, 'select' | 'include'> & {
      select?: EntitySubsidiaryCountAggregateInputType | true
    }

  export interface EntitySubsidiaryDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EntitySubsidiary'], meta: { name: 'EntitySubsidiary' } }
    /**
     * Find zero or one EntitySubsidiary that matches the filter.
     * @param {EntitySubsidiaryFindUniqueArgs} args - Arguments to find a EntitySubsidiary
     * @example
     * // Get one EntitySubsidiary
     * const entitySubsidiary = await prisma.entitySubsidiary.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends EntitySubsidiaryFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, EntitySubsidiaryFindUniqueArgs<ExtArgs>>
    ): Prisma__EntitySubsidiaryClient<$Result.GetResult<Prisma.$EntitySubsidiaryPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one EntitySubsidiary that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {EntitySubsidiaryFindUniqueOrThrowArgs} args - Arguments to find a EntitySubsidiary
     * @example
     * // Get one EntitySubsidiary
     * const entitySubsidiary = await prisma.entitySubsidiary.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends EntitySubsidiaryFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, EntitySubsidiaryFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__EntitySubsidiaryClient<$Result.GetResult<Prisma.$EntitySubsidiaryPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first EntitySubsidiary that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntitySubsidiaryFindFirstArgs} args - Arguments to find a EntitySubsidiary
     * @example
     * // Get one EntitySubsidiary
     * const entitySubsidiary = await prisma.entitySubsidiary.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends EntitySubsidiaryFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, EntitySubsidiaryFindFirstArgs<ExtArgs>>
    ): Prisma__EntitySubsidiaryClient<$Result.GetResult<Prisma.$EntitySubsidiaryPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first EntitySubsidiary that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntitySubsidiaryFindFirstOrThrowArgs} args - Arguments to find a EntitySubsidiary
     * @example
     * // Get one EntitySubsidiary
     * const entitySubsidiary = await prisma.entitySubsidiary.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends EntitySubsidiaryFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, EntitySubsidiaryFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__EntitySubsidiaryClient<$Result.GetResult<Prisma.$EntitySubsidiaryPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more EntitySubsidiaries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntitySubsidiaryFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EntitySubsidiaries
     * const entitySubsidiaries = await prisma.entitySubsidiary.findMany()
     * 
     * // Get first 10 EntitySubsidiaries
     * const entitySubsidiaries = await prisma.entitySubsidiary.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const entitySubsidiaryWithIdOnly = await prisma.entitySubsidiary.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends EntitySubsidiaryFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, EntitySubsidiaryFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EntitySubsidiaryPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a EntitySubsidiary.
     * @param {EntitySubsidiaryCreateArgs} args - Arguments to create a EntitySubsidiary.
     * @example
     * // Create one EntitySubsidiary
     * const EntitySubsidiary = await prisma.entitySubsidiary.create({
     *   data: {
     *     // ... data to create a EntitySubsidiary
     *   }
     * })
     * 
    **/
    create<T extends EntitySubsidiaryCreateArgs<ExtArgs>>(
      args: SelectSubset<T, EntitySubsidiaryCreateArgs<ExtArgs>>
    ): Prisma__EntitySubsidiaryClient<$Result.GetResult<Prisma.$EntitySubsidiaryPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many EntitySubsidiaries.
     *     @param {EntitySubsidiaryCreateManyArgs} args - Arguments to create many EntitySubsidiaries.
     *     @example
     *     // Create many EntitySubsidiaries
     *     const entitySubsidiary = await prisma.entitySubsidiary.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends EntitySubsidiaryCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, EntitySubsidiaryCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a EntitySubsidiary.
     * @param {EntitySubsidiaryDeleteArgs} args - Arguments to delete one EntitySubsidiary.
     * @example
     * // Delete one EntitySubsidiary
     * const EntitySubsidiary = await prisma.entitySubsidiary.delete({
     *   where: {
     *     // ... filter to delete one EntitySubsidiary
     *   }
     * })
     * 
    **/
    delete<T extends EntitySubsidiaryDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, EntitySubsidiaryDeleteArgs<ExtArgs>>
    ): Prisma__EntitySubsidiaryClient<$Result.GetResult<Prisma.$EntitySubsidiaryPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one EntitySubsidiary.
     * @param {EntitySubsidiaryUpdateArgs} args - Arguments to update one EntitySubsidiary.
     * @example
     * // Update one EntitySubsidiary
     * const entitySubsidiary = await prisma.entitySubsidiary.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends EntitySubsidiaryUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, EntitySubsidiaryUpdateArgs<ExtArgs>>
    ): Prisma__EntitySubsidiaryClient<$Result.GetResult<Prisma.$EntitySubsidiaryPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more EntitySubsidiaries.
     * @param {EntitySubsidiaryDeleteManyArgs} args - Arguments to filter EntitySubsidiaries to delete.
     * @example
     * // Delete a few EntitySubsidiaries
     * const { count } = await prisma.entitySubsidiary.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends EntitySubsidiaryDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, EntitySubsidiaryDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EntitySubsidiaries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntitySubsidiaryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EntitySubsidiaries
     * const entitySubsidiary = await prisma.entitySubsidiary.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends EntitySubsidiaryUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, EntitySubsidiaryUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one EntitySubsidiary.
     * @param {EntitySubsidiaryUpsertArgs} args - Arguments to update or create a EntitySubsidiary.
     * @example
     * // Update or create a EntitySubsidiary
     * const entitySubsidiary = await prisma.entitySubsidiary.upsert({
     *   create: {
     *     // ... data to create a EntitySubsidiary
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EntitySubsidiary we want to update
     *   }
     * })
    **/
    upsert<T extends EntitySubsidiaryUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, EntitySubsidiaryUpsertArgs<ExtArgs>>
    ): Prisma__EntitySubsidiaryClient<$Result.GetResult<Prisma.$EntitySubsidiaryPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of EntitySubsidiaries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntitySubsidiaryCountArgs} args - Arguments to filter EntitySubsidiaries to count.
     * @example
     * // Count the number of EntitySubsidiaries
     * const count = await prisma.entitySubsidiary.count({
     *   where: {
     *     // ... the filter for the EntitySubsidiaries we want to count
     *   }
     * })
    **/
    count<T extends EntitySubsidiaryCountArgs>(
      args?: Subset<T, EntitySubsidiaryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EntitySubsidiaryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EntitySubsidiary.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntitySubsidiaryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EntitySubsidiaryAggregateArgs>(args: Subset<T, EntitySubsidiaryAggregateArgs>): Prisma.PrismaPromise<GetEntitySubsidiaryAggregateType<T>>

    /**
     * Group by EntitySubsidiary.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntitySubsidiaryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EntitySubsidiaryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EntitySubsidiaryGroupByArgs['orderBy'] }
        : { orderBy?: EntitySubsidiaryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EntitySubsidiaryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEntitySubsidiaryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EntitySubsidiary model
   */
  readonly fields: EntitySubsidiaryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EntitySubsidiary.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EntitySubsidiaryClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    Announcement<T extends EntitySubsidiary$AnnouncementArgs<ExtArgs> = {}>(args?: Subset<T, EntitySubsidiary$AnnouncementArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, 'findMany'> | Null>;

    EntityDirector<T extends EntitySubsidiary$EntityDirectorArgs<ExtArgs> = {}>(args?: Subset<T, EntitySubsidiary$EntityDirectorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EntityDirectorPayload<ExtArgs>, T, 'findMany'> | Null>;

    entity<T extends EntityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EntityDefaultArgs<ExtArgs>>): Prisma__EntityClient<$Result.GetResult<Prisma.$EntityPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    SocialAssistant<T extends EntitySubsidiary$SocialAssistantArgs<ExtArgs> = {}>(args?: Subset<T, EntitySubsidiary$SocialAssistantArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SocialAssistantPayload<ExtArgs>, T, 'findMany'> | Null>;

    EducationLevel<T extends EntitySubsidiary$EducationLevelArgs<ExtArgs> = {}>(args?: Subset<T, EntitySubsidiary$EducationLevelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EducationLevelPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the EntitySubsidiary model
   */ 
  interface EntitySubsidiaryFieldRefs {
    readonly id: FieldRef<"EntitySubsidiary", 'String'>
    readonly CNPJ: FieldRef<"EntitySubsidiary", 'String'>
    readonly name: FieldRef<"EntitySubsidiary", 'String'>
    readonly socialReason: FieldRef<"EntitySubsidiary", 'String'>
    readonly CEP: FieldRef<"EntitySubsidiary", 'String'>
    readonly address: FieldRef<"EntitySubsidiary", 'String'>
    readonly addressNumber: FieldRef<"EntitySubsidiary", 'Int'>
    readonly city: FieldRef<"EntitySubsidiary", 'String'>
    readonly neighborhood: FieldRef<"EntitySubsidiary", 'String'>
    readonly UF: FieldRef<"EntitySubsidiary", 'COUNTRY'>
    readonly educationalInstitutionCode: FieldRef<"EntitySubsidiary", 'String'>
    readonly entity_id: FieldRef<"EntitySubsidiary", 'String'>
    readonly user_id: FieldRef<"EntitySubsidiary", 'String'>
  }
    

  // Custom InputTypes

  /**
   * EntitySubsidiary findUnique
   */
  export type EntitySubsidiaryFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntitySubsidiary
     */
    select?: EntitySubsidiarySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntitySubsidiaryInclude<ExtArgs> | null
    /**
     * Filter, which EntitySubsidiary to fetch.
     */
    where: EntitySubsidiaryWhereUniqueInput
  }


  /**
   * EntitySubsidiary findUniqueOrThrow
   */
  export type EntitySubsidiaryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntitySubsidiary
     */
    select?: EntitySubsidiarySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntitySubsidiaryInclude<ExtArgs> | null
    /**
     * Filter, which EntitySubsidiary to fetch.
     */
    where: EntitySubsidiaryWhereUniqueInput
  }


  /**
   * EntitySubsidiary findFirst
   */
  export type EntitySubsidiaryFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntitySubsidiary
     */
    select?: EntitySubsidiarySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntitySubsidiaryInclude<ExtArgs> | null
    /**
     * Filter, which EntitySubsidiary to fetch.
     */
    where?: EntitySubsidiaryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EntitySubsidiaries to fetch.
     */
    orderBy?: EntitySubsidiaryOrderByWithRelationInput | EntitySubsidiaryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EntitySubsidiaries.
     */
    cursor?: EntitySubsidiaryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EntitySubsidiaries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EntitySubsidiaries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EntitySubsidiaries.
     */
    distinct?: EntitySubsidiaryScalarFieldEnum | EntitySubsidiaryScalarFieldEnum[]
  }


  /**
   * EntitySubsidiary findFirstOrThrow
   */
  export type EntitySubsidiaryFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntitySubsidiary
     */
    select?: EntitySubsidiarySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntitySubsidiaryInclude<ExtArgs> | null
    /**
     * Filter, which EntitySubsidiary to fetch.
     */
    where?: EntitySubsidiaryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EntitySubsidiaries to fetch.
     */
    orderBy?: EntitySubsidiaryOrderByWithRelationInput | EntitySubsidiaryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EntitySubsidiaries.
     */
    cursor?: EntitySubsidiaryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EntitySubsidiaries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EntitySubsidiaries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EntitySubsidiaries.
     */
    distinct?: EntitySubsidiaryScalarFieldEnum | EntitySubsidiaryScalarFieldEnum[]
  }


  /**
   * EntitySubsidiary findMany
   */
  export type EntitySubsidiaryFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntitySubsidiary
     */
    select?: EntitySubsidiarySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntitySubsidiaryInclude<ExtArgs> | null
    /**
     * Filter, which EntitySubsidiaries to fetch.
     */
    where?: EntitySubsidiaryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EntitySubsidiaries to fetch.
     */
    orderBy?: EntitySubsidiaryOrderByWithRelationInput | EntitySubsidiaryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EntitySubsidiaries.
     */
    cursor?: EntitySubsidiaryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EntitySubsidiaries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EntitySubsidiaries.
     */
    skip?: number
    distinct?: EntitySubsidiaryScalarFieldEnum | EntitySubsidiaryScalarFieldEnum[]
  }


  /**
   * EntitySubsidiary create
   */
  export type EntitySubsidiaryCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntitySubsidiary
     */
    select?: EntitySubsidiarySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntitySubsidiaryInclude<ExtArgs> | null
    /**
     * The data needed to create a EntitySubsidiary.
     */
    data: XOR<EntitySubsidiaryCreateInput, EntitySubsidiaryUncheckedCreateInput>
  }


  /**
   * EntitySubsidiary createMany
   */
  export type EntitySubsidiaryCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EntitySubsidiaries.
     */
    data: EntitySubsidiaryCreateManyInput | EntitySubsidiaryCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * EntitySubsidiary update
   */
  export type EntitySubsidiaryUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntitySubsidiary
     */
    select?: EntitySubsidiarySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntitySubsidiaryInclude<ExtArgs> | null
    /**
     * The data needed to update a EntitySubsidiary.
     */
    data: XOR<EntitySubsidiaryUpdateInput, EntitySubsidiaryUncheckedUpdateInput>
    /**
     * Choose, which EntitySubsidiary to update.
     */
    where: EntitySubsidiaryWhereUniqueInput
  }


  /**
   * EntitySubsidiary updateMany
   */
  export type EntitySubsidiaryUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EntitySubsidiaries.
     */
    data: XOR<EntitySubsidiaryUpdateManyMutationInput, EntitySubsidiaryUncheckedUpdateManyInput>
    /**
     * Filter which EntitySubsidiaries to update
     */
    where?: EntitySubsidiaryWhereInput
  }


  /**
   * EntitySubsidiary upsert
   */
  export type EntitySubsidiaryUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntitySubsidiary
     */
    select?: EntitySubsidiarySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntitySubsidiaryInclude<ExtArgs> | null
    /**
     * The filter to search for the EntitySubsidiary to update in case it exists.
     */
    where: EntitySubsidiaryWhereUniqueInput
    /**
     * In case the EntitySubsidiary found by the `where` argument doesn't exist, create a new EntitySubsidiary with this data.
     */
    create: XOR<EntitySubsidiaryCreateInput, EntitySubsidiaryUncheckedCreateInput>
    /**
     * In case the EntitySubsidiary was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EntitySubsidiaryUpdateInput, EntitySubsidiaryUncheckedUpdateInput>
  }


  /**
   * EntitySubsidiary delete
   */
  export type EntitySubsidiaryDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntitySubsidiary
     */
    select?: EntitySubsidiarySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntitySubsidiaryInclude<ExtArgs> | null
    /**
     * Filter which EntitySubsidiary to delete.
     */
    where: EntitySubsidiaryWhereUniqueInput
  }


  /**
   * EntitySubsidiary deleteMany
   */
  export type EntitySubsidiaryDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which EntitySubsidiaries to delete
     */
    where?: EntitySubsidiaryWhereInput
  }


  /**
   * EntitySubsidiary.Announcement
   */
  export type EntitySubsidiary$AnnouncementArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Announcement
     */
    select?: AnnouncementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AnnouncementInclude<ExtArgs> | null
    where?: AnnouncementWhereInput
    orderBy?: AnnouncementOrderByWithRelationInput | AnnouncementOrderByWithRelationInput[]
    cursor?: AnnouncementWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AnnouncementScalarFieldEnum | AnnouncementScalarFieldEnum[]
  }


  /**
   * EntitySubsidiary.EntityDirector
   */
  export type EntitySubsidiary$EntityDirectorArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntityDirector
     */
    select?: EntityDirectorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntityDirectorInclude<ExtArgs> | null
    where?: EntityDirectorWhereInput
    orderBy?: EntityDirectorOrderByWithRelationInput | EntityDirectorOrderByWithRelationInput[]
    cursor?: EntityDirectorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EntityDirectorScalarFieldEnum | EntityDirectorScalarFieldEnum[]
  }


  /**
   * EntitySubsidiary.SocialAssistant
   */
  export type EntitySubsidiary$SocialAssistantArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocialAssistant
     */
    select?: SocialAssistantSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SocialAssistantInclude<ExtArgs> | null
    where?: SocialAssistantWhereInput
    orderBy?: SocialAssistantOrderByWithRelationInput | SocialAssistantOrderByWithRelationInput[]
    cursor?: SocialAssistantWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SocialAssistantScalarFieldEnum | SocialAssistantScalarFieldEnum[]
  }


  /**
   * EntitySubsidiary.EducationLevel
   */
  export type EntitySubsidiary$EducationLevelArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EducationLevel
     */
    select?: EducationLevelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EducationLevelInclude<ExtArgs> | null
    where?: EducationLevelWhereInput
    orderBy?: EducationLevelOrderByWithRelationInput | EducationLevelOrderByWithRelationInput[]
    cursor?: EducationLevelWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EducationLevelScalarFieldEnum | EducationLevelScalarFieldEnum[]
  }


  /**
   * EntitySubsidiary without action
   */
  export type EntitySubsidiaryDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntitySubsidiary
     */
    select?: EntitySubsidiarySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntitySubsidiaryInclude<ExtArgs> | null
  }



  /**
   * Model EntityDirector
   */

  export type AggregateEntityDirector = {
    _count: EntityDirectorCountAggregateOutputType | null
    _min: EntityDirectorMinAggregateOutputType | null
    _max: EntityDirectorMaxAggregateOutputType | null
  }

  export type EntityDirectorMinAggregateOutputType = {
    id: string | null
    name: string | null
    CPF: string | null
    phone: string | null
    user_id: string | null
    entity_subsidiary_id: string | null
    entity_id: string | null
  }

  export type EntityDirectorMaxAggregateOutputType = {
    id: string | null
    name: string | null
    CPF: string | null
    phone: string | null
    user_id: string | null
    entity_subsidiary_id: string | null
    entity_id: string | null
  }

  export type EntityDirectorCountAggregateOutputType = {
    id: number
    name: number
    CPF: number
    phone: number
    user_id: number
    entity_subsidiary_id: number
    entity_id: number
    _all: number
  }


  export type EntityDirectorMinAggregateInputType = {
    id?: true
    name?: true
    CPF?: true
    phone?: true
    user_id?: true
    entity_subsidiary_id?: true
    entity_id?: true
  }

  export type EntityDirectorMaxAggregateInputType = {
    id?: true
    name?: true
    CPF?: true
    phone?: true
    user_id?: true
    entity_subsidiary_id?: true
    entity_id?: true
  }

  export type EntityDirectorCountAggregateInputType = {
    id?: true
    name?: true
    CPF?: true
    phone?: true
    user_id?: true
    entity_subsidiary_id?: true
    entity_id?: true
    _all?: true
  }

  export type EntityDirectorAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which EntityDirector to aggregate.
     */
    where?: EntityDirectorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EntityDirectors to fetch.
     */
    orderBy?: EntityDirectorOrderByWithRelationInput | EntityDirectorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EntityDirectorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EntityDirectors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EntityDirectors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EntityDirectors
    **/
    _count?: true | EntityDirectorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EntityDirectorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EntityDirectorMaxAggregateInputType
  }

  export type GetEntityDirectorAggregateType<T extends EntityDirectorAggregateArgs> = {
        [P in keyof T & keyof AggregateEntityDirector]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEntityDirector[P]>
      : GetScalarType<T[P], AggregateEntityDirector[P]>
  }




  export type EntityDirectorGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: EntityDirectorWhereInput
    orderBy?: EntityDirectorOrderByWithAggregationInput | EntityDirectorOrderByWithAggregationInput[]
    by: EntityDirectorScalarFieldEnum[] | EntityDirectorScalarFieldEnum
    having?: EntityDirectorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EntityDirectorCountAggregateInputType | true
    _min?: EntityDirectorMinAggregateInputType
    _max?: EntityDirectorMaxAggregateInputType
  }

  export type EntityDirectorGroupByOutputType = {
    id: string
    name: string
    CPF: string
    phone: string
    user_id: string
    entity_subsidiary_id: string | null
    entity_id: string | null
    _count: EntityDirectorCountAggregateOutputType | null
    _min: EntityDirectorMinAggregateOutputType | null
    _max: EntityDirectorMaxAggregateOutputType | null
  }

  type GetEntityDirectorGroupByPayload<T extends EntityDirectorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EntityDirectorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EntityDirectorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EntityDirectorGroupByOutputType[P]>
            : GetScalarType<T[P], EntityDirectorGroupByOutputType[P]>
        }
      >
    >


  export type EntityDirectorSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    CPF?: boolean
    phone?: boolean
    user_id?: boolean
    entity_subsidiary_id?: boolean
    entity_id?: boolean
    entity?: boolean | EntityDirector$entityArgs<ExtArgs>
    entity_subsidiary?: boolean | EntityDirector$entity_subsidiaryArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["entityDirector"]>

  export type EntityDirectorSelectScalar = {
    id?: boolean
    name?: boolean
    CPF?: boolean
    phone?: boolean
    user_id?: boolean
    entity_subsidiary_id?: boolean
    entity_id?: boolean
  }

  export type EntityDirectorInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    entity?: boolean | EntityDirector$entityArgs<ExtArgs>
    entity_subsidiary?: boolean | EntityDirector$entity_subsidiaryArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }


  export type $EntityDirectorPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "EntityDirector"
    objects: {
      entity: Prisma.$EntityPayload<ExtArgs> | null
      entity_subsidiary: Prisma.$EntitySubsidiaryPayload<ExtArgs> | null
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetResult<{
      id: string
      name: string
      CPF: string
      phone: string
      user_id: string
      entity_subsidiary_id: string | null
      entity_id: string | null
    }, ExtArgs["result"]["entityDirector"]>
    composites: {}
  }


  type EntityDirectorGetPayload<S extends boolean | null | undefined | EntityDirectorDefaultArgs> = $Result.GetResult<Prisma.$EntityDirectorPayload, S>

  type EntityDirectorCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<EntityDirectorFindManyArgs, 'select' | 'include'> & {
      select?: EntityDirectorCountAggregateInputType | true
    }

  export interface EntityDirectorDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EntityDirector'], meta: { name: 'EntityDirector' } }
    /**
     * Find zero or one EntityDirector that matches the filter.
     * @param {EntityDirectorFindUniqueArgs} args - Arguments to find a EntityDirector
     * @example
     * // Get one EntityDirector
     * const entityDirector = await prisma.entityDirector.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends EntityDirectorFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, EntityDirectorFindUniqueArgs<ExtArgs>>
    ): Prisma__EntityDirectorClient<$Result.GetResult<Prisma.$EntityDirectorPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one EntityDirector that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {EntityDirectorFindUniqueOrThrowArgs} args - Arguments to find a EntityDirector
     * @example
     * // Get one EntityDirector
     * const entityDirector = await prisma.entityDirector.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends EntityDirectorFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, EntityDirectorFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__EntityDirectorClient<$Result.GetResult<Prisma.$EntityDirectorPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first EntityDirector that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntityDirectorFindFirstArgs} args - Arguments to find a EntityDirector
     * @example
     * // Get one EntityDirector
     * const entityDirector = await prisma.entityDirector.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends EntityDirectorFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, EntityDirectorFindFirstArgs<ExtArgs>>
    ): Prisma__EntityDirectorClient<$Result.GetResult<Prisma.$EntityDirectorPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first EntityDirector that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntityDirectorFindFirstOrThrowArgs} args - Arguments to find a EntityDirector
     * @example
     * // Get one EntityDirector
     * const entityDirector = await prisma.entityDirector.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends EntityDirectorFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, EntityDirectorFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__EntityDirectorClient<$Result.GetResult<Prisma.$EntityDirectorPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more EntityDirectors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntityDirectorFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EntityDirectors
     * const entityDirectors = await prisma.entityDirector.findMany()
     * 
     * // Get first 10 EntityDirectors
     * const entityDirectors = await prisma.entityDirector.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const entityDirectorWithIdOnly = await prisma.entityDirector.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends EntityDirectorFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, EntityDirectorFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EntityDirectorPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a EntityDirector.
     * @param {EntityDirectorCreateArgs} args - Arguments to create a EntityDirector.
     * @example
     * // Create one EntityDirector
     * const EntityDirector = await prisma.entityDirector.create({
     *   data: {
     *     // ... data to create a EntityDirector
     *   }
     * })
     * 
    **/
    create<T extends EntityDirectorCreateArgs<ExtArgs>>(
      args: SelectSubset<T, EntityDirectorCreateArgs<ExtArgs>>
    ): Prisma__EntityDirectorClient<$Result.GetResult<Prisma.$EntityDirectorPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many EntityDirectors.
     *     @param {EntityDirectorCreateManyArgs} args - Arguments to create many EntityDirectors.
     *     @example
     *     // Create many EntityDirectors
     *     const entityDirector = await prisma.entityDirector.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends EntityDirectorCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, EntityDirectorCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a EntityDirector.
     * @param {EntityDirectorDeleteArgs} args - Arguments to delete one EntityDirector.
     * @example
     * // Delete one EntityDirector
     * const EntityDirector = await prisma.entityDirector.delete({
     *   where: {
     *     // ... filter to delete one EntityDirector
     *   }
     * })
     * 
    **/
    delete<T extends EntityDirectorDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, EntityDirectorDeleteArgs<ExtArgs>>
    ): Prisma__EntityDirectorClient<$Result.GetResult<Prisma.$EntityDirectorPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one EntityDirector.
     * @param {EntityDirectorUpdateArgs} args - Arguments to update one EntityDirector.
     * @example
     * // Update one EntityDirector
     * const entityDirector = await prisma.entityDirector.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends EntityDirectorUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, EntityDirectorUpdateArgs<ExtArgs>>
    ): Prisma__EntityDirectorClient<$Result.GetResult<Prisma.$EntityDirectorPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more EntityDirectors.
     * @param {EntityDirectorDeleteManyArgs} args - Arguments to filter EntityDirectors to delete.
     * @example
     * // Delete a few EntityDirectors
     * const { count } = await prisma.entityDirector.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends EntityDirectorDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, EntityDirectorDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EntityDirectors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntityDirectorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EntityDirectors
     * const entityDirector = await prisma.entityDirector.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends EntityDirectorUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, EntityDirectorUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one EntityDirector.
     * @param {EntityDirectorUpsertArgs} args - Arguments to update or create a EntityDirector.
     * @example
     * // Update or create a EntityDirector
     * const entityDirector = await prisma.entityDirector.upsert({
     *   create: {
     *     // ... data to create a EntityDirector
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EntityDirector we want to update
     *   }
     * })
    **/
    upsert<T extends EntityDirectorUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, EntityDirectorUpsertArgs<ExtArgs>>
    ): Prisma__EntityDirectorClient<$Result.GetResult<Prisma.$EntityDirectorPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of EntityDirectors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntityDirectorCountArgs} args - Arguments to filter EntityDirectors to count.
     * @example
     * // Count the number of EntityDirectors
     * const count = await prisma.entityDirector.count({
     *   where: {
     *     // ... the filter for the EntityDirectors we want to count
     *   }
     * })
    **/
    count<T extends EntityDirectorCountArgs>(
      args?: Subset<T, EntityDirectorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EntityDirectorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EntityDirector.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntityDirectorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EntityDirectorAggregateArgs>(args: Subset<T, EntityDirectorAggregateArgs>): Prisma.PrismaPromise<GetEntityDirectorAggregateType<T>>

    /**
     * Group by EntityDirector.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntityDirectorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EntityDirectorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EntityDirectorGroupByArgs['orderBy'] }
        : { orderBy?: EntityDirectorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EntityDirectorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEntityDirectorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EntityDirector model
   */
  readonly fields: EntityDirectorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EntityDirector.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EntityDirectorClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    entity<T extends EntityDirector$entityArgs<ExtArgs> = {}>(args?: Subset<T, EntityDirector$entityArgs<ExtArgs>>): Prisma__EntityClient<$Result.GetResult<Prisma.$EntityPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    entity_subsidiary<T extends EntityDirector$entity_subsidiaryArgs<ExtArgs> = {}>(args?: Subset<T, EntityDirector$entity_subsidiaryArgs<ExtArgs>>): Prisma__EntitySubsidiaryClient<$Result.GetResult<Prisma.$EntitySubsidiaryPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the EntityDirector model
   */ 
  interface EntityDirectorFieldRefs {
    readonly id: FieldRef<"EntityDirector", 'String'>
    readonly name: FieldRef<"EntityDirector", 'String'>
    readonly CPF: FieldRef<"EntityDirector", 'String'>
    readonly phone: FieldRef<"EntityDirector", 'String'>
    readonly user_id: FieldRef<"EntityDirector", 'String'>
    readonly entity_subsidiary_id: FieldRef<"EntityDirector", 'String'>
    readonly entity_id: FieldRef<"EntityDirector", 'String'>
  }
    

  // Custom InputTypes

  /**
   * EntityDirector findUnique
   */
  export type EntityDirectorFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntityDirector
     */
    select?: EntityDirectorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntityDirectorInclude<ExtArgs> | null
    /**
     * Filter, which EntityDirector to fetch.
     */
    where: EntityDirectorWhereUniqueInput
  }


  /**
   * EntityDirector findUniqueOrThrow
   */
  export type EntityDirectorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntityDirector
     */
    select?: EntityDirectorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntityDirectorInclude<ExtArgs> | null
    /**
     * Filter, which EntityDirector to fetch.
     */
    where: EntityDirectorWhereUniqueInput
  }


  /**
   * EntityDirector findFirst
   */
  export type EntityDirectorFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntityDirector
     */
    select?: EntityDirectorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntityDirectorInclude<ExtArgs> | null
    /**
     * Filter, which EntityDirector to fetch.
     */
    where?: EntityDirectorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EntityDirectors to fetch.
     */
    orderBy?: EntityDirectorOrderByWithRelationInput | EntityDirectorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EntityDirectors.
     */
    cursor?: EntityDirectorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EntityDirectors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EntityDirectors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EntityDirectors.
     */
    distinct?: EntityDirectorScalarFieldEnum | EntityDirectorScalarFieldEnum[]
  }


  /**
   * EntityDirector findFirstOrThrow
   */
  export type EntityDirectorFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntityDirector
     */
    select?: EntityDirectorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntityDirectorInclude<ExtArgs> | null
    /**
     * Filter, which EntityDirector to fetch.
     */
    where?: EntityDirectorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EntityDirectors to fetch.
     */
    orderBy?: EntityDirectorOrderByWithRelationInput | EntityDirectorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EntityDirectors.
     */
    cursor?: EntityDirectorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EntityDirectors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EntityDirectors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EntityDirectors.
     */
    distinct?: EntityDirectorScalarFieldEnum | EntityDirectorScalarFieldEnum[]
  }


  /**
   * EntityDirector findMany
   */
  export type EntityDirectorFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntityDirector
     */
    select?: EntityDirectorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntityDirectorInclude<ExtArgs> | null
    /**
     * Filter, which EntityDirectors to fetch.
     */
    where?: EntityDirectorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EntityDirectors to fetch.
     */
    orderBy?: EntityDirectorOrderByWithRelationInput | EntityDirectorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EntityDirectors.
     */
    cursor?: EntityDirectorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EntityDirectors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EntityDirectors.
     */
    skip?: number
    distinct?: EntityDirectorScalarFieldEnum | EntityDirectorScalarFieldEnum[]
  }


  /**
   * EntityDirector create
   */
  export type EntityDirectorCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntityDirector
     */
    select?: EntityDirectorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntityDirectorInclude<ExtArgs> | null
    /**
     * The data needed to create a EntityDirector.
     */
    data: XOR<EntityDirectorCreateInput, EntityDirectorUncheckedCreateInput>
  }


  /**
   * EntityDirector createMany
   */
  export type EntityDirectorCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EntityDirectors.
     */
    data: EntityDirectorCreateManyInput | EntityDirectorCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * EntityDirector update
   */
  export type EntityDirectorUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntityDirector
     */
    select?: EntityDirectorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntityDirectorInclude<ExtArgs> | null
    /**
     * The data needed to update a EntityDirector.
     */
    data: XOR<EntityDirectorUpdateInput, EntityDirectorUncheckedUpdateInput>
    /**
     * Choose, which EntityDirector to update.
     */
    where: EntityDirectorWhereUniqueInput
  }


  /**
   * EntityDirector updateMany
   */
  export type EntityDirectorUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EntityDirectors.
     */
    data: XOR<EntityDirectorUpdateManyMutationInput, EntityDirectorUncheckedUpdateManyInput>
    /**
     * Filter which EntityDirectors to update
     */
    where?: EntityDirectorWhereInput
  }


  /**
   * EntityDirector upsert
   */
  export type EntityDirectorUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntityDirector
     */
    select?: EntityDirectorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntityDirectorInclude<ExtArgs> | null
    /**
     * The filter to search for the EntityDirector to update in case it exists.
     */
    where: EntityDirectorWhereUniqueInput
    /**
     * In case the EntityDirector found by the `where` argument doesn't exist, create a new EntityDirector with this data.
     */
    create: XOR<EntityDirectorCreateInput, EntityDirectorUncheckedCreateInput>
    /**
     * In case the EntityDirector was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EntityDirectorUpdateInput, EntityDirectorUncheckedUpdateInput>
  }


  /**
   * EntityDirector delete
   */
  export type EntityDirectorDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntityDirector
     */
    select?: EntityDirectorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntityDirectorInclude<ExtArgs> | null
    /**
     * Filter which EntityDirector to delete.
     */
    where: EntityDirectorWhereUniqueInput
  }


  /**
   * EntityDirector deleteMany
   */
  export type EntityDirectorDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which EntityDirectors to delete
     */
    where?: EntityDirectorWhereInput
  }


  /**
   * EntityDirector.entity
   */
  export type EntityDirector$entityArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Entity
     */
    select?: EntitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntityInclude<ExtArgs> | null
    where?: EntityWhereInput
  }


  /**
   * EntityDirector.entity_subsidiary
   */
  export type EntityDirector$entity_subsidiaryArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntitySubsidiary
     */
    select?: EntitySubsidiarySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntitySubsidiaryInclude<ExtArgs> | null
    where?: EntitySubsidiaryWhereInput
  }


  /**
   * EntityDirector without action
   */
  export type EntityDirectorDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntityDirector
     */
    select?: EntityDirectorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntityDirectorInclude<ExtArgs> | null
  }



  /**
   * Model IdentityDetails
   */

  export type AggregateIdentityDetails = {
    _count: IdentityDetailsCountAggregateOutputType | null
    _min: IdentityDetailsMinAggregateOutputType | null
    _max: IdentityDetailsMaxAggregateOutputType | null
  }

  export type IdentityDetailsMinAggregateOutputType = {
    id: string | null
    fullName: string | null
    socialName: string | null
    main_id: string | null
    birthDate: Date | null
    gender: $Enums.GENDER | null
    nationality: string | null
    natural_city: string | null
    natural_UF: $Enums.COUNTRY | null
    CPF: string | null
    RG: string | null
    rgIssuingAuthority: string | null
    rgIssuingState: string | null
    documentType: $Enums.DOCUMENT_TYPE | null
    CadUnico: boolean | null
    hasSevereDeseaseOrUsesMedication: boolean | null
    hasBankAccount: boolean | null
    documentNumber: string | null
    documentValidity: Date | null
    maritalStatus: $Enums.MARITAL_STATUS | null
    skinColor: $Enums.SkinColor | null
    religion: $Enums.RELIGION | null
    educationLevel: $Enums.SCHOLARSHIP | null
    specialNeeds: boolean | null
    address: string | null
    addressNumber: string | null
    complement: string | null
    neighborhood: string | null
    city: string | null
    UF: $Enums.COUNTRY | null
    CEP: string | null
    specialNeedsDescription: string | null
    specialNeedsType: string | null
    hasMedicalReport: boolean | null
    email: string | null
    landlinePhone: string | null
    workPhone: string | null
    contactNameForMessage: string | null
    profession: string | null
    enrolledGovernmentProgram: string | null
    NIS: string | null
    livesAlone: boolean | null
    intendsToGetScholarship: boolean | null
    attendedPublicHighSchool: boolean | null
    benefitedFromCebasScholarship_basic: boolean | null
    scholarshipType_basic: $Enums.ScholarshipType | null
    institutionName_basic: string | null
    institutionCNPJ_basic: string | null
    benefitedFromCebasScholarship_professional: boolean | null
    lastYearBenefitedFromCebas_professional: string | null
    scholarshipType_professional: $Enums.ScholarshipType | null
    institutionName_professional: string | null
    institutionCNPJ_professional: string | null
    nameOfScholarshipCourse_professional: string | null
    candidate_id: string | null
    responsible_id: string | null
    application_id: string | null
  }

  export type IdentityDetailsMaxAggregateOutputType = {
    id: string | null
    fullName: string | null
    socialName: string | null
    main_id: string | null
    birthDate: Date | null
    gender: $Enums.GENDER | null
    nationality: string | null
    natural_city: string | null
    natural_UF: $Enums.COUNTRY | null
    CPF: string | null
    RG: string | null
    rgIssuingAuthority: string | null
    rgIssuingState: string | null
    documentType: $Enums.DOCUMENT_TYPE | null
    CadUnico: boolean | null
    hasSevereDeseaseOrUsesMedication: boolean | null
    hasBankAccount: boolean | null
    documentNumber: string | null
    documentValidity: Date | null
    maritalStatus: $Enums.MARITAL_STATUS | null
    skinColor: $Enums.SkinColor | null
    religion: $Enums.RELIGION | null
    educationLevel: $Enums.SCHOLARSHIP | null
    specialNeeds: boolean | null
    address: string | null
    addressNumber: string | null
    complement: string | null
    neighborhood: string | null
    city: string | null
    UF: $Enums.COUNTRY | null
    CEP: string | null
    specialNeedsDescription: string | null
    specialNeedsType: string | null
    hasMedicalReport: boolean | null
    email: string | null
    landlinePhone: string | null
    workPhone: string | null
    contactNameForMessage: string | null
    profession: string | null
    enrolledGovernmentProgram: string | null
    NIS: string | null
    livesAlone: boolean | null
    intendsToGetScholarship: boolean | null
    attendedPublicHighSchool: boolean | null
    benefitedFromCebasScholarship_basic: boolean | null
    scholarshipType_basic: $Enums.ScholarshipType | null
    institutionName_basic: string | null
    institutionCNPJ_basic: string | null
    benefitedFromCebasScholarship_professional: boolean | null
    lastYearBenefitedFromCebas_professional: string | null
    scholarshipType_professional: $Enums.ScholarshipType | null
    institutionName_professional: string | null
    institutionCNPJ_professional: string | null
    nameOfScholarshipCourse_professional: string | null
    candidate_id: string | null
    responsible_id: string | null
    application_id: string | null
  }

  export type IdentityDetailsCountAggregateOutputType = {
    id: number
    fullName: number
    socialName: number
    main_id: number
    birthDate: number
    gender: number
    nationality: number
    natural_city: number
    natural_UF: number
    CPF: number
    RG: number
    rgIssuingAuthority: number
    rgIssuingState: number
    documentType: number
    CadUnico: number
    hasSevereDeseaseOrUsesMedication: number
    hasBankAccount: number
    documentNumber: number
    documentValidity: number
    maritalStatus: number
    skinColor: number
    religion: number
    educationLevel: number
    specialNeeds: number
    address: number
    addressNumber: number
    complement: number
    neighborhood: number
    city: number
    UF: number
    CEP: number
    specialNeedsDescription: number
    specialNeedsType: number
    hasMedicalReport: number
    email: number
    landlinePhone: number
    workPhone: number
    contactNameForMessage: number
    profession: number
    enrolledGovernmentProgram: number
    NIS: number
    incomeSource: number
    livesAlone: number
    intendsToGetScholarship: number
    attendedPublicHighSchool: number
    benefitedFromCebasScholarship_basic: number
    yearsBenefitedFromCebas_basic: number
    scholarshipType_basic: number
    institutionName_basic: number
    institutionCNPJ_basic: number
    benefitedFromCebasScholarship_professional: number
    lastYearBenefitedFromCebas_professional: number
    scholarshipType_professional: number
    institutionName_professional: number
    institutionCNPJ_professional: number
    nameOfScholarshipCourse_professional: number
    candidate_id: number
    responsible_id: number
    application_id: number
    _all: number
  }


  export type IdentityDetailsMinAggregateInputType = {
    id?: true
    fullName?: true
    socialName?: true
    main_id?: true
    birthDate?: true
    gender?: true
    nationality?: true
    natural_city?: true
    natural_UF?: true
    CPF?: true
    RG?: true
    rgIssuingAuthority?: true
    rgIssuingState?: true
    documentType?: true
    CadUnico?: true
    hasSevereDeseaseOrUsesMedication?: true
    hasBankAccount?: true
    documentNumber?: true
    documentValidity?: true
    maritalStatus?: true
    skinColor?: true
    religion?: true
    educationLevel?: true
    specialNeeds?: true
    address?: true
    addressNumber?: true
    complement?: true
    neighborhood?: true
    city?: true
    UF?: true
    CEP?: true
    specialNeedsDescription?: true
    specialNeedsType?: true
    hasMedicalReport?: true
    email?: true
    landlinePhone?: true
    workPhone?: true
    contactNameForMessage?: true
    profession?: true
    enrolledGovernmentProgram?: true
    NIS?: true
    livesAlone?: true
    intendsToGetScholarship?: true
    attendedPublicHighSchool?: true
    benefitedFromCebasScholarship_basic?: true
    scholarshipType_basic?: true
    institutionName_basic?: true
    institutionCNPJ_basic?: true
    benefitedFromCebasScholarship_professional?: true
    lastYearBenefitedFromCebas_professional?: true
    scholarshipType_professional?: true
    institutionName_professional?: true
    institutionCNPJ_professional?: true
    nameOfScholarshipCourse_professional?: true
    candidate_id?: true
    responsible_id?: true
    application_id?: true
  }

  export type IdentityDetailsMaxAggregateInputType = {
    id?: true
    fullName?: true
    socialName?: true
    main_id?: true
    birthDate?: true
    gender?: true
    nationality?: true
    natural_city?: true
    natural_UF?: true
    CPF?: true
    RG?: true
    rgIssuingAuthority?: true
    rgIssuingState?: true
    documentType?: true
    CadUnico?: true
    hasSevereDeseaseOrUsesMedication?: true
    hasBankAccount?: true
    documentNumber?: true
    documentValidity?: true
    maritalStatus?: true
    skinColor?: true
    religion?: true
    educationLevel?: true
    specialNeeds?: true
    address?: true
    addressNumber?: true
    complement?: true
    neighborhood?: true
    city?: true
    UF?: true
    CEP?: true
    specialNeedsDescription?: true
    specialNeedsType?: true
    hasMedicalReport?: true
    email?: true
    landlinePhone?: true
    workPhone?: true
    contactNameForMessage?: true
    profession?: true
    enrolledGovernmentProgram?: true
    NIS?: true
    livesAlone?: true
    intendsToGetScholarship?: true
    attendedPublicHighSchool?: true
    benefitedFromCebasScholarship_basic?: true
    scholarshipType_basic?: true
    institutionName_basic?: true
    institutionCNPJ_basic?: true
    benefitedFromCebasScholarship_professional?: true
    lastYearBenefitedFromCebas_professional?: true
    scholarshipType_professional?: true
    institutionName_professional?: true
    institutionCNPJ_professional?: true
    nameOfScholarshipCourse_professional?: true
    candidate_id?: true
    responsible_id?: true
    application_id?: true
  }

  export type IdentityDetailsCountAggregateInputType = {
    id?: true
    fullName?: true
    socialName?: true
    main_id?: true
    birthDate?: true
    gender?: true
    nationality?: true
    natural_city?: true
    natural_UF?: true
    CPF?: true
    RG?: true
    rgIssuingAuthority?: true
    rgIssuingState?: true
    documentType?: true
    CadUnico?: true
    hasSevereDeseaseOrUsesMedication?: true
    hasBankAccount?: true
    documentNumber?: true
    documentValidity?: true
    maritalStatus?: true
    skinColor?: true
    religion?: true
    educationLevel?: true
    specialNeeds?: true
    address?: true
    addressNumber?: true
    complement?: true
    neighborhood?: true
    city?: true
    UF?: true
    CEP?: true
    specialNeedsDescription?: true
    specialNeedsType?: true
    hasMedicalReport?: true
    email?: true
    landlinePhone?: true
    workPhone?: true
    contactNameForMessage?: true
    profession?: true
    enrolledGovernmentProgram?: true
    NIS?: true
    incomeSource?: true
    livesAlone?: true
    intendsToGetScholarship?: true
    attendedPublicHighSchool?: true
    benefitedFromCebasScholarship_basic?: true
    yearsBenefitedFromCebas_basic?: true
    scholarshipType_basic?: true
    institutionName_basic?: true
    institutionCNPJ_basic?: true
    benefitedFromCebasScholarship_professional?: true
    lastYearBenefitedFromCebas_professional?: true
    scholarshipType_professional?: true
    institutionName_professional?: true
    institutionCNPJ_professional?: true
    nameOfScholarshipCourse_professional?: true
    candidate_id?: true
    responsible_id?: true
    application_id?: true
    _all?: true
  }

  export type IdentityDetailsAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which IdentityDetails to aggregate.
     */
    where?: IdentityDetailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IdentityDetails to fetch.
     */
    orderBy?: IdentityDetailsOrderByWithRelationInput | IdentityDetailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: IdentityDetailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IdentityDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IdentityDetails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned IdentityDetails
    **/
    _count?: true | IdentityDetailsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: IdentityDetailsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: IdentityDetailsMaxAggregateInputType
  }

  export type GetIdentityDetailsAggregateType<T extends IdentityDetailsAggregateArgs> = {
        [P in keyof T & keyof AggregateIdentityDetails]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateIdentityDetails[P]>
      : GetScalarType<T[P], AggregateIdentityDetails[P]>
  }




  export type IdentityDetailsGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: IdentityDetailsWhereInput
    orderBy?: IdentityDetailsOrderByWithAggregationInput | IdentityDetailsOrderByWithAggregationInput[]
    by: IdentityDetailsScalarFieldEnum[] | IdentityDetailsScalarFieldEnum
    having?: IdentityDetailsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: IdentityDetailsCountAggregateInputType | true
    _min?: IdentityDetailsMinAggregateInputType
    _max?: IdentityDetailsMaxAggregateInputType
  }

  export type IdentityDetailsGroupByOutputType = {
    id: string
    fullName: string
    socialName: string | null
    main_id: string | null
    birthDate: Date
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string | null
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType: $Enums.DOCUMENT_TYPE | null
    CadUnico: boolean
    hasSevereDeseaseOrUsesMedication: boolean | null
    hasBankAccount: boolean | null
    documentNumber: string | null
    documentValidity: Date | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds: boolean | null
    address: string | null
    addressNumber: string | null
    complement: string | null
    neighborhood: string | null
    city: string | null
    UF: $Enums.COUNTRY | null
    CEP: string | null
    specialNeedsDescription: string | null
    specialNeedsType: string | null
    hasMedicalReport: boolean | null
    email: string | null
    landlinePhone: string | null
    workPhone: string | null
    contactNameForMessage: string | null
    profession: string
    enrolledGovernmentProgram: string | null
    NIS: string | null
    incomeSource: $Enums.IncomeSource[]
    livesAlone: boolean
    intendsToGetScholarship: boolean
    attendedPublicHighSchool: boolean | null
    benefitedFromCebasScholarship_basic: boolean | null
    yearsBenefitedFromCebas_basic: string[]
    scholarshipType_basic: $Enums.ScholarshipType | null
    institutionName_basic: string | null
    institutionCNPJ_basic: string | null
    benefitedFromCebasScholarship_professional: boolean | null
    lastYearBenefitedFromCebas_professional: string | null
    scholarshipType_professional: $Enums.ScholarshipType | null
    institutionName_professional: string | null
    institutionCNPJ_professional: string | null
    nameOfScholarshipCourse_professional: string | null
    candidate_id: string | null
    responsible_id: string | null
    application_id: string
    _count: IdentityDetailsCountAggregateOutputType | null
    _min: IdentityDetailsMinAggregateOutputType | null
    _max: IdentityDetailsMaxAggregateOutputType | null
  }

  type GetIdentityDetailsGroupByPayload<T extends IdentityDetailsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<IdentityDetailsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof IdentityDetailsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], IdentityDetailsGroupByOutputType[P]>
            : GetScalarType<T[P], IdentityDetailsGroupByOutputType[P]>
        }
      >
    >


  export type IdentityDetailsSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fullName?: boolean
    socialName?: boolean
    main_id?: boolean
    birthDate?: boolean
    gender?: boolean
    nationality?: boolean
    natural_city?: boolean
    natural_UF?: boolean
    CPF?: boolean
    RG?: boolean
    rgIssuingAuthority?: boolean
    rgIssuingState?: boolean
    documentType?: boolean
    CadUnico?: boolean
    hasSevereDeseaseOrUsesMedication?: boolean
    hasBankAccount?: boolean
    documentNumber?: boolean
    documentValidity?: boolean
    maritalStatus?: boolean
    skinColor?: boolean
    religion?: boolean
    educationLevel?: boolean
    specialNeeds?: boolean
    address?: boolean
    addressNumber?: boolean
    complement?: boolean
    neighborhood?: boolean
    city?: boolean
    UF?: boolean
    CEP?: boolean
    specialNeedsDescription?: boolean
    specialNeedsType?: boolean
    hasMedicalReport?: boolean
    email?: boolean
    landlinePhone?: boolean
    workPhone?: boolean
    contactNameForMessage?: boolean
    profession?: boolean
    enrolledGovernmentProgram?: boolean
    NIS?: boolean
    incomeSource?: boolean
    livesAlone?: boolean
    intendsToGetScholarship?: boolean
    attendedPublicHighSchool?: boolean
    benefitedFromCebasScholarship_basic?: boolean
    yearsBenefitedFromCebas_basic?: boolean
    scholarshipType_basic?: boolean
    institutionName_basic?: boolean
    institutionCNPJ_basic?: boolean
    benefitedFromCebasScholarship_professional?: boolean
    lastYearBenefitedFromCebas_professional?: boolean
    scholarshipType_professional?: boolean
    institutionName_professional?: boolean
    institutionCNPJ_professional?: boolean
    nameOfScholarshipCourse_professional?: boolean
    candidate_id?: boolean
    responsible_id?: boolean
    application_id?: boolean
    candidate?: boolean | IdentityDetails$candidateArgs<ExtArgs>
    responsible?: boolean | IdentityDetails$responsibleArgs<ExtArgs>
  }, ExtArgs["result"]["identityDetails"]>

  export type IdentityDetailsSelectScalar = {
    id?: boolean
    fullName?: boolean
    socialName?: boolean
    main_id?: boolean
    birthDate?: boolean
    gender?: boolean
    nationality?: boolean
    natural_city?: boolean
    natural_UF?: boolean
    CPF?: boolean
    RG?: boolean
    rgIssuingAuthority?: boolean
    rgIssuingState?: boolean
    documentType?: boolean
    CadUnico?: boolean
    hasSevereDeseaseOrUsesMedication?: boolean
    hasBankAccount?: boolean
    documentNumber?: boolean
    documentValidity?: boolean
    maritalStatus?: boolean
    skinColor?: boolean
    religion?: boolean
    educationLevel?: boolean
    specialNeeds?: boolean
    address?: boolean
    addressNumber?: boolean
    complement?: boolean
    neighborhood?: boolean
    city?: boolean
    UF?: boolean
    CEP?: boolean
    specialNeedsDescription?: boolean
    specialNeedsType?: boolean
    hasMedicalReport?: boolean
    email?: boolean
    landlinePhone?: boolean
    workPhone?: boolean
    contactNameForMessage?: boolean
    profession?: boolean
    enrolledGovernmentProgram?: boolean
    NIS?: boolean
    incomeSource?: boolean
    livesAlone?: boolean
    intendsToGetScholarship?: boolean
    attendedPublicHighSchool?: boolean
    benefitedFromCebasScholarship_basic?: boolean
    yearsBenefitedFromCebas_basic?: boolean
    scholarshipType_basic?: boolean
    institutionName_basic?: boolean
    institutionCNPJ_basic?: boolean
    benefitedFromCebasScholarship_professional?: boolean
    lastYearBenefitedFromCebas_professional?: boolean
    scholarshipType_professional?: boolean
    institutionName_professional?: boolean
    institutionCNPJ_professional?: boolean
    nameOfScholarshipCourse_professional?: boolean
    candidate_id?: boolean
    responsible_id?: boolean
    application_id?: boolean
  }

  export type IdentityDetailsInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    candidate?: boolean | IdentityDetails$candidateArgs<ExtArgs>
    responsible?: boolean | IdentityDetails$responsibleArgs<ExtArgs>
  }


  export type $IdentityDetailsPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "IdentityDetails"
    objects: {
      candidate: Prisma.$CandidatePayload<ExtArgs> | null
      responsible: Prisma.$LegalResponsiblePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetResult<{
      id: string
      fullName: string
      socialName: string | null
      main_id: string | null
      birthDate: Date
      gender: $Enums.GENDER
      nationality: string
      natural_city: string
      natural_UF: $Enums.COUNTRY
      CPF: string | null
      RG: string
      rgIssuingAuthority: string
      rgIssuingState: string
      documentType: $Enums.DOCUMENT_TYPE | null
      CadUnico: boolean
      hasSevereDeseaseOrUsesMedication: boolean | null
      hasBankAccount: boolean | null
      documentNumber: string | null
      documentValidity: Date | null
      maritalStatus: $Enums.MARITAL_STATUS
      skinColor: $Enums.SkinColor
      religion: $Enums.RELIGION
      educationLevel: $Enums.SCHOLARSHIP
      specialNeeds: boolean | null
      address: string | null
      addressNumber: string | null
      complement: string | null
      neighborhood: string | null
      city: string | null
      UF: $Enums.COUNTRY | null
      CEP: string | null
      specialNeedsDescription: string | null
      specialNeedsType: string | null
      hasMedicalReport: boolean | null
      email: string | null
      landlinePhone: string | null
      workPhone: string | null
      contactNameForMessage: string | null
      profession: string
      enrolledGovernmentProgram: string | null
      NIS: string | null
      incomeSource: $Enums.IncomeSource[]
      livesAlone: boolean
      intendsToGetScholarship: boolean
      attendedPublicHighSchool: boolean | null
      benefitedFromCebasScholarship_basic: boolean | null
      yearsBenefitedFromCebas_basic: string[]
      scholarshipType_basic: $Enums.ScholarshipType | null
      institutionName_basic: string | null
      institutionCNPJ_basic: string | null
      benefitedFromCebasScholarship_professional: boolean | null
      lastYearBenefitedFromCebas_professional: string | null
      scholarshipType_professional: $Enums.ScholarshipType | null
      institutionName_professional: string | null
      institutionCNPJ_professional: string | null
      nameOfScholarshipCourse_professional: string | null
      candidate_id: string | null
      responsible_id: string | null
      application_id: string
    }, ExtArgs["result"]["identityDetails"]>
    composites: {}
  }


  type IdentityDetailsGetPayload<S extends boolean | null | undefined | IdentityDetailsDefaultArgs> = $Result.GetResult<Prisma.$IdentityDetailsPayload, S>

  type IdentityDetailsCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<IdentityDetailsFindManyArgs, 'select' | 'include'> & {
      select?: IdentityDetailsCountAggregateInputType | true
    }

  export interface IdentityDetailsDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['IdentityDetails'], meta: { name: 'IdentityDetails' } }
    /**
     * Find zero or one IdentityDetails that matches the filter.
     * @param {IdentityDetailsFindUniqueArgs} args - Arguments to find a IdentityDetails
     * @example
     * // Get one IdentityDetails
     * const identityDetails = await prisma.identityDetails.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends IdentityDetailsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, IdentityDetailsFindUniqueArgs<ExtArgs>>
    ): Prisma__IdentityDetailsClient<$Result.GetResult<Prisma.$IdentityDetailsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one IdentityDetails that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {IdentityDetailsFindUniqueOrThrowArgs} args - Arguments to find a IdentityDetails
     * @example
     * // Get one IdentityDetails
     * const identityDetails = await prisma.identityDetails.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends IdentityDetailsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, IdentityDetailsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__IdentityDetailsClient<$Result.GetResult<Prisma.$IdentityDetailsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first IdentityDetails that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdentityDetailsFindFirstArgs} args - Arguments to find a IdentityDetails
     * @example
     * // Get one IdentityDetails
     * const identityDetails = await prisma.identityDetails.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends IdentityDetailsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, IdentityDetailsFindFirstArgs<ExtArgs>>
    ): Prisma__IdentityDetailsClient<$Result.GetResult<Prisma.$IdentityDetailsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first IdentityDetails that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdentityDetailsFindFirstOrThrowArgs} args - Arguments to find a IdentityDetails
     * @example
     * // Get one IdentityDetails
     * const identityDetails = await prisma.identityDetails.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends IdentityDetailsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, IdentityDetailsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__IdentityDetailsClient<$Result.GetResult<Prisma.$IdentityDetailsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more IdentityDetails that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdentityDetailsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all IdentityDetails
     * const identityDetails = await prisma.identityDetails.findMany()
     * 
     * // Get first 10 IdentityDetails
     * const identityDetails = await prisma.identityDetails.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const identityDetailsWithIdOnly = await prisma.identityDetails.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends IdentityDetailsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, IdentityDetailsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IdentityDetailsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a IdentityDetails.
     * @param {IdentityDetailsCreateArgs} args - Arguments to create a IdentityDetails.
     * @example
     * // Create one IdentityDetails
     * const IdentityDetails = await prisma.identityDetails.create({
     *   data: {
     *     // ... data to create a IdentityDetails
     *   }
     * })
     * 
    **/
    create<T extends IdentityDetailsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, IdentityDetailsCreateArgs<ExtArgs>>
    ): Prisma__IdentityDetailsClient<$Result.GetResult<Prisma.$IdentityDetailsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many IdentityDetails.
     *     @param {IdentityDetailsCreateManyArgs} args - Arguments to create many IdentityDetails.
     *     @example
     *     // Create many IdentityDetails
     *     const identityDetails = await prisma.identityDetails.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends IdentityDetailsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, IdentityDetailsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a IdentityDetails.
     * @param {IdentityDetailsDeleteArgs} args - Arguments to delete one IdentityDetails.
     * @example
     * // Delete one IdentityDetails
     * const IdentityDetails = await prisma.identityDetails.delete({
     *   where: {
     *     // ... filter to delete one IdentityDetails
     *   }
     * })
     * 
    **/
    delete<T extends IdentityDetailsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, IdentityDetailsDeleteArgs<ExtArgs>>
    ): Prisma__IdentityDetailsClient<$Result.GetResult<Prisma.$IdentityDetailsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one IdentityDetails.
     * @param {IdentityDetailsUpdateArgs} args - Arguments to update one IdentityDetails.
     * @example
     * // Update one IdentityDetails
     * const identityDetails = await prisma.identityDetails.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends IdentityDetailsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, IdentityDetailsUpdateArgs<ExtArgs>>
    ): Prisma__IdentityDetailsClient<$Result.GetResult<Prisma.$IdentityDetailsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more IdentityDetails.
     * @param {IdentityDetailsDeleteManyArgs} args - Arguments to filter IdentityDetails to delete.
     * @example
     * // Delete a few IdentityDetails
     * const { count } = await prisma.identityDetails.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends IdentityDetailsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, IdentityDetailsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more IdentityDetails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdentityDetailsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many IdentityDetails
     * const identityDetails = await prisma.identityDetails.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends IdentityDetailsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, IdentityDetailsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one IdentityDetails.
     * @param {IdentityDetailsUpsertArgs} args - Arguments to update or create a IdentityDetails.
     * @example
     * // Update or create a IdentityDetails
     * const identityDetails = await prisma.identityDetails.upsert({
     *   create: {
     *     // ... data to create a IdentityDetails
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the IdentityDetails we want to update
     *   }
     * })
    **/
    upsert<T extends IdentityDetailsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, IdentityDetailsUpsertArgs<ExtArgs>>
    ): Prisma__IdentityDetailsClient<$Result.GetResult<Prisma.$IdentityDetailsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of IdentityDetails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdentityDetailsCountArgs} args - Arguments to filter IdentityDetails to count.
     * @example
     * // Count the number of IdentityDetails
     * const count = await prisma.identityDetails.count({
     *   where: {
     *     // ... the filter for the IdentityDetails we want to count
     *   }
     * })
    **/
    count<T extends IdentityDetailsCountArgs>(
      args?: Subset<T, IdentityDetailsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], IdentityDetailsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a IdentityDetails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdentityDetailsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends IdentityDetailsAggregateArgs>(args: Subset<T, IdentityDetailsAggregateArgs>): Prisma.PrismaPromise<GetIdentityDetailsAggregateType<T>>

    /**
     * Group by IdentityDetails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdentityDetailsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends IdentityDetailsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: IdentityDetailsGroupByArgs['orderBy'] }
        : { orderBy?: IdentityDetailsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, IdentityDetailsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetIdentityDetailsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the IdentityDetails model
   */
  readonly fields: IdentityDetailsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for IdentityDetails.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__IdentityDetailsClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    candidate<T extends IdentityDetails$candidateArgs<ExtArgs> = {}>(args?: Subset<T, IdentityDetails$candidateArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    responsible<T extends IdentityDetails$responsibleArgs<ExtArgs> = {}>(args?: Subset<T, IdentityDetails$responsibleArgs<ExtArgs>>): Prisma__LegalResponsibleClient<$Result.GetResult<Prisma.$LegalResponsiblePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the IdentityDetails model
   */ 
  interface IdentityDetailsFieldRefs {
    readonly id: FieldRef<"IdentityDetails", 'String'>
    readonly fullName: FieldRef<"IdentityDetails", 'String'>
    readonly socialName: FieldRef<"IdentityDetails", 'String'>
    readonly main_id: FieldRef<"IdentityDetails", 'String'>
    readonly birthDate: FieldRef<"IdentityDetails", 'DateTime'>
    readonly gender: FieldRef<"IdentityDetails", 'GENDER'>
    readonly nationality: FieldRef<"IdentityDetails", 'String'>
    readonly natural_city: FieldRef<"IdentityDetails", 'String'>
    readonly natural_UF: FieldRef<"IdentityDetails", 'COUNTRY'>
    readonly CPF: FieldRef<"IdentityDetails", 'String'>
    readonly RG: FieldRef<"IdentityDetails", 'String'>
    readonly rgIssuingAuthority: FieldRef<"IdentityDetails", 'String'>
    readonly rgIssuingState: FieldRef<"IdentityDetails", 'String'>
    readonly documentType: FieldRef<"IdentityDetails", 'DOCUMENT_TYPE'>
    readonly CadUnico: FieldRef<"IdentityDetails", 'Boolean'>
    readonly hasSevereDeseaseOrUsesMedication: FieldRef<"IdentityDetails", 'Boolean'>
    readonly hasBankAccount: FieldRef<"IdentityDetails", 'Boolean'>
    readonly documentNumber: FieldRef<"IdentityDetails", 'String'>
    readonly documentValidity: FieldRef<"IdentityDetails", 'DateTime'>
    readonly maritalStatus: FieldRef<"IdentityDetails", 'MARITAL_STATUS'>
    readonly skinColor: FieldRef<"IdentityDetails", 'SkinColor'>
    readonly religion: FieldRef<"IdentityDetails", 'RELIGION'>
    readonly educationLevel: FieldRef<"IdentityDetails", 'SCHOLARSHIP'>
    readonly specialNeeds: FieldRef<"IdentityDetails", 'Boolean'>
    readonly address: FieldRef<"IdentityDetails", 'String'>
    readonly addressNumber: FieldRef<"IdentityDetails", 'String'>
    readonly complement: FieldRef<"IdentityDetails", 'String'>
    readonly neighborhood: FieldRef<"IdentityDetails", 'String'>
    readonly city: FieldRef<"IdentityDetails", 'String'>
    readonly UF: FieldRef<"IdentityDetails", 'COUNTRY'>
    readonly CEP: FieldRef<"IdentityDetails", 'String'>
    readonly specialNeedsDescription: FieldRef<"IdentityDetails", 'String'>
    readonly specialNeedsType: FieldRef<"IdentityDetails", 'String'>
    readonly hasMedicalReport: FieldRef<"IdentityDetails", 'Boolean'>
    readonly email: FieldRef<"IdentityDetails", 'String'>
    readonly landlinePhone: FieldRef<"IdentityDetails", 'String'>
    readonly workPhone: FieldRef<"IdentityDetails", 'String'>
    readonly contactNameForMessage: FieldRef<"IdentityDetails", 'String'>
    readonly profession: FieldRef<"IdentityDetails", 'String'>
    readonly enrolledGovernmentProgram: FieldRef<"IdentityDetails", 'String'>
    readonly NIS: FieldRef<"IdentityDetails", 'String'>
    readonly incomeSource: FieldRef<"IdentityDetails", 'IncomeSource[]'>
    readonly livesAlone: FieldRef<"IdentityDetails", 'Boolean'>
    readonly intendsToGetScholarship: FieldRef<"IdentityDetails", 'Boolean'>
    readonly attendedPublicHighSchool: FieldRef<"IdentityDetails", 'Boolean'>
    readonly benefitedFromCebasScholarship_basic: FieldRef<"IdentityDetails", 'Boolean'>
    readonly yearsBenefitedFromCebas_basic: FieldRef<"IdentityDetails", 'String[]'>
    readonly scholarshipType_basic: FieldRef<"IdentityDetails", 'ScholarshipType'>
    readonly institutionName_basic: FieldRef<"IdentityDetails", 'String'>
    readonly institutionCNPJ_basic: FieldRef<"IdentityDetails", 'String'>
    readonly benefitedFromCebasScholarship_professional: FieldRef<"IdentityDetails", 'Boolean'>
    readonly lastYearBenefitedFromCebas_professional: FieldRef<"IdentityDetails", 'String'>
    readonly scholarshipType_professional: FieldRef<"IdentityDetails", 'ScholarshipType'>
    readonly institutionName_professional: FieldRef<"IdentityDetails", 'String'>
    readonly institutionCNPJ_professional: FieldRef<"IdentityDetails", 'String'>
    readonly nameOfScholarshipCourse_professional: FieldRef<"IdentityDetails", 'String'>
    readonly candidate_id: FieldRef<"IdentityDetails", 'String'>
    readonly responsible_id: FieldRef<"IdentityDetails", 'String'>
    readonly application_id: FieldRef<"IdentityDetails", 'String'>
  }
    

  // Custom InputTypes

  /**
   * IdentityDetails findUnique
   */
  export type IdentityDetailsFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityDetails
     */
    select?: IdentityDetailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: IdentityDetailsInclude<ExtArgs> | null
    /**
     * Filter, which IdentityDetails to fetch.
     */
    where: IdentityDetailsWhereUniqueInput
  }


  /**
   * IdentityDetails findUniqueOrThrow
   */
  export type IdentityDetailsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityDetails
     */
    select?: IdentityDetailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: IdentityDetailsInclude<ExtArgs> | null
    /**
     * Filter, which IdentityDetails to fetch.
     */
    where: IdentityDetailsWhereUniqueInput
  }


  /**
   * IdentityDetails findFirst
   */
  export type IdentityDetailsFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityDetails
     */
    select?: IdentityDetailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: IdentityDetailsInclude<ExtArgs> | null
    /**
     * Filter, which IdentityDetails to fetch.
     */
    where?: IdentityDetailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IdentityDetails to fetch.
     */
    orderBy?: IdentityDetailsOrderByWithRelationInput | IdentityDetailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for IdentityDetails.
     */
    cursor?: IdentityDetailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IdentityDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IdentityDetails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of IdentityDetails.
     */
    distinct?: IdentityDetailsScalarFieldEnum | IdentityDetailsScalarFieldEnum[]
  }


  /**
   * IdentityDetails findFirstOrThrow
   */
  export type IdentityDetailsFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityDetails
     */
    select?: IdentityDetailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: IdentityDetailsInclude<ExtArgs> | null
    /**
     * Filter, which IdentityDetails to fetch.
     */
    where?: IdentityDetailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IdentityDetails to fetch.
     */
    orderBy?: IdentityDetailsOrderByWithRelationInput | IdentityDetailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for IdentityDetails.
     */
    cursor?: IdentityDetailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IdentityDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IdentityDetails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of IdentityDetails.
     */
    distinct?: IdentityDetailsScalarFieldEnum | IdentityDetailsScalarFieldEnum[]
  }


  /**
   * IdentityDetails findMany
   */
  export type IdentityDetailsFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityDetails
     */
    select?: IdentityDetailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: IdentityDetailsInclude<ExtArgs> | null
    /**
     * Filter, which IdentityDetails to fetch.
     */
    where?: IdentityDetailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IdentityDetails to fetch.
     */
    orderBy?: IdentityDetailsOrderByWithRelationInput | IdentityDetailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing IdentityDetails.
     */
    cursor?: IdentityDetailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IdentityDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IdentityDetails.
     */
    skip?: number
    distinct?: IdentityDetailsScalarFieldEnum | IdentityDetailsScalarFieldEnum[]
  }


  /**
   * IdentityDetails create
   */
  export type IdentityDetailsCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityDetails
     */
    select?: IdentityDetailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: IdentityDetailsInclude<ExtArgs> | null
    /**
     * The data needed to create a IdentityDetails.
     */
    data: XOR<IdentityDetailsCreateInput, IdentityDetailsUncheckedCreateInput>
  }


  /**
   * IdentityDetails createMany
   */
  export type IdentityDetailsCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many IdentityDetails.
     */
    data: IdentityDetailsCreateManyInput | IdentityDetailsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * IdentityDetails update
   */
  export type IdentityDetailsUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityDetails
     */
    select?: IdentityDetailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: IdentityDetailsInclude<ExtArgs> | null
    /**
     * The data needed to update a IdentityDetails.
     */
    data: XOR<IdentityDetailsUpdateInput, IdentityDetailsUncheckedUpdateInput>
    /**
     * Choose, which IdentityDetails to update.
     */
    where: IdentityDetailsWhereUniqueInput
  }


  /**
   * IdentityDetails updateMany
   */
  export type IdentityDetailsUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update IdentityDetails.
     */
    data: XOR<IdentityDetailsUpdateManyMutationInput, IdentityDetailsUncheckedUpdateManyInput>
    /**
     * Filter which IdentityDetails to update
     */
    where?: IdentityDetailsWhereInput
  }


  /**
   * IdentityDetails upsert
   */
  export type IdentityDetailsUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityDetails
     */
    select?: IdentityDetailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: IdentityDetailsInclude<ExtArgs> | null
    /**
     * The filter to search for the IdentityDetails to update in case it exists.
     */
    where: IdentityDetailsWhereUniqueInput
    /**
     * In case the IdentityDetails found by the `where` argument doesn't exist, create a new IdentityDetails with this data.
     */
    create: XOR<IdentityDetailsCreateInput, IdentityDetailsUncheckedCreateInput>
    /**
     * In case the IdentityDetails was found with the provided `where` argument, update it with this data.
     */
    update: XOR<IdentityDetailsUpdateInput, IdentityDetailsUncheckedUpdateInput>
  }


  /**
   * IdentityDetails delete
   */
  export type IdentityDetailsDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityDetails
     */
    select?: IdentityDetailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: IdentityDetailsInclude<ExtArgs> | null
    /**
     * Filter which IdentityDetails to delete.
     */
    where: IdentityDetailsWhereUniqueInput
  }


  /**
   * IdentityDetails deleteMany
   */
  export type IdentityDetailsDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which IdentityDetails to delete
     */
    where?: IdentityDetailsWhereInput
  }


  /**
   * IdentityDetails.candidate
   */
  export type IdentityDetails$candidateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CandidateInclude<ExtArgs> | null
    where?: CandidateWhereInput
  }


  /**
   * IdentityDetails.responsible
   */
  export type IdentityDetails$responsibleArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalResponsible
     */
    select?: LegalResponsibleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LegalResponsibleInclude<ExtArgs> | null
    where?: LegalResponsibleWhereInput
  }


  /**
   * IdentityDetails without action
   */
  export type IdentityDetailsDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityDetails
     */
    select?: IdentityDetailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: IdentityDetailsInclude<ExtArgs> | null
  }



  /**
   * Model FamilyMember
   */

  export type AggregateFamilyMember = {
    _count: FamilyMemberCountAggregateOutputType | null
    _min: FamilyMemberMinAggregateOutputType | null
    _max: FamilyMemberMaxAggregateOutputType | null
  }

  export type FamilyMemberMinAggregateOutputType = {
    id: string | null
    relationship: $Enums.Relationship | null
    otherRelationship: string | null
    main_id: string | null
    fullName: string | null
    socialName: string | null
    birthDate: Date | null
    gender: $Enums.GENDER | null
    nationality: string | null
    natural_city: string | null
    natural_UF: $Enums.COUNTRY | null
    CPF: string | null
    RG: string | null
    rgIssuingAuthority: string | null
    rgIssuingState: string | null
    documentType: $Enums.DOCUMENT_TYPE | null
    documentNumber: string | null
    documentValidity: Date | null
    numberOfBirthRegister: string | null
    bookOfBirthRegister: string | null
    pageOfBirthRegister: string | null
    maritalStatus: $Enums.MARITAL_STATUS | null
    skinColor: $Enums.SkinColor | null
    religion: $Enums.RELIGION | null
    educationLevel: $Enums.SCHOLARSHIP | null
    specialNeeds: boolean | null
    specialNeedsDescription: string | null
    specialNeedsType: string | null
    hasMedicalReport: boolean | null
    landlinePhone: string | null
    workPhone: string | null
    contactNameForMessage: string | null
    email: string | null
    profession: string | null
    enrolledGovernmentProgram: string | null
    NIS: string | null
    educationPlace: $Enums.INSTITUTION_TYPE | null
    institutionName: string | null
    coursingEducationLevel: $Enums.EDUCATION_TYPE | null
    cycleOfEducation: string | null
    turnOfEducation: $Enums.SHIFT | null
    hasScholarship: boolean | null
    percentageOfScholarship: string | null
    monthlyAmount: string | null
    candidate_id: string | null
    attendedPublicHighSchool: boolean | null
    benefitedFromCebasScholarship_basic: boolean | null
    benefitedFromCebasScholarship_professional: boolean | null
    CadUnico: boolean | null
    hasSevereDeseaseOrUsesMedication: boolean | null
    hasBankAccount: boolean | null
    legalResponsibleId: string | null
    application_id: string | null
  }

  export type FamilyMemberMaxAggregateOutputType = {
    id: string | null
    relationship: $Enums.Relationship | null
    otherRelationship: string | null
    main_id: string | null
    fullName: string | null
    socialName: string | null
    birthDate: Date | null
    gender: $Enums.GENDER | null
    nationality: string | null
    natural_city: string | null
    natural_UF: $Enums.COUNTRY | null
    CPF: string | null
    RG: string | null
    rgIssuingAuthority: string | null
    rgIssuingState: string | null
    documentType: $Enums.DOCUMENT_TYPE | null
    documentNumber: string | null
    documentValidity: Date | null
    numberOfBirthRegister: string | null
    bookOfBirthRegister: string | null
    pageOfBirthRegister: string | null
    maritalStatus: $Enums.MARITAL_STATUS | null
    skinColor: $Enums.SkinColor | null
    religion: $Enums.RELIGION | null
    educationLevel: $Enums.SCHOLARSHIP | null
    specialNeeds: boolean | null
    specialNeedsDescription: string | null
    specialNeedsType: string | null
    hasMedicalReport: boolean | null
    landlinePhone: string | null
    workPhone: string | null
    contactNameForMessage: string | null
    email: string | null
    profession: string | null
    enrolledGovernmentProgram: string | null
    NIS: string | null
    educationPlace: $Enums.INSTITUTION_TYPE | null
    institutionName: string | null
    coursingEducationLevel: $Enums.EDUCATION_TYPE | null
    cycleOfEducation: string | null
    turnOfEducation: $Enums.SHIFT | null
    hasScholarship: boolean | null
    percentageOfScholarship: string | null
    monthlyAmount: string | null
    candidate_id: string | null
    attendedPublicHighSchool: boolean | null
    benefitedFromCebasScholarship_basic: boolean | null
    benefitedFromCebasScholarship_professional: boolean | null
    CadUnico: boolean | null
    hasSevereDeseaseOrUsesMedication: boolean | null
    hasBankAccount: boolean | null
    legalResponsibleId: string | null
    application_id: string | null
  }

  export type FamilyMemberCountAggregateOutputType = {
    id: number
    relationship: number
    otherRelationship: number
    main_id: number
    fullName: number
    socialName: number
    birthDate: number
    gender: number
    nationality: number
    natural_city: number
    natural_UF: number
    CPF: number
    RG: number
    rgIssuingAuthority: number
    rgIssuingState: number
    documentType: number
    documentNumber: number
    documentValidity: number
    numberOfBirthRegister: number
    bookOfBirthRegister: number
    pageOfBirthRegister: number
    maritalStatus: number
    skinColor: number
    religion: number
    educationLevel: number
    specialNeeds: number
    specialNeedsDescription: number
    specialNeedsType: number
    hasMedicalReport: number
    landlinePhone: number
    workPhone: number
    contactNameForMessage: number
    email: number
    profession: number
    enrolledGovernmentProgram: number
    NIS: number
    educationPlace: number
    institutionName: number
    coursingEducationLevel: number
    cycleOfEducation: number
    turnOfEducation: number
    hasScholarship: number
    percentageOfScholarship: number
    monthlyAmount: number
    candidate_id: number
    attendedPublicHighSchool: number
    benefitedFromCebasScholarship_basic: number
    benefitedFromCebasScholarship_professional: number
    CadUnico: number
    hasSevereDeseaseOrUsesMedication: number
    hasBankAccount: number
    incomeSource: number
    legalResponsibleId: number
    application_id: number
    _all: number
  }


  export type FamilyMemberMinAggregateInputType = {
    id?: true
    relationship?: true
    otherRelationship?: true
    main_id?: true
    fullName?: true
    socialName?: true
    birthDate?: true
    gender?: true
    nationality?: true
    natural_city?: true
    natural_UF?: true
    CPF?: true
    RG?: true
    rgIssuingAuthority?: true
    rgIssuingState?: true
    documentType?: true
    documentNumber?: true
    documentValidity?: true
    numberOfBirthRegister?: true
    bookOfBirthRegister?: true
    pageOfBirthRegister?: true
    maritalStatus?: true
    skinColor?: true
    religion?: true
    educationLevel?: true
    specialNeeds?: true
    specialNeedsDescription?: true
    specialNeedsType?: true
    hasMedicalReport?: true
    landlinePhone?: true
    workPhone?: true
    contactNameForMessage?: true
    email?: true
    profession?: true
    enrolledGovernmentProgram?: true
    NIS?: true
    educationPlace?: true
    institutionName?: true
    coursingEducationLevel?: true
    cycleOfEducation?: true
    turnOfEducation?: true
    hasScholarship?: true
    percentageOfScholarship?: true
    monthlyAmount?: true
    candidate_id?: true
    attendedPublicHighSchool?: true
    benefitedFromCebasScholarship_basic?: true
    benefitedFromCebasScholarship_professional?: true
    CadUnico?: true
    hasSevereDeseaseOrUsesMedication?: true
    hasBankAccount?: true
    legalResponsibleId?: true
    application_id?: true
  }

  export type FamilyMemberMaxAggregateInputType = {
    id?: true
    relationship?: true
    otherRelationship?: true
    main_id?: true
    fullName?: true
    socialName?: true
    birthDate?: true
    gender?: true
    nationality?: true
    natural_city?: true
    natural_UF?: true
    CPF?: true
    RG?: true
    rgIssuingAuthority?: true
    rgIssuingState?: true
    documentType?: true
    documentNumber?: true
    documentValidity?: true
    numberOfBirthRegister?: true
    bookOfBirthRegister?: true
    pageOfBirthRegister?: true
    maritalStatus?: true
    skinColor?: true
    religion?: true
    educationLevel?: true
    specialNeeds?: true
    specialNeedsDescription?: true
    specialNeedsType?: true
    hasMedicalReport?: true
    landlinePhone?: true
    workPhone?: true
    contactNameForMessage?: true
    email?: true
    profession?: true
    enrolledGovernmentProgram?: true
    NIS?: true
    educationPlace?: true
    institutionName?: true
    coursingEducationLevel?: true
    cycleOfEducation?: true
    turnOfEducation?: true
    hasScholarship?: true
    percentageOfScholarship?: true
    monthlyAmount?: true
    candidate_id?: true
    attendedPublicHighSchool?: true
    benefitedFromCebasScholarship_basic?: true
    benefitedFromCebasScholarship_professional?: true
    CadUnico?: true
    hasSevereDeseaseOrUsesMedication?: true
    hasBankAccount?: true
    legalResponsibleId?: true
    application_id?: true
  }

  export type FamilyMemberCountAggregateInputType = {
    id?: true
    relationship?: true
    otherRelationship?: true
    main_id?: true
    fullName?: true
    socialName?: true
    birthDate?: true
    gender?: true
    nationality?: true
    natural_city?: true
    natural_UF?: true
    CPF?: true
    RG?: true
    rgIssuingAuthority?: true
    rgIssuingState?: true
    documentType?: true
    documentNumber?: true
    documentValidity?: true
    numberOfBirthRegister?: true
    bookOfBirthRegister?: true
    pageOfBirthRegister?: true
    maritalStatus?: true
    skinColor?: true
    religion?: true
    educationLevel?: true
    specialNeeds?: true
    specialNeedsDescription?: true
    specialNeedsType?: true
    hasMedicalReport?: true
    landlinePhone?: true
    workPhone?: true
    contactNameForMessage?: true
    email?: true
    profession?: true
    enrolledGovernmentProgram?: true
    NIS?: true
    educationPlace?: true
    institutionName?: true
    coursingEducationLevel?: true
    cycleOfEducation?: true
    turnOfEducation?: true
    hasScholarship?: true
    percentageOfScholarship?: true
    monthlyAmount?: true
    candidate_id?: true
    attendedPublicHighSchool?: true
    benefitedFromCebasScholarship_basic?: true
    benefitedFromCebasScholarship_professional?: true
    CadUnico?: true
    hasSevereDeseaseOrUsesMedication?: true
    hasBankAccount?: true
    incomeSource?: true
    legalResponsibleId?: true
    application_id?: true
    _all?: true
  }

  export type FamilyMemberAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which FamilyMember to aggregate.
     */
    where?: FamilyMemberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FamilyMembers to fetch.
     */
    orderBy?: FamilyMemberOrderByWithRelationInput | FamilyMemberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FamilyMemberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FamilyMembers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FamilyMembers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FamilyMembers
    **/
    _count?: true | FamilyMemberCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FamilyMemberMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FamilyMemberMaxAggregateInputType
  }

  export type GetFamilyMemberAggregateType<T extends FamilyMemberAggregateArgs> = {
        [P in keyof T & keyof AggregateFamilyMember]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFamilyMember[P]>
      : GetScalarType<T[P], AggregateFamilyMember[P]>
  }




  export type FamilyMemberGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: FamilyMemberWhereInput
    orderBy?: FamilyMemberOrderByWithAggregationInput | FamilyMemberOrderByWithAggregationInput[]
    by: FamilyMemberScalarFieldEnum[] | FamilyMemberScalarFieldEnum
    having?: FamilyMemberScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FamilyMemberCountAggregateInputType | true
    _min?: FamilyMemberMinAggregateInputType
    _max?: FamilyMemberMaxAggregateInputType
  }

  export type FamilyMemberGroupByOutputType = {
    id: string
    relationship: $Enums.Relationship
    otherRelationship: string | null
    main_id: string | null
    fullName: string
    socialName: string | null
    birthDate: Date
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType: $Enums.DOCUMENT_TYPE | null
    documentNumber: string | null
    documentValidity: Date | null
    numberOfBirthRegister: string | null
    bookOfBirthRegister: string | null
    pageOfBirthRegister: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds: boolean | null
    specialNeedsDescription: string | null
    specialNeedsType: string | null
    hasMedicalReport: boolean | null
    landlinePhone: string | null
    workPhone: string | null
    contactNameForMessage: string | null
    email: string | null
    profession: string
    enrolledGovernmentProgram: string | null
    NIS: string | null
    educationPlace: $Enums.INSTITUTION_TYPE | null
    institutionName: string | null
    coursingEducationLevel: $Enums.EDUCATION_TYPE | null
    cycleOfEducation: string | null
    turnOfEducation: $Enums.SHIFT | null
    hasScholarship: boolean | null
    percentageOfScholarship: string | null
    monthlyAmount: string | null
    candidate_id: string | null
    attendedPublicHighSchool: boolean | null
    benefitedFromCebasScholarship_basic: boolean | null
    benefitedFromCebasScholarship_professional: boolean | null
    CadUnico: boolean | null
    hasSevereDeseaseOrUsesMedication: boolean | null
    hasBankAccount: boolean | null
    incomeSource: $Enums.IncomeSource[]
    legalResponsibleId: string | null
    application_id: string
    _count: FamilyMemberCountAggregateOutputType | null
    _min: FamilyMemberMinAggregateOutputType | null
    _max: FamilyMemberMaxAggregateOutputType | null
  }

  type GetFamilyMemberGroupByPayload<T extends FamilyMemberGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FamilyMemberGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FamilyMemberGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FamilyMemberGroupByOutputType[P]>
            : GetScalarType<T[P], FamilyMemberGroupByOutputType[P]>
        }
      >
    >


  export type FamilyMemberSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    relationship?: boolean
    otherRelationship?: boolean
    main_id?: boolean
    fullName?: boolean
    socialName?: boolean
    birthDate?: boolean
    gender?: boolean
    nationality?: boolean
    natural_city?: boolean
    natural_UF?: boolean
    CPF?: boolean
    RG?: boolean
    rgIssuingAuthority?: boolean
    rgIssuingState?: boolean
    documentType?: boolean
    documentNumber?: boolean
    documentValidity?: boolean
    numberOfBirthRegister?: boolean
    bookOfBirthRegister?: boolean
    pageOfBirthRegister?: boolean
    maritalStatus?: boolean
    skinColor?: boolean
    religion?: boolean
    educationLevel?: boolean
    specialNeeds?: boolean
    specialNeedsDescription?: boolean
    specialNeedsType?: boolean
    hasMedicalReport?: boolean
    landlinePhone?: boolean
    workPhone?: boolean
    contactNameForMessage?: boolean
    email?: boolean
    profession?: boolean
    enrolledGovernmentProgram?: boolean
    NIS?: boolean
    educationPlace?: boolean
    institutionName?: boolean
    coursingEducationLevel?: boolean
    cycleOfEducation?: boolean
    turnOfEducation?: boolean
    hasScholarship?: boolean
    percentageOfScholarship?: boolean
    monthlyAmount?: boolean
    candidate_id?: boolean
    attendedPublicHighSchool?: boolean
    benefitedFromCebasScholarship_basic?: boolean
    benefitedFromCebasScholarship_professional?: boolean
    CadUnico?: boolean
    hasSevereDeseaseOrUsesMedication?: boolean
    hasBankAccount?: boolean
    incomeSource?: boolean
    legalResponsibleId?: boolean
    application_id?: boolean
    CreditCard?: boolean | FamilyMember$CreditCardArgs<ExtArgs>
    FamilyMemberIncome?: boolean | FamilyMember$FamilyMemberIncomeArgs<ExtArgs>
    Financing?: boolean | FamilyMember$FinancingArgs<ExtArgs>
    Loan?: boolean | FamilyMember$LoanArgs<ExtArgs>
    MonthlyIncome?: boolean | FamilyMember$MonthlyIncomeArgs<ExtArgs>
    OtherExpense?: boolean | FamilyMember$OtherExpenseArgs<ExtArgs>
    FamilyMemberToVehicle?: boolean | FamilyMember$FamilyMemberToVehicleArgs<ExtArgs>
    FamilyMemberDisease?: boolean | FamilyMember$FamilyMemberDiseaseArgs<ExtArgs>
    candidate?: boolean | FamilyMember$candidateArgs<ExtArgs>
    Medication?: boolean | FamilyMember$MedicationArgs<ExtArgs>
    LegalResponsible?: boolean | FamilyMember$LegalResponsibleArgs<ExtArgs>
    BankAccount?: boolean | FamilyMember$BankAccountArgs<ExtArgs>
    Declarations?: boolean | FamilyMember$DeclarationsArgs<ExtArgs>
    _count?: boolean | FamilyMemberCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["familyMember"]>

  export type FamilyMemberSelectScalar = {
    id?: boolean
    relationship?: boolean
    otherRelationship?: boolean
    main_id?: boolean
    fullName?: boolean
    socialName?: boolean
    birthDate?: boolean
    gender?: boolean
    nationality?: boolean
    natural_city?: boolean
    natural_UF?: boolean
    CPF?: boolean
    RG?: boolean
    rgIssuingAuthority?: boolean
    rgIssuingState?: boolean
    documentType?: boolean
    documentNumber?: boolean
    documentValidity?: boolean
    numberOfBirthRegister?: boolean
    bookOfBirthRegister?: boolean
    pageOfBirthRegister?: boolean
    maritalStatus?: boolean
    skinColor?: boolean
    religion?: boolean
    educationLevel?: boolean
    specialNeeds?: boolean
    specialNeedsDescription?: boolean
    specialNeedsType?: boolean
    hasMedicalReport?: boolean
    landlinePhone?: boolean
    workPhone?: boolean
    contactNameForMessage?: boolean
    email?: boolean
    profession?: boolean
    enrolledGovernmentProgram?: boolean
    NIS?: boolean
    educationPlace?: boolean
    institutionName?: boolean
    coursingEducationLevel?: boolean
    cycleOfEducation?: boolean
    turnOfEducation?: boolean
    hasScholarship?: boolean
    percentageOfScholarship?: boolean
    monthlyAmount?: boolean
    candidate_id?: boolean
    attendedPublicHighSchool?: boolean
    benefitedFromCebasScholarship_basic?: boolean
    benefitedFromCebasScholarship_professional?: boolean
    CadUnico?: boolean
    hasSevereDeseaseOrUsesMedication?: boolean
    hasBankAccount?: boolean
    incomeSource?: boolean
    legalResponsibleId?: boolean
    application_id?: boolean
  }

  export type FamilyMemberInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    CreditCard?: boolean | FamilyMember$CreditCardArgs<ExtArgs>
    FamilyMemberIncome?: boolean | FamilyMember$FamilyMemberIncomeArgs<ExtArgs>
    Financing?: boolean | FamilyMember$FinancingArgs<ExtArgs>
    Loan?: boolean | FamilyMember$LoanArgs<ExtArgs>
    MonthlyIncome?: boolean | FamilyMember$MonthlyIncomeArgs<ExtArgs>
    OtherExpense?: boolean | FamilyMember$OtherExpenseArgs<ExtArgs>
    FamilyMemberToVehicle?: boolean | FamilyMember$FamilyMemberToVehicleArgs<ExtArgs>
    FamilyMemberDisease?: boolean | FamilyMember$FamilyMemberDiseaseArgs<ExtArgs>
    candidate?: boolean | FamilyMember$candidateArgs<ExtArgs>
    Medication?: boolean | FamilyMember$MedicationArgs<ExtArgs>
    LegalResponsible?: boolean | FamilyMember$LegalResponsibleArgs<ExtArgs>
    BankAccount?: boolean | FamilyMember$BankAccountArgs<ExtArgs>
    Declarations?: boolean | FamilyMember$DeclarationsArgs<ExtArgs>
    _count?: boolean | FamilyMemberCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $FamilyMemberPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "FamilyMember"
    objects: {
      CreditCard: Prisma.$CreditCardPayload<ExtArgs>[]
      FamilyMemberIncome: Prisma.$FamilyMemberIncomePayload<ExtArgs>[]
      Financing: Prisma.$FinancingPayload<ExtArgs>[]
      Loan: Prisma.$LoanPayload<ExtArgs>[]
      MonthlyIncome: Prisma.$MonthlyIncomePayload<ExtArgs>[]
      OtherExpense: Prisma.$OtherExpensePayload<ExtArgs>[]
      FamilyMemberToVehicle: Prisma.$FamilyMemberToVehiclePayload<ExtArgs>[]
      FamilyMemberDisease: Prisma.$FamilyMemberDiseasePayload<ExtArgs>[]
      candidate: Prisma.$CandidatePayload<ExtArgs> | null
      Medication: Prisma.$MedicationPayload<ExtArgs>[]
      LegalResponsible: Prisma.$LegalResponsiblePayload<ExtArgs> | null
      BankAccount: Prisma.$BankAccountPayload<ExtArgs>[]
      Declarations: Prisma.$DeclarationsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetResult<{
      id: string
      relationship: $Enums.Relationship
      otherRelationship: string | null
      main_id: string | null
      fullName: string
      socialName: string | null
      birthDate: Date
      gender: $Enums.GENDER
      nationality: string
      natural_city: string
      natural_UF: $Enums.COUNTRY
      CPF: string
      RG: string
      rgIssuingAuthority: string
      rgIssuingState: string
      documentType: $Enums.DOCUMENT_TYPE | null
      documentNumber: string | null
      documentValidity: Date | null
      numberOfBirthRegister: string | null
      bookOfBirthRegister: string | null
      pageOfBirthRegister: string | null
      maritalStatus: $Enums.MARITAL_STATUS
      skinColor: $Enums.SkinColor
      religion: $Enums.RELIGION
      educationLevel: $Enums.SCHOLARSHIP
      specialNeeds: boolean | null
      specialNeedsDescription: string | null
      specialNeedsType: string | null
      hasMedicalReport: boolean | null
      landlinePhone: string | null
      workPhone: string | null
      contactNameForMessage: string | null
      email: string | null
      profession: string
      enrolledGovernmentProgram: string | null
      NIS: string | null
      educationPlace: $Enums.INSTITUTION_TYPE | null
      institutionName: string | null
      coursingEducationLevel: $Enums.EDUCATION_TYPE | null
      cycleOfEducation: string | null
      turnOfEducation: $Enums.SHIFT | null
      hasScholarship: boolean | null
      percentageOfScholarship: string | null
      monthlyAmount: string | null
      candidate_id: string | null
      attendedPublicHighSchool: boolean | null
      benefitedFromCebasScholarship_basic: boolean | null
      benefitedFromCebasScholarship_professional: boolean | null
      CadUnico: boolean | null
      hasSevereDeseaseOrUsesMedication: boolean | null
      hasBankAccount: boolean | null
      incomeSource: $Enums.IncomeSource[]
      legalResponsibleId: string | null
      application_id: string
    }, ExtArgs["result"]["familyMember"]>
    composites: {}
  }


  type FamilyMemberGetPayload<S extends boolean | null | undefined | FamilyMemberDefaultArgs> = $Result.GetResult<Prisma.$FamilyMemberPayload, S>

  type FamilyMemberCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<FamilyMemberFindManyArgs, 'select' | 'include'> & {
      select?: FamilyMemberCountAggregateInputType | true
    }

  export interface FamilyMemberDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FamilyMember'], meta: { name: 'FamilyMember' } }
    /**
     * Find zero or one FamilyMember that matches the filter.
     * @param {FamilyMemberFindUniqueArgs} args - Arguments to find a FamilyMember
     * @example
     * // Get one FamilyMember
     * const familyMember = await prisma.familyMember.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FamilyMemberFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, FamilyMemberFindUniqueArgs<ExtArgs>>
    ): Prisma__FamilyMemberClient<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one FamilyMember that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {FamilyMemberFindUniqueOrThrowArgs} args - Arguments to find a FamilyMember
     * @example
     * // Get one FamilyMember
     * const familyMember = await prisma.familyMember.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends FamilyMemberFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, FamilyMemberFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__FamilyMemberClient<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first FamilyMember that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberFindFirstArgs} args - Arguments to find a FamilyMember
     * @example
     * // Get one FamilyMember
     * const familyMember = await prisma.familyMember.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FamilyMemberFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, FamilyMemberFindFirstArgs<ExtArgs>>
    ): Prisma__FamilyMemberClient<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first FamilyMember that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberFindFirstOrThrowArgs} args - Arguments to find a FamilyMember
     * @example
     * // Get one FamilyMember
     * const familyMember = await prisma.familyMember.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends FamilyMemberFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, FamilyMemberFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__FamilyMemberClient<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more FamilyMembers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FamilyMembers
     * const familyMembers = await prisma.familyMember.findMany()
     * 
     * // Get first 10 FamilyMembers
     * const familyMembers = await prisma.familyMember.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const familyMemberWithIdOnly = await prisma.familyMember.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FamilyMemberFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FamilyMemberFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a FamilyMember.
     * @param {FamilyMemberCreateArgs} args - Arguments to create a FamilyMember.
     * @example
     * // Create one FamilyMember
     * const FamilyMember = await prisma.familyMember.create({
     *   data: {
     *     // ... data to create a FamilyMember
     *   }
     * })
     * 
    **/
    create<T extends FamilyMemberCreateArgs<ExtArgs>>(
      args: SelectSubset<T, FamilyMemberCreateArgs<ExtArgs>>
    ): Prisma__FamilyMemberClient<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many FamilyMembers.
     *     @param {FamilyMemberCreateManyArgs} args - Arguments to create many FamilyMembers.
     *     @example
     *     // Create many FamilyMembers
     *     const familyMember = await prisma.familyMember.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends FamilyMemberCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FamilyMemberCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a FamilyMember.
     * @param {FamilyMemberDeleteArgs} args - Arguments to delete one FamilyMember.
     * @example
     * // Delete one FamilyMember
     * const FamilyMember = await prisma.familyMember.delete({
     *   where: {
     *     // ... filter to delete one FamilyMember
     *   }
     * })
     * 
    **/
    delete<T extends FamilyMemberDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, FamilyMemberDeleteArgs<ExtArgs>>
    ): Prisma__FamilyMemberClient<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one FamilyMember.
     * @param {FamilyMemberUpdateArgs} args - Arguments to update one FamilyMember.
     * @example
     * // Update one FamilyMember
     * const familyMember = await prisma.familyMember.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends FamilyMemberUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, FamilyMemberUpdateArgs<ExtArgs>>
    ): Prisma__FamilyMemberClient<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more FamilyMembers.
     * @param {FamilyMemberDeleteManyArgs} args - Arguments to filter FamilyMembers to delete.
     * @example
     * // Delete a few FamilyMembers
     * const { count } = await prisma.familyMember.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends FamilyMemberDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FamilyMemberDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FamilyMembers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FamilyMembers
     * const familyMember = await prisma.familyMember.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends FamilyMemberUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, FamilyMemberUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one FamilyMember.
     * @param {FamilyMemberUpsertArgs} args - Arguments to update or create a FamilyMember.
     * @example
     * // Update or create a FamilyMember
     * const familyMember = await prisma.familyMember.upsert({
     *   create: {
     *     // ... data to create a FamilyMember
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FamilyMember we want to update
     *   }
     * })
    **/
    upsert<T extends FamilyMemberUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, FamilyMemberUpsertArgs<ExtArgs>>
    ): Prisma__FamilyMemberClient<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of FamilyMembers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberCountArgs} args - Arguments to filter FamilyMembers to count.
     * @example
     * // Count the number of FamilyMembers
     * const count = await prisma.familyMember.count({
     *   where: {
     *     // ... the filter for the FamilyMembers we want to count
     *   }
     * })
    **/
    count<T extends FamilyMemberCountArgs>(
      args?: Subset<T, FamilyMemberCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FamilyMemberCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FamilyMember.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FamilyMemberAggregateArgs>(args: Subset<T, FamilyMemberAggregateArgs>): Prisma.PrismaPromise<GetFamilyMemberAggregateType<T>>

    /**
     * Group by FamilyMember.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FamilyMemberGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FamilyMemberGroupByArgs['orderBy'] }
        : { orderBy?: FamilyMemberGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FamilyMemberGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFamilyMemberGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FamilyMember model
   */
  readonly fields: FamilyMemberFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FamilyMember.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FamilyMemberClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    CreditCard<T extends FamilyMember$CreditCardArgs<ExtArgs> = {}>(args?: Subset<T, FamilyMember$CreditCardArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CreditCardPayload<ExtArgs>, T, 'findMany'> | Null>;

    FamilyMemberIncome<T extends FamilyMember$FamilyMemberIncomeArgs<ExtArgs> = {}>(args?: Subset<T, FamilyMember$FamilyMemberIncomeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FamilyMemberIncomePayload<ExtArgs>, T, 'findMany'> | Null>;

    Financing<T extends FamilyMember$FinancingArgs<ExtArgs> = {}>(args?: Subset<T, FamilyMember$FinancingArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FinancingPayload<ExtArgs>, T, 'findMany'> | Null>;

    Loan<T extends FamilyMember$LoanArgs<ExtArgs> = {}>(args?: Subset<T, FamilyMember$LoanArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LoanPayload<ExtArgs>, T, 'findMany'> | Null>;

    MonthlyIncome<T extends FamilyMember$MonthlyIncomeArgs<ExtArgs> = {}>(args?: Subset<T, FamilyMember$MonthlyIncomeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MonthlyIncomePayload<ExtArgs>, T, 'findMany'> | Null>;

    OtherExpense<T extends FamilyMember$OtherExpenseArgs<ExtArgs> = {}>(args?: Subset<T, FamilyMember$OtherExpenseArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OtherExpensePayload<ExtArgs>, T, 'findMany'> | Null>;

    FamilyMemberToVehicle<T extends FamilyMember$FamilyMemberToVehicleArgs<ExtArgs> = {}>(args?: Subset<T, FamilyMember$FamilyMemberToVehicleArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FamilyMemberToVehiclePayload<ExtArgs>, T, 'findMany'> | Null>;

    FamilyMemberDisease<T extends FamilyMember$FamilyMemberDiseaseArgs<ExtArgs> = {}>(args?: Subset<T, FamilyMember$FamilyMemberDiseaseArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FamilyMemberDiseasePayload<ExtArgs>, T, 'findMany'> | Null>;

    candidate<T extends FamilyMember$candidateArgs<ExtArgs> = {}>(args?: Subset<T, FamilyMember$candidateArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    Medication<T extends FamilyMember$MedicationArgs<ExtArgs> = {}>(args?: Subset<T, FamilyMember$MedicationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MedicationPayload<ExtArgs>, T, 'findMany'> | Null>;

    LegalResponsible<T extends FamilyMember$LegalResponsibleArgs<ExtArgs> = {}>(args?: Subset<T, FamilyMember$LegalResponsibleArgs<ExtArgs>>): Prisma__LegalResponsibleClient<$Result.GetResult<Prisma.$LegalResponsiblePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    BankAccount<T extends FamilyMember$BankAccountArgs<ExtArgs> = {}>(args?: Subset<T, FamilyMember$BankAccountArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BankAccountPayload<ExtArgs>, T, 'findMany'> | Null>;

    Declarations<T extends FamilyMember$DeclarationsArgs<ExtArgs> = {}>(args?: Subset<T, FamilyMember$DeclarationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeclarationsPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the FamilyMember model
   */ 
  interface FamilyMemberFieldRefs {
    readonly id: FieldRef<"FamilyMember", 'String'>
    readonly relationship: FieldRef<"FamilyMember", 'Relationship'>
    readonly otherRelationship: FieldRef<"FamilyMember", 'String'>
    readonly main_id: FieldRef<"FamilyMember", 'String'>
    readonly fullName: FieldRef<"FamilyMember", 'String'>
    readonly socialName: FieldRef<"FamilyMember", 'String'>
    readonly birthDate: FieldRef<"FamilyMember", 'DateTime'>
    readonly gender: FieldRef<"FamilyMember", 'GENDER'>
    readonly nationality: FieldRef<"FamilyMember", 'String'>
    readonly natural_city: FieldRef<"FamilyMember", 'String'>
    readonly natural_UF: FieldRef<"FamilyMember", 'COUNTRY'>
    readonly CPF: FieldRef<"FamilyMember", 'String'>
    readonly RG: FieldRef<"FamilyMember", 'String'>
    readonly rgIssuingAuthority: FieldRef<"FamilyMember", 'String'>
    readonly rgIssuingState: FieldRef<"FamilyMember", 'String'>
    readonly documentType: FieldRef<"FamilyMember", 'DOCUMENT_TYPE'>
    readonly documentNumber: FieldRef<"FamilyMember", 'String'>
    readonly documentValidity: FieldRef<"FamilyMember", 'DateTime'>
    readonly numberOfBirthRegister: FieldRef<"FamilyMember", 'String'>
    readonly bookOfBirthRegister: FieldRef<"FamilyMember", 'String'>
    readonly pageOfBirthRegister: FieldRef<"FamilyMember", 'String'>
    readonly maritalStatus: FieldRef<"FamilyMember", 'MARITAL_STATUS'>
    readonly skinColor: FieldRef<"FamilyMember", 'SkinColor'>
    readonly religion: FieldRef<"FamilyMember", 'RELIGION'>
    readonly educationLevel: FieldRef<"FamilyMember", 'SCHOLARSHIP'>
    readonly specialNeeds: FieldRef<"FamilyMember", 'Boolean'>
    readonly specialNeedsDescription: FieldRef<"FamilyMember", 'String'>
    readonly specialNeedsType: FieldRef<"FamilyMember", 'String'>
    readonly hasMedicalReport: FieldRef<"FamilyMember", 'Boolean'>
    readonly landlinePhone: FieldRef<"FamilyMember", 'String'>
    readonly workPhone: FieldRef<"FamilyMember", 'String'>
    readonly contactNameForMessage: FieldRef<"FamilyMember", 'String'>
    readonly email: FieldRef<"FamilyMember", 'String'>
    readonly profession: FieldRef<"FamilyMember", 'String'>
    readonly enrolledGovernmentProgram: FieldRef<"FamilyMember", 'String'>
    readonly NIS: FieldRef<"FamilyMember", 'String'>
    readonly educationPlace: FieldRef<"FamilyMember", 'INSTITUTION_TYPE'>
    readonly institutionName: FieldRef<"FamilyMember", 'String'>
    readonly coursingEducationLevel: FieldRef<"FamilyMember", 'EDUCATION_TYPE'>
    readonly cycleOfEducation: FieldRef<"FamilyMember", 'String'>
    readonly turnOfEducation: FieldRef<"FamilyMember", 'SHIFT'>
    readonly hasScholarship: FieldRef<"FamilyMember", 'Boolean'>
    readonly percentageOfScholarship: FieldRef<"FamilyMember", 'String'>
    readonly monthlyAmount: FieldRef<"FamilyMember", 'String'>
    readonly candidate_id: FieldRef<"FamilyMember", 'String'>
    readonly attendedPublicHighSchool: FieldRef<"FamilyMember", 'Boolean'>
    readonly benefitedFromCebasScholarship_basic: FieldRef<"FamilyMember", 'Boolean'>
    readonly benefitedFromCebasScholarship_professional: FieldRef<"FamilyMember", 'Boolean'>
    readonly CadUnico: FieldRef<"FamilyMember", 'Boolean'>
    readonly hasSevereDeseaseOrUsesMedication: FieldRef<"FamilyMember", 'Boolean'>
    readonly hasBankAccount: FieldRef<"FamilyMember", 'Boolean'>
    readonly incomeSource: FieldRef<"FamilyMember", 'IncomeSource[]'>
    readonly legalResponsibleId: FieldRef<"FamilyMember", 'String'>
    readonly application_id: FieldRef<"FamilyMember", 'String'>
  }
    

  // Custom InputTypes

  /**
   * FamilyMember findUnique
   */
  export type FamilyMemberFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    /**
     * Filter, which FamilyMember to fetch.
     */
    where: FamilyMemberWhereUniqueInput
  }


  /**
   * FamilyMember findUniqueOrThrow
   */
  export type FamilyMemberFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    /**
     * Filter, which FamilyMember to fetch.
     */
    where: FamilyMemberWhereUniqueInput
  }


  /**
   * FamilyMember findFirst
   */
  export type FamilyMemberFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    /**
     * Filter, which FamilyMember to fetch.
     */
    where?: FamilyMemberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FamilyMembers to fetch.
     */
    orderBy?: FamilyMemberOrderByWithRelationInput | FamilyMemberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FamilyMembers.
     */
    cursor?: FamilyMemberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FamilyMembers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FamilyMembers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FamilyMembers.
     */
    distinct?: FamilyMemberScalarFieldEnum | FamilyMemberScalarFieldEnum[]
  }


  /**
   * FamilyMember findFirstOrThrow
   */
  export type FamilyMemberFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    /**
     * Filter, which FamilyMember to fetch.
     */
    where?: FamilyMemberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FamilyMembers to fetch.
     */
    orderBy?: FamilyMemberOrderByWithRelationInput | FamilyMemberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FamilyMembers.
     */
    cursor?: FamilyMemberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FamilyMembers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FamilyMembers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FamilyMembers.
     */
    distinct?: FamilyMemberScalarFieldEnum | FamilyMemberScalarFieldEnum[]
  }


  /**
   * FamilyMember findMany
   */
  export type FamilyMemberFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    /**
     * Filter, which FamilyMembers to fetch.
     */
    where?: FamilyMemberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FamilyMembers to fetch.
     */
    orderBy?: FamilyMemberOrderByWithRelationInput | FamilyMemberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FamilyMembers.
     */
    cursor?: FamilyMemberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FamilyMembers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FamilyMembers.
     */
    skip?: number
    distinct?: FamilyMemberScalarFieldEnum | FamilyMemberScalarFieldEnum[]
  }


  /**
   * FamilyMember create
   */
  export type FamilyMemberCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    /**
     * The data needed to create a FamilyMember.
     */
    data: XOR<FamilyMemberCreateInput, FamilyMemberUncheckedCreateInput>
  }


  /**
   * FamilyMember createMany
   */
  export type FamilyMemberCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FamilyMembers.
     */
    data: FamilyMemberCreateManyInput | FamilyMemberCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * FamilyMember update
   */
  export type FamilyMemberUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    /**
     * The data needed to update a FamilyMember.
     */
    data: XOR<FamilyMemberUpdateInput, FamilyMemberUncheckedUpdateInput>
    /**
     * Choose, which FamilyMember to update.
     */
    where: FamilyMemberWhereUniqueInput
  }


  /**
   * FamilyMember updateMany
   */
  export type FamilyMemberUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FamilyMembers.
     */
    data: XOR<FamilyMemberUpdateManyMutationInput, FamilyMemberUncheckedUpdateManyInput>
    /**
     * Filter which FamilyMembers to update
     */
    where?: FamilyMemberWhereInput
  }


  /**
   * FamilyMember upsert
   */
  export type FamilyMemberUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    /**
     * The filter to search for the FamilyMember to update in case it exists.
     */
    where: FamilyMemberWhereUniqueInput
    /**
     * In case the FamilyMember found by the `where` argument doesn't exist, create a new FamilyMember with this data.
     */
    create: XOR<FamilyMemberCreateInput, FamilyMemberUncheckedCreateInput>
    /**
     * In case the FamilyMember was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FamilyMemberUpdateInput, FamilyMemberUncheckedUpdateInput>
  }


  /**
   * FamilyMember delete
   */
  export type FamilyMemberDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    /**
     * Filter which FamilyMember to delete.
     */
    where: FamilyMemberWhereUniqueInput
  }


  /**
   * FamilyMember deleteMany
   */
  export type FamilyMemberDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which FamilyMembers to delete
     */
    where?: FamilyMemberWhereInput
  }


  /**
   * FamilyMember.CreditCard
   */
  export type FamilyMember$CreditCardArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreditCard
     */
    select?: CreditCardSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CreditCardInclude<ExtArgs> | null
    where?: CreditCardWhereInput
    orderBy?: CreditCardOrderByWithRelationInput | CreditCardOrderByWithRelationInput[]
    cursor?: CreditCardWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CreditCardScalarFieldEnum | CreditCardScalarFieldEnum[]
  }


  /**
   * FamilyMember.FamilyMemberIncome
   */
  export type FamilyMember$FamilyMemberIncomeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberIncome
     */
    select?: FamilyMemberIncomeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberIncomeInclude<ExtArgs> | null
    where?: FamilyMemberIncomeWhereInput
    orderBy?: FamilyMemberIncomeOrderByWithRelationInput | FamilyMemberIncomeOrderByWithRelationInput[]
    cursor?: FamilyMemberIncomeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FamilyMemberIncomeScalarFieldEnum | FamilyMemberIncomeScalarFieldEnum[]
  }


  /**
   * FamilyMember.Financing
   */
  export type FamilyMember$FinancingArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Financing
     */
    select?: FinancingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FinancingInclude<ExtArgs> | null
    where?: FinancingWhereInput
    orderBy?: FinancingOrderByWithRelationInput | FinancingOrderByWithRelationInput[]
    cursor?: FinancingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FinancingScalarFieldEnum | FinancingScalarFieldEnum[]
  }


  /**
   * FamilyMember.Loan
   */
  export type FamilyMember$LoanArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Loan
     */
    select?: LoanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LoanInclude<ExtArgs> | null
    where?: LoanWhereInput
    orderBy?: LoanOrderByWithRelationInput | LoanOrderByWithRelationInput[]
    cursor?: LoanWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LoanScalarFieldEnum | LoanScalarFieldEnum[]
  }


  /**
   * FamilyMember.MonthlyIncome
   */
  export type FamilyMember$MonthlyIncomeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MonthlyIncome
     */
    select?: MonthlyIncomeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MonthlyIncomeInclude<ExtArgs> | null
    where?: MonthlyIncomeWhereInput
    orderBy?: MonthlyIncomeOrderByWithRelationInput | MonthlyIncomeOrderByWithRelationInput[]
    cursor?: MonthlyIncomeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MonthlyIncomeScalarFieldEnum | MonthlyIncomeScalarFieldEnum[]
  }


  /**
   * FamilyMember.OtherExpense
   */
  export type FamilyMember$OtherExpenseArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OtherExpense
     */
    select?: OtherExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: OtherExpenseInclude<ExtArgs> | null
    where?: OtherExpenseWhereInput
    orderBy?: OtherExpenseOrderByWithRelationInput | OtherExpenseOrderByWithRelationInput[]
    cursor?: OtherExpenseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OtherExpenseScalarFieldEnum | OtherExpenseScalarFieldEnum[]
  }


  /**
   * FamilyMember.FamilyMemberToVehicle
   */
  export type FamilyMember$FamilyMemberToVehicleArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberToVehicle
     */
    select?: FamilyMemberToVehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberToVehicleInclude<ExtArgs> | null
    where?: FamilyMemberToVehicleWhereInput
    orderBy?: FamilyMemberToVehicleOrderByWithRelationInput | FamilyMemberToVehicleOrderByWithRelationInput[]
    cursor?: FamilyMemberToVehicleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FamilyMemberToVehicleScalarFieldEnum | FamilyMemberToVehicleScalarFieldEnum[]
  }


  /**
   * FamilyMember.FamilyMemberDisease
   */
  export type FamilyMember$FamilyMemberDiseaseArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberDisease
     */
    select?: FamilyMemberDiseaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberDiseaseInclude<ExtArgs> | null
    where?: FamilyMemberDiseaseWhereInput
    orderBy?: FamilyMemberDiseaseOrderByWithRelationInput | FamilyMemberDiseaseOrderByWithRelationInput[]
    cursor?: FamilyMemberDiseaseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FamilyMemberDiseaseScalarFieldEnum | FamilyMemberDiseaseScalarFieldEnum[]
  }


  /**
   * FamilyMember.candidate
   */
  export type FamilyMember$candidateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CandidateInclude<ExtArgs> | null
    where?: CandidateWhereInput
  }


  /**
   * FamilyMember.Medication
   */
  export type FamilyMember$MedicationArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Medication
     */
    select?: MedicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MedicationInclude<ExtArgs> | null
    where?: MedicationWhereInput
    orderBy?: MedicationOrderByWithRelationInput | MedicationOrderByWithRelationInput[]
    cursor?: MedicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MedicationScalarFieldEnum | MedicationScalarFieldEnum[]
  }


  /**
   * FamilyMember.LegalResponsible
   */
  export type FamilyMember$LegalResponsibleArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalResponsible
     */
    select?: LegalResponsibleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LegalResponsibleInclude<ExtArgs> | null
    where?: LegalResponsibleWhereInput
  }


  /**
   * FamilyMember.BankAccount
   */
  export type FamilyMember$BankAccountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankAccount
     */
    select?: BankAccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: BankAccountInclude<ExtArgs> | null
    where?: BankAccountWhereInput
    orderBy?: BankAccountOrderByWithRelationInput | BankAccountOrderByWithRelationInput[]
    cursor?: BankAccountWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BankAccountScalarFieldEnum | BankAccountScalarFieldEnum[]
  }


  /**
   * FamilyMember.Declarations
   */
  export type FamilyMember$DeclarationsArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Declarations
     */
    select?: DeclarationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: DeclarationsInclude<ExtArgs> | null
    where?: DeclarationsWhereInput
    orderBy?: DeclarationsOrderByWithRelationInput | DeclarationsOrderByWithRelationInput[]
    cursor?: DeclarationsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DeclarationsScalarFieldEnum | DeclarationsScalarFieldEnum[]
  }


  /**
   * FamilyMember without action
   */
  export type FamilyMemberDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberInclude<ExtArgs> | null
  }



  /**
   * Model Housing
   */

  export type AggregateHousing = {
    _count: HousingCountAggregateOutputType | null
    _avg: HousingAvgAggregateOutputType | null
    _sum: HousingSumAggregateOutputType | null
    _min: HousingMinAggregateOutputType | null
    _max: HousingMaxAggregateOutputType | null
  }

  export type HousingAvgAggregateOutputType = {
    numberOfBedrooms: number | null
  }

  export type HousingSumAggregateOutputType = {
    numberOfBedrooms: number | null
  }

  export type HousingMinAggregateOutputType = {
    id: string | null
    propertyStatus: $Enums.PropertyStatus | null
    contractType: $Enums.ContractType | null
    main_id: string | null
    grantorName: string | null
    timeLivingInProperty: $Enums.TimeLivingInProperty | null
    domicileType: $Enums.DomicileType | null
    numberOfRooms: $Enums.NumberOfRooms | null
    numberOfBedrooms: number | null
    candidate_id: string | null
    responsible_id: string | null
    application_id: string | null
  }

  export type HousingMaxAggregateOutputType = {
    id: string | null
    propertyStatus: $Enums.PropertyStatus | null
    contractType: $Enums.ContractType | null
    main_id: string | null
    grantorName: string | null
    timeLivingInProperty: $Enums.TimeLivingInProperty | null
    domicileType: $Enums.DomicileType | null
    numberOfRooms: $Enums.NumberOfRooms | null
    numberOfBedrooms: number | null
    candidate_id: string | null
    responsible_id: string | null
    application_id: string | null
  }

  export type HousingCountAggregateOutputType = {
    id: number
    propertyStatus: number
    contractType: number
    main_id: number
    grantorName: number
    timeLivingInProperty: number
    domicileType: number
    numberOfRooms: number
    numberOfBedrooms: number
    candidate_id: number
    responsible_id: number
    application_id: number
    _all: number
  }


  export type HousingAvgAggregateInputType = {
    numberOfBedrooms?: true
  }

  export type HousingSumAggregateInputType = {
    numberOfBedrooms?: true
  }

  export type HousingMinAggregateInputType = {
    id?: true
    propertyStatus?: true
    contractType?: true
    main_id?: true
    grantorName?: true
    timeLivingInProperty?: true
    domicileType?: true
    numberOfRooms?: true
    numberOfBedrooms?: true
    candidate_id?: true
    responsible_id?: true
    application_id?: true
  }

  export type HousingMaxAggregateInputType = {
    id?: true
    propertyStatus?: true
    contractType?: true
    main_id?: true
    grantorName?: true
    timeLivingInProperty?: true
    domicileType?: true
    numberOfRooms?: true
    numberOfBedrooms?: true
    candidate_id?: true
    responsible_id?: true
    application_id?: true
  }

  export type HousingCountAggregateInputType = {
    id?: true
    propertyStatus?: true
    contractType?: true
    main_id?: true
    grantorName?: true
    timeLivingInProperty?: true
    domicileType?: true
    numberOfRooms?: true
    numberOfBedrooms?: true
    candidate_id?: true
    responsible_id?: true
    application_id?: true
    _all?: true
  }

  export type HousingAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which Housing to aggregate.
     */
    where?: HousingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Housings to fetch.
     */
    orderBy?: HousingOrderByWithRelationInput | HousingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: HousingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Housings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Housings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Housings
    **/
    _count?: true | HousingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HousingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HousingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HousingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HousingMaxAggregateInputType
  }

  export type GetHousingAggregateType<T extends HousingAggregateArgs> = {
        [P in keyof T & keyof AggregateHousing]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHousing[P]>
      : GetScalarType<T[P], AggregateHousing[P]>
  }




  export type HousingGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: HousingWhereInput
    orderBy?: HousingOrderByWithAggregationInput | HousingOrderByWithAggregationInput[]
    by: HousingScalarFieldEnum[] | HousingScalarFieldEnum
    having?: HousingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HousingCountAggregateInputType | true
    _avg?: HousingAvgAggregateInputType
    _sum?: HousingSumAggregateInputType
    _min?: HousingMinAggregateInputType
    _max?: HousingMaxAggregateInputType
  }

  export type HousingGroupByOutputType = {
    id: string
    propertyStatus: $Enums.PropertyStatus
    contractType: $Enums.ContractType | null
    main_id: string | null
    grantorName: string | null
    timeLivingInProperty: $Enums.TimeLivingInProperty
    domicileType: $Enums.DomicileType
    numberOfRooms: $Enums.NumberOfRooms
    numberOfBedrooms: number
    candidate_id: string | null
    responsible_id: string | null
    application_id: string
    _count: HousingCountAggregateOutputType | null
    _avg: HousingAvgAggregateOutputType | null
    _sum: HousingSumAggregateOutputType | null
    _min: HousingMinAggregateOutputType | null
    _max: HousingMaxAggregateOutputType | null
  }

  type GetHousingGroupByPayload<T extends HousingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HousingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HousingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HousingGroupByOutputType[P]>
            : GetScalarType<T[P], HousingGroupByOutputType[P]>
        }
      >
    >


  export type HousingSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    propertyStatus?: boolean
    contractType?: boolean
    main_id?: boolean
    grantorName?: boolean
    timeLivingInProperty?: boolean
    domicileType?: boolean
    numberOfRooms?: boolean
    numberOfBedrooms?: boolean
    candidate_id?: boolean
    responsible_id?: boolean
    application_id?: boolean
    candidate?: boolean | Housing$candidateArgs<ExtArgs>
    responsible?: boolean | Housing$responsibleArgs<ExtArgs>
  }, ExtArgs["result"]["housing"]>

  export type HousingSelectScalar = {
    id?: boolean
    propertyStatus?: boolean
    contractType?: boolean
    main_id?: boolean
    grantorName?: boolean
    timeLivingInProperty?: boolean
    domicileType?: boolean
    numberOfRooms?: boolean
    numberOfBedrooms?: boolean
    candidate_id?: boolean
    responsible_id?: boolean
    application_id?: boolean
  }

  export type HousingInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    candidate?: boolean | Housing$candidateArgs<ExtArgs>
    responsible?: boolean | Housing$responsibleArgs<ExtArgs>
  }


  export type $HousingPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "Housing"
    objects: {
      candidate: Prisma.$CandidatePayload<ExtArgs> | null
      responsible: Prisma.$LegalResponsiblePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetResult<{
      id: string
      propertyStatus: $Enums.PropertyStatus
      contractType: $Enums.ContractType | null
      main_id: string | null
      grantorName: string | null
      timeLivingInProperty: $Enums.TimeLivingInProperty
      domicileType: $Enums.DomicileType
      numberOfRooms: $Enums.NumberOfRooms
      numberOfBedrooms: number
      candidate_id: string | null
      responsible_id: string | null
      application_id: string
    }, ExtArgs["result"]["housing"]>
    composites: {}
  }


  type HousingGetPayload<S extends boolean | null | undefined | HousingDefaultArgs> = $Result.GetResult<Prisma.$HousingPayload, S>

  type HousingCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<HousingFindManyArgs, 'select' | 'include'> & {
      select?: HousingCountAggregateInputType | true
    }

  export interface HousingDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Housing'], meta: { name: 'Housing' } }
    /**
     * Find zero or one Housing that matches the filter.
     * @param {HousingFindUniqueArgs} args - Arguments to find a Housing
     * @example
     * // Get one Housing
     * const housing = await prisma.housing.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends HousingFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, HousingFindUniqueArgs<ExtArgs>>
    ): Prisma__HousingClient<$Result.GetResult<Prisma.$HousingPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Housing that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {HousingFindUniqueOrThrowArgs} args - Arguments to find a Housing
     * @example
     * // Get one Housing
     * const housing = await prisma.housing.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends HousingFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, HousingFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__HousingClient<$Result.GetResult<Prisma.$HousingPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Housing that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HousingFindFirstArgs} args - Arguments to find a Housing
     * @example
     * // Get one Housing
     * const housing = await prisma.housing.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends HousingFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, HousingFindFirstArgs<ExtArgs>>
    ): Prisma__HousingClient<$Result.GetResult<Prisma.$HousingPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Housing that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HousingFindFirstOrThrowArgs} args - Arguments to find a Housing
     * @example
     * // Get one Housing
     * const housing = await prisma.housing.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends HousingFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, HousingFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__HousingClient<$Result.GetResult<Prisma.$HousingPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Housings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HousingFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Housings
     * const housings = await prisma.housing.findMany()
     * 
     * // Get first 10 Housings
     * const housings = await prisma.housing.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const housingWithIdOnly = await prisma.housing.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends HousingFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, HousingFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HousingPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Housing.
     * @param {HousingCreateArgs} args - Arguments to create a Housing.
     * @example
     * // Create one Housing
     * const Housing = await prisma.housing.create({
     *   data: {
     *     // ... data to create a Housing
     *   }
     * })
     * 
    **/
    create<T extends HousingCreateArgs<ExtArgs>>(
      args: SelectSubset<T, HousingCreateArgs<ExtArgs>>
    ): Prisma__HousingClient<$Result.GetResult<Prisma.$HousingPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Housings.
     *     @param {HousingCreateManyArgs} args - Arguments to create many Housings.
     *     @example
     *     // Create many Housings
     *     const housing = await prisma.housing.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends HousingCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, HousingCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Housing.
     * @param {HousingDeleteArgs} args - Arguments to delete one Housing.
     * @example
     * // Delete one Housing
     * const Housing = await prisma.housing.delete({
     *   where: {
     *     // ... filter to delete one Housing
     *   }
     * })
     * 
    **/
    delete<T extends HousingDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, HousingDeleteArgs<ExtArgs>>
    ): Prisma__HousingClient<$Result.GetResult<Prisma.$HousingPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Housing.
     * @param {HousingUpdateArgs} args - Arguments to update one Housing.
     * @example
     * // Update one Housing
     * const housing = await prisma.housing.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends HousingUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, HousingUpdateArgs<ExtArgs>>
    ): Prisma__HousingClient<$Result.GetResult<Prisma.$HousingPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Housings.
     * @param {HousingDeleteManyArgs} args - Arguments to filter Housings to delete.
     * @example
     * // Delete a few Housings
     * const { count } = await prisma.housing.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends HousingDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, HousingDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Housings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HousingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Housings
     * const housing = await prisma.housing.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends HousingUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, HousingUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Housing.
     * @param {HousingUpsertArgs} args - Arguments to update or create a Housing.
     * @example
     * // Update or create a Housing
     * const housing = await prisma.housing.upsert({
     *   create: {
     *     // ... data to create a Housing
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Housing we want to update
     *   }
     * })
    **/
    upsert<T extends HousingUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, HousingUpsertArgs<ExtArgs>>
    ): Prisma__HousingClient<$Result.GetResult<Prisma.$HousingPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Housings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HousingCountArgs} args - Arguments to filter Housings to count.
     * @example
     * // Count the number of Housings
     * const count = await prisma.housing.count({
     *   where: {
     *     // ... the filter for the Housings we want to count
     *   }
     * })
    **/
    count<T extends HousingCountArgs>(
      args?: Subset<T, HousingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HousingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Housing.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HousingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HousingAggregateArgs>(args: Subset<T, HousingAggregateArgs>): Prisma.PrismaPromise<GetHousingAggregateType<T>>

    /**
     * Group by Housing.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HousingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends HousingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: HousingGroupByArgs['orderBy'] }
        : { orderBy?: HousingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, HousingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHousingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Housing model
   */
  readonly fields: HousingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Housing.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__HousingClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    candidate<T extends Housing$candidateArgs<ExtArgs> = {}>(args?: Subset<T, Housing$candidateArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    responsible<T extends Housing$responsibleArgs<ExtArgs> = {}>(args?: Subset<T, Housing$responsibleArgs<ExtArgs>>): Prisma__LegalResponsibleClient<$Result.GetResult<Prisma.$LegalResponsiblePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Housing model
   */ 
  interface HousingFieldRefs {
    readonly id: FieldRef<"Housing", 'String'>
    readonly propertyStatus: FieldRef<"Housing", 'PropertyStatus'>
    readonly contractType: FieldRef<"Housing", 'ContractType'>
    readonly main_id: FieldRef<"Housing", 'String'>
    readonly grantorName: FieldRef<"Housing", 'String'>
    readonly timeLivingInProperty: FieldRef<"Housing", 'TimeLivingInProperty'>
    readonly domicileType: FieldRef<"Housing", 'DomicileType'>
    readonly numberOfRooms: FieldRef<"Housing", 'NumberOfRooms'>
    readonly numberOfBedrooms: FieldRef<"Housing", 'Int'>
    readonly candidate_id: FieldRef<"Housing", 'String'>
    readonly responsible_id: FieldRef<"Housing", 'String'>
    readonly application_id: FieldRef<"Housing", 'String'>
  }
    

  // Custom InputTypes

  /**
   * Housing findUnique
   */
  export type HousingFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Housing
     */
    select?: HousingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: HousingInclude<ExtArgs> | null
    /**
     * Filter, which Housing to fetch.
     */
    where: HousingWhereUniqueInput
  }


  /**
   * Housing findUniqueOrThrow
   */
  export type HousingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Housing
     */
    select?: HousingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: HousingInclude<ExtArgs> | null
    /**
     * Filter, which Housing to fetch.
     */
    where: HousingWhereUniqueInput
  }


  /**
   * Housing findFirst
   */
  export type HousingFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Housing
     */
    select?: HousingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: HousingInclude<ExtArgs> | null
    /**
     * Filter, which Housing to fetch.
     */
    where?: HousingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Housings to fetch.
     */
    orderBy?: HousingOrderByWithRelationInput | HousingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Housings.
     */
    cursor?: HousingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Housings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Housings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Housings.
     */
    distinct?: HousingScalarFieldEnum | HousingScalarFieldEnum[]
  }


  /**
   * Housing findFirstOrThrow
   */
  export type HousingFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Housing
     */
    select?: HousingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: HousingInclude<ExtArgs> | null
    /**
     * Filter, which Housing to fetch.
     */
    where?: HousingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Housings to fetch.
     */
    orderBy?: HousingOrderByWithRelationInput | HousingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Housings.
     */
    cursor?: HousingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Housings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Housings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Housings.
     */
    distinct?: HousingScalarFieldEnum | HousingScalarFieldEnum[]
  }


  /**
   * Housing findMany
   */
  export type HousingFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Housing
     */
    select?: HousingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: HousingInclude<ExtArgs> | null
    /**
     * Filter, which Housings to fetch.
     */
    where?: HousingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Housings to fetch.
     */
    orderBy?: HousingOrderByWithRelationInput | HousingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Housings.
     */
    cursor?: HousingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Housings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Housings.
     */
    skip?: number
    distinct?: HousingScalarFieldEnum | HousingScalarFieldEnum[]
  }


  /**
   * Housing create
   */
  export type HousingCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Housing
     */
    select?: HousingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: HousingInclude<ExtArgs> | null
    /**
     * The data needed to create a Housing.
     */
    data: XOR<HousingCreateInput, HousingUncheckedCreateInput>
  }


  /**
   * Housing createMany
   */
  export type HousingCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Housings.
     */
    data: HousingCreateManyInput | HousingCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Housing update
   */
  export type HousingUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Housing
     */
    select?: HousingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: HousingInclude<ExtArgs> | null
    /**
     * The data needed to update a Housing.
     */
    data: XOR<HousingUpdateInput, HousingUncheckedUpdateInput>
    /**
     * Choose, which Housing to update.
     */
    where: HousingWhereUniqueInput
  }


  /**
   * Housing updateMany
   */
  export type HousingUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Housings.
     */
    data: XOR<HousingUpdateManyMutationInput, HousingUncheckedUpdateManyInput>
    /**
     * Filter which Housings to update
     */
    where?: HousingWhereInput
  }


  /**
   * Housing upsert
   */
  export type HousingUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Housing
     */
    select?: HousingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: HousingInclude<ExtArgs> | null
    /**
     * The filter to search for the Housing to update in case it exists.
     */
    where: HousingWhereUniqueInput
    /**
     * In case the Housing found by the `where` argument doesn't exist, create a new Housing with this data.
     */
    create: XOR<HousingCreateInput, HousingUncheckedCreateInput>
    /**
     * In case the Housing was found with the provided `where` argument, update it with this data.
     */
    update: XOR<HousingUpdateInput, HousingUncheckedUpdateInput>
  }


  /**
   * Housing delete
   */
  export type HousingDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Housing
     */
    select?: HousingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: HousingInclude<ExtArgs> | null
    /**
     * Filter which Housing to delete.
     */
    where: HousingWhereUniqueInput
  }


  /**
   * Housing deleteMany
   */
  export type HousingDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which Housings to delete
     */
    where?: HousingWhereInput
  }


  /**
   * Housing.candidate
   */
  export type Housing$candidateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CandidateInclude<ExtArgs> | null
    where?: CandidateWhereInput
  }


  /**
   * Housing.responsible
   */
  export type Housing$responsibleArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalResponsible
     */
    select?: LegalResponsibleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LegalResponsibleInclude<ExtArgs> | null
    where?: LegalResponsibleWhereInput
  }


  /**
   * Housing without action
   */
  export type HousingDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Housing
     */
    select?: HousingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: HousingInclude<ExtArgs> | null
  }



  /**
   * Model Vehicle
   */

  export type AggregateVehicle = {
    _count: VehicleCountAggregateOutputType | null
    _avg: VehicleAvgAggregateOutputType | null
    _sum: VehicleSumAggregateOutputType | null
    _min: VehicleMinAggregateOutputType | null
    _max: VehicleMaxAggregateOutputType | null
  }

  export type VehicleAvgAggregateOutputType = {
    manufacturingYear: number | null
    financedMonths: number | null
    monthsToPayOff: number | null
    insuranceValue: number | null
  }

  export type VehicleSumAggregateOutputType = {
    manufacturingYear: number | null
    financedMonths: number | null
    monthsToPayOff: number | null
    insuranceValue: number | null
  }

  export type VehicleMinAggregateOutputType = {
    id: string | null
    vehicleType: $Enums.VehicleType | null
    modelAndBrand: string | null
    main_id: string | null
    manufacturingYear: number | null
    situation: $Enums.VehicleSituation | null
    financedMonths: number | null
    monthsToPayOff: number | null
    hasInsurance: boolean | null
    insuranceValue: number | null
    usage: $Enums.VehicleUsage | null
    candidate_id: string | null
    legalResponsibleId: string | null
    application_id: string | null
  }

  export type VehicleMaxAggregateOutputType = {
    id: string | null
    vehicleType: $Enums.VehicleType | null
    modelAndBrand: string | null
    main_id: string | null
    manufacturingYear: number | null
    situation: $Enums.VehicleSituation | null
    financedMonths: number | null
    monthsToPayOff: number | null
    hasInsurance: boolean | null
    insuranceValue: number | null
    usage: $Enums.VehicleUsage | null
    candidate_id: string | null
    legalResponsibleId: string | null
    application_id: string | null
  }

  export type VehicleCountAggregateOutputType = {
    id: number
    vehicleType: number
    modelAndBrand: number
    main_id: number
    manufacturingYear: number
    situation: number
    financedMonths: number
    monthsToPayOff: number
    hasInsurance: number
    insuranceValue: number
    usage: number
    candidate_id: number
    owners_id: number
    legalResponsibleId: number
    application_id: number
    _all: number
  }


  export type VehicleAvgAggregateInputType = {
    manufacturingYear?: true
    financedMonths?: true
    monthsToPayOff?: true
    insuranceValue?: true
  }

  export type VehicleSumAggregateInputType = {
    manufacturingYear?: true
    financedMonths?: true
    monthsToPayOff?: true
    insuranceValue?: true
  }

  export type VehicleMinAggregateInputType = {
    id?: true
    vehicleType?: true
    modelAndBrand?: true
    main_id?: true
    manufacturingYear?: true
    situation?: true
    financedMonths?: true
    monthsToPayOff?: true
    hasInsurance?: true
    insuranceValue?: true
    usage?: true
    candidate_id?: true
    legalResponsibleId?: true
    application_id?: true
  }

  export type VehicleMaxAggregateInputType = {
    id?: true
    vehicleType?: true
    modelAndBrand?: true
    main_id?: true
    manufacturingYear?: true
    situation?: true
    financedMonths?: true
    monthsToPayOff?: true
    hasInsurance?: true
    insuranceValue?: true
    usage?: true
    candidate_id?: true
    legalResponsibleId?: true
    application_id?: true
  }

  export type VehicleCountAggregateInputType = {
    id?: true
    vehicleType?: true
    modelAndBrand?: true
    main_id?: true
    manufacturingYear?: true
    situation?: true
    financedMonths?: true
    monthsToPayOff?: true
    hasInsurance?: true
    insuranceValue?: true
    usage?: true
    candidate_id?: true
    owners_id?: true
    legalResponsibleId?: true
    application_id?: true
    _all?: true
  }

  export type VehicleAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which Vehicle to aggregate.
     */
    where?: VehicleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vehicles to fetch.
     */
    orderBy?: VehicleOrderByWithRelationInput | VehicleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VehicleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vehicles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vehicles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Vehicles
    **/
    _count?: true | VehicleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VehicleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VehicleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VehicleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VehicleMaxAggregateInputType
  }

  export type GetVehicleAggregateType<T extends VehicleAggregateArgs> = {
        [P in keyof T & keyof AggregateVehicle]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVehicle[P]>
      : GetScalarType<T[P], AggregateVehicle[P]>
  }




  export type VehicleGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: VehicleWhereInput
    orderBy?: VehicleOrderByWithAggregationInput | VehicleOrderByWithAggregationInput[]
    by: VehicleScalarFieldEnum[] | VehicleScalarFieldEnum
    having?: VehicleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VehicleCountAggregateInputType | true
    _avg?: VehicleAvgAggregateInputType
    _sum?: VehicleSumAggregateInputType
    _min?: VehicleMinAggregateInputType
    _max?: VehicleMaxAggregateInputType
  }

  export type VehicleGroupByOutputType = {
    id: string
    vehicleType: $Enums.VehicleType
    modelAndBrand: string
    main_id: string | null
    manufacturingYear: number
    situation: $Enums.VehicleSituation
    financedMonths: number | null
    monthsToPayOff: number | null
    hasInsurance: boolean
    insuranceValue: number | null
    usage: $Enums.VehicleUsage
    candidate_id: string | null
    owners_id: string[]
    legalResponsibleId: string | null
    application_id: string
    _count: VehicleCountAggregateOutputType | null
    _avg: VehicleAvgAggregateOutputType | null
    _sum: VehicleSumAggregateOutputType | null
    _min: VehicleMinAggregateOutputType | null
    _max: VehicleMaxAggregateOutputType | null
  }

  type GetVehicleGroupByPayload<T extends VehicleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VehicleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VehicleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VehicleGroupByOutputType[P]>
            : GetScalarType<T[P], VehicleGroupByOutputType[P]>
        }
      >
    >


  export type VehicleSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    vehicleType?: boolean
    modelAndBrand?: boolean
    main_id?: boolean
    manufacturingYear?: boolean
    situation?: boolean
    financedMonths?: boolean
    monthsToPayOff?: boolean
    hasInsurance?: boolean
    insuranceValue?: boolean
    usage?: boolean
    candidate_id?: boolean
    owners_id?: boolean
    legalResponsibleId?: boolean
    application_id?: boolean
    candidate?: boolean | Vehicle$candidateArgs<ExtArgs>
    FamilyMemberToVehicle?: boolean | Vehicle$FamilyMemberToVehicleArgs<ExtArgs>
    LegalResponsible?: boolean | Vehicle$LegalResponsibleArgs<ExtArgs>
    _count?: boolean | VehicleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["vehicle"]>

  export type VehicleSelectScalar = {
    id?: boolean
    vehicleType?: boolean
    modelAndBrand?: boolean
    main_id?: boolean
    manufacturingYear?: boolean
    situation?: boolean
    financedMonths?: boolean
    monthsToPayOff?: boolean
    hasInsurance?: boolean
    insuranceValue?: boolean
    usage?: boolean
    candidate_id?: boolean
    owners_id?: boolean
    legalResponsibleId?: boolean
    application_id?: boolean
  }

  export type VehicleInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    candidate?: boolean | Vehicle$candidateArgs<ExtArgs>
    FamilyMemberToVehicle?: boolean | Vehicle$FamilyMemberToVehicleArgs<ExtArgs>
    LegalResponsible?: boolean | Vehicle$LegalResponsibleArgs<ExtArgs>
    _count?: boolean | VehicleCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $VehiclePayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "Vehicle"
    objects: {
      candidate: Prisma.$CandidatePayload<ExtArgs> | null
      FamilyMemberToVehicle: Prisma.$FamilyMemberToVehiclePayload<ExtArgs>[]
      LegalResponsible: Prisma.$LegalResponsiblePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetResult<{
      id: string
      vehicleType: $Enums.VehicleType
      modelAndBrand: string
      main_id: string | null
      manufacturingYear: number
      situation: $Enums.VehicleSituation
      financedMonths: number | null
      monthsToPayOff: number | null
      hasInsurance: boolean
      insuranceValue: number | null
      usage: $Enums.VehicleUsage
      candidate_id: string | null
      owners_id: string[]
      legalResponsibleId: string | null
      application_id: string
    }, ExtArgs["result"]["vehicle"]>
    composites: {}
  }


  type VehicleGetPayload<S extends boolean | null | undefined | VehicleDefaultArgs> = $Result.GetResult<Prisma.$VehiclePayload, S>

  type VehicleCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<VehicleFindManyArgs, 'select' | 'include'> & {
      select?: VehicleCountAggregateInputType | true
    }

  export interface VehicleDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Vehicle'], meta: { name: 'Vehicle' } }
    /**
     * Find zero or one Vehicle that matches the filter.
     * @param {VehicleFindUniqueArgs} args - Arguments to find a Vehicle
     * @example
     * // Get one Vehicle
     * const vehicle = await prisma.vehicle.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends VehicleFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, VehicleFindUniqueArgs<ExtArgs>>
    ): Prisma__VehicleClient<$Result.GetResult<Prisma.$VehiclePayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Vehicle that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {VehicleFindUniqueOrThrowArgs} args - Arguments to find a Vehicle
     * @example
     * // Get one Vehicle
     * const vehicle = await prisma.vehicle.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends VehicleFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, VehicleFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__VehicleClient<$Result.GetResult<Prisma.$VehiclePayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Vehicle that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehicleFindFirstArgs} args - Arguments to find a Vehicle
     * @example
     * // Get one Vehicle
     * const vehicle = await prisma.vehicle.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends VehicleFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, VehicleFindFirstArgs<ExtArgs>>
    ): Prisma__VehicleClient<$Result.GetResult<Prisma.$VehiclePayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Vehicle that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehicleFindFirstOrThrowArgs} args - Arguments to find a Vehicle
     * @example
     * // Get one Vehicle
     * const vehicle = await prisma.vehicle.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends VehicleFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, VehicleFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__VehicleClient<$Result.GetResult<Prisma.$VehiclePayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Vehicles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehicleFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Vehicles
     * const vehicles = await prisma.vehicle.findMany()
     * 
     * // Get first 10 Vehicles
     * const vehicles = await prisma.vehicle.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const vehicleWithIdOnly = await prisma.vehicle.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends VehicleFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, VehicleFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VehiclePayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Vehicle.
     * @param {VehicleCreateArgs} args - Arguments to create a Vehicle.
     * @example
     * // Create one Vehicle
     * const Vehicle = await prisma.vehicle.create({
     *   data: {
     *     // ... data to create a Vehicle
     *   }
     * })
     * 
    **/
    create<T extends VehicleCreateArgs<ExtArgs>>(
      args: SelectSubset<T, VehicleCreateArgs<ExtArgs>>
    ): Prisma__VehicleClient<$Result.GetResult<Prisma.$VehiclePayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Vehicles.
     *     @param {VehicleCreateManyArgs} args - Arguments to create many Vehicles.
     *     @example
     *     // Create many Vehicles
     *     const vehicle = await prisma.vehicle.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends VehicleCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, VehicleCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Vehicle.
     * @param {VehicleDeleteArgs} args - Arguments to delete one Vehicle.
     * @example
     * // Delete one Vehicle
     * const Vehicle = await prisma.vehicle.delete({
     *   where: {
     *     // ... filter to delete one Vehicle
     *   }
     * })
     * 
    **/
    delete<T extends VehicleDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, VehicleDeleteArgs<ExtArgs>>
    ): Prisma__VehicleClient<$Result.GetResult<Prisma.$VehiclePayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Vehicle.
     * @param {VehicleUpdateArgs} args - Arguments to update one Vehicle.
     * @example
     * // Update one Vehicle
     * const vehicle = await prisma.vehicle.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends VehicleUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, VehicleUpdateArgs<ExtArgs>>
    ): Prisma__VehicleClient<$Result.GetResult<Prisma.$VehiclePayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Vehicles.
     * @param {VehicleDeleteManyArgs} args - Arguments to filter Vehicles to delete.
     * @example
     * // Delete a few Vehicles
     * const { count } = await prisma.vehicle.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends VehicleDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, VehicleDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Vehicles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehicleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Vehicles
     * const vehicle = await prisma.vehicle.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends VehicleUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, VehicleUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Vehicle.
     * @param {VehicleUpsertArgs} args - Arguments to update or create a Vehicle.
     * @example
     * // Update or create a Vehicle
     * const vehicle = await prisma.vehicle.upsert({
     *   create: {
     *     // ... data to create a Vehicle
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Vehicle we want to update
     *   }
     * })
    **/
    upsert<T extends VehicleUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, VehicleUpsertArgs<ExtArgs>>
    ): Prisma__VehicleClient<$Result.GetResult<Prisma.$VehiclePayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Vehicles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehicleCountArgs} args - Arguments to filter Vehicles to count.
     * @example
     * // Count the number of Vehicles
     * const count = await prisma.vehicle.count({
     *   where: {
     *     // ... the filter for the Vehicles we want to count
     *   }
     * })
    **/
    count<T extends VehicleCountArgs>(
      args?: Subset<T, VehicleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VehicleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Vehicle.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehicleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VehicleAggregateArgs>(args: Subset<T, VehicleAggregateArgs>): Prisma.PrismaPromise<GetVehicleAggregateType<T>>

    /**
     * Group by Vehicle.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehicleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VehicleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VehicleGroupByArgs['orderBy'] }
        : { orderBy?: VehicleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VehicleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVehicleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Vehicle model
   */
  readonly fields: VehicleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Vehicle.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VehicleClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    candidate<T extends Vehicle$candidateArgs<ExtArgs> = {}>(args?: Subset<T, Vehicle$candidateArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    FamilyMemberToVehicle<T extends Vehicle$FamilyMemberToVehicleArgs<ExtArgs> = {}>(args?: Subset<T, Vehicle$FamilyMemberToVehicleArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FamilyMemberToVehiclePayload<ExtArgs>, T, 'findMany'> | Null>;

    LegalResponsible<T extends Vehicle$LegalResponsibleArgs<ExtArgs> = {}>(args?: Subset<T, Vehicle$LegalResponsibleArgs<ExtArgs>>): Prisma__LegalResponsibleClient<$Result.GetResult<Prisma.$LegalResponsiblePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Vehicle model
   */ 
  interface VehicleFieldRefs {
    readonly id: FieldRef<"Vehicle", 'String'>
    readonly vehicleType: FieldRef<"Vehicle", 'VehicleType'>
    readonly modelAndBrand: FieldRef<"Vehicle", 'String'>
    readonly main_id: FieldRef<"Vehicle", 'String'>
    readonly manufacturingYear: FieldRef<"Vehicle", 'Int'>
    readonly situation: FieldRef<"Vehicle", 'VehicleSituation'>
    readonly financedMonths: FieldRef<"Vehicle", 'Int'>
    readonly monthsToPayOff: FieldRef<"Vehicle", 'Int'>
    readonly hasInsurance: FieldRef<"Vehicle", 'Boolean'>
    readonly insuranceValue: FieldRef<"Vehicle", 'Float'>
    readonly usage: FieldRef<"Vehicle", 'VehicleUsage'>
    readonly candidate_id: FieldRef<"Vehicle", 'String'>
    readonly owners_id: FieldRef<"Vehicle", 'String[]'>
    readonly legalResponsibleId: FieldRef<"Vehicle", 'String'>
    readonly application_id: FieldRef<"Vehicle", 'String'>
  }
    

  // Custom InputTypes

  /**
   * Vehicle findUnique
   */
  export type VehicleFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vehicle
     */
    select?: VehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: VehicleInclude<ExtArgs> | null
    /**
     * Filter, which Vehicle to fetch.
     */
    where: VehicleWhereUniqueInput
  }


  /**
   * Vehicle findUniqueOrThrow
   */
  export type VehicleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vehicle
     */
    select?: VehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: VehicleInclude<ExtArgs> | null
    /**
     * Filter, which Vehicle to fetch.
     */
    where: VehicleWhereUniqueInput
  }


  /**
   * Vehicle findFirst
   */
  export type VehicleFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vehicle
     */
    select?: VehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: VehicleInclude<ExtArgs> | null
    /**
     * Filter, which Vehicle to fetch.
     */
    where?: VehicleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vehicles to fetch.
     */
    orderBy?: VehicleOrderByWithRelationInput | VehicleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Vehicles.
     */
    cursor?: VehicleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vehicles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vehicles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Vehicles.
     */
    distinct?: VehicleScalarFieldEnum | VehicleScalarFieldEnum[]
  }


  /**
   * Vehicle findFirstOrThrow
   */
  export type VehicleFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vehicle
     */
    select?: VehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: VehicleInclude<ExtArgs> | null
    /**
     * Filter, which Vehicle to fetch.
     */
    where?: VehicleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vehicles to fetch.
     */
    orderBy?: VehicleOrderByWithRelationInput | VehicleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Vehicles.
     */
    cursor?: VehicleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vehicles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vehicles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Vehicles.
     */
    distinct?: VehicleScalarFieldEnum | VehicleScalarFieldEnum[]
  }


  /**
   * Vehicle findMany
   */
  export type VehicleFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vehicle
     */
    select?: VehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: VehicleInclude<ExtArgs> | null
    /**
     * Filter, which Vehicles to fetch.
     */
    where?: VehicleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vehicles to fetch.
     */
    orderBy?: VehicleOrderByWithRelationInput | VehicleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Vehicles.
     */
    cursor?: VehicleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vehicles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vehicles.
     */
    skip?: number
    distinct?: VehicleScalarFieldEnum | VehicleScalarFieldEnum[]
  }


  /**
   * Vehicle create
   */
  export type VehicleCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vehicle
     */
    select?: VehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: VehicleInclude<ExtArgs> | null
    /**
     * The data needed to create a Vehicle.
     */
    data: XOR<VehicleCreateInput, VehicleUncheckedCreateInput>
  }


  /**
   * Vehicle createMany
   */
  export type VehicleCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Vehicles.
     */
    data: VehicleCreateManyInput | VehicleCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Vehicle update
   */
  export type VehicleUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vehicle
     */
    select?: VehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: VehicleInclude<ExtArgs> | null
    /**
     * The data needed to update a Vehicle.
     */
    data: XOR<VehicleUpdateInput, VehicleUncheckedUpdateInput>
    /**
     * Choose, which Vehicle to update.
     */
    where: VehicleWhereUniqueInput
  }


  /**
   * Vehicle updateMany
   */
  export type VehicleUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Vehicles.
     */
    data: XOR<VehicleUpdateManyMutationInput, VehicleUncheckedUpdateManyInput>
    /**
     * Filter which Vehicles to update
     */
    where?: VehicleWhereInput
  }


  /**
   * Vehicle upsert
   */
  export type VehicleUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vehicle
     */
    select?: VehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: VehicleInclude<ExtArgs> | null
    /**
     * The filter to search for the Vehicle to update in case it exists.
     */
    where: VehicleWhereUniqueInput
    /**
     * In case the Vehicle found by the `where` argument doesn't exist, create a new Vehicle with this data.
     */
    create: XOR<VehicleCreateInput, VehicleUncheckedCreateInput>
    /**
     * In case the Vehicle was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VehicleUpdateInput, VehicleUncheckedUpdateInput>
  }


  /**
   * Vehicle delete
   */
  export type VehicleDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vehicle
     */
    select?: VehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: VehicleInclude<ExtArgs> | null
    /**
     * Filter which Vehicle to delete.
     */
    where: VehicleWhereUniqueInput
  }


  /**
   * Vehicle deleteMany
   */
  export type VehicleDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which Vehicles to delete
     */
    where?: VehicleWhereInput
  }


  /**
   * Vehicle.candidate
   */
  export type Vehicle$candidateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CandidateInclude<ExtArgs> | null
    where?: CandidateWhereInput
  }


  /**
   * Vehicle.FamilyMemberToVehicle
   */
  export type Vehicle$FamilyMemberToVehicleArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberToVehicle
     */
    select?: FamilyMemberToVehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberToVehicleInclude<ExtArgs> | null
    where?: FamilyMemberToVehicleWhereInput
    orderBy?: FamilyMemberToVehicleOrderByWithRelationInput | FamilyMemberToVehicleOrderByWithRelationInput[]
    cursor?: FamilyMemberToVehicleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FamilyMemberToVehicleScalarFieldEnum | FamilyMemberToVehicleScalarFieldEnum[]
  }


  /**
   * Vehicle.LegalResponsible
   */
  export type Vehicle$LegalResponsibleArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalResponsible
     */
    select?: LegalResponsibleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LegalResponsibleInclude<ExtArgs> | null
    where?: LegalResponsibleWhereInput
  }


  /**
   * Vehicle without action
   */
  export type VehicleDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vehicle
     */
    select?: VehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: VehicleInclude<ExtArgs> | null
  }



  /**
   * Model FamilyMemberIncome
   */

  export type AggregateFamilyMemberIncome = {
    _count: FamilyMemberIncomeCountAggregateOutputType | null
    _avg: FamilyMemberIncomeAvgAggregateOutputType | null
    _sum: FamilyMemberIncomeSumAggregateOutputType | null
    _min: FamilyMemberIncomeMinAggregateOutputType | null
    _max: FamilyMemberIncomeMaxAggregateOutputType | null
  }

  export type FamilyMemberIncomeAvgAggregateOutputType = {
    parcels: number | null
    parcelValue: number | null
    quantity: number | null
  }

  export type FamilyMemberIncomeSumAggregateOutputType = {
    parcels: number | null
    parcelValue: number | null
    quantity: number | null
  }

  export type FamilyMemberIncomeMinAggregateOutputType = {
    id: string | null
    employmentType: $Enums.EmploymentType | null
    averageIncome: string | null
    main_id: string | null
    admissionDate: Date | null
    position: string | null
    payingSource: string | null
    payingSourcePhone: string | null
    startDate: Date | null
    CNPJ: string | null
    financialAssistantCPF: string | null
    socialReason: string | null
    fantasyName: string | null
    CPNJ: string | null
    receivesUnemployment: boolean | null
    parcels: number | null
    firstParcelDate: Date | null
    parcelValue: number | null
    familyMember_id: string | null
    quantity: number | null
    candidate_id: string | null
    application_id: string | null
    legalResponsibleId: string | null
  }

  export type FamilyMemberIncomeMaxAggregateOutputType = {
    id: string | null
    employmentType: $Enums.EmploymentType | null
    averageIncome: string | null
    main_id: string | null
    admissionDate: Date | null
    position: string | null
    payingSource: string | null
    payingSourcePhone: string | null
    startDate: Date | null
    CNPJ: string | null
    financialAssistantCPF: string | null
    socialReason: string | null
    fantasyName: string | null
    CPNJ: string | null
    receivesUnemployment: boolean | null
    parcels: number | null
    firstParcelDate: Date | null
    parcelValue: number | null
    familyMember_id: string | null
    quantity: number | null
    candidate_id: string | null
    application_id: string | null
    legalResponsibleId: string | null
  }

  export type FamilyMemberIncomeCountAggregateOutputType = {
    id: number
    employmentType: number
    averageIncome: number
    main_id: number
    admissionDate: number
    position: number
    payingSource: number
    payingSourcePhone: number
    startDate: number
    CNPJ: number
    financialAssistantCPF: number
    socialReason: number
    fantasyName: number
    CPNJ: number
    receivesUnemployment: number
    parcels: number
    firstParcelDate: number
    parcelValue: number
    familyMember_id: number
    quantity: number
    candidate_id: number
    application_id: number
    legalResponsibleId: number
    _all: number
  }


  export type FamilyMemberIncomeAvgAggregateInputType = {
    parcels?: true
    parcelValue?: true
    quantity?: true
  }

  export type FamilyMemberIncomeSumAggregateInputType = {
    parcels?: true
    parcelValue?: true
    quantity?: true
  }

  export type FamilyMemberIncomeMinAggregateInputType = {
    id?: true
    employmentType?: true
    averageIncome?: true
    main_id?: true
    admissionDate?: true
    position?: true
    payingSource?: true
    payingSourcePhone?: true
    startDate?: true
    CNPJ?: true
    financialAssistantCPF?: true
    socialReason?: true
    fantasyName?: true
    CPNJ?: true
    receivesUnemployment?: true
    parcels?: true
    firstParcelDate?: true
    parcelValue?: true
    familyMember_id?: true
    quantity?: true
    candidate_id?: true
    application_id?: true
    legalResponsibleId?: true
  }

  export type FamilyMemberIncomeMaxAggregateInputType = {
    id?: true
    employmentType?: true
    averageIncome?: true
    main_id?: true
    admissionDate?: true
    position?: true
    payingSource?: true
    payingSourcePhone?: true
    startDate?: true
    CNPJ?: true
    financialAssistantCPF?: true
    socialReason?: true
    fantasyName?: true
    CPNJ?: true
    receivesUnemployment?: true
    parcels?: true
    firstParcelDate?: true
    parcelValue?: true
    familyMember_id?: true
    quantity?: true
    candidate_id?: true
    application_id?: true
    legalResponsibleId?: true
  }

  export type FamilyMemberIncomeCountAggregateInputType = {
    id?: true
    employmentType?: true
    averageIncome?: true
    main_id?: true
    admissionDate?: true
    position?: true
    payingSource?: true
    payingSourcePhone?: true
    startDate?: true
    CNPJ?: true
    financialAssistantCPF?: true
    socialReason?: true
    fantasyName?: true
    CPNJ?: true
    receivesUnemployment?: true
    parcels?: true
    firstParcelDate?: true
    parcelValue?: true
    familyMember_id?: true
    quantity?: true
    candidate_id?: true
    application_id?: true
    legalResponsibleId?: true
    _all?: true
  }

  export type FamilyMemberIncomeAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which FamilyMemberIncome to aggregate.
     */
    where?: FamilyMemberIncomeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FamilyMemberIncomes to fetch.
     */
    orderBy?: FamilyMemberIncomeOrderByWithRelationInput | FamilyMemberIncomeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FamilyMemberIncomeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FamilyMemberIncomes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FamilyMemberIncomes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FamilyMemberIncomes
    **/
    _count?: true | FamilyMemberIncomeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FamilyMemberIncomeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FamilyMemberIncomeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FamilyMemberIncomeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FamilyMemberIncomeMaxAggregateInputType
  }

  export type GetFamilyMemberIncomeAggregateType<T extends FamilyMemberIncomeAggregateArgs> = {
        [P in keyof T & keyof AggregateFamilyMemberIncome]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFamilyMemberIncome[P]>
      : GetScalarType<T[P], AggregateFamilyMemberIncome[P]>
  }




  export type FamilyMemberIncomeGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: FamilyMemberIncomeWhereInput
    orderBy?: FamilyMemberIncomeOrderByWithAggregationInput | FamilyMemberIncomeOrderByWithAggregationInput[]
    by: FamilyMemberIncomeScalarFieldEnum[] | FamilyMemberIncomeScalarFieldEnum
    having?: FamilyMemberIncomeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FamilyMemberIncomeCountAggregateInputType | true
    _avg?: FamilyMemberIncomeAvgAggregateInputType
    _sum?: FamilyMemberIncomeSumAggregateInputType
    _min?: FamilyMemberIncomeMinAggregateInputType
    _max?: FamilyMemberIncomeMaxAggregateInputType
  }

  export type FamilyMemberIncomeGroupByOutputType = {
    id: string
    employmentType: $Enums.EmploymentType
    averageIncome: string
    main_id: string | null
    admissionDate: Date | null
    position: string | null
    payingSource: string | null
    payingSourcePhone: string | null
    startDate: Date | null
    CNPJ: string | null
    financialAssistantCPF: string | null
    socialReason: string | null
    fantasyName: string | null
    CPNJ: string | null
    receivesUnemployment: boolean | null
    parcels: number | null
    firstParcelDate: Date | null
    parcelValue: number | null
    familyMember_id: string | null
    quantity: number
    candidate_id: string | null
    application_id: string
    legalResponsibleId: string | null
    _count: FamilyMemberIncomeCountAggregateOutputType | null
    _avg: FamilyMemberIncomeAvgAggregateOutputType | null
    _sum: FamilyMemberIncomeSumAggregateOutputType | null
    _min: FamilyMemberIncomeMinAggregateOutputType | null
    _max: FamilyMemberIncomeMaxAggregateOutputType | null
  }

  type GetFamilyMemberIncomeGroupByPayload<T extends FamilyMemberIncomeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FamilyMemberIncomeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FamilyMemberIncomeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FamilyMemberIncomeGroupByOutputType[P]>
            : GetScalarType<T[P], FamilyMemberIncomeGroupByOutputType[P]>
        }
      >
    >


  export type FamilyMemberIncomeSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    employmentType?: boolean
    averageIncome?: boolean
    main_id?: boolean
    admissionDate?: boolean
    position?: boolean
    payingSource?: boolean
    payingSourcePhone?: boolean
    startDate?: boolean
    CNPJ?: boolean
    financialAssistantCPF?: boolean
    socialReason?: boolean
    fantasyName?: boolean
    CPNJ?: boolean
    receivesUnemployment?: boolean
    parcels?: boolean
    firstParcelDate?: boolean
    parcelValue?: boolean
    familyMember_id?: boolean
    quantity?: boolean
    candidate_id?: boolean
    application_id?: boolean
    legalResponsibleId?: boolean
    familyMember?: boolean | FamilyMemberIncome$familyMemberArgs<ExtArgs>
    candidate?: boolean | FamilyMemberIncome$candidateArgs<ExtArgs>
    LegalResponsible?: boolean | FamilyMemberIncome$LegalResponsibleArgs<ExtArgs>
  }, ExtArgs["result"]["familyMemberIncome"]>

  export type FamilyMemberIncomeSelectScalar = {
    id?: boolean
    employmentType?: boolean
    averageIncome?: boolean
    main_id?: boolean
    admissionDate?: boolean
    position?: boolean
    payingSource?: boolean
    payingSourcePhone?: boolean
    startDate?: boolean
    CNPJ?: boolean
    financialAssistantCPF?: boolean
    socialReason?: boolean
    fantasyName?: boolean
    CPNJ?: boolean
    receivesUnemployment?: boolean
    parcels?: boolean
    firstParcelDate?: boolean
    parcelValue?: boolean
    familyMember_id?: boolean
    quantity?: boolean
    candidate_id?: boolean
    application_id?: boolean
    legalResponsibleId?: boolean
  }

  export type FamilyMemberIncomeInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    familyMember?: boolean | FamilyMemberIncome$familyMemberArgs<ExtArgs>
    candidate?: boolean | FamilyMemberIncome$candidateArgs<ExtArgs>
    LegalResponsible?: boolean | FamilyMemberIncome$LegalResponsibleArgs<ExtArgs>
  }


  export type $FamilyMemberIncomePayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "FamilyMemberIncome"
    objects: {
      familyMember: Prisma.$FamilyMemberPayload<ExtArgs> | null
      candidate: Prisma.$CandidatePayload<ExtArgs> | null
      LegalResponsible: Prisma.$LegalResponsiblePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetResult<{
      id: string
      employmentType: $Enums.EmploymentType
      averageIncome: string
      main_id: string | null
      admissionDate: Date | null
      position: string | null
      payingSource: string | null
      payingSourcePhone: string | null
      startDate: Date | null
      CNPJ: string | null
      financialAssistantCPF: string | null
      socialReason: string | null
      fantasyName: string | null
      CPNJ: string | null
      receivesUnemployment: boolean | null
      parcels: number | null
      firstParcelDate: Date | null
      parcelValue: number | null
      familyMember_id: string | null
      quantity: number
      candidate_id: string | null
      application_id: string
      legalResponsibleId: string | null
    }, ExtArgs["result"]["familyMemberIncome"]>
    composites: {}
  }


  type FamilyMemberIncomeGetPayload<S extends boolean | null | undefined | FamilyMemberIncomeDefaultArgs> = $Result.GetResult<Prisma.$FamilyMemberIncomePayload, S>

  type FamilyMemberIncomeCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<FamilyMemberIncomeFindManyArgs, 'select' | 'include'> & {
      select?: FamilyMemberIncomeCountAggregateInputType | true
    }

  export interface FamilyMemberIncomeDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FamilyMemberIncome'], meta: { name: 'FamilyMemberIncome' } }
    /**
     * Find zero or one FamilyMemberIncome that matches the filter.
     * @param {FamilyMemberIncomeFindUniqueArgs} args - Arguments to find a FamilyMemberIncome
     * @example
     * // Get one FamilyMemberIncome
     * const familyMemberIncome = await prisma.familyMemberIncome.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FamilyMemberIncomeFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, FamilyMemberIncomeFindUniqueArgs<ExtArgs>>
    ): Prisma__FamilyMemberIncomeClient<$Result.GetResult<Prisma.$FamilyMemberIncomePayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one FamilyMemberIncome that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {FamilyMemberIncomeFindUniqueOrThrowArgs} args - Arguments to find a FamilyMemberIncome
     * @example
     * // Get one FamilyMemberIncome
     * const familyMemberIncome = await prisma.familyMemberIncome.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends FamilyMemberIncomeFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, FamilyMemberIncomeFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__FamilyMemberIncomeClient<$Result.GetResult<Prisma.$FamilyMemberIncomePayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first FamilyMemberIncome that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberIncomeFindFirstArgs} args - Arguments to find a FamilyMemberIncome
     * @example
     * // Get one FamilyMemberIncome
     * const familyMemberIncome = await prisma.familyMemberIncome.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FamilyMemberIncomeFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, FamilyMemberIncomeFindFirstArgs<ExtArgs>>
    ): Prisma__FamilyMemberIncomeClient<$Result.GetResult<Prisma.$FamilyMemberIncomePayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first FamilyMemberIncome that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberIncomeFindFirstOrThrowArgs} args - Arguments to find a FamilyMemberIncome
     * @example
     * // Get one FamilyMemberIncome
     * const familyMemberIncome = await prisma.familyMemberIncome.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends FamilyMemberIncomeFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, FamilyMemberIncomeFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__FamilyMemberIncomeClient<$Result.GetResult<Prisma.$FamilyMemberIncomePayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more FamilyMemberIncomes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberIncomeFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FamilyMemberIncomes
     * const familyMemberIncomes = await prisma.familyMemberIncome.findMany()
     * 
     * // Get first 10 FamilyMemberIncomes
     * const familyMemberIncomes = await prisma.familyMemberIncome.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const familyMemberIncomeWithIdOnly = await prisma.familyMemberIncome.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FamilyMemberIncomeFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FamilyMemberIncomeFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FamilyMemberIncomePayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a FamilyMemberIncome.
     * @param {FamilyMemberIncomeCreateArgs} args - Arguments to create a FamilyMemberIncome.
     * @example
     * // Create one FamilyMemberIncome
     * const FamilyMemberIncome = await prisma.familyMemberIncome.create({
     *   data: {
     *     // ... data to create a FamilyMemberIncome
     *   }
     * })
     * 
    **/
    create<T extends FamilyMemberIncomeCreateArgs<ExtArgs>>(
      args: SelectSubset<T, FamilyMemberIncomeCreateArgs<ExtArgs>>
    ): Prisma__FamilyMemberIncomeClient<$Result.GetResult<Prisma.$FamilyMemberIncomePayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many FamilyMemberIncomes.
     *     @param {FamilyMemberIncomeCreateManyArgs} args - Arguments to create many FamilyMemberIncomes.
     *     @example
     *     // Create many FamilyMemberIncomes
     *     const familyMemberIncome = await prisma.familyMemberIncome.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends FamilyMemberIncomeCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FamilyMemberIncomeCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a FamilyMemberIncome.
     * @param {FamilyMemberIncomeDeleteArgs} args - Arguments to delete one FamilyMemberIncome.
     * @example
     * // Delete one FamilyMemberIncome
     * const FamilyMemberIncome = await prisma.familyMemberIncome.delete({
     *   where: {
     *     // ... filter to delete one FamilyMemberIncome
     *   }
     * })
     * 
    **/
    delete<T extends FamilyMemberIncomeDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, FamilyMemberIncomeDeleteArgs<ExtArgs>>
    ): Prisma__FamilyMemberIncomeClient<$Result.GetResult<Prisma.$FamilyMemberIncomePayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one FamilyMemberIncome.
     * @param {FamilyMemberIncomeUpdateArgs} args - Arguments to update one FamilyMemberIncome.
     * @example
     * // Update one FamilyMemberIncome
     * const familyMemberIncome = await prisma.familyMemberIncome.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends FamilyMemberIncomeUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, FamilyMemberIncomeUpdateArgs<ExtArgs>>
    ): Prisma__FamilyMemberIncomeClient<$Result.GetResult<Prisma.$FamilyMemberIncomePayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more FamilyMemberIncomes.
     * @param {FamilyMemberIncomeDeleteManyArgs} args - Arguments to filter FamilyMemberIncomes to delete.
     * @example
     * // Delete a few FamilyMemberIncomes
     * const { count } = await prisma.familyMemberIncome.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends FamilyMemberIncomeDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FamilyMemberIncomeDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FamilyMemberIncomes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberIncomeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FamilyMemberIncomes
     * const familyMemberIncome = await prisma.familyMemberIncome.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends FamilyMemberIncomeUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, FamilyMemberIncomeUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one FamilyMemberIncome.
     * @param {FamilyMemberIncomeUpsertArgs} args - Arguments to update or create a FamilyMemberIncome.
     * @example
     * // Update or create a FamilyMemberIncome
     * const familyMemberIncome = await prisma.familyMemberIncome.upsert({
     *   create: {
     *     // ... data to create a FamilyMemberIncome
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FamilyMemberIncome we want to update
     *   }
     * })
    **/
    upsert<T extends FamilyMemberIncomeUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, FamilyMemberIncomeUpsertArgs<ExtArgs>>
    ): Prisma__FamilyMemberIncomeClient<$Result.GetResult<Prisma.$FamilyMemberIncomePayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of FamilyMemberIncomes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberIncomeCountArgs} args - Arguments to filter FamilyMemberIncomes to count.
     * @example
     * // Count the number of FamilyMemberIncomes
     * const count = await prisma.familyMemberIncome.count({
     *   where: {
     *     // ... the filter for the FamilyMemberIncomes we want to count
     *   }
     * })
    **/
    count<T extends FamilyMemberIncomeCountArgs>(
      args?: Subset<T, FamilyMemberIncomeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FamilyMemberIncomeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FamilyMemberIncome.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberIncomeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FamilyMemberIncomeAggregateArgs>(args: Subset<T, FamilyMemberIncomeAggregateArgs>): Prisma.PrismaPromise<GetFamilyMemberIncomeAggregateType<T>>

    /**
     * Group by FamilyMemberIncome.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberIncomeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FamilyMemberIncomeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FamilyMemberIncomeGroupByArgs['orderBy'] }
        : { orderBy?: FamilyMemberIncomeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FamilyMemberIncomeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFamilyMemberIncomeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FamilyMemberIncome model
   */
  readonly fields: FamilyMemberIncomeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FamilyMemberIncome.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FamilyMemberIncomeClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    familyMember<T extends FamilyMemberIncome$familyMemberArgs<ExtArgs> = {}>(args?: Subset<T, FamilyMemberIncome$familyMemberArgs<ExtArgs>>): Prisma__FamilyMemberClient<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    candidate<T extends FamilyMemberIncome$candidateArgs<ExtArgs> = {}>(args?: Subset<T, FamilyMemberIncome$candidateArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    LegalResponsible<T extends FamilyMemberIncome$LegalResponsibleArgs<ExtArgs> = {}>(args?: Subset<T, FamilyMemberIncome$LegalResponsibleArgs<ExtArgs>>): Prisma__LegalResponsibleClient<$Result.GetResult<Prisma.$LegalResponsiblePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the FamilyMemberIncome model
   */ 
  interface FamilyMemberIncomeFieldRefs {
    readonly id: FieldRef<"FamilyMemberIncome", 'String'>
    readonly employmentType: FieldRef<"FamilyMemberIncome", 'EmploymentType'>
    readonly averageIncome: FieldRef<"FamilyMemberIncome", 'String'>
    readonly main_id: FieldRef<"FamilyMemberIncome", 'String'>
    readonly admissionDate: FieldRef<"FamilyMemberIncome", 'DateTime'>
    readonly position: FieldRef<"FamilyMemberIncome", 'String'>
    readonly payingSource: FieldRef<"FamilyMemberIncome", 'String'>
    readonly payingSourcePhone: FieldRef<"FamilyMemberIncome", 'String'>
    readonly startDate: FieldRef<"FamilyMemberIncome", 'DateTime'>
    readonly CNPJ: FieldRef<"FamilyMemberIncome", 'String'>
    readonly financialAssistantCPF: FieldRef<"FamilyMemberIncome", 'String'>
    readonly socialReason: FieldRef<"FamilyMemberIncome", 'String'>
    readonly fantasyName: FieldRef<"FamilyMemberIncome", 'String'>
    readonly CPNJ: FieldRef<"FamilyMemberIncome", 'String'>
    readonly receivesUnemployment: FieldRef<"FamilyMemberIncome", 'Boolean'>
    readonly parcels: FieldRef<"FamilyMemberIncome", 'Int'>
    readonly firstParcelDate: FieldRef<"FamilyMemberIncome", 'DateTime'>
    readonly parcelValue: FieldRef<"FamilyMemberIncome", 'Float'>
    readonly familyMember_id: FieldRef<"FamilyMemberIncome", 'String'>
    readonly quantity: FieldRef<"FamilyMemberIncome", 'Int'>
    readonly candidate_id: FieldRef<"FamilyMemberIncome", 'String'>
    readonly application_id: FieldRef<"FamilyMemberIncome", 'String'>
    readonly legalResponsibleId: FieldRef<"FamilyMemberIncome", 'String'>
  }
    

  // Custom InputTypes

  /**
   * FamilyMemberIncome findUnique
   */
  export type FamilyMemberIncomeFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberIncome
     */
    select?: FamilyMemberIncomeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberIncomeInclude<ExtArgs> | null
    /**
     * Filter, which FamilyMemberIncome to fetch.
     */
    where: FamilyMemberIncomeWhereUniqueInput
  }


  /**
   * FamilyMemberIncome findUniqueOrThrow
   */
  export type FamilyMemberIncomeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberIncome
     */
    select?: FamilyMemberIncomeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberIncomeInclude<ExtArgs> | null
    /**
     * Filter, which FamilyMemberIncome to fetch.
     */
    where: FamilyMemberIncomeWhereUniqueInput
  }


  /**
   * FamilyMemberIncome findFirst
   */
  export type FamilyMemberIncomeFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberIncome
     */
    select?: FamilyMemberIncomeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberIncomeInclude<ExtArgs> | null
    /**
     * Filter, which FamilyMemberIncome to fetch.
     */
    where?: FamilyMemberIncomeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FamilyMemberIncomes to fetch.
     */
    orderBy?: FamilyMemberIncomeOrderByWithRelationInput | FamilyMemberIncomeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FamilyMemberIncomes.
     */
    cursor?: FamilyMemberIncomeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FamilyMemberIncomes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FamilyMemberIncomes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FamilyMemberIncomes.
     */
    distinct?: FamilyMemberIncomeScalarFieldEnum | FamilyMemberIncomeScalarFieldEnum[]
  }


  /**
   * FamilyMemberIncome findFirstOrThrow
   */
  export type FamilyMemberIncomeFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberIncome
     */
    select?: FamilyMemberIncomeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberIncomeInclude<ExtArgs> | null
    /**
     * Filter, which FamilyMemberIncome to fetch.
     */
    where?: FamilyMemberIncomeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FamilyMemberIncomes to fetch.
     */
    orderBy?: FamilyMemberIncomeOrderByWithRelationInput | FamilyMemberIncomeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FamilyMemberIncomes.
     */
    cursor?: FamilyMemberIncomeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FamilyMemberIncomes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FamilyMemberIncomes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FamilyMemberIncomes.
     */
    distinct?: FamilyMemberIncomeScalarFieldEnum | FamilyMemberIncomeScalarFieldEnum[]
  }


  /**
   * FamilyMemberIncome findMany
   */
  export type FamilyMemberIncomeFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberIncome
     */
    select?: FamilyMemberIncomeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberIncomeInclude<ExtArgs> | null
    /**
     * Filter, which FamilyMemberIncomes to fetch.
     */
    where?: FamilyMemberIncomeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FamilyMemberIncomes to fetch.
     */
    orderBy?: FamilyMemberIncomeOrderByWithRelationInput | FamilyMemberIncomeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FamilyMemberIncomes.
     */
    cursor?: FamilyMemberIncomeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FamilyMemberIncomes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FamilyMemberIncomes.
     */
    skip?: number
    distinct?: FamilyMemberIncomeScalarFieldEnum | FamilyMemberIncomeScalarFieldEnum[]
  }


  /**
   * FamilyMemberIncome create
   */
  export type FamilyMemberIncomeCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberIncome
     */
    select?: FamilyMemberIncomeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberIncomeInclude<ExtArgs> | null
    /**
     * The data needed to create a FamilyMemberIncome.
     */
    data: XOR<FamilyMemberIncomeCreateInput, FamilyMemberIncomeUncheckedCreateInput>
  }


  /**
   * FamilyMemberIncome createMany
   */
  export type FamilyMemberIncomeCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FamilyMemberIncomes.
     */
    data: FamilyMemberIncomeCreateManyInput | FamilyMemberIncomeCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * FamilyMemberIncome update
   */
  export type FamilyMemberIncomeUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberIncome
     */
    select?: FamilyMemberIncomeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberIncomeInclude<ExtArgs> | null
    /**
     * The data needed to update a FamilyMemberIncome.
     */
    data: XOR<FamilyMemberIncomeUpdateInput, FamilyMemberIncomeUncheckedUpdateInput>
    /**
     * Choose, which FamilyMemberIncome to update.
     */
    where: FamilyMemberIncomeWhereUniqueInput
  }


  /**
   * FamilyMemberIncome updateMany
   */
  export type FamilyMemberIncomeUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FamilyMemberIncomes.
     */
    data: XOR<FamilyMemberIncomeUpdateManyMutationInput, FamilyMemberIncomeUncheckedUpdateManyInput>
    /**
     * Filter which FamilyMemberIncomes to update
     */
    where?: FamilyMemberIncomeWhereInput
  }


  /**
   * FamilyMemberIncome upsert
   */
  export type FamilyMemberIncomeUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberIncome
     */
    select?: FamilyMemberIncomeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberIncomeInclude<ExtArgs> | null
    /**
     * The filter to search for the FamilyMemberIncome to update in case it exists.
     */
    where: FamilyMemberIncomeWhereUniqueInput
    /**
     * In case the FamilyMemberIncome found by the `where` argument doesn't exist, create a new FamilyMemberIncome with this data.
     */
    create: XOR<FamilyMemberIncomeCreateInput, FamilyMemberIncomeUncheckedCreateInput>
    /**
     * In case the FamilyMemberIncome was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FamilyMemberIncomeUpdateInput, FamilyMemberIncomeUncheckedUpdateInput>
  }


  /**
   * FamilyMemberIncome delete
   */
  export type FamilyMemberIncomeDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberIncome
     */
    select?: FamilyMemberIncomeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberIncomeInclude<ExtArgs> | null
    /**
     * Filter which FamilyMemberIncome to delete.
     */
    where: FamilyMemberIncomeWhereUniqueInput
  }


  /**
   * FamilyMemberIncome deleteMany
   */
  export type FamilyMemberIncomeDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which FamilyMemberIncomes to delete
     */
    where?: FamilyMemberIncomeWhereInput
  }


  /**
   * FamilyMemberIncome.familyMember
   */
  export type FamilyMemberIncome$familyMemberArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    where?: FamilyMemberWhereInput
  }


  /**
   * FamilyMemberIncome.candidate
   */
  export type FamilyMemberIncome$candidateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CandidateInclude<ExtArgs> | null
    where?: CandidateWhereInput
  }


  /**
   * FamilyMemberIncome.LegalResponsible
   */
  export type FamilyMemberIncome$LegalResponsibleArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalResponsible
     */
    select?: LegalResponsibleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LegalResponsibleInclude<ExtArgs> | null
    where?: LegalResponsibleWhereInput
  }


  /**
   * FamilyMemberIncome without action
   */
  export type FamilyMemberIncomeDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberIncome
     */
    select?: FamilyMemberIncomeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberIncomeInclude<ExtArgs> | null
  }



  /**
   * Model MonthlyIncome
   */

  export type AggregateMonthlyIncome = {
    _count: MonthlyIncomeCountAggregateOutputType | null
    _avg: MonthlyIncomeAvgAggregateOutputType | null
    _sum: MonthlyIncomeSumAggregateOutputType | null
    _min: MonthlyIncomeMinAggregateOutputType | null
    _max: MonthlyIncomeMaxAggregateOutputType | null
  }

  export type MonthlyIncomeAvgAggregateOutputType = {
    grossAmount: number | null
    liquidAmount: number | null
    proLabore: number | null
    dividends: number | null
    total: number | null
    deductionValue: Decimal | null
    publicPension: Decimal | null
    incomeTax: Decimal | null
    otherDeductions: Decimal | null
    foodAllowanceValue: Decimal | null
    transportAllowanceValue: Decimal | null
    expenseReimbursementValue: Decimal | null
    advancePaymentValue: Decimal | null
    reversalValue: Decimal | null
    compensationValue: Decimal | null
    judicialPensionValue: Decimal | null
  }

  export type MonthlyIncomeSumAggregateOutputType = {
    grossAmount: number | null
    liquidAmount: number | null
    proLabore: number | null
    dividends: number | null
    total: number | null
    deductionValue: Decimal | null
    publicPension: Decimal | null
    incomeTax: Decimal | null
    otherDeductions: Decimal | null
    foodAllowanceValue: Decimal | null
    transportAllowanceValue: Decimal | null
    expenseReimbursementValue: Decimal | null
    advancePaymentValue: Decimal | null
    reversalValue: Decimal | null
    compensationValue: Decimal | null
    judicialPensionValue: Decimal | null
  }

  export type MonthlyIncomeMinAggregateOutputType = {
    id: string | null
    date: Date | null
    main_id: string | null
    grossAmount: number | null
    liquidAmount: number | null
    proLabore: number | null
    dividends: number | null
    total: number | null
    deductionValue: Decimal | null
    publicPension: Decimal | null
    incomeTax: Decimal | null
    otherDeductions: Decimal | null
    foodAllowanceValue: Decimal | null
    transportAllowanceValue: Decimal | null
    expenseReimbursementValue: Decimal | null
    advancePaymentValue: Decimal | null
    reversalValue: Decimal | null
    compensationValue: Decimal | null
    judicialPensionValue: Decimal | null
    familyMember_id: string | null
    candidate_id: string | null
    incomeSource: $Enums.IncomeSource | null
    application_id: string | null
    legalResponsibleId: string | null
  }

  export type MonthlyIncomeMaxAggregateOutputType = {
    id: string | null
    date: Date | null
    main_id: string | null
    grossAmount: number | null
    liquidAmount: number | null
    proLabore: number | null
    dividends: number | null
    total: number | null
    deductionValue: Decimal | null
    publicPension: Decimal | null
    incomeTax: Decimal | null
    otherDeductions: Decimal | null
    foodAllowanceValue: Decimal | null
    transportAllowanceValue: Decimal | null
    expenseReimbursementValue: Decimal | null
    advancePaymentValue: Decimal | null
    reversalValue: Decimal | null
    compensationValue: Decimal | null
    judicialPensionValue: Decimal | null
    familyMember_id: string | null
    candidate_id: string | null
    incomeSource: $Enums.IncomeSource | null
    application_id: string | null
    legalResponsibleId: string | null
  }

  export type MonthlyIncomeCountAggregateOutputType = {
    id: number
    date: number
    main_id: number
    grossAmount: number
    liquidAmount: number
    proLabore: number
    dividends: number
    total: number
    deductionValue: number
    publicPension: number
    incomeTax: number
    otherDeductions: number
    foodAllowanceValue: number
    transportAllowanceValue: number
    expenseReimbursementValue: number
    advancePaymentValue: number
    reversalValue: number
    compensationValue: number
    judicialPensionValue: number
    familyMember_id: number
    candidate_id: number
    incomeSource: number
    application_id: number
    legalResponsibleId: number
    _all: number
  }


  export type MonthlyIncomeAvgAggregateInputType = {
    grossAmount?: true
    liquidAmount?: true
    proLabore?: true
    dividends?: true
    total?: true
    deductionValue?: true
    publicPension?: true
    incomeTax?: true
    otherDeductions?: true
    foodAllowanceValue?: true
    transportAllowanceValue?: true
    expenseReimbursementValue?: true
    advancePaymentValue?: true
    reversalValue?: true
    compensationValue?: true
    judicialPensionValue?: true
  }

  export type MonthlyIncomeSumAggregateInputType = {
    grossAmount?: true
    liquidAmount?: true
    proLabore?: true
    dividends?: true
    total?: true
    deductionValue?: true
    publicPension?: true
    incomeTax?: true
    otherDeductions?: true
    foodAllowanceValue?: true
    transportAllowanceValue?: true
    expenseReimbursementValue?: true
    advancePaymentValue?: true
    reversalValue?: true
    compensationValue?: true
    judicialPensionValue?: true
  }

  export type MonthlyIncomeMinAggregateInputType = {
    id?: true
    date?: true
    main_id?: true
    grossAmount?: true
    liquidAmount?: true
    proLabore?: true
    dividends?: true
    total?: true
    deductionValue?: true
    publicPension?: true
    incomeTax?: true
    otherDeductions?: true
    foodAllowanceValue?: true
    transportAllowanceValue?: true
    expenseReimbursementValue?: true
    advancePaymentValue?: true
    reversalValue?: true
    compensationValue?: true
    judicialPensionValue?: true
    familyMember_id?: true
    candidate_id?: true
    incomeSource?: true
    application_id?: true
    legalResponsibleId?: true
  }

  export type MonthlyIncomeMaxAggregateInputType = {
    id?: true
    date?: true
    main_id?: true
    grossAmount?: true
    liquidAmount?: true
    proLabore?: true
    dividends?: true
    total?: true
    deductionValue?: true
    publicPension?: true
    incomeTax?: true
    otherDeductions?: true
    foodAllowanceValue?: true
    transportAllowanceValue?: true
    expenseReimbursementValue?: true
    advancePaymentValue?: true
    reversalValue?: true
    compensationValue?: true
    judicialPensionValue?: true
    familyMember_id?: true
    candidate_id?: true
    incomeSource?: true
    application_id?: true
    legalResponsibleId?: true
  }

  export type MonthlyIncomeCountAggregateInputType = {
    id?: true
    date?: true
    main_id?: true
    grossAmount?: true
    liquidAmount?: true
    proLabore?: true
    dividends?: true
    total?: true
    deductionValue?: true
    publicPension?: true
    incomeTax?: true
    otherDeductions?: true
    foodAllowanceValue?: true
    transportAllowanceValue?: true
    expenseReimbursementValue?: true
    advancePaymentValue?: true
    reversalValue?: true
    compensationValue?: true
    judicialPensionValue?: true
    familyMember_id?: true
    candidate_id?: true
    incomeSource?: true
    application_id?: true
    legalResponsibleId?: true
    _all?: true
  }

  export type MonthlyIncomeAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which MonthlyIncome to aggregate.
     */
    where?: MonthlyIncomeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MonthlyIncomes to fetch.
     */
    orderBy?: MonthlyIncomeOrderByWithRelationInput | MonthlyIncomeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MonthlyIncomeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MonthlyIncomes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MonthlyIncomes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MonthlyIncomes
    **/
    _count?: true | MonthlyIncomeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MonthlyIncomeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MonthlyIncomeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MonthlyIncomeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MonthlyIncomeMaxAggregateInputType
  }

  export type GetMonthlyIncomeAggregateType<T extends MonthlyIncomeAggregateArgs> = {
        [P in keyof T & keyof AggregateMonthlyIncome]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMonthlyIncome[P]>
      : GetScalarType<T[P], AggregateMonthlyIncome[P]>
  }




  export type MonthlyIncomeGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: MonthlyIncomeWhereInput
    orderBy?: MonthlyIncomeOrderByWithAggregationInput | MonthlyIncomeOrderByWithAggregationInput[]
    by: MonthlyIncomeScalarFieldEnum[] | MonthlyIncomeScalarFieldEnum
    having?: MonthlyIncomeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MonthlyIncomeCountAggregateInputType | true
    _avg?: MonthlyIncomeAvgAggregateInputType
    _sum?: MonthlyIncomeSumAggregateInputType
    _min?: MonthlyIncomeMinAggregateInputType
    _max?: MonthlyIncomeMaxAggregateInputType
  }

  export type MonthlyIncomeGroupByOutputType = {
    id: string
    date: Date | null
    main_id: string | null
    grossAmount: number | null
    liquidAmount: number | null
    proLabore: number | null
    dividends: number | null
    total: number | null
    deductionValue: Decimal | null
    publicPension: Decimal | null
    incomeTax: Decimal | null
    otherDeductions: Decimal | null
    foodAllowanceValue: Decimal | null
    transportAllowanceValue: Decimal | null
    expenseReimbursementValue: Decimal | null
    advancePaymentValue: Decimal | null
    reversalValue: Decimal | null
    compensationValue: Decimal | null
    judicialPensionValue: Decimal | null
    familyMember_id: string | null
    candidate_id: string | null
    incomeSource: $Enums.IncomeSource | null
    application_id: string
    legalResponsibleId: string | null
    _count: MonthlyIncomeCountAggregateOutputType | null
    _avg: MonthlyIncomeAvgAggregateOutputType | null
    _sum: MonthlyIncomeSumAggregateOutputType | null
    _min: MonthlyIncomeMinAggregateOutputType | null
    _max: MonthlyIncomeMaxAggregateOutputType | null
  }

  type GetMonthlyIncomeGroupByPayload<T extends MonthlyIncomeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MonthlyIncomeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MonthlyIncomeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MonthlyIncomeGroupByOutputType[P]>
            : GetScalarType<T[P], MonthlyIncomeGroupByOutputType[P]>
        }
      >
    >


  export type MonthlyIncomeSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    date?: boolean
    main_id?: boolean
    grossAmount?: boolean
    liquidAmount?: boolean
    proLabore?: boolean
    dividends?: boolean
    total?: boolean
    deductionValue?: boolean
    publicPension?: boolean
    incomeTax?: boolean
    otherDeductions?: boolean
    foodAllowanceValue?: boolean
    transportAllowanceValue?: boolean
    expenseReimbursementValue?: boolean
    advancePaymentValue?: boolean
    reversalValue?: boolean
    compensationValue?: boolean
    judicialPensionValue?: boolean
    familyMember_id?: boolean
    candidate_id?: boolean
    incomeSource?: boolean
    application_id?: boolean
    legalResponsibleId?: boolean
    familyMember?: boolean | MonthlyIncome$familyMemberArgs<ExtArgs>
    candidate?: boolean | MonthlyIncome$candidateArgs<ExtArgs>
    LegalResponsible?: boolean | MonthlyIncome$LegalResponsibleArgs<ExtArgs>
  }, ExtArgs["result"]["monthlyIncome"]>

  export type MonthlyIncomeSelectScalar = {
    id?: boolean
    date?: boolean
    main_id?: boolean
    grossAmount?: boolean
    liquidAmount?: boolean
    proLabore?: boolean
    dividends?: boolean
    total?: boolean
    deductionValue?: boolean
    publicPension?: boolean
    incomeTax?: boolean
    otherDeductions?: boolean
    foodAllowanceValue?: boolean
    transportAllowanceValue?: boolean
    expenseReimbursementValue?: boolean
    advancePaymentValue?: boolean
    reversalValue?: boolean
    compensationValue?: boolean
    judicialPensionValue?: boolean
    familyMember_id?: boolean
    candidate_id?: boolean
    incomeSource?: boolean
    application_id?: boolean
    legalResponsibleId?: boolean
  }

  export type MonthlyIncomeInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    familyMember?: boolean | MonthlyIncome$familyMemberArgs<ExtArgs>
    candidate?: boolean | MonthlyIncome$candidateArgs<ExtArgs>
    LegalResponsible?: boolean | MonthlyIncome$LegalResponsibleArgs<ExtArgs>
  }


  export type $MonthlyIncomePayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "MonthlyIncome"
    objects: {
      familyMember: Prisma.$FamilyMemberPayload<ExtArgs> | null
      candidate: Prisma.$CandidatePayload<ExtArgs> | null
      LegalResponsible: Prisma.$LegalResponsiblePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetResult<{
      id: string
      date: Date | null
      main_id: string | null
      grossAmount: number | null
      liquidAmount: number | null
      proLabore: number | null
      dividends: number | null
      total: number | null
      deductionValue: Prisma.Decimal | null
      publicPension: Prisma.Decimal | null
      incomeTax: Prisma.Decimal | null
      otherDeductions: Prisma.Decimal | null
      foodAllowanceValue: Prisma.Decimal | null
      transportAllowanceValue: Prisma.Decimal | null
      expenseReimbursementValue: Prisma.Decimal | null
      advancePaymentValue: Prisma.Decimal | null
      reversalValue: Prisma.Decimal | null
      compensationValue: Prisma.Decimal | null
      judicialPensionValue: Prisma.Decimal | null
      familyMember_id: string | null
      candidate_id: string | null
      incomeSource: $Enums.IncomeSource | null
      application_id: string
      legalResponsibleId: string | null
    }, ExtArgs["result"]["monthlyIncome"]>
    composites: {}
  }


  type MonthlyIncomeGetPayload<S extends boolean | null | undefined | MonthlyIncomeDefaultArgs> = $Result.GetResult<Prisma.$MonthlyIncomePayload, S>

  type MonthlyIncomeCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<MonthlyIncomeFindManyArgs, 'select' | 'include'> & {
      select?: MonthlyIncomeCountAggregateInputType | true
    }

  export interface MonthlyIncomeDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MonthlyIncome'], meta: { name: 'MonthlyIncome' } }
    /**
     * Find zero or one MonthlyIncome that matches the filter.
     * @param {MonthlyIncomeFindUniqueArgs} args - Arguments to find a MonthlyIncome
     * @example
     * // Get one MonthlyIncome
     * const monthlyIncome = await prisma.monthlyIncome.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends MonthlyIncomeFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, MonthlyIncomeFindUniqueArgs<ExtArgs>>
    ): Prisma__MonthlyIncomeClient<$Result.GetResult<Prisma.$MonthlyIncomePayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one MonthlyIncome that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {MonthlyIncomeFindUniqueOrThrowArgs} args - Arguments to find a MonthlyIncome
     * @example
     * // Get one MonthlyIncome
     * const monthlyIncome = await prisma.monthlyIncome.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends MonthlyIncomeFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, MonthlyIncomeFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__MonthlyIncomeClient<$Result.GetResult<Prisma.$MonthlyIncomePayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first MonthlyIncome that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MonthlyIncomeFindFirstArgs} args - Arguments to find a MonthlyIncome
     * @example
     * // Get one MonthlyIncome
     * const monthlyIncome = await prisma.monthlyIncome.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends MonthlyIncomeFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, MonthlyIncomeFindFirstArgs<ExtArgs>>
    ): Prisma__MonthlyIncomeClient<$Result.GetResult<Prisma.$MonthlyIncomePayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first MonthlyIncome that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MonthlyIncomeFindFirstOrThrowArgs} args - Arguments to find a MonthlyIncome
     * @example
     * // Get one MonthlyIncome
     * const monthlyIncome = await prisma.monthlyIncome.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends MonthlyIncomeFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, MonthlyIncomeFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__MonthlyIncomeClient<$Result.GetResult<Prisma.$MonthlyIncomePayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more MonthlyIncomes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MonthlyIncomeFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MonthlyIncomes
     * const monthlyIncomes = await prisma.monthlyIncome.findMany()
     * 
     * // Get first 10 MonthlyIncomes
     * const monthlyIncomes = await prisma.monthlyIncome.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const monthlyIncomeWithIdOnly = await prisma.monthlyIncome.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends MonthlyIncomeFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, MonthlyIncomeFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MonthlyIncomePayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a MonthlyIncome.
     * @param {MonthlyIncomeCreateArgs} args - Arguments to create a MonthlyIncome.
     * @example
     * // Create one MonthlyIncome
     * const MonthlyIncome = await prisma.monthlyIncome.create({
     *   data: {
     *     // ... data to create a MonthlyIncome
     *   }
     * })
     * 
    **/
    create<T extends MonthlyIncomeCreateArgs<ExtArgs>>(
      args: SelectSubset<T, MonthlyIncomeCreateArgs<ExtArgs>>
    ): Prisma__MonthlyIncomeClient<$Result.GetResult<Prisma.$MonthlyIncomePayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many MonthlyIncomes.
     *     @param {MonthlyIncomeCreateManyArgs} args - Arguments to create many MonthlyIncomes.
     *     @example
     *     // Create many MonthlyIncomes
     *     const monthlyIncome = await prisma.monthlyIncome.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends MonthlyIncomeCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, MonthlyIncomeCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a MonthlyIncome.
     * @param {MonthlyIncomeDeleteArgs} args - Arguments to delete one MonthlyIncome.
     * @example
     * // Delete one MonthlyIncome
     * const MonthlyIncome = await prisma.monthlyIncome.delete({
     *   where: {
     *     // ... filter to delete one MonthlyIncome
     *   }
     * })
     * 
    **/
    delete<T extends MonthlyIncomeDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, MonthlyIncomeDeleteArgs<ExtArgs>>
    ): Prisma__MonthlyIncomeClient<$Result.GetResult<Prisma.$MonthlyIncomePayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one MonthlyIncome.
     * @param {MonthlyIncomeUpdateArgs} args - Arguments to update one MonthlyIncome.
     * @example
     * // Update one MonthlyIncome
     * const monthlyIncome = await prisma.monthlyIncome.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends MonthlyIncomeUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, MonthlyIncomeUpdateArgs<ExtArgs>>
    ): Prisma__MonthlyIncomeClient<$Result.GetResult<Prisma.$MonthlyIncomePayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more MonthlyIncomes.
     * @param {MonthlyIncomeDeleteManyArgs} args - Arguments to filter MonthlyIncomes to delete.
     * @example
     * // Delete a few MonthlyIncomes
     * const { count } = await prisma.monthlyIncome.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends MonthlyIncomeDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, MonthlyIncomeDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MonthlyIncomes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MonthlyIncomeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MonthlyIncomes
     * const monthlyIncome = await prisma.monthlyIncome.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends MonthlyIncomeUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, MonthlyIncomeUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MonthlyIncome.
     * @param {MonthlyIncomeUpsertArgs} args - Arguments to update or create a MonthlyIncome.
     * @example
     * // Update or create a MonthlyIncome
     * const monthlyIncome = await prisma.monthlyIncome.upsert({
     *   create: {
     *     // ... data to create a MonthlyIncome
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MonthlyIncome we want to update
     *   }
     * })
    **/
    upsert<T extends MonthlyIncomeUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, MonthlyIncomeUpsertArgs<ExtArgs>>
    ): Prisma__MonthlyIncomeClient<$Result.GetResult<Prisma.$MonthlyIncomePayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of MonthlyIncomes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MonthlyIncomeCountArgs} args - Arguments to filter MonthlyIncomes to count.
     * @example
     * // Count the number of MonthlyIncomes
     * const count = await prisma.monthlyIncome.count({
     *   where: {
     *     // ... the filter for the MonthlyIncomes we want to count
     *   }
     * })
    **/
    count<T extends MonthlyIncomeCountArgs>(
      args?: Subset<T, MonthlyIncomeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MonthlyIncomeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MonthlyIncome.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MonthlyIncomeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MonthlyIncomeAggregateArgs>(args: Subset<T, MonthlyIncomeAggregateArgs>): Prisma.PrismaPromise<GetMonthlyIncomeAggregateType<T>>

    /**
     * Group by MonthlyIncome.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MonthlyIncomeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MonthlyIncomeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MonthlyIncomeGroupByArgs['orderBy'] }
        : { orderBy?: MonthlyIncomeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MonthlyIncomeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMonthlyIncomeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MonthlyIncome model
   */
  readonly fields: MonthlyIncomeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MonthlyIncome.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MonthlyIncomeClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    familyMember<T extends MonthlyIncome$familyMemberArgs<ExtArgs> = {}>(args?: Subset<T, MonthlyIncome$familyMemberArgs<ExtArgs>>): Prisma__FamilyMemberClient<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    candidate<T extends MonthlyIncome$candidateArgs<ExtArgs> = {}>(args?: Subset<T, MonthlyIncome$candidateArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    LegalResponsible<T extends MonthlyIncome$LegalResponsibleArgs<ExtArgs> = {}>(args?: Subset<T, MonthlyIncome$LegalResponsibleArgs<ExtArgs>>): Prisma__LegalResponsibleClient<$Result.GetResult<Prisma.$LegalResponsiblePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the MonthlyIncome model
   */ 
  interface MonthlyIncomeFieldRefs {
    readonly id: FieldRef<"MonthlyIncome", 'String'>
    readonly date: FieldRef<"MonthlyIncome", 'DateTime'>
    readonly main_id: FieldRef<"MonthlyIncome", 'String'>
    readonly grossAmount: FieldRef<"MonthlyIncome", 'Float'>
    readonly liquidAmount: FieldRef<"MonthlyIncome", 'Float'>
    readonly proLabore: FieldRef<"MonthlyIncome", 'Float'>
    readonly dividends: FieldRef<"MonthlyIncome", 'Float'>
    readonly total: FieldRef<"MonthlyIncome", 'Float'>
    readonly deductionValue: FieldRef<"MonthlyIncome", 'Decimal'>
    readonly publicPension: FieldRef<"MonthlyIncome", 'Decimal'>
    readonly incomeTax: FieldRef<"MonthlyIncome", 'Decimal'>
    readonly otherDeductions: FieldRef<"MonthlyIncome", 'Decimal'>
    readonly foodAllowanceValue: FieldRef<"MonthlyIncome", 'Decimal'>
    readonly transportAllowanceValue: FieldRef<"MonthlyIncome", 'Decimal'>
    readonly expenseReimbursementValue: FieldRef<"MonthlyIncome", 'Decimal'>
    readonly advancePaymentValue: FieldRef<"MonthlyIncome", 'Decimal'>
    readonly reversalValue: FieldRef<"MonthlyIncome", 'Decimal'>
    readonly compensationValue: FieldRef<"MonthlyIncome", 'Decimal'>
    readonly judicialPensionValue: FieldRef<"MonthlyIncome", 'Decimal'>
    readonly familyMember_id: FieldRef<"MonthlyIncome", 'String'>
    readonly candidate_id: FieldRef<"MonthlyIncome", 'String'>
    readonly incomeSource: FieldRef<"MonthlyIncome", 'IncomeSource'>
    readonly application_id: FieldRef<"MonthlyIncome", 'String'>
    readonly legalResponsibleId: FieldRef<"MonthlyIncome", 'String'>
  }
    

  // Custom InputTypes

  /**
   * MonthlyIncome findUnique
   */
  export type MonthlyIncomeFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MonthlyIncome
     */
    select?: MonthlyIncomeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MonthlyIncomeInclude<ExtArgs> | null
    /**
     * Filter, which MonthlyIncome to fetch.
     */
    where: MonthlyIncomeWhereUniqueInput
  }


  /**
   * MonthlyIncome findUniqueOrThrow
   */
  export type MonthlyIncomeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MonthlyIncome
     */
    select?: MonthlyIncomeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MonthlyIncomeInclude<ExtArgs> | null
    /**
     * Filter, which MonthlyIncome to fetch.
     */
    where: MonthlyIncomeWhereUniqueInput
  }


  /**
   * MonthlyIncome findFirst
   */
  export type MonthlyIncomeFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MonthlyIncome
     */
    select?: MonthlyIncomeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MonthlyIncomeInclude<ExtArgs> | null
    /**
     * Filter, which MonthlyIncome to fetch.
     */
    where?: MonthlyIncomeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MonthlyIncomes to fetch.
     */
    orderBy?: MonthlyIncomeOrderByWithRelationInput | MonthlyIncomeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MonthlyIncomes.
     */
    cursor?: MonthlyIncomeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MonthlyIncomes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MonthlyIncomes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MonthlyIncomes.
     */
    distinct?: MonthlyIncomeScalarFieldEnum | MonthlyIncomeScalarFieldEnum[]
  }


  /**
   * MonthlyIncome findFirstOrThrow
   */
  export type MonthlyIncomeFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MonthlyIncome
     */
    select?: MonthlyIncomeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MonthlyIncomeInclude<ExtArgs> | null
    /**
     * Filter, which MonthlyIncome to fetch.
     */
    where?: MonthlyIncomeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MonthlyIncomes to fetch.
     */
    orderBy?: MonthlyIncomeOrderByWithRelationInput | MonthlyIncomeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MonthlyIncomes.
     */
    cursor?: MonthlyIncomeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MonthlyIncomes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MonthlyIncomes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MonthlyIncomes.
     */
    distinct?: MonthlyIncomeScalarFieldEnum | MonthlyIncomeScalarFieldEnum[]
  }


  /**
   * MonthlyIncome findMany
   */
  export type MonthlyIncomeFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MonthlyIncome
     */
    select?: MonthlyIncomeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MonthlyIncomeInclude<ExtArgs> | null
    /**
     * Filter, which MonthlyIncomes to fetch.
     */
    where?: MonthlyIncomeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MonthlyIncomes to fetch.
     */
    orderBy?: MonthlyIncomeOrderByWithRelationInput | MonthlyIncomeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MonthlyIncomes.
     */
    cursor?: MonthlyIncomeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MonthlyIncomes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MonthlyIncomes.
     */
    skip?: number
    distinct?: MonthlyIncomeScalarFieldEnum | MonthlyIncomeScalarFieldEnum[]
  }


  /**
   * MonthlyIncome create
   */
  export type MonthlyIncomeCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MonthlyIncome
     */
    select?: MonthlyIncomeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MonthlyIncomeInclude<ExtArgs> | null
    /**
     * The data needed to create a MonthlyIncome.
     */
    data: XOR<MonthlyIncomeCreateInput, MonthlyIncomeUncheckedCreateInput>
  }


  /**
   * MonthlyIncome createMany
   */
  export type MonthlyIncomeCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MonthlyIncomes.
     */
    data: MonthlyIncomeCreateManyInput | MonthlyIncomeCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * MonthlyIncome update
   */
  export type MonthlyIncomeUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MonthlyIncome
     */
    select?: MonthlyIncomeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MonthlyIncomeInclude<ExtArgs> | null
    /**
     * The data needed to update a MonthlyIncome.
     */
    data: XOR<MonthlyIncomeUpdateInput, MonthlyIncomeUncheckedUpdateInput>
    /**
     * Choose, which MonthlyIncome to update.
     */
    where: MonthlyIncomeWhereUniqueInput
  }


  /**
   * MonthlyIncome updateMany
   */
  export type MonthlyIncomeUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MonthlyIncomes.
     */
    data: XOR<MonthlyIncomeUpdateManyMutationInput, MonthlyIncomeUncheckedUpdateManyInput>
    /**
     * Filter which MonthlyIncomes to update
     */
    where?: MonthlyIncomeWhereInput
  }


  /**
   * MonthlyIncome upsert
   */
  export type MonthlyIncomeUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MonthlyIncome
     */
    select?: MonthlyIncomeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MonthlyIncomeInclude<ExtArgs> | null
    /**
     * The filter to search for the MonthlyIncome to update in case it exists.
     */
    where: MonthlyIncomeWhereUniqueInput
    /**
     * In case the MonthlyIncome found by the `where` argument doesn't exist, create a new MonthlyIncome with this data.
     */
    create: XOR<MonthlyIncomeCreateInput, MonthlyIncomeUncheckedCreateInput>
    /**
     * In case the MonthlyIncome was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MonthlyIncomeUpdateInput, MonthlyIncomeUncheckedUpdateInput>
  }


  /**
   * MonthlyIncome delete
   */
  export type MonthlyIncomeDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MonthlyIncome
     */
    select?: MonthlyIncomeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MonthlyIncomeInclude<ExtArgs> | null
    /**
     * Filter which MonthlyIncome to delete.
     */
    where: MonthlyIncomeWhereUniqueInput
  }


  /**
   * MonthlyIncome deleteMany
   */
  export type MonthlyIncomeDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which MonthlyIncomes to delete
     */
    where?: MonthlyIncomeWhereInput
  }


  /**
   * MonthlyIncome.familyMember
   */
  export type MonthlyIncome$familyMemberArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    where?: FamilyMemberWhereInput
  }


  /**
   * MonthlyIncome.candidate
   */
  export type MonthlyIncome$candidateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CandidateInclude<ExtArgs> | null
    where?: CandidateWhereInput
  }


  /**
   * MonthlyIncome.LegalResponsible
   */
  export type MonthlyIncome$LegalResponsibleArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalResponsible
     */
    select?: LegalResponsibleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LegalResponsibleInclude<ExtArgs> | null
    where?: LegalResponsibleWhereInput
  }


  /**
   * MonthlyIncome without action
   */
  export type MonthlyIncomeDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MonthlyIncome
     */
    select?: MonthlyIncomeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MonthlyIncomeInclude<ExtArgs> | null
  }



  /**
   * Model BankAccount
   */

  export type AggregateBankAccount = {
    _count: BankAccountCountAggregateOutputType | null
    _min: BankAccountMinAggregateOutputType | null
    _max: BankAccountMaxAggregateOutputType | null
  }

  export type BankAccountMinAggregateOutputType = {
    id: string | null
    main_id: string | null
    bankName: string | null
    agencyNumber: string | null
    accountNumber: string | null
    accountType: $Enums.AccountType | null
    familyMember_id: string | null
    candidate_id: string | null
    legalResponsibleId: string | null
    application_id: string | null
  }

  export type BankAccountMaxAggregateOutputType = {
    id: string | null
    main_id: string | null
    bankName: string | null
    agencyNumber: string | null
    accountNumber: string | null
    accountType: $Enums.AccountType | null
    familyMember_id: string | null
    candidate_id: string | null
    legalResponsibleId: string | null
    application_id: string | null
  }

  export type BankAccountCountAggregateOutputType = {
    id: number
    main_id: number
    bankName: number
    agencyNumber: number
    accountNumber: number
    accountType: number
    familyMember_id: number
    candidate_id: number
    legalResponsibleId: number
    application_id: number
    _all: number
  }


  export type BankAccountMinAggregateInputType = {
    id?: true
    main_id?: true
    bankName?: true
    agencyNumber?: true
    accountNumber?: true
    accountType?: true
    familyMember_id?: true
    candidate_id?: true
    legalResponsibleId?: true
    application_id?: true
  }

  export type BankAccountMaxAggregateInputType = {
    id?: true
    main_id?: true
    bankName?: true
    agencyNumber?: true
    accountNumber?: true
    accountType?: true
    familyMember_id?: true
    candidate_id?: true
    legalResponsibleId?: true
    application_id?: true
  }

  export type BankAccountCountAggregateInputType = {
    id?: true
    main_id?: true
    bankName?: true
    agencyNumber?: true
    accountNumber?: true
    accountType?: true
    familyMember_id?: true
    candidate_id?: true
    legalResponsibleId?: true
    application_id?: true
    _all?: true
  }

  export type BankAccountAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which BankAccount to aggregate.
     */
    where?: BankAccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BankAccounts to fetch.
     */
    orderBy?: BankAccountOrderByWithRelationInput | BankAccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BankAccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BankAccounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BankAccounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BankAccounts
    **/
    _count?: true | BankAccountCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BankAccountMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BankAccountMaxAggregateInputType
  }

  export type GetBankAccountAggregateType<T extends BankAccountAggregateArgs> = {
        [P in keyof T & keyof AggregateBankAccount]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBankAccount[P]>
      : GetScalarType<T[P], AggregateBankAccount[P]>
  }




  export type BankAccountGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: BankAccountWhereInput
    orderBy?: BankAccountOrderByWithAggregationInput | BankAccountOrderByWithAggregationInput[]
    by: BankAccountScalarFieldEnum[] | BankAccountScalarFieldEnum
    having?: BankAccountScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BankAccountCountAggregateInputType | true
    _min?: BankAccountMinAggregateInputType
    _max?: BankAccountMaxAggregateInputType
  }

  export type BankAccountGroupByOutputType = {
    id: string
    main_id: string | null
    bankName: string
    agencyNumber: string
    accountNumber: string
    accountType: $Enums.AccountType
    familyMember_id: string | null
    candidate_id: string | null
    legalResponsibleId: string | null
    application_id: string
    _count: BankAccountCountAggregateOutputType | null
    _min: BankAccountMinAggregateOutputType | null
    _max: BankAccountMaxAggregateOutputType | null
  }

  type GetBankAccountGroupByPayload<T extends BankAccountGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BankAccountGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BankAccountGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BankAccountGroupByOutputType[P]>
            : GetScalarType<T[P], BankAccountGroupByOutputType[P]>
        }
      >
    >


  export type BankAccountSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    main_id?: boolean
    bankName?: boolean
    agencyNumber?: boolean
    accountNumber?: boolean
    accountType?: boolean
    familyMember_id?: boolean
    candidate_id?: boolean
    legalResponsibleId?: boolean
    application_id?: boolean
    familyMember?: boolean | BankAccount$familyMemberArgs<ExtArgs>
    candidate?: boolean | BankAccount$candidateArgs<ExtArgs>
    LegalResponsible?: boolean | BankAccount$LegalResponsibleArgs<ExtArgs>
  }, ExtArgs["result"]["bankAccount"]>

  export type BankAccountSelectScalar = {
    id?: boolean
    main_id?: boolean
    bankName?: boolean
    agencyNumber?: boolean
    accountNumber?: boolean
    accountType?: boolean
    familyMember_id?: boolean
    candidate_id?: boolean
    legalResponsibleId?: boolean
    application_id?: boolean
  }

  export type BankAccountInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    familyMember?: boolean | BankAccount$familyMemberArgs<ExtArgs>
    candidate?: boolean | BankAccount$candidateArgs<ExtArgs>
    LegalResponsible?: boolean | BankAccount$LegalResponsibleArgs<ExtArgs>
  }


  export type $BankAccountPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "BankAccount"
    objects: {
      familyMember: Prisma.$FamilyMemberPayload<ExtArgs> | null
      candidate: Prisma.$CandidatePayload<ExtArgs> | null
      LegalResponsible: Prisma.$LegalResponsiblePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetResult<{
      id: string
      main_id: string | null
      bankName: string
      agencyNumber: string
      accountNumber: string
      accountType: $Enums.AccountType
      familyMember_id: string | null
      candidate_id: string | null
      legalResponsibleId: string | null
      application_id: string
    }, ExtArgs["result"]["bankAccount"]>
    composites: {}
  }


  type BankAccountGetPayload<S extends boolean | null | undefined | BankAccountDefaultArgs> = $Result.GetResult<Prisma.$BankAccountPayload, S>

  type BankAccountCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<BankAccountFindManyArgs, 'select' | 'include'> & {
      select?: BankAccountCountAggregateInputType | true
    }

  export interface BankAccountDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BankAccount'], meta: { name: 'BankAccount' } }
    /**
     * Find zero or one BankAccount that matches the filter.
     * @param {BankAccountFindUniqueArgs} args - Arguments to find a BankAccount
     * @example
     * // Get one BankAccount
     * const bankAccount = await prisma.bankAccount.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends BankAccountFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, BankAccountFindUniqueArgs<ExtArgs>>
    ): Prisma__BankAccountClient<$Result.GetResult<Prisma.$BankAccountPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one BankAccount that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {BankAccountFindUniqueOrThrowArgs} args - Arguments to find a BankAccount
     * @example
     * // Get one BankAccount
     * const bankAccount = await prisma.bankAccount.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends BankAccountFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, BankAccountFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__BankAccountClient<$Result.GetResult<Prisma.$BankAccountPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first BankAccount that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BankAccountFindFirstArgs} args - Arguments to find a BankAccount
     * @example
     * // Get one BankAccount
     * const bankAccount = await prisma.bankAccount.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends BankAccountFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, BankAccountFindFirstArgs<ExtArgs>>
    ): Prisma__BankAccountClient<$Result.GetResult<Prisma.$BankAccountPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first BankAccount that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BankAccountFindFirstOrThrowArgs} args - Arguments to find a BankAccount
     * @example
     * // Get one BankAccount
     * const bankAccount = await prisma.bankAccount.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends BankAccountFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, BankAccountFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__BankAccountClient<$Result.GetResult<Prisma.$BankAccountPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more BankAccounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BankAccountFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BankAccounts
     * const bankAccounts = await prisma.bankAccount.findMany()
     * 
     * // Get first 10 BankAccounts
     * const bankAccounts = await prisma.bankAccount.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const bankAccountWithIdOnly = await prisma.bankAccount.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends BankAccountFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, BankAccountFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BankAccountPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a BankAccount.
     * @param {BankAccountCreateArgs} args - Arguments to create a BankAccount.
     * @example
     * // Create one BankAccount
     * const BankAccount = await prisma.bankAccount.create({
     *   data: {
     *     // ... data to create a BankAccount
     *   }
     * })
     * 
    **/
    create<T extends BankAccountCreateArgs<ExtArgs>>(
      args: SelectSubset<T, BankAccountCreateArgs<ExtArgs>>
    ): Prisma__BankAccountClient<$Result.GetResult<Prisma.$BankAccountPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many BankAccounts.
     *     @param {BankAccountCreateManyArgs} args - Arguments to create many BankAccounts.
     *     @example
     *     // Create many BankAccounts
     *     const bankAccount = await prisma.bankAccount.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends BankAccountCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, BankAccountCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a BankAccount.
     * @param {BankAccountDeleteArgs} args - Arguments to delete one BankAccount.
     * @example
     * // Delete one BankAccount
     * const BankAccount = await prisma.bankAccount.delete({
     *   where: {
     *     // ... filter to delete one BankAccount
     *   }
     * })
     * 
    **/
    delete<T extends BankAccountDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, BankAccountDeleteArgs<ExtArgs>>
    ): Prisma__BankAccountClient<$Result.GetResult<Prisma.$BankAccountPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one BankAccount.
     * @param {BankAccountUpdateArgs} args - Arguments to update one BankAccount.
     * @example
     * // Update one BankAccount
     * const bankAccount = await prisma.bankAccount.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends BankAccountUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, BankAccountUpdateArgs<ExtArgs>>
    ): Prisma__BankAccountClient<$Result.GetResult<Prisma.$BankAccountPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more BankAccounts.
     * @param {BankAccountDeleteManyArgs} args - Arguments to filter BankAccounts to delete.
     * @example
     * // Delete a few BankAccounts
     * const { count } = await prisma.bankAccount.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends BankAccountDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, BankAccountDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BankAccounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BankAccountUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BankAccounts
     * const bankAccount = await prisma.bankAccount.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends BankAccountUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, BankAccountUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one BankAccount.
     * @param {BankAccountUpsertArgs} args - Arguments to update or create a BankAccount.
     * @example
     * // Update or create a BankAccount
     * const bankAccount = await prisma.bankAccount.upsert({
     *   create: {
     *     // ... data to create a BankAccount
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BankAccount we want to update
     *   }
     * })
    **/
    upsert<T extends BankAccountUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, BankAccountUpsertArgs<ExtArgs>>
    ): Prisma__BankAccountClient<$Result.GetResult<Prisma.$BankAccountPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of BankAccounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BankAccountCountArgs} args - Arguments to filter BankAccounts to count.
     * @example
     * // Count the number of BankAccounts
     * const count = await prisma.bankAccount.count({
     *   where: {
     *     // ... the filter for the BankAccounts we want to count
     *   }
     * })
    **/
    count<T extends BankAccountCountArgs>(
      args?: Subset<T, BankAccountCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BankAccountCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BankAccount.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BankAccountAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BankAccountAggregateArgs>(args: Subset<T, BankAccountAggregateArgs>): Prisma.PrismaPromise<GetBankAccountAggregateType<T>>

    /**
     * Group by BankAccount.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BankAccountGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BankAccountGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BankAccountGroupByArgs['orderBy'] }
        : { orderBy?: BankAccountGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BankAccountGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBankAccountGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BankAccount model
   */
  readonly fields: BankAccountFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BankAccount.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BankAccountClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    familyMember<T extends BankAccount$familyMemberArgs<ExtArgs> = {}>(args?: Subset<T, BankAccount$familyMemberArgs<ExtArgs>>): Prisma__FamilyMemberClient<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    candidate<T extends BankAccount$candidateArgs<ExtArgs> = {}>(args?: Subset<T, BankAccount$candidateArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    LegalResponsible<T extends BankAccount$LegalResponsibleArgs<ExtArgs> = {}>(args?: Subset<T, BankAccount$LegalResponsibleArgs<ExtArgs>>): Prisma__LegalResponsibleClient<$Result.GetResult<Prisma.$LegalResponsiblePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the BankAccount model
   */ 
  interface BankAccountFieldRefs {
    readonly id: FieldRef<"BankAccount", 'String'>
    readonly main_id: FieldRef<"BankAccount", 'String'>
    readonly bankName: FieldRef<"BankAccount", 'String'>
    readonly agencyNumber: FieldRef<"BankAccount", 'String'>
    readonly accountNumber: FieldRef<"BankAccount", 'String'>
    readonly accountType: FieldRef<"BankAccount", 'AccountType'>
    readonly familyMember_id: FieldRef<"BankAccount", 'String'>
    readonly candidate_id: FieldRef<"BankAccount", 'String'>
    readonly legalResponsibleId: FieldRef<"BankAccount", 'String'>
    readonly application_id: FieldRef<"BankAccount", 'String'>
  }
    

  // Custom InputTypes

  /**
   * BankAccount findUnique
   */
  export type BankAccountFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankAccount
     */
    select?: BankAccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: BankAccountInclude<ExtArgs> | null
    /**
     * Filter, which BankAccount to fetch.
     */
    where: BankAccountWhereUniqueInput
  }


  /**
   * BankAccount findUniqueOrThrow
   */
  export type BankAccountFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankAccount
     */
    select?: BankAccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: BankAccountInclude<ExtArgs> | null
    /**
     * Filter, which BankAccount to fetch.
     */
    where: BankAccountWhereUniqueInput
  }


  /**
   * BankAccount findFirst
   */
  export type BankAccountFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankAccount
     */
    select?: BankAccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: BankAccountInclude<ExtArgs> | null
    /**
     * Filter, which BankAccount to fetch.
     */
    where?: BankAccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BankAccounts to fetch.
     */
    orderBy?: BankAccountOrderByWithRelationInput | BankAccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BankAccounts.
     */
    cursor?: BankAccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BankAccounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BankAccounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BankAccounts.
     */
    distinct?: BankAccountScalarFieldEnum | BankAccountScalarFieldEnum[]
  }


  /**
   * BankAccount findFirstOrThrow
   */
  export type BankAccountFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankAccount
     */
    select?: BankAccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: BankAccountInclude<ExtArgs> | null
    /**
     * Filter, which BankAccount to fetch.
     */
    where?: BankAccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BankAccounts to fetch.
     */
    orderBy?: BankAccountOrderByWithRelationInput | BankAccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BankAccounts.
     */
    cursor?: BankAccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BankAccounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BankAccounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BankAccounts.
     */
    distinct?: BankAccountScalarFieldEnum | BankAccountScalarFieldEnum[]
  }


  /**
   * BankAccount findMany
   */
  export type BankAccountFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankAccount
     */
    select?: BankAccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: BankAccountInclude<ExtArgs> | null
    /**
     * Filter, which BankAccounts to fetch.
     */
    where?: BankAccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BankAccounts to fetch.
     */
    orderBy?: BankAccountOrderByWithRelationInput | BankAccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BankAccounts.
     */
    cursor?: BankAccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BankAccounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BankAccounts.
     */
    skip?: number
    distinct?: BankAccountScalarFieldEnum | BankAccountScalarFieldEnum[]
  }


  /**
   * BankAccount create
   */
  export type BankAccountCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankAccount
     */
    select?: BankAccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: BankAccountInclude<ExtArgs> | null
    /**
     * The data needed to create a BankAccount.
     */
    data: XOR<BankAccountCreateInput, BankAccountUncheckedCreateInput>
  }


  /**
   * BankAccount createMany
   */
  export type BankAccountCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BankAccounts.
     */
    data: BankAccountCreateManyInput | BankAccountCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * BankAccount update
   */
  export type BankAccountUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankAccount
     */
    select?: BankAccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: BankAccountInclude<ExtArgs> | null
    /**
     * The data needed to update a BankAccount.
     */
    data: XOR<BankAccountUpdateInput, BankAccountUncheckedUpdateInput>
    /**
     * Choose, which BankAccount to update.
     */
    where: BankAccountWhereUniqueInput
  }


  /**
   * BankAccount updateMany
   */
  export type BankAccountUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BankAccounts.
     */
    data: XOR<BankAccountUpdateManyMutationInput, BankAccountUncheckedUpdateManyInput>
    /**
     * Filter which BankAccounts to update
     */
    where?: BankAccountWhereInput
  }


  /**
   * BankAccount upsert
   */
  export type BankAccountUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankAccount
     */
    select?: BankAccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: BankAccountInclude<ExtArgs> | null
    /**
     * The filter to search for the BankAccount to update in case it exists.
     */
    where: BankAccountWhereUniqueInput
    /**
     * In case the BankAccount found by the `where` argument doesn't exist, create a new BankAccount with this data.
     */
    create: XOR<BankAccountCreateInput, BankAccountUncheckedCreateInput>
    /**
     * In case the BankAccount was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BankAccountUpdateInput, BankAccountUncheckedUpdateInput>
  }


  /**
   * BankAccount delete
   */
  export type BankAccountDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankAccount
     */
    select?: BankAccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: BankAccountInclude<ExtArgs> | null
    /**
     * Filter which BankAccount to delete.
     */
    where: BankAccountWhereUniqueInput
  }


  /**
   * BankAccount deleteMany
   */
  export type BankAccountDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which BankAccounts to delete
     */
    where?: BankAccountWhereInput
  }


  /**
   * BankAccount.familyMember
   */
  export type BankAccount$familyMemberArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    where?: FamilyMemberWhereInput
  }


  /**
   * BankAccount.candidate
   */
  export type BankAccount$candidateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CandidateInclude<ExtArgs> | null
    where?: CandidateWhereInput
  }


  /**
   * BankAccount.LegalResponsible
   */
  export type BankAccount$LegalResponsibleArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalResponsible
     */
    select?: LegalResponsibleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LegalResponsibleInclude<ExtArgs> | null
    where?: LegalResponsibleWhereInput
  }


  /**
   * BankAccount without action
   */
  export type BankAccountDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankAccount
     */
    select?: BankAccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: BankAccountInclude<ExtArgs> | null
  }



  /**
   * Model Expense
   */

  export type AggregateExpense = {
    _count: ExpenseCountAggregateOutputType | null
    _avg: ExpenseAvgAggregateOutputType | null
    _sum: ExpenseSumAggregateOutputType | null
    _min: ExpenseMinAggregateOutputType | null
    _max: ExpenseMaxAggregateOutputType | null
  }

  export type ExpenseAvgAggregateOutputType = {
    waterSewage: number | null
    electricity: number | null
    landlinePhone: number | null
    mobilePhone: number | null
    food: number | null
    rent: number | null
    garageRent: number | null
    condominium: number | null
    cableTV: number | null
    streamingServices: number | null
    fuel: number | null
    annualIPVA: number | null
    annualIPTU: number | null
    annualITR: number | null
    annualIR: number | null
    INSS: number | null
    publicTransport: number | null
    schoolTransport: number | null
    internet: number | null
    courses: number | null
    healthPlan: number | null
    dentalPlan: number | null
    medicationExpenses: number | null
    totalExpense: number | null
    installmentCountIPTU: number | null
    installmentCountIPVA: number | null
    installmentCountIR: number | null
    installmentCountITR: number | null
    installmentValueIPTU: number | null
    installmentValueIPVA: number | null
    installmentValueIR: number | null
    installmentValueITR: number | null
    financing: number | null
    creditCard: number | null
    otherExpensesValue: number | null
  }

  export type ExpenseSumAggregateOutputType = {
    waterSewage: number | null
    electricity: number | null
    landlinePhone: number | null
    mobilePhone: number | null
    food: number | null
    rent: number | null
    garageRent: number | null
    condominium: number | null
    cableTV: number | null
    streamingServices: number | null
    fuel: number | null
    annualIPVA: number | null
    annualIPTU: number | null
    annualITR: number | null
    annualIR: number | null
    INSS: number | null
    publicTransport: number | null
    schoolTransport: number | null
    internet: number | null
    courses: number | null
    healthPlan: number | null
    dentalPlan: number | null
    medicationExpenses: number | null
    totalExpense: number | null
    installmentCountIPTU: number | null
    installmentCountIPVA: number | null
    installmentCountIR: number | null
    installmentCountITR: number | null
    installmentValueIPTU: number | null
    installmentValueIPVA: number | null
    installmentValueIR: number | null
    installmentValueITR: number | null
    financing: number | null
    creditCard: number | null
    otherExpensesValue: number[]
  }

  export type ExpenseMinAggregateOutputType = {
    id: string | null
    main_id: string | null
    date: Date | null
    waterSewage: number | null
    electricity: number | null
    landlinePhone: number | null
    mobilePhone: number | null
    food: number | null
    rent: number | null
    garageRent: number | null
    condominium: number | null
    cableTV: number | null
    streamingServices: number | null
    fuel: number | null
    annualIPVA: number | null
    annualIPTU: number | null
    annualITR: number | null
    annualIR: number | null
    INSS: number | null
    publicTransport: number | null
    schoolTransport: number | null
    internet: number | null
    courses: number | null
    healthPlan: number | null
    dentalPlan: number | null
    medicationExpenses: number | null
    totalExpense: number | null
    candidate_id: string | null
    installmentCountIPTU: number | null
    installmentCountIPVA: number | null
    installmentCountIR: number | null
    installmentCountITR: number | null
    installmentValueIPTU: number | null
    installmentValueIPVA: number | null
    installmentValueIR: number | null
    installmentValueITR: number | null
    financing: number | null
    creditCard: number | null
    optedForInstallmentIPTU: boolean | null
    optedForInstallmentIPVA: boolean | null
    optedForInstallmentIR: boolean | null
    optedForInstallmentITR: boolean | null
    legalResponsibleId: string | null
    application_id: string | null
  }

  export type ExpenseMaxAggregateOutputType = {
    id: string | null
    main_id: string | null
    date: Date | null
    waterSewage: number | null
    electricity: number | null
    landlinePhone: number | null
    mobilePhone: number | null
    food: number | null
    rent: number | null
    garageRent: number | null
    condominium: number | null
    cableTV: number | null
    streamingServices: number | null
    fuel: number | null
    annualIPVA: number | null
    annualIPTU: number | null
    annualITR: number | null
    annualIR: number | null
    INSS: number | null
    publicTransport: number | null
    schoolTransport: number | null
    internet: number | null
    courses: number | null
    healthPlan: number | null
    dentalPlan: number | null
    medicationExpenses: number | null
    totalExpense: number | null
    candidate_id: string | null
    installmentCountIPTU: number | null
    installmentCountIPVA: number | null
    installmentCountIR: number | null
    installmentCountITR: number | null
    installmentValueIPTU: number | null
    installmentValueIPVA: number | null
    installmentValueIR: number | null
    installmentValueITR: number | null
    financing: number | null
    creditCard: number | null
    optedForInstallmentIPTU: boolean | null
    optedForInstallmentIPVA: boolean | null
    optedForInstallmentIR: boolean | null
    optedForInstallmentITR: boolean | null
    legalResponsibleId: string | null
    application_id: string | null
  }

  export type ExpenseCountAggregateOutputType = {
    id: number
    main_id: number
    date: number
    waterSewage: number
    electricity: number
    landlinePhone: number
    mobilePhone: number
    food: number
    rent: number
    garageRent: number
    condominium: number
    cableTV: number
    streamingServices: number
    fuel: number
    annualIPVA: number
    annualIPTU: number
    annualITR: number
    annualIR: number
    INSS: number
    publicTransport: number
    schoolTransport: number
    internet: number
    courses: number
    healthPlan: number
    dentalPlan: number
    medicationExpenses: number
    totalExpense: number
    candidate_id: number
    installmentCountIPTU: number
    installmentCountIPVA: number
    installmentCountIR: number
    installmentCountITR: number
    installmentValueIPTU: number
    installmentValueIPVA: number
    installmentValueIR: number
    installmentValueITR: number
    financing: number
    creditCard: number
    optedForInstallmentIPTU: number
    optedForInstallmentIPVA: number
    optedForInstallmentIR: number
    optedForInstallmentITR: number
    otherExpensesDescription: number
    otherExpensesValue: number
    legalResponsibleId: number
    application_id: number
    _all: number
  }


  export type ExpenseAvgAggregateInputType = {
    waterSewage?: true
    electricity?: true
    landlinePhone?: true
    mobilePhone?: true
    food?: true
    rent?: true
    garageRent?: true
    condominium?: true
    cableTV?: true
    streamingServices?: true
    fuel?: true
    annualIPVA?: true
    annualIPTU?: true
    annualITR?: true
    annualIR?: true
    INSS?: true
    publicTransport?: true
    schoolTransport?: true
    internet?: true
    courses?: true
    healthPlan?: true
    dentalPlan?: true
    medicationExpenses?: true
    totalExpense?: true
    installmentCountIPTU?: true
    installmentCountIPVA?: true
    installmentCountIR?: true
    installmentCountITR?: true
    installmentValueIPTU?: true
    installmentValueIPVA?: true
    installmentValueIR?: true
    installmentValueITR?: true
    financing?: true
    creditCard?: true
    otherExpensesValue?: true
  }

  export type ExpenseSumAggregateInputType = {
    waterSewage?: true
    electricity?: true
    landlinePhone?: true
    mobilePhone?: true
    food?: true
    rent?: true
    garageRent?: true
    condominium?: true
    cableTV?: true
    streamingServices?: true
    fuel?: true
    annualIPVA?: true
    annualIPTU?: true
    annualITR?: true
    annualIR?: true
    INSS?: true
    publicTransport?: true
    schoolTransport?: true
    internet?: true
    courses?: true
    healthPlan?: true
    dentalPlan?: true
    medicationExpenses?: true
    totalExpense?: true
    installmentCountIPTU?: true
    installmentCountIPVA?: true
    installmentCountIR?: true
    installmentCountITR?: true
    installmentValueIPTU?: true
    installmentValueIPVA?: true
    installmentValueIR?: true
    installmentValueITR?: true
    financing?: true
    creditCard?: true
    otherExpensesValue?: true
  }

  export type ExpenseMinAggregateInputType = {
    id?: true
    main_id?: true
    date?: true
    waterSewage?: true
    electricity?: true
    landlinePhone?: true
    mobilePhone?: true
    food?: true
    rent?: true
    garageRent?: true
    condominium?: true
    cableTV?: true
    streamingServices?: true
    fuel?: true
    annualIPVA?: true
    annualIPTU?: true
    annualITR?: true
    annualIR?: true
    INSS?: true
    publicTransport?: true
    schoolTransport?: true
    internet?: true
    courses?: true
    healthPlan?: true
    dentalPlan?: true
    medicationExpenses?: true
    totalExpense?: true
    candidate_id?: true
    installmentCountIPTU?: true
    installmentCountIPVA?: true
    installmentCountIR?: true
    installmentCountITR?: true
    installmentValueIPTU?: true
    installmentValueIPVA?: true
    installmentValueIR?: true
    installmentValueITR?: true
    financing?: true
    creditCard?: true
    optedForInstallmentIPTU?: true
    optedForInstallmentIPVA?: true
    optedForInstallmentIR?: true
    optedForInstallmentITR?: true
    legalResponsibleId?: true
    application_id?: true
  }

  export type ExpenseMaxAggregateInputType = {
    id?: true
    main_id?: true
    date?: true
    waterSewage?: true
    electricity?: true
    landlinePhone?: true
    mobilePhone?: true
    food?: true
    rent?: true
    garageRent?: true
    condominium?: true
    cableTV?: true
    streamingServices?: true
    fuel?: true
    annualIPVA?: true
    annualIPTU?: true
    annualITR?: true
    annualIR?: true
    INSS?: true
    publicTransport?: true
    schoolTransport?: true
    internet?: true
    courses?: true
    healthPlan?: true
    dentalPlan?: true
    medicationExpenses?: true
    totalExpense?: true
    candidate_id?: true
    installmentCountIPTU?: true
    installmentCountIPVA?: true
    installmentCountIR?: true
    installmentCountITR?: true
    installmentValueIPTU?: true
    installmentValueIPVA?: true
    installmentValueIR?: true
    installmentValueITR?: true
    financing?: true
    creditCard?: true
    optedForInstallmentIPTU?: true
    optedForInstallmentIPVA?: true
    optedForInstallmentIR?: true
    optedForInstallmentITR?: true
    legalResponsibleId?: true
    application_id?: true
  }

  export type ExpenseCountAggregateInputType = {
    id?: true
    main_id?: true
    date?: true
    waterSewage?: true
    electricity?: true
    landlinePhone?: true
    mobilePhone?: true
    food?: true
    rent?: true
    garageRent?: true
    condominium?: true
    cableTV?: true
    streamingServices?: true
    fuel?: true
    annualIPVA?: true
    annualIPTU?: true
    annualITR?: true
    annualIR?: true
    INSS?: true
    publicTransport?: true
    schoolTransport?: true
    internet?: true
    courses?: true
    healthPlan?: true
    dentalPlan?: true
    medicationExpenses?: true
    totalExpense?: true
    candidate_id?: true
    installmentCountIPTU?: true
    installmentCountIPVA?: true
    installmentCountIR?: true
    installmentCountITR?: true
    installmentValueIPTU?: true
    installmentValueIPVA?: true
    installmentValueIR?: true
    installmentValueITR?: true
    financing?: true
    creditCard?: true
    optedForInstallmentIPTU?: true
    optedForInstallmentIPVA?: true
    optedForInstallmentIR?: true
    optedForInstallmentITR?: true
    otherExpensesDescription?: true
    otherExpensesValue?: true
    legalResponsibleId?: true
    application_id?: true
    _all?: true
  }

  export type ExpenseAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which Expense to aggregate.
     */
    where?: ExpenseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Expenses to fetch.
     */
    orderBy?: ExpenseOrderByWithRelationInput | ExpenseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ExpenseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Expenses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Expenses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Expenses
    **/
    _count?: true | ExpenseCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ExpenseAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ExpenseSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ExpenseMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ExpenseMaxAggregateInputType
  }

  export type GetExpenseAggregateType<T extends ExpenseAggregateArgs> = {
        [P in keyof T & keyof AggregateExpense]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateExpense[P]>
      : GetScalarType<T[P], AggregateExpense[P]>
  }




  export type ExpenseGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: ExpenseWhereInput
    orderBy?: ExpenseOrderByWithAggregationInput | ExpenseOrderByWithAggregationInput[]
    by: ExpenseScalarFieldEnum[] | ExpenseScalarFieldEnum
    having?: ExpenseScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ExpenseCountAggregateInputType | true
    _avg?: ExpenseAvgAggregateInputType
    _sum?: ExpenseSumAggregateInputType
    _min?: ExpenseMinAggregateInputType
    _max?: ExpenseMaxAggregateInputType
  }

  export type ExpenseGroupByOutputType = {
    id: string
    main_id: string | null
    date: Date
    waterSewage: number | null
    electricity: number | null
    landlinePhone: number | null
    mobilePhone: number | null
    food: number | null
    rent: number | null
    garageRent: number | null
    condominium: number | null
    cableTV: number | null
    streamingServices: number | null
    fuel: number | null
    annualIPVA: number | null
    annualIPTU: number | null
    annualITR: number | null
    annualIR: number | null
    INSS: number | null
    publicTransport: number | null
    schoolTransport: number | null
    internet: number | null
    courses: number | null
    healthPlan: number | null
    dentalPlan: number | null
    medicationExpenses: number | null
    totalExpense: number | null
    candidate_id: string | null
    installmentCountIPTU: number | null
    installmentCountIPVA: number | null
    installmentCountIR: number | null
    installmentCountITR: number | null
    installmentValueIPTU: number | null
    installmentValueIPVA: number | null
    installmentValueIR: number | null
    installmentValueITR: number | null
    financing: number | null
    creditCard: number | null
    optedForInstallmentIPTU: boolean | null
    optedForInstallmentIPVA: boolean | null
    optedForInstallmentIR: boolean | null
    optedForInstallmentITR: boolean | null
    otherExpensesDescription: string[]
    otherExpensesValue: number[]
    legalResponsibleId: string | null
    application_id: string
    _count: ExpenseCountAggregateOutputType | null
    _avg: ExpenseAvgAggregateOutputType | null
    _sum: ExpenseSumAggregateOutputType | null
    _min: ExpenseMinAggregateOutputType | null
    _max: ExpenseMaxAggregateOutputType | null
  }

  type GetExpenseGroupByPayload<T extends ExpenseGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ExpenseGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ExpenseGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ExpenseGroupByOutputType[P]>
            : GetScalarType<T[P], ExpenseGroupByOutputType[P]>
        }
      >
    >


  export type ExpenseSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    main_id?: boolean
    date?: boolean
    waterSewage?: boolean
    electricity?: boolean
    landlinePhone?: boolean
    mobilePhone?: boolean
    food?: boolean
    rent?: boolean
    garageRent?: boolean
    condominium?: boolean
    cableTV?: boolean
    streamingServices?: boolean
    fuel?: boolean
    annualIPVA?: boolean
    annualIPTU?: boolean
    annualITR?: boolean
    annualIR?: boolean
    INSS?: boolean
    publicTransport?: boolean
    schoolTransport?: boolean
    internet?: boolean
    courses?: boolean
    healthPlan?: boolean
    dentalPlan?: boolean
    medicationExpenses?: boolean
    totalExpense?: boolean
    candidate_id?: boolean
    installmentCountIPTU?: boolean
    installmentCountIPVA?: boolean
    installmentCountIR?: boolean
    installmentCountITR?: boolean
    installmentValueIPTU?: boolean
    installmentValueIPVA?: boolean
    installmentValueIR?: boolean
    installmentValueITR?: boolean
    financing?: boolean
    creditCard?: boolean
    optedForInstallmentIPTU?: boolean
    optedForInstallmentIPVA?: boolean
    optedForInstallmentIR?: boolean
    optedForInstallmentITR?: boolean
    otherExpensesDescription?: boolean
    otherExpensesValue?: boolean
    legalResponsibleId?: boolean
    application_id?: boolean
    candidate?: boolean | Expense$candidateArgs<ExtArgs>
    LegalResponsible?: boolean | Expense$LegalResponsibleArgs<ExtArgs>
  }, ExtArgs["result"]["expense"]>

  export type ExpenseSelectScalar = {
    id?: boolean
    main_id?: boolean
    date?: boolean
    waterSewage?: boolean
    electricity?: boolean
    landlinePhone?: boolean
    mobilePhone?: boolean
    food?: boolean
    rent?: boolean
    garageRent?: boolean
    condominium?: boolean
    cableTV?: boolean
    streamingServices?: boolean
    fuel?: boolean
    annualIPVA?: boolean
    annualIPTU?: boolean
    annualITR?: boolean
    annualIR?: boolean
    INSS?: boolean
    publicTransport?: boolean
    schoolTransport?: boolean
    internet?: boolean
    courses?: boolean
    healthPlan?: boolean
    dentalPlan?: boolean
    medicationExpenses?: boolean
    totalExpense?: boolean
    candidate_id?: boolean
    installmentCountIPTU?: boolean
    installmentCountIPVA?: boolean
    installmentCountIR?: boolean
    installmentCountITR?: boolean
    installmentValueIPTU?: boolean
    installmentValueIPVA?: boolean
    installmentValueIR?: boolean
    installmentValueITR?: boolean
    financing?: boolean
    creditCard?: boolean
    optedForInstallmentIPTU?: boolean
    optedForInstallmentIPVA?: boolean
    optedForInstallmentIR?: boolean
    optedForInstallmentITR?: boolean
    otherExpensesDescription?: boolean
    otherExpensesValue?: boolean
    legalResponsibleId?: boolean
    application_id?: boolean
  }

  export type ExpenseInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    candidate?: boolean | Expense$candidateArgs<ExtArgs>
    LegalResponsible?: boolean | Expense$LegalResponsibleArgs<ExtArgs>
  }


  export type $ExpensePayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "Expense"
    objects: {
      candidate: Prisma.$CandidatePayload<ExtArgs> | null
      LegalResponsible: Prisma.$LegalResponsiblePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetResult<{
      id: string
      main_id: string | null
      date: Date
      waterSewage: number | null
      electricity: number | null
      landlinePhone: number | null
      mobilePhone: number | null
      food: number | null
      rent: number | null
      garageRent: number | null
      condominium: number | null
      cableTV: number | null
      streamingServices: number | null
      fuel: number | null
      annualIPVA: number | null
      annualIPTU: number | null
      annualITR: number | null
      annualIR: number | null
      INSS: number | null
      publicTransport: number | null
      schoolTransport: number | null
      internet: number | null
      courses: number | null
      healthPlan: number | null
      dentalPlan: number | null
      medicationExpenses: number | null
      totalExpense: number | null
      candidate_id: string | null
      installmentCountIPTU: number | null
      installmentCountIPVA: number | null
      installmentCountIR: number | null
      installmentCountITR: number | null
      installmentValueIPTU: number | null
      installmentValueIPVA: number | null
      installmentValueIR: number | null
      installmentValueITR: number | null
      financing: number | null
      creditCard: number | null
      optedForInstallmentIPTU: boolean | null
      optedForInstallmentIPVA: boolean | null
      optedForInstallmentIR: boolean | null
      optedForInstallmentITR: boolean | null
      otherExpensesDescription: string[]
      otherExpensesValue: number[]
      legalResponsibleId: string | null
      application_id: string
    }, ExtArgs["result"]["expense"]>
    composites: {}
  }


  type ExpenseGetPayload<S extends boolean | null | undefined | ExpenseDefaultArgs> = $Result.GetResult<Prisma.$ExpensePayload, S>

  type ExpenseCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<ExpenseFindManyArgs, 'select' | 'include'> & {
      select?: ExpenseCountAggregateInputType | true
    }

  export interface ExpenseDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Expense'], meta: { name: 'Expense' } }
    /**
     * Find zero or one Expense that matches the filter.
     * @param {ExpenseFindUniqueArgs} args - Arguments to find a Expense
     * @example
     * // Get one Expense
     * const expense = await prisma.expense.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ExpenseFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, ExpenseFindUniqueArgs<ExtArgs>>
    ): Prisma__ExpenseClient<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Expense that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {ExpenseFindUniqueOrThrowArgs} args - Arguments to find a Expense
     * @example
     * // Get one Expense
     * const expense = await prisma.expense.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ExpenseFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ExpenseFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__ExpenseClient<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Expense that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExpenseFindFirstArgs} args - Arguments to find a Expense
     * @example
     * // Get one Expense
     * const expense = await prisma.expense.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ExpenseFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, ExpenseFindFirstArgs<ExtArgs>>
    ): Prisma__ExpenseClient<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Expense that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExpenseFindFirstOrThrowArgs} args - Arguments to find a Expense
     * @example
     * // Get one Expense
     * const expense = await prisma.expense.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ExpenseFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ExpenseFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__ExpenseClient<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Expenses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExpenseFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Expenses
     * const expenses = await prisma.expense.findMany()
     * 
     * // Get first 10 Expenses
     * const expenses = await prisma.expense.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const expenseWithIdOnly = await prisma.expense.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ExpenseFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ExpenseFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Expense.
     * @param {ExpenseCreateArgs} args - Arguments to create a Expense.
     * @example
     * // Create one Expense
     * const Expense = await prisma.expense.create({
     *   data: {
     *     // ... data to create a Expense
     *   }
     * })
     * 
    **/
    create<T extends ExpenseCreateArgs<ExtArgs>>(
      args: SelectSubset<T, ExpenseCreateArgs<ExtArgs>>
    ): Prisma__ExpenseClient<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Expenses.
     *     @param {ExpenseCreateManyArgs} args - Arguments to create many Expenses.
     *     @example
     *     // Create many Expenses
     *     const expense = await prisma.expense.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ExpenseCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ExpenseCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Expense.
     * @param {ExpenseDeleteArgs} args - Arguments to delete one Expense.
     * @example
     * // Delete one Expense
     * const Expense = await prisma.expense.delete({
     *   where: {
     *     // ... filter to delete one Expense
     *   }
     * })
     * 
    **/
    delete<T extends ExpenseDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, ExpenseDeleteArgs<ExtArgs>>
    ): Prisma__ExpenseClient<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Expense.
     * @param {ExpenseUpdateArgs} args - Arguments to update one Expense.
     * @example
     * // Update one Expense
     * const expense = await prisma.expense.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ExpenseUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, ExpenseUpdateArgs<ExtArgs>>
    ): Prisma__ExpenseClient<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Expenses.
     * @param {ExpenseDeleteManyArgs} args - Arguments to filter Expenses to delete.
     * @example
     * // Delete a few Expenses
     * const { count } = await prisma.expense.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ExpenseDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ExpenseDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Expenses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExpenseUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Expenses
     * const expense = await prisma.expense.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ExpenseUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, ExpenseUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Expense.
     * @param {ExpenseUpsertArgs} args - Arguments to update or create a Expense.
     * @example
     * // Update or create a Expense
     * const expense = await prisma.expense.upsert({
     *   create: {
     *     // ... data to create a Expense
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Expense we want to update
     *   }
     * })
    **/
    upsert<T extends ExpenseUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, ExpenseUpsertArgs<ExtArgs>>
    ): Prisma__ExpenseClient<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Expenses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExpenseCountArgs} args - Arguments to filter Expenses to count.
     * @example
     * // Count the number of Expenses
     * const count = await prisma.expense.count({
     *   where: {
     *     // ... the filter for the Expenses we want to count
     *   }
     * })
    **/
    count<T extends ExpenseCountArgs>(
      args?: Subset<T, ExpenseCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ExpenseCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Expense.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExpenseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ExpenseAggregateArgs>(args: Subset<T, ExpenseAggregateArgs>): Prisma.PrismaPromise<GetExpenseAggregateType<T>>

    /**
     * Group by Expense.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExpenseGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ExpenseGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ExpenseGroupByArgs['orderBy'] }
        : { orderBy?: ExpenseGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ExpenseGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetExpenseGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Expense model
   */
  readonly fields: ExpenseFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Expense.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ExpenseClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    candidate<T extends Expense$candidateArgs<ExtArgs> = {}>(args?: Subset<T, Expense$candidateArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    LegalResponsible<T extends Expense$LegalResponsibleArgs<ExtArgs> = {}>(args?: Subset<T, Expense$LegalResponsibleArgs<ExtArgs>>): Prisma__LegalResponsibleClient<$Result.GetResult<Prisma.$LegalResponsiblePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Expense model
   */ 
  interface ExpenseFieldRefs {
    readonly id: FieldRef<"Expense", 'String'>
    readonly main_id: FieldRef<"Expense", 'String'>
    readonly date: FieldRef<"Expense", 'DateTime'>
    readonly waterSewage: FieldRef<"Expense", 'Float'>
    readonly electricity: FieldRef<"Expense", 'Float'>
    readonly landlinePhone: FieldRef<"Expense", 'Float'>
    readonly mobilePhone: FieldRef<"Expense", 'Float'>
    readonly food: FieldRef<"Expense", 'Float'>
    readonly rent: FieldRef<"Expense", 'Float'>
    readonly garageRent: FieldRef<"Expense", 'Float'>
    readonly condominium: FieldRef<"Expense", 'Float'>
    readonly cableTV: FieldRef<"Expense", 'Float'>
    readonly streamingServices: FieldRef<"Expense", 'Float'>
    readonly fuel: FieldRef<"Expense", 'Float'>
    readonly annualIPVA: FieldRef<"Expense", 'Float'>
    readonly annualIPTU: FieldRef<"Expense", 'Float'>
    readonly annualITR: FieldRef<"Expense", 'Float'>
    readonly annualIR: FieldRef<"Expense", 'Float'>
    readonly INSS: FieldRef<"Expense", 'Float'>
    readonly publicTransport: FieldRef<"Expense", 'Float'>
    readonly schoolTransport: FieldRef<"Expense", 'Float'>
    readonly internet: FieldRef<"Expense", 'Float'>
    readonly courses: FieldRef<"Expense", 'Float'>
    readonly healthPlan: FieldRef<"Expense", 'Float'>
    readonly dentalPlan: FieldRef<"Expense", 'Float'>
    readonly medicationExpenses: FieldRef<"Expense", 'Float'>
    readonly totalExpense: FieldRef<"Expense", 'Float'>
    readonly candidate_id: FieldRef<"Expense", 'String'>
    readonly installmentCountIPTU: FieldRef<"Expense", 'Int'>
    readonly installmentCountIPVA: FieldRef<"Expense", 'Int'>
    readonly installmentCountIR: FieldRef<"Expense", 'Int'>
    readonly installmentCountITR: FieldRef<"Expense", 'Int'>
    readonly installmentValueIPTU: FieldRef<"Expense", 'Float'>
    readonly installmentValueIPVA: FieldRef<"Expense", 'Float'>
    readonly installmentValueIR: FieldRef<"Expense", 'Float'>
    readonly installmentValueITR: FieldRef<"Expense", 'Float'>
    readonly financing: FieldRef<"Expense", 'Float'>
    readonly creditCard: FieldRef<"Expense", 'Float'>
    readonly optedForInstallmentIPTU: FieldRef<"Expense", 'Boolean'>
    readonly optedForInstallmentIPVA: FieldRef<"Expense", 'Boolean'>
    readonly optedForInstallmentIR: FieldRef<"Expense", 'Boolean'>
    readonly optedForInstallmentITR: FieldRef<"Expense", 'Boolean'>
    readonly otherExpensesDescription: FieldRef<"Expense", 'String[]'>
    readonly otherExpensesValue: FieldRef<"Expense", 'Float[]'>
    readonly legalResponsibleId: FieldRef<"Expense", 'String'>
    readonly application_id: FieldRef<"Expense", 'String'>
  }
    

  // Custom InputTypes

  /**
   * Expense findUnique
   */
  export type ExpenseFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ExpenseInclude<ExtArgs> | null
    /**
     * Filter, which Expense to fetch.
     */
    where: ExpenseWhereUniqueInput
  }


  /**
   * Expense findUniqueOrThrow
   */
  export type ExpenseFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ExpenseInclude<ExtArgs> | null
    /**
     * Filter, which Expense to fetch.
     */
    where: ExpenseWhereUniqueInput
  }


  /**
   * Expense findFirst
   */
  export type ExpenseFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ExpenseInclude<ExtArgs> | null
    /**
     * Filter, which Expense to fetch.
     */
    where?: ExpenseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Expenses to fetch.
     */
    orderBy?: ExpenseOrderByWithRelationInput | ExpenseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Expenses.
     */
    cursor?: ExpenseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Expenses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Expenses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Expenses.
     */
    distinct?: ExpenseScalarFieldEnum | ExpenseScalarFieldEnum[]
  }


  /**
   * Expense findFirstOrThrow
   */
  export type ExpenseFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ExpenseInclude<ExtArgs> | null
    /**
     * Filter, which Expense to fetch.
     */
    where?: ExpenseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Expenses to fetch.
     */
    orderBy?: ExpenseOrderByWithRelationInput | ExpenseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Expenses.
     */
    cursor?: ExpenseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Expenses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Expenses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Expenses.
     */
    distinct?: ExpenseScalarFieldEnum | ExpenseScalarFieldEnum[]
  }


  /**
   * Expense findMany
   */
  export type ExpenseFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ExpenseInclude<ExtArgs> | null
    /**
     * Filter, which Expenses to fetch.
     */
    where?: ExpenseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Expenses to fetch.
     */
    orderBy?: ExpenseOrderByWithRelationInput | ExpenseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Expenses.
     */
    cursor?: ExpenseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Expenses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Expenses.
     */
    skip?: number
    distinct?: ExpenseScalarFieldEnum | ExpenseScalarFieldEnum[]
  }


  /**
   * Expense create
   */
  export type ExpenseCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ExpenseInclude<ExtArgs> | null
    /**
     * The data needed to create a Expense.
     */
    data: XOR<ExpenseCreateInput, ExpenseUncheckedCreateInput>
  }


  /**
   * Expense createMany
   */
  export type ExpenseCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Expenses.
     */
    data: ExpenseCreateManyInput | ExpenseCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Expense update
   */
  export type ExpenseUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ExpenseInclude<ExtArgs> | null
    /**
     * The data needed to update a Expense.
     */
    data: XOR<ExpenseUpdateInput, ExpenseUncheckedUpdateInput>
    /**
     * Choose, which Expense to update.
     */
    where: ExpenseWhereUniqueInput
  }


  /**
   * Expense updateMany
   */
  export type ExpenseUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Expenses.
     */
    data: XOR<ExpenseUpdateManyMutationInput, ExpenseUncheckedUpdateManyInput>
    /**
     * Filter which Expenses to update
     */
    where?: ExpenseWhereInput
  }


  /**
   * Expense upsert
   */
  export type ExpenseUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ExpenseInclude<ExtArgs> | null
    /**
     * The filter to search for the Expense to update in case it exists.
     */
    where: ExpenseWhereUniqueInput
    /**
     * In case the Expense found by the `where` argument doesn't exist, create a new Expense with this data.
     */
    create: XOR<ExpenseCreateInput, ExpenseUncheckedCreateInput>
    /**
     * In case the Expense was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ExpenseUpdateInput, ExpenseUncheckedUpdateInput>
  }


  /**
   * Expense delete
   */
  export type ExpenseDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ExpenseInclude<ExtArgs> | null
    /**
     * Filter which Expense to delete.
     */
    where: ExpenseWhereUniqueInput
  }


  /**
   * Expense deleteMany
   */
  export type ExpenseDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which Expenses to delete
     */
    where?: ExpenseWhereInput
  }


  /**
   * Expense.candidate
   */
  export type Expense$candidateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CandidateInclude<ExtArgs> | null
    where?: CandidateWhereInput
  }


  /**
   * Expense.LegalResponsible
   */
  export type Expense$LegalResponsibleArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalResponsible
     */
    select?: LegalResponsibleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LegalResponsibleInclude<ExtArgs> | null
    where?: LegalResponsibleWhereInput
  }


  /**
   * Expense without action
   */
  export type ExpenseDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ExpenseInclude<ExtArgs> | null
  }



  /**
   * Model Loan
   */

  export type AggregateLoan = {
    _count: LoanCountAggregateOutputType | null
    _avg: LoanAvgAggregateOutputType | null
    _sum: LoanSumAggregateOutputType | null
    _min: LoanMinAggregateOutputType | null
    _max: LoanMaxAggregateOutputType | null
  }

  export type LoanAvgAggregateOutputType = {
    installmentValue: number | null
    totalInstallments: number | null
    paidInstallments: number | null
  }

  export type LoanSumAggregateOutputType = {
    installmentValue: number | null
    totalInstallments: number | null
    paidInstallments: number | null
  }

  export type LoanMinAggregateOutputType = {
    id: string | null
    main_id: string | null
    familyMemberName: string | null
    installmentValue: number | null
    totalInstallments: number | null
    paidInstallments: number | null
    bankName: string | null
    familyMember_id: string | null
    candidate_id: string | null
    legalResponsibleId: string | null
    application_id: string | null
  }

  export type LoanMaxAggregateOutputType = {
    id: string | null
    main_id: string | null
    familyMemberName: string | null
    installmentValue: number | null
    totalInstallments: number | null
    paidInstallments: number | null
    bankName: string | null
    familyMember_id: string | null
    candidate_id: string | null
    legalResponsibleId: string | null
    application_id: string | null
  }

  export type LoanCountAggregateOutputType = {
    id: number
    main_id: number
    familyMemberName: number
    installmentValue: number
    totalInstallments: number
    paidInstallments: number
    bankName: number
    familyMember_id: number
    candidate_id: number
    legalResponsibleId: number
    application_id: number
    _all: number
  }


  export type LoanAvgAggregateInputType = {
    installmentValue?: true
    totalInstallments?: true
    paidInstallments?: true
  }

  export type LoanSumAggregateInputType = {
    installmentValue?: true
    totalInstallments?: true
    paidInstallments?: true
  }

  export type LoanMinAggregateInputType = {
    id?: true
    main_id?: true
    familyMemberName?: true
    installmentValue?: true
    totalInstallments?: true
    paidInstallments?: true
    bankName?: true
    familyMember_id?: true
    candidate_id?: true
    legalResponsibleId?: true
    application_id?: true
  }

  export type LoanMaxAggregateInputType = {
    id?: true
    main_id?: true
    familyMemberName?: true
    installmentValue?: true
    totalInstallments?: true
    paidInstallments?: true
    bankName?: true
    familyMember_id?: true
    candidate_id?: true
    legalResponsibleId?: true
    application_id?: true
  }

  export type LoanCountAggregateInputType = {
    id?: true
    main_id?: true
    familyMemberName?: true
    installmentValue?: true
    totalInstallments?: true
    paidInstallments?: true
    bankName?: true
    familyMember_id?: true
    candidate_id?: true
    legalResponsibleId?: true
    application_id?: true
    _all?: true
  }

  export type LoanAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which Loan to aggregate.
     */
    where?: LoanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Loans to fetch.
     */
    orderBy?: LoanOrderByWithRelationInput | LoanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LoanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Loans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Loans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Loans
    **/
    _count?: true | LoanCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LoanAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LoanSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LoanMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LoanMaxAggregateInputType
  }

  export type GetLoanAggregateType<T extends LoanAggregateArgs> = {
        [P in keyof T & keyof AggregateLoan]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLoan[P]>
      : GetScalarType<T[P], AggregateLoan[P]>
  }




  export type LoanGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: LoanWhereInput
    orderBy?: LoanOrderByWithAggregationInput | LoanOrderByWithAggregationInput[]
    by: LoanScalarFieldEnum[] | LoanScalarFieldEnum
    having?: LoanScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LoanCountAggregateInputType | true
    _avg?: LoanAvgAggregateInputType
    _sum?: LoanSumAggregateInputType
    _min?: LoanMinAggregateInputType
    _max?: LoanMaxAggregateInputType
  }

  export type LoanGroupByOutputType = {
    id: string
    main_id: string | null
    familyMemberName: string
    installmentValue: number
    totalInstallments: number
    paidInstallments: number
    bankName: string
    familyMember_id: string | null
    candidate_id: string | null
    legalResponsibleId: string | null
    application_id: string
    _count: LoanCountAggregateOutputType | null
    _avg: LoanAvgAggregateOutputType | null
    _sum: LoanSumAggregateOutputType | null
    _min: LoanMinAggregateOutputType | null
    _max: LoanMaxAggregateOutputType | null
  }

  type GetLoanGroupByPayload<T extends LoanGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LoanGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LoanGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LoanGroupByOutputType[P]>
            : GetScalarType<T[P], LoanGroupByOutputType[P]>
        }
      >
    >


  export type LoanSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    main_id?: boolean
    familyMemberName?: boolean
    installmentValue?: boolean
    totalInstallments?: boolean
    paidInstallments?: boolean
    bankName?: boolean
    familyMember_id?: boolean
    candidate_id?: boolean
    legalResponsibleId?: boolean
    application_id?: boolean
    candidate?: boolean | Loan$candidateArgs<ExtArgs>
    familyMember?: boolean | Loan$familyMemberArgs<ExtArgs>
    LegalResponsible?: boolean | Loan$LegalResponsibleArgs<ExtArgs>
  }, ExtArgs["result"]["loan"]>

  export type LoanSelectScalar = {
    id?: boolean
    main_id?: boolean
    familyMemberName?: boolean
    installmentValue?: boolean
    totalInstallments?: boolean
    paidInstallments?: boolean
    bankName?: boolean
    familyMember_id?: boolean
    candidate_id?: boolean
    legalResponsibleId?: boolean
    application_id?: boolean
  }

  export type LoanInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    candidate?: boolean | Loan$candidateArgs<ExtArgs>
    familyMember?: boolean | Loan$familyMemberArgs<ExtArgs>
    LegalResponsible?: boolean | Loan$LegalResponsibleArgs<ExtArgs>
  }


  export type $LoanPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "Loan"
    objects: {
      candidate: Prisma.$CandidatePayload<ExtArgs> | null
      familyMember: Prisma.$FamilyMemberPayload<ExtArgs> | null
      LegalResponsible: Prisma.$LegalResponsiblePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetResult<{
      id: string
      main_id: string | null
      familyMemberName: string
      installmentValue: number
      totalInstallments: number
      paidInstallments: number
      bankName: string
      familyMember_id: string | null
      candidate_id: string | null
      legalResponsibleId: string | null
      application_id: string
    }, ExtArgs["result"]["loan"]>
    composites: {}
  }


  type LoanGetPayload<S extends boolean | null | undefined | LoanDefaultArgs> = $Result.GetResult<Prisma.$LoanPayload, S>

  type LoanCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<LoanFindManyArgs, 'select' | 'include'> & {
      select?: LoanCountAggregateInputType | true
    }

  export interface LoanDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Loan'], meta: { name: 'Loan' } }
    /**
     * Find zero or one Loan that matches the filter.
     * @param {LoanFindUniqueArgs} args - Arguments to find a Loan
     * @example
     * // Get one Loan
     * const loan = await prisma.loan.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends LoanFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, LoanFindUniqueArgs<ExtArgs>>
    ): Prisma__LoanClient<$Result.GetResult<Prisma.$LoanPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Loan that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {LoanFindUniqueOrThrowArgs} args - Arguments to find a Loan
     * @example
     * // Get one Loan
     * const loan = await prisma.loan.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends LoanFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, LoanFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__LoanClient<$Result.GetResult<Prisma.$LoanPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Loan that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoanFindFirstArgs} args - Arguments to find a Loan
     * @example
     * // Get one Loan
     * const loan = await prisma.loan.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends LoanFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, LoanFindFirstArgs<ExtArgs>>
    ): Prisma__LoanClient<$Result.GetResult<Prisma.$LoanPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Loan that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoanFindFirstOrThrowArgs} args - Arguments to find a Loan
     * @example
     * // Get one Loan
     * const loan = await prisma.loan.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends LoanFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, LoanFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__LoanClient<$Result.GetResult<Prisma.$LoanPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Loans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoanFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Loans
     * const loans = await prisma.loan.findMany()
     * 
     * // Get first 10 Loans
     * const loans = await prisma.loan.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const loanWithIdOnly = await prisma.loan.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends LoanFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, LoanFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LoanPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Loan.
     * @param {LoanCreateArgs} args - Arguments to create a Loan.
     * @example
     * // Create one Loan
     * const Loan = await prisma.loan.create({
     *   data: {
     *     // ... data to create a Loan
     *   }
     * })
     * 
    **/
    create<T extends LoanCreateArgs<ExtArgs>>(
      args: SelectSubset<T, LoanCreateArgs<ExtArgs>>
    ): Prisma__LoanClient<$Result.GetResult<Prisma.$LoanPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Loans.
     *     @param {LoanCreateManyArgs} args - Arguments to create many Loans.
     *     @example
     *     // Create many Loans
     *     const loan = await prisma.loan.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends LoanCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, LoanCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Loan.
     * @param {LoanDeleteArgs} args - Arguments to delete one Loan.
     * @example
     * // Delete one Loan
     * const Loan = await prisma.loan.delete({
     *   where: {
     *     // ... filter to delete one Loan
     *   }
     * })
     * 
    **/
    delete<T extends LoanDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, LoanDeleteArgs<ExtArgs>>
    ): Prisma__LoanClient<$Result.GetResult<Prisma.$LoanPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Loan.
     * @param {LoanUpdateArgs} args - Arguments to update one Loan.
     * @example
     * // Update one Loan
     * const loan = await prisma.loan.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends LoanUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, LoanUpdateArgs<ExtArgs>>
    ): Prisma__LoanClient<$Result.GetResult<Prisma.$LoanPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Loans.
     * @param {LoanDeleteManyArgs} args - Arguments to filter Loans to delete.
     * @example
     * // Delete a few Loans
     * const { count } = await prisma.loan.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends LoanDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, LoanDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Loans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoanUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Loans
     * const loan = await prisma.loan.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends LoanUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, LoanUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Loan.
     * @param {LoanUpsertArgs} args - Arguments to update or create a Loan.
     * @example
     * // Update or create a Loan
     * const loan = await prisma.loan.upsert({
     *   create: {
     *     // ... data to create a Loan
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Loan we want to update
     *   }
     * })
    **/
    upsert<T extends LoanUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, LoanUpsertArgs<ExtArgs>>
    ): Prisma__LoanClient<$Result.GetResult<Prisma.$LoanPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Loans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoanCountArgs} args - Arguments to filter Loans to count.
     * @example
     * // Count the number of Loans
     * const count = await prisma.loan.count({
     *   where: {
     *     // ... the filter for the Loans we want to count
     *   }
     * })
    **/
    count<T extends LoanCountArgs>(
      args?: Subset<T, LoanCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LoanCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Loan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoanAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LoanAggregateArgs>(args: Subset<T, LoanAggregateArgs>): Prisma.PrismaPromise<GetLoanAggregateType<T>>

    /**
     * Group by Loan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoanGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LoanGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LoanGroupByArgs['orderBy'] }
        : { orderBy?: LoanGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LoanGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLoanGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Loan model
   */
  readonly fields: LoanFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Loan.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LoanClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    candidate<T extends Loan$candidateArgs<ExtArgs> = {}>(args?: Subset<T, Loan$candidateArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    familyMember<T extends Loan$familyMemberArgs<ExtArgs> = {}>(args?: Subset<T, Loan$familyMemberArgs<ExtArgs>>): Prisma__FamilyMemberClient<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    LegalResponsible<T extends Loan$LegalResponsibleArgs<ExtArgs> = {}>(args?: Subset<T, Loan$LegalResponsibleArgs<ExtArgs>>): Prisma__LegalResponsibleClient<$Result.GetResult<Prisma.$LegalResponsiblePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Loan model
   */ 
  interface LoanFieldRefs {
    readonly id: FieldRef<"Loan", 'String'>
    readonly main_id: FieldRef<"Loan", 'String'>
    readonly familyMemberName: FieldRef<"Loan", 'String'>
    readonly installmentValue: FieldRef<"Loan", 'Float'>
    readonly totalInstallments: FieldRef<"Loan", 'Int'>
    readonly paidInstallments: FieldRef<"Loan", 'Int'>
    readonly bankName: FieldRef<"Loan", 'String'>
    readonly familyMember_id: FieldRef<"Loan", 'String'>
    readonly candidate_id: FieldRef<"Loan", 'String'>
    readonly legalResponsibleId: FieldRef<"Loan", 'String'>
    readonly application_id: FieldRef<"Loan", 'String'>
  }
    

  // Custom InputTypes

  /**
   * Loan findUnique
   */
  export type LoanFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Loan
     */
    select?: LoanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LoanInclude<ExtArgs> | null
    /**
     * Filter, which Loan to fetch.
     */
    where: LoanWhereUniqueInput
  }


  /**
   * Loan findUniqueOrThrow
   */
  export type LoanFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Loan
     */
    select?: LoanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LoanInclude<ExtArgs> | null
    /**
     * Filter, which Loan to fetch.
     */
    where: LoanWhereUniqueInput
  }


  /**
   * Loan findFirst
   */
  export type LoanFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Loan
     */
    select?: LoanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LoanInclude<ExtArgs> | null
    /**
     * Filter, which Loan to fetch.
     */
    where?: LoanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Loans to fetch.
     */
    orderBy?: LoanOrderByWithRelationInput | LoanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Loans.
     */
    cursor?: LoanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Loans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Loans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Loans.
     */
    distinct?: LoanScalarFieldEnum | LoanScalarFieldEnum[]
  }


  /**
   * Loan findFirstOrThrow
   */
  export type LoanFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Loan
     */
    select?: LoanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LoanInclude<ExtArgs> | null
    /**
     * Filter, which Loan to fetch.
     */
    where?: LoanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Loans to fetch.
     */
    orderBy?: LoanOrderByWithRelationInput | LoanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Loans.
     */
    cursor?: LoanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Loans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Loans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Loans.
     */
    distinct?: LoanScalarFieldEnum | LoanScalarFieldEnum[]
  }


  /**
   * Loan findMany
   */
  export type LoanFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Loan
     */
    select?: LoanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LoanInclude<ExtArgs> | null
    /**
     * Filter, which Loans to fetch.
     */
    where?: LoanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Loans to fetch.
     */
    orderBy?: LoanOrderByWithRelationInput | LoanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Loans.
     */
    cursor?: LoanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Loans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Loans.
     */
    skip?: number
    distinct?: LoanScalarFieldEnum | LoanScalarFieldEnum[]
  }


  /**
   * Loan create
   */
  export type LoanCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Loan
     */
    select?: LoanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LoanInclude<ExtArgs> | null
    /**
     * The data needed to create a Loan.
     */
    data: XOR<LoanCreateInput, LoanUncheckedCreateInput>
  }


  /**
   * Loan createMany
   */
  export type LoanCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Loans.
     */
    data: LoanCreateManyInput | LoanCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Loan update
   */
  export type LoanUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Loan
     */
    select?: LoanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LoanInclude<ExtArgs> | null
    /**
     * The data needed to update a Loan.
     */
    data: XOR<LoanUpdateInput, LoanUncheckedUpdateInput>
    /**
     * Choose, which Loan to update.
     */
    where: LoanWhereUniqueInput
  }


  /**
   * Loan updateMany
   */
  export type LoanUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Loans.
     */
    data: XOR<LoanUpdateManyMutationInput, LoanUncheckedUpdateManyInput>
    /**
     * Filter which Loans to update
     */
    where?: LoanWhereInput
  }


  /**
   * Loan upsert
   */
  export type LoanUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Loan
     */
    select?: LoanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LoanInclude<ExtArgs> | null
    /**
     * The filter to search for the Loan to update in case it exists.
     */
    where: LoanWhereUniqueInput
    /**
     * In case the Loan found by the `where` argument doesn't exist, create a new Loan with this data.
     */
    create: XOR<LoanCreateInput, LoanUncheckedCreateInput>
    /**
     * In case the Loan was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LoanUpdateInput, LoanUncheckedUpdateInput>
  }


  /**
   * Loan delete
   */
  export type LoanDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Loan
     */
    select?: LoanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LoanInclude<ExtArgs> | null
    /**
     * Filter which Loan to delete.
     */
    where: LoanWhereUniqueInput
  }


  /**
   * Loan deleteMany
   */
  export type LoanDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which Loans to delete
     */
    where?: LoanWhereInput
  }


  /**
   * Loan.candidate
   */
  export type Loan$candidateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CandidateInclude<ExtArgs> | null
    where?: CandidateWhereInput
  }


  /**
   * Loan.familyMember
   */
  export type Loan$familyMemberArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    where?: FamilyMemberWhereInput
  }


  /**
   * Loan.LegalResponsible
   */
  export type Loan$LegalResponsibleArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalResponsible
     */
    select?: LegalResponsibleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LegalResponsibleInclude<ExtArgs> | null
    where?: LegalResponsibleWhereInput
  }


  /**
   * Loan without action
   */
  export type LoanDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Loan
     */
    select?: LoanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LoanInclude<ExtArgs> | null
  }



  /**
   * Model Financing
   */

  export type AggregateFinancing = {
    _count: FinancingCountAggregateOutputType | null
    _avg: FinancingAvgAggregateOutputType | null
    _sum: FinancingSumAggregateOutputType | null
    _min: FinancingMinAggregateOutputType | null
    _max: FinancingMaxAggregateOutputType | null
  }

  export type FinancingAvgAggregateOutputType = {
    installmentValue: number | null
    totalInstallments: number | null
    paidInstallments: number | null
  }

  export type FinancingSumAggregateOutputType = {
    installmentValue: number | null
    totalInstallments: number | null
    paidInstallments: number | null
  }

  export type FinancingMinAggregateOutputType = {
    id: string | null
    main_id: string | null
    familyMemberName: string | null
    installmentValue: number | null
    totalInstallments: number | null
    paidInstallments: number | null
    bankName: string | null
    familyMember_id: string | null
    candidate_id: string | null
    otherFinancing: string | null
    financingType: $Enums.FinancingType | null
    legalResponsibleId: string | null
    application_id: string | null
  }

  export type FinancingMaxAggregateOutputType = {
    id: string | null
    main_id: string | null
    familyMemberName: string | null
    installmentValue: number | null
    totalInstallments: number | null
    paidInstallments: number | null
    bankName: string | null
    familyMember_id: string | null
    candidate_id: string | null
    otherFinancing: string | null
    financingType: $Enums.FinancingType | null
    legalResponsibleId: string | null
    application_id: string | null
  }

  export type FinancingCountAggregateOutputType = {
    id: number
    main_id: number
    familyMemberName: number
    installmentValue: number
    totalInstallments: number
    paidInstallments: number
    bankName: number
    familyMember_id: number
    candidate_id: number
    otherFinancing: number
    financingType: number
    legalResponsibleId: number
    application_id: number
    _all: number
  }


  export type FinancingAvgAggregateInputType = {
    installmentValue?: true
    totalInstallments?: true
    paidInstallments?: true
  }

  export type FinancingSumAggregateInputType = {
    installmentValue?: true
    totalInstallments?: true
    paidInstallments?: true
  }

  export type FinancingMinAggregateInputType = {
    id?: true
    main_id?: true
    familyMemberName?: true
    installmentValue?: true
    totalInstallments?: true
    paidInstallments?: true
    bankName?: true
    familyMember_id?: true
    candidate_id?: true
    otherFinancing?: true
    financingType?: true
    legalResponsibleId?: true
    application_id?: true
  }

  export type FinancingMaxAggregateInputType = {
    id?: true
    main_id?: true
    familyMemberName?: true
    installmentValue?: true
    totalInstallments?: true
    paidInstallments?: true
    bankName?: true
    familyMember_id?: true
    candidate_id?: true
    otherFinancing?: true
    financingType?: true
    legalResponsibleId?: true
    application_id?: true
  }

  export type FinancingCountAggregateInputType = {
    id?: true
    main_id?: true
    familyMemberName?: true
    installmentValue?: true
    totalInstallments?: true
    paidInstallments?: true
    bankName?: true
    familyMember_id?: true
    candidate_id?: true
    otherFinancing?: true
    financingType?: true
    legalResponsibleId?: true
    application_id?: true
    _all?: true
  }

  export type FinancingAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which Financing to aggregate.
     */
    where?: FinancingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Financings to fetch.
     */
    orderBy?: FinancingOrderByWithRelationInput | FinancingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FinancingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Financings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Financings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Financings
    **/
    _count?: true | FinancingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FinancingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FinancingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FinancingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FinancingMaxAggregateInputType
  }

  export type GetFinancingAggregateType<T extends FinancingAggregateArgs> = {
        [P in keyof T & keyof AggregateFinancing]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFinancing[P]>
      : GetScalarType<T[P], AggregateFinancing[P]>
  }




  export type FinancingGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: FinancingWhereInput
    orderBy?: FinancingOrderByWithAggregationInput | FinancingOrderByWithAggregationInput[]
    by: FinancingScalarFieldEnum[] | FinancingScalarFieldEnum
    having?: FinancingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FinancingCountAggregateInputType | true
    _avg?: FinancingAvgAggregateInputType
    _sum?: FinancingSumAggregateInputType
    _min?: FinancingMinAggregateInputType
    _max?: FinancingMaxAggregateInputType
  }

  export type FinancingGroupByOutputType = {
    id: string
    main_id: string | null
    familyMemberName: string
    installmentValue: number
    totalInstallments: number
    paidInstallments: number
    bankName: string
    familyMember_id: string | null
    candidate_id: string | null
    otherFinancing: string | null
    financingType: $Enums.FinancingType
    legalResponsibleId: string | null
    application_id: string
    _count: FinancingCountAggregateOutputType | null
    _avg: FinancingAvgAggregateOutputType | null
    _sum: FinancingSumAggregateOutputType | null
    _min: FinancingMinAggregateOutputType | null
    _max: FinancingMaxAggregateOutputType | null
  }

  type GetFinancingGroupByPayload<T extends FinancingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FinancingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FinancingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FinancingGroupByOutputType[P]>
            : GetScalarType<T[P], FinancingGroupByOutputType[P]>
        }
      >
    >


  export type FinancingSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    main_id?: boolean
    familyMemberName?: boolean
    installmentValue?: boolean
    totalInstallments?: boolean
    paidInstallments?: boolean
    bankName?: boolean
    familyMember_id?: boolean
    candidate_id?: boolean
    otherFinancing?: boolean
    financingType?: boolean
    legalResponsibleId?: boolean
    application_id?: boolean
    candidate?: boolean | Financing$candidateArgs<ExtArgs>
    familyMember?: boolean | Financing$familyMemberArgs<ExtArgs>
    LegalResponsible?: boolean | Financing$LegalResponsibleArgs<ExtArgs>
  }, ExtArgs["result"]["financing"]>

  export type FinancingSelectScalar = {
    id?: boolean
    main_id?: boolean
    familyMemberName?: boolean
    installmentValue?: boolean
    totalInstallments?: boolean
    paidInstallments?: boolean
    bankName?: boolean
    familyMember_id?: boolean
    candidate_id?: boolean
    otherFinancing?: boolean
    financingType?: boolean
    legalResponsibleId?: boolean
    application_id?: boolean
  }

  export type FinancingInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    candidate?: boolean | Financing$candidateArgs<ExtArgs>
    familyMember?: boolean | Financing$familyMemberArgs<ExtArgs>
    LegalResponsible?: boolean | Financing$LegalResponsibleArgs<ExtArgs>
  }


  export type $FinancingPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "Financing"
    objects: {
      candidate: Prisma.$CandidatePayload<ExtArgs> | null
      familyMember: Prisma.$FamilyMemberPayload<ExtArgs> | null
      LegalResponsible: Prisma.$LegalResponsiblePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetResult<{
      id: string
      main_id: string | null
      familyMemberName: string
      installmentValue: number
      totalInstallments: number
      paidInstallments: number
      bankName: string
      familyMember_id: string | null
      candidate_id: string | null
      otherFinancing: string | null
      financingType: $Enums.FinancingType
      legalResponsibleId: string | null
      application_id: string
    }, ExtArgs["result"]["financing"]>
    composites: {}
  }


  type FinancingGetPayload<S extends boolean | null | undefined | FinancingDefaultArgs> = $Result.GetResult<Prisma.$FinancingPayload, S>

  type FinancingCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<FinancingFindManyArgs, 'select' | 'include'> & {
      select?: FinancingCountAggregateInputType | true
    }

  export interface FinancingDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Financing'], meta: { name: 'Financing' } }
    /**
     * Find zero or one Financing that matches the filter.
     * @param {FinancingFindUniqueArgs} args - Arguments to find a Financing
     * @example
     * // Get one Financing
     * const financing = await prisma.financing.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FinancingFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, FinancingFindUniqueArgs<ExtArgs>>
    ): Prisma__FinancingClient<$Result.GetResult<Prisma.$FinancingPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Financing that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {FinancingFindUniqueOrThrowArgs} args - Arguments to find a Financing
     * @example
     * // Get one Financing
     * const financing = await prisma.financing.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends FinancingFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, FinancingFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__FinancingClient<$Result.GetResult<Prisma.$FinancingPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Financing that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinancingFindFirstArgs} args - Arguments to find a Financing
     * @example
     * // Get one Financing
     * const financing = await prisma.financing.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FinancingFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, FinancingFindFirstArgs<ExtArgs>>
    ): Prisma__FinancingClient<$Result.GetResult<Prisma.$FinancingPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Financing that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinancingFindFirstOrThrowArgs} args - Arguments to find a Financing
     * @example
     * // Get one Financing
     * const financing = await prisma.financing.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends FinancingFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, FinancingFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__FinancingClient<$Result.GetResult<Prisma.$FinancingPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Financings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinancingFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Financings
     * const financings = await prisma.financing.findMany()
     * 
     * // Get first 10 Financings
     * const financings = await prisma.financing.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const financingWithIdOnly = await prisma.financing.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FinancingFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FinancingFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FinancingPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Financing.
     * @param {FinancingCreateArgs} args - Arguments to create a Financing.
     * @example
     * // Create one Financing
     * const Financing = await prisma.financing.create({
     *   data: {
     *     // ... data to create a Financing
     *   }
     * })
     * 
    **/
    create<T extends FinancingCreateArgs<ExtArgs>>(
      args: SelectSubset<T, FinancingCreateArgs<ExtArgs>>
    ): Prisma__FinancingClient<$Result.GetResult<Prisma.$FinancingPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Financings.
     *     @param {FinancingCreateManyArgs} args - Arguments to create many Financings.
     *     @example
     *     // Create many Financings
     *     const financing = await prisma.financing.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends FinancingCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FinancingCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Financing.
     * @param {FinancingDeleteArgs} args - Arguments to delete one Financing.
     * @example
     * // Delete one Financing
     * const Financing = await prisma.financing.delete({
     *   where: {
     *     // ... filter to delete one Financing
     *   }
     * })
     * 
    **/
    delete<T extends FinancingDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, FinancingDeleteArgs<ExtArgs>>
    ): Prisma__FinancingClient<$Result.GetResult<Prisma.$FinancingPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Financing.
     * @param {FinancingUpdateArgs} args - Arguments to update one Financing.
     * @example
     * // Update one Financing
     * const financing = await prisma.financing.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends FinancingUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, FinancingUpdateArgs<ExtArgs>>
    ): Prisma__FinancingClient<$Result.GetResult<Prisma.$FinancingPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Financings.
     * @param {FinancingDeleteManyArgs} args - Arguments to filter Financings to delete.
     * @example
     * // Delete a few Financings
     * const { count } = await prisma.financing.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends FinancingDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FinancingDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Financings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinancingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Financings
     * const financing = await prisma.financing.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends FinancingUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, FinancingUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Financing.
     * @param {FinancingUpsertArgs} args - Arguments to update or create a Financing.
     * @example
     * // Update or create a Financing
     * const financing = await prisma.financing.upsert({
     *   create: {
     *     // ... data to create a Financing
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Financing we want to update
     *   }
     * })
    **/
    upsert<T extends FinancingUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, FinancingUpsertArgs<ExtArgs>>
    ): Prisma__FinancingClient<$Result.GetResult<Prisma.$FinancingPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Financings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinancingCountArgs} args - Arguments to filter Financings to count.
     * @example
     * // Count the number of Financings
     * const count = await prisma.financing.count({
     *   where: {
     *     // ... the filter for the Financings we want to count
     *   }
     * })
    **/
    count<T extends FinancingCountArgs>(
      args?: Subset<T, FinancingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FinancingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Financing.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinancingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FinancingAggregateArgs>(args: Subset<T, FinancingAggregateArgs>): Prisma.PrismaPromise<GetFinancingAggregateType<T>>

    /**
     * Group by Financing.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinancingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FinancingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FinancingGroupByArgs['orderBy'] }
        : { orderBy?: FinancingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FinancingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFinancingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Financing model
   */
  readonly fields: FinancingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Financing.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FinancingClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    candidate<T extends Financing$candidateArgs<ExtArgs> = {}>(args?: Subset<T, Financing$candidateArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    familyMember<T extends Financing$familyMemberArgs<ExtArgs> = {}>(args?: Subset<T, Financing$familyMemberArgs<ExtArgs>>): Prisma__FamilyMemberClient<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    LegalResponsible<T extends Financing$LegalResponsibleArgs<ExtArgs> = {}>(args?: Subset<T, Financing$LegalResponsibleArgs<ExtArgs>>): Prisma__LegalResponsibleClient<$Result.GetResult<Prisma.$LegalResponsiblePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Financing model
   */ 
  interface FinancingFieldRefs {
    readonly id: FieldRef<"Financing", 'String'>
    readonly main_id: FieldRef<"Financing", 'String'>
    readonly familyMemberName: FieldRef<"Financing", 'String'>
    readonly installmentValue: FieldRef<"Financing", 'Float'>
    readonly totalInstallments: FieldRef<"Financing", 'Int'>
    readonly paidInstallments: FieldRef<"Financing", 'Int'>
    readonly bankName: FieldRef<"Financing", 'String'>
    readonly familyMember_id: FieldRef<"Financing", 'String'>
    readonly candidate_id: FieldRef<"Financing", 'String'>
    readonly otherFinancing: FieldRef<"Financing", 'String'>
    readonly financingType: FieldRef<"Financing", 'FinancingType'>
    readonly legalResponsibleId: FieldRef<"Financing", 'String'>
    readonly application_id: FieldRef<"Financing", 'String'>
  }
    

  // Custom InputTypes

  /**
   * Financing findUnique
   */
  export type FinancingFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Financing
     */
    select?: FinancingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FinancingInclude<ExtArgs> | null
    /**
     * Filter, which Financing to fetch.
     */
    where: FinancingWhereUniqueInput
  }


  /**
   * Financing findUniqueOrThrow
   */
  export type FinancingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Financing
     */
    select?: FinancingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FinancingInclude<ExtArgs> | null
    /**
     * Filter, which Financing to fetch.
     */
    where: FinancingWhereUniqueInput
  }


  /**
   * Financing findFirst
   */
  export type FinancingFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Financing
     */
    select?: FinancingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FinancingInclude<ExtArgs> | null
    /**
     * Filter, which Financing to fetch.
     */
    where?: FinancingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Financings to fetch.
     */
    orderBy?: FinancingOrderByWithRelationInput | FinancingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Financings.
     */
    cursor?: FinancingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Financings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Financings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Financings.
     */
    distinct?: FinancingScalarFieldEnum | FinancingScalarFieldEnum[]
  }


  /**
   * Financing findFirstOrThrow
   */
  export type FinancingFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Financing
     */
    select?: FinancingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FinancingInclude<ExtArgs> | null
    /**
     * Filter, which Financing to fetch.
     */
    where?: FinancingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Financings to fetch.
     */
    orderBy?: FinancingOrderByWithRelationInput | FinancingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Financings.
     */
    cursor?: FinancingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Financings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Financings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Financings.
     */
    distinct?: FinancingScalarFieldEnum | FinancingScalarFieldEnum[]
  }


  /**
   * Financing findMany
   */
  export type FinancingFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Financing
     */
    select?: FinancingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FinancingInclude<ExtArgs> | null
    /**
     * Filter, which Financings to fetch.
     */
    where?: FinancingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Financings to fetch.
     */
    orderBy?: FinancingOrderByWithRelationInput | FinancingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Financings.
     */
    cursor?: FinancingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Financings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Financings.
     */
    skip?: number
    distinct?: FinancingScalarFieldEnum | FinancingScalarFieldEnum[]
  }


  /**
   * Financing create
   */
  export type FinancingCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Financing
     */
    select?: FinancingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FinancingInclude<ExtArgs> | null
    /**
     * The data needed to create a Financing.
     */
    data: XOR<FinancingCreateInput, FinancingUncheckedCreateInput>
  }


  /**
   * Financing createMany
   */
  export type FinancingCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Financings.
     */
    data: FinancingCreateManyInput | FinancingCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Financing update
   */
  export type FinancingUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Financing
     */
    select?: FinancingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FinancingInclude<ExtArgs> | null
    /**
     * The data needed to update a Financing.
     */
    data: XOR<FinancingUpdateInput, FinancingUncheckedUpdateInput>
    /**
     * Choose, which Financing to update.
     */
    where: FinancingWhereUniqueInput
  }


  /**
   * Financing updateMany
   */
  export type FinancingUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Financings.
     */
    data: XOR<FinancingUpdateManyMutationInput, FinancingUncheckedUpdateManyInput>
    /**
     * Filter which Financings to update
     */
    where?: FinancingWhereInput
  }


  /**
   * Financing upsert
   */
  export type FinancingUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Financing
     */
    select?: FinancingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FinancingInclude<ExtArgs> | null
    /**
     * The filter to search for the Financing to update in case it exists.
     */
    where: FinancingWhereUniqueInput
    /**
     * In case the Financing found by the `where` argument doesn't exist, create a new Financing with this data.
     */
    create: XOR<FinancingCreateInput, FinancingUncheckedCreateInput>
    /**
     * In case the Financing was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FinancingUpdateInput, FinancingUncheckedUpdateInput>
  }


  /**
   * Financing delete
   */
  export type FinancingDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Financing
     */
    select?: FinancingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FinancingInclude<ExtArgs> | null
    /**
     * Filter which Financing to delete.
     */
    where: FinancingWhereUniqueInput
  }


  /**
   * Financing deleteMany
   */
  export type FinancingDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which Financings to delete
     */
    where?: FinancingWhereInput
  }


  /**
   * Financing.candidate
   */
  export type Financing$candidateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CandidateInclude<ExtArgs> | null
    where?: CandidateWhereInput
  }


  /**
   * Financing.familyMember
   */
  export type Financing$familyMemberArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    where?: FamilyMemberWhereInput
  }


  /**
   * Financing.LegalResponsible
   */
  export type Financing$LegalResponsibleArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalResponsible
     */
    select?: LegalResponsibleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LegalResponsibleInclude<ExtArgs> | null
    where?: LegalResponsibleWhereInput
  }


  /**
   * Financing without action
   */
  export type FinancingDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Financing
     */
    select?: FinancingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FinancingInclude<ExtArgs> | null
  }



  /**
   * Model CreditCard
   */

  export type AggregateCreditCard = {
    _count: CreditCardCountAggregateOutputType | null
    _avg: CreditCardAvgAggregateOutputType | null
    _sum: CreditCardSumAggregateOutputType | null
    _min: CreditCardMinAggregateOutputType | null
    _max: CreditCardMaxAggregateOutputType | null
  }

  export type CreditCardAvgAggregateOutputType = {
    usersCount: number | null
    invoiceValue: number | null
  }

  export type CreditCardSumAggregateOutputType = {
    usersCount: number | null
    invoiceValue: number | null
  }

  export type CreditCardMinAggregateOutputType = {
    id: string | null
    main_id: string | null
    familyMemberName: string | null
    usersCount: number | null
    cardType: string | null
    bankName: string | null
    cardFlag: string | null
    invoiceValue: number | null
    familyMember_id: string | null
    candidate_id: string | null
    legalResponsibleId: string | null
    application_id: string | null
  }

  export type CreditCardMaxAggregateOutputType = {
    id: string | null
    main_id: string | null
    familyMemberName: string | null
    usersCount: number | null
    cardType: string | null
    bankName: string | null
    cardFlag: string | null
    invoiceValue: number | null
    familyMember_id: string | null
    candidate_id: string | null
    legalResponsibleId: string | null
    application_id: string | null
  }

  export type CreditCardCountAggregateOutputType = {
    id: number
    main_id: number
    familyMemberName: number
    usersCount: number
    cardType: number
    bankName: number
    cardFlag: number
    invoiceValue: number
    familyMember_id: number
    candidate_id: number
    legalResponsibleId: number
    application_id: number
    _all: number
  }


  export type CreditCardAvgAggregateInputType = {
    usersCount?: true
    invoiceValue?: true
  }

  export type CreditCardSumAggregateInputType = {
    usersCount?: true
    invoiceValue?: true
  }

  export type CreditCardMinAggregateInputType = {
    id?: true
    main_id?: true
    familyMemberName?: true
    usersCount?: true
    cardType?: true
    bankName?: true
    cardFlag?: true
    invoiceValue?: true
    familyMember_id?: true
    candidate_id?: true
    legalResponsibleId?: true
    application_id?: true
  }

  export type CreditCardMaxAggregateInputType = {
    id?: true
    main_id?: true
    familyMemberName?: true
    usersCount?: true
    cardType?: true
    bankName?: true
    cardFlag?: true
    invoiceValue?: true
    familyMember_id?: true
    candidate_id?: true
    legalResponsibleId?: true
    application_id?: true
  }

  export type CreditCardCountAggregateInputType = {
    id?: true
    main_id?: true
    familyMemberName?: true
    usersCount?: true
    cardType?: true
    bankName?: true
    cardFlag?: true
    invoiceValue?: true
    familyMember_id?: true
    candidate_id?: true
    legalResponsibleId?: true
    application_id?: true
    _all?: true
  }

  export type CreditCardAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which CreditCard to aggregate.
     */
    where?: CreditCardWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CreditCards to fetch.
     */
    orderBy?: CreditCardOrderByWithRelationInput | CreditCardOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CreditCardWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CreditCards from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CreditCards.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CreditCards
    **/
    _count?: true | CreditCardCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CreditCardAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CreditCardSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CreditCardMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CreditCardMaxAggregateInputType
  }

  export type GetCreditCardAggregateType<T extends CreditCardAggregateArgs> = {
        [P in keyof T & keyof AggregateCreditCard]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCreditCard[P]>
      : GetScalarType<T[P], AggregateCreditCard[P]>
  }




  export type CreditCardGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: CreditCardWhereInput
    orderBy?: CreditCardOrderByWithAggregationInput | CreditCardOrderByWithAggregationInput[]
    by: CreditCardScalarFieldEnum[] | CreditCardScalarFieldEnum
    having?: CreditCardScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CreditCardCountAggregateInputType | true
    _avg?: CreditCardAvgAggregateInputType
    _sum?: CreditCardSumAggregateInputType
    _min?: CreditCardMinAggregateInputType
    _max?: CreditCardMaxAggregateInputType
  }

  export type CreditCardGroupByOutputType = {
    id: string
    main_id: string | null
    familyMemberName: string
    usersCount: number
    cardType: string
    bankName: string
    cardFlag: string
    invoiceValue: number
    familyMember_id: string | null
    candidate_id: string | null
    legalResponsibleId: string | null
    application_id: string
    _count: CreditCardCountAggregateOutputType | null
    _avg: CreditCardAvgAggregateOutputType | null
    _sum: CreditCardSumAggregateOutputType | null
    _min: CreditCardMinAggregateOutputType | null
    _max: CreditCardMaxAggregateOutputType | null
  }

  type GetCreditCardGroupByPayload<T extends CreditCardGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CreditCardGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CreditCardGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CreditCardGroupByOutputType[P]>
            : GetScalarType<T[P], CreditCardGroupByOutputType[P]>
        }
      >
    >


  export type CreditCardSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    main_id?: boolean
    familyMemberName?: boolean
    usersCount?: boolean
    cardType?: boolean
    bankName?: boolean
    cardFlag?: boolean
    invoiceValue?: boolean
    familyMember_id?: boolean
    candidate_id?: boolean
    legalResponsibleId?: boolean
    application_id?: boolean
    candidate?: boolean | CreditCard$candidateArgs<ExtArgs>
    familyMember?: boolean | CreditCard$familyMemberArgs<ExtArgs>
    LegalResponsible?: boolean | CreditCard$LegalResponsibleArgs<ExtArgs>
  }, ExtArgs["result"]["creditCard"]>

  export type CreditCardSelectScalar = {
    id?: boolean
    main_id?: boolean
    familyMemberName?: boolean
    usersCount?: boolean
    cardType?: boolean
    bankName?: boolean
    cardFlag?: boolean
    invoiceValue?: boolean
    familyMember_id?: boolean
    candidate_id?: boolean
    legalResponsibleId?: boolean
    application_id?: boolean
  }

  export type CreditCardInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    candidate?: boolean | CreditCard$candidateArgs<ExtArgs>
    familyMember?: boolean | CreditCard$familyMemberArgs<ExtArgs>
    LegalResponsible?: boolean | CreditCard$LegalResponsibleArgs<ExtArgs>
  }


  export type $CreditCardPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "CreditCard"
    objects: {
      candidate: Prisma.$CandidatePayload<ExtArgs> | null
      familyMember: Prisma.$FamilyMemberPayload<ExtArgs> | null
      LegalResponsible: Prisma.$LegalResponsiblePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetResult<{
      id: string
      main_id: string | null
      familyMemberName: string
      usersCount: number
      cardType: string
      bankName: string
      cardFlag: string
      invoiceValue: number
      familyMember_id: string | null
      candidate_id: string | null
      legalResponsibleId: string | null
      application_id: string
    }, ExtArgs["result"]["creditCard"]>
    composites: {}
  }


  type CreditCardGetPayload<S extends boolean | null | undefined | CreditCardDefaultArgs> = $Result.GetResult<Prisma.$CreditCardPayload, S>

  type CreditCardCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<CreditCardFindManyArgs, 'select' | 'include'> & {
      select?: CreditCardCountAggregateInputType | true
    }

  export interface CreditCardDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CreditCard'], meta: { name: 'CreditCard' } }
    /**
     * Find zero or one CreditCard that matches the filter.
     * @param {CreditCardFindUniqueArgs} args - Arguments to find a CreditCard
     * @example
     * // Get one CreditCard
     * const creditCard = await prisma.creditCard.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends CreditCardFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, CreditCardFindUniqueArgs<ExtArgs>>
    ): Prisma__CreditCardClient<$Result.GetResult<Prisma.$CreditCardPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one CreditCard that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {CreditCardFindUniqueOrThrowArgs} args - Arguments to find a CreditCard
     * @example
     * // Get one CreditCard
     * const creditCard = await prisma.creditCard.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends CreditCardFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CreditCardFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__CreditCardClient<$Result.GetResult<Prisma.$CreditCardPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first CreditCard that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CreditCardFindFirstArgs} args - Arguments to find a CreditCard
     * @example
     * // Get one CreditCard
     * const creditCard = await prisma.creditCard.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends CreditCardFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, CreditCardFindFirstArgs<ExtArgs>>
    ): Prisma__CreditCardClient<$Result.GetResult<Prisma.$CreditCardPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first CreditCard that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CreditCardFindFirstOrThrowArgs} args - Arguments to find a CreditCard
     * @example
     * // Get one CreditCard
     * const creditCard = await prisma.creditCard.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends CreditCardFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CreditCardFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__CreditCardClient<$Result.GetResult<Prisma.$CreditCardPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more CreditCards that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CreditCardFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CreditCards
     * const creditCards = await prisma.creditCard.findMany()
     * 
     * // Get first 10 CreditCards
     * const creditCards = await prisma.creditCard.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const creditCardWithIdOnly = await prisma.creditCard.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends CreditCardFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CreditCardFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CreditCardPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a CreditCard.
     * @param {CreditCardCreateArgs} args - Arguments to create a CreditCard.
     * @example
     * // Create one CreditCard
     * const CreditCard = await prisma.creditCard.create({
     *   data: {
     *     // ... data to create a CreditCard
     *   }
     * })
     * 
    **/
    create<T extends CreditCardCreateArgs<ExtArgs>>(
      args: SelectSubset<T, CreditCardCreateArgs<ExtArgs>>
    ): Prisma__CreditCardClient<$Result.GetResult<Prisma.$CreditCardPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many CreditCards.
     *     @param {CreditCardCreateManyArgs} args - Arguments to create many CreditCards.
     *     @example
     *     // Create many CreditCards
     *     const creditCard = await prisma.creditCard.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends CreditCardCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CreditCardCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a CreditCard.
     * @param {CreditCardDeleteArgs} args - Arguments to delete one CreditCard.
     * @example
     * // Delete one CreditCard
     * const CreditCard = await prisma.creditCard.delete({
     *   where: {
     *     // ... filter to delete one CreditCard
     *   }
     * })
     * 
    **/
    delete<T extends CreditCardDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, CreditCardDeleteArgs<ExtArgs>>
    ): Prisma__CreditCardClient<$Result.GetResult<Prisma.$CreditCardPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one CreditCard.
     * @param {CreditCardUpdateArgs} args - Arguments to update one CreditCard.
     * @example
     * // Update one CreditCard
     * const creditCard = await prisma.creditCard.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends CreditCardUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, CreditCardUpdateArgs<ExtArgs>>
    ): Prisma__CreditCardClient<$Result.GetResult<Prisma.$CreditCardPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more CreditCards.
     * @param {CreditCardDeleteManyArgs} args - Arguments to filter CreditCards to delete.
     * @example
     * // Delete a few CreditCards
     * const { count } = await prisma.creditCard.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends CreditCardDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CreditCardDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CreditCards.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CreditCardUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CreditCards
     * const creditCard = await prisma.creditCard.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends CreditCardUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, CreditCardUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CreditCard.
     * @param {CreditCardUpsertArgs} args - Arguments to update or create a CreditCard.
     * @example
     * // Update or create a CreditCard
     * const creditCard = await prisma.creditCard.upsert({
     *   create: {
     *     // ... data to create a CreditCard
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CreditCard we want to update
     *   }
     * })
    **/
    upsert<T extends CreditCardUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, CreditCardUpsertArgs<ExtArgs>>
    ): Prisma__CreditCardClient<$Result.GetResult<Prisma.$CreditCardPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of CreditCards.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CreditCardCountArgs} args - Arguments to filter CreditCards to count.
     * @example
     * // Count the number of CreditCards
     * const count = await prisma.creditCard.count({
     *   where: {
     *     // ... the filter for the CreditCards we want to count
     *   }
     * })
    **/
    count<T extends CreditCardCountArgs>(
      args?: Subset<T, CreditCardCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CreditCardCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CreditCard.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CreditCardAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CreditCardAggregateArgs>(args: Subset<T, CreditCardAggregateArgs>): Prisma.PrismaPromise<GetCreditCardAggregateType<T>>

    /**
     * Group by CreditCard.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CreditCardGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CreditCardGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CreditCardGroupByArgs['orderBy'] }
        : { orderBy?: CreditCardGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CreditCardGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCreditCardGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CreditCard model
   */
  readonly fields: CreditCardFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CreditCard.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CreditCardClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    candidate<T extends CreditCard$candidateArgs<ExtArgs> = {}>(args?: Subset<T, CreditCard$candidateArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    familyMember<T extends CreditCard$familyMemberArgs<ExtArgs> = {}>(args?: Subset<T, CreditCard$familyMemberArgs<ExtArgs>>): Prisma__FamilyMemberClient<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    LegalResponsible<T extends CreditCard$LegalResponsibleArgs<ExtArgs> = {}>(args?: Subset<T, CreditCard$LegalResponsibleArgs<ExtArgs>>): Prisma__LegalResponsibleClient<$Result.GetResult<Prisma.$LegalResponsiblePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the CreditCard model
   */ 
  interface CreditCardFieldRefs {
    readonly id: FieldRef<"CreditCard", 'String'>
    readonly main_id: FieldRef<"CreditCard", 'String'>
    readonly familyMemberName: FieldRef<"CreditCard", 'String'>
    readonly usersCount: FieldRef<"CreditCard", 'Int'>
    readonly cardType: FieldRef<"CreditCard", 'String'>
    readonly bankName: FieldRef<"CreditCard", 'String'>
    readonly cardFlag: FieldRef<"CreditCard", 'String'>
    readonly invoiceValue: FieldRef<"CreditCard", 'Float'>
    readonly familyMember_id: FieldRef<"CreditCard", 'String'>
    readonly candidate_id: FieldRef<"CreditCard", 'String'>
    readonly legalResponsibleId: FieldRef<"CreditCard", 'String'>
    readonly application_id: FieldRef<"CreditCard", 'String'>
  }
    

  // Custom InputTypes

  /**
   * CreditCard findUnique
   */
  export type CreditCardFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreditCard
     */
    select?: CreditCardSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CreditCardInclude<ExtArgs> | null
    /**
     * Filter, which CreditCard to fetch.
     */
    where: CreditCardWhereUniqueInput
  }


  /**
   * CreditCard findUniqueOrThrow
   */
  export type CreditCardFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreditCard
     */
    select?: CreditCardSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CreditCardInclude<ExtArgs> | null
    /**
     * Filter, which CreditCard to fetch.
     */
    where: CreditCardWhereUniqueInput
  }


  /**
   * CreditCard findFirst
   */
  export type CreditCardFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreditCard
     */
    select?: CreditCardSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CreditCardInclude<ExtArgs> | null
    /**
     * Filter, which CreditCard to fetch.
     */
    where?: CreditCardWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CreditCards to fetch.
     */
    orderBy?: CreditCardOrderByWithRelationInput | CreditCardOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CreditCards.
     */
    cursor?: CreditCardWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CreditCards from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CreditCards.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CreditCards.
     */
    distinct?: CreditCardScalarFieldEnum | CreditCardScalarFieldEnum[]
  }


  /**
   * CreditCard findFirstOrThrow
   */
  export type CreditCardFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreditCard
     */
    select?: CreditCardSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CreditCardInclude<ExtArgs> | null
    /**
     * Filter, which CreditCard to fetch.
     */
    where?: CreditCardWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CreditCards to fetch.
     */
    orderBy?: CreditCardOrderByWithRelationInput | CreditCardOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CreditCards.
     */
    cursor?: CreditCardWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CreditCards from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CreditCards.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CreditCards.
     */
    distinct?: CreditCardScalarFieldEnum | CreditCardScalarFieldEnum[]
  }


  /**
   * CreditCard findMany
   */
  export type CreditCardFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreditCard
     */
    select?: CreditCardSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CreditCardInclude<ExtArgs> | null
    /**
     * Filter, which CreditCards to fetch.
     */
    where?: CreditCardWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CreditCards to fetch.
     */
    orderBy?: CreditCardOrderByWithRelationInput | CreditCardOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CreditCards.
     */
    cursor?: CreditCardWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CreditCards from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CreditCards.
     */
    skip?: number
    distinct?: CreditCardScalarFieldEnum | CreditCardScalarFieldEnum[]
  }


  /**
   * CreditCard create
   */
  export type CreditCardCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreditCard
     */
    select?: CreditCardSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CreditCardInclude<ExtArgs> | null
    /**
     * The data needed to create a CreditCard.
     */
    data: XOR<CreditCardCreateInput, CreditCardUncheckedCreateInput>
  }


  /**
   * CreditCard createMany
   */
  export type CreditCardCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CreditCards.
     */
    data: CreditCardCreateManyInput | CreditCardCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * CreditCard update
   */
  export type CreditCardUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreditCard
     */
    select?: CreditCardSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CreditCardInclude<ExtArgs> | null
    /**
     * The data needed to update a CreditCard.
     */
    data: XOR<CreditCardUpdateInput, CreditCardUncheckedUpdateInput>
    /**
     * Choose, which CreditCard to update.
     */
    where: CreditCardWhereUniqueInput
  }


  /**
   * CreditCard updateMany
   */
  export type CreditCardUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CreditCards.
     */
    data: XOR<CreditCardUpdateManyMutationInput, CreditCardUncheckedUpdateManyInput>
    /**
     * Filter which CreditCards to update
     */
    where?: CreditCardWhereInput
  }


  /**
   * CreditCard upsert
   */
  export type CreditCardUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreditCard
     */
    select?: CreditCardSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CreditCardInclude<ExtArgs> | null
    /**
     * The filter to search for the CreditCard to update in case it exists.
     */
    where: CreditCardWhereUniqueInput
    /**
     * In case the CreditCard found by the `where` argument doesn't exist, create a new CreditCard with this data.
     */
    create: XOR<CreditCardCreateInput, CreditCardUncheckedCreateInput>
    /**
     * In case the CreditCard was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CreditCardUpdateInput, CreditCardUncheckedUpdateInput>
  }


  /**
   * CreditCard delete
   */
  export type CreditCardDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreditCard
     */
    select?: CreditCardSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CreditCardInclude<ExtArgs> | null
    /**
     * Filter which CreditCard to delete.
     */
    where: CreditCardWhereUniqueInput
  }


  /**
   * CreditCard deleteMany
   */
  export type CreditCardDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which CreditCards to delete
     */
    where?: CreditCardWhereInput
  }


  /**
   * CreditCard.candidate
   */
  export type CreditCard$candidateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CandidateInclude<ExtArgs> | null
    where?: CandidateWhereInput
  }


  /**
   * CreditCard.familyMember
   */
  export type CreditCard$familyMemberArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    where?: FamilyMemberWhereInput
  }


  /**
   * CreditCard.LegalResponsible
   */
  export type CreditCard$LegalResponsibleArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalResponsible
     */
    select?: LegalResponsibleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LegalResponsibleInclude<ExtArgs> | null
    where?: LegalResponsibleWhereInput
  }


  /**
   * CreditCard without action
   */
  export type CreditCardDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreditCard
     */
    select?: CreditCardSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CreditCardInclude<ExtArgs> | null
  }



  /**
   * Model OtherExpense
   */

  export type AggregateOtherExpense = {
    _count: OtherExpenseCountAggregateOutputType | null
    _avg: OtherExpenseAvgAggregateOutputType | null
    _sum: OtherExpenseSumAggregateOutputType | null
    _min: OtherExpenseMinAggregateOutputType | null
    _max: OtherExpenseMaxAggregateOutputType | null
  }

  export type OtherExpenseAvgAggregateOutputType = {
    value: number | null
  }

  export type OtherExpenseSumAggregateOutputType = {
    value: number | null
  }

  export type OtherExpenseMinAggregateOutputType = {
    id: string | null
    main_id: string | null
    description: string | null
    value: number | null
    familyMember_id: string | null
    candidate_id: string | null
    legalResponsibleId: string | null
    application_id: string | null
  }

  export type OtherExpenseMaxAggregateOutputType = {
    id: string | null
    main_id: string | null
    description: string | null
    value: number | null
    familyMember_id: string | null
    candidate_id: string | null
    legalResponsibleId: string | null
    application_id: string | null
  }

  export type OtherExpenseCountAggregateOutputType = {
    id: number
    main_id: number
    description: number
    value: number
    familyMember_id: number
    candidate_id: number
    legalResponsibleId: number
    application_id: number
    _all: number
  }


  export type OtherExpenseAvgAggregateInputType = {
    value?: true
  }

  export type OtherExpenseSumAggregateInputType = {
    value?: true
  }

  export type OtherExpenseMinAggregateInputType = {
    id?: true
    main_id?: true
    description?: true
    value?: true
    familyMember_id?: true
    candidate_id?: true
    legalResponsibleId?: true
    application_id?: true
  }

  export type OtherExpenseMaxAggregateInputType = {
    id?: true
    main_id?: true
    description?: true
    value?: true
    familyMember_id?: true
    candidate_id?: true
    legalResponsibleId?: true
    application_id?: true
  }

  export type OtherExpenseCountAggregateInputType = {
    id?: true
    main_id?: true
    description?: true
    value?: true
    familyMember_id?: true
    candidate_id?: true
    legalResponsibleId?: true
    application_id?: true
    _all?: true
  }

  export type OtherExpenseAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which OtherExpense to aggregate.
     */
    where?: OtherExpenseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OtherExpenses to fetch.
     */
    orderBy?: OtherExpenseOrderByWithRelationInput | OtherExpenseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OtherExpenseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OtherExpenses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OtherExpenses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OtherExpenses
    **/
    _count?: true | OtherExpenseCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OtherExpenseAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OtherExpenseSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OtherExpenseMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OtherExpenseMaxAggregateInputType
  }

  export type GetOtherExpenseAggregateType<T extends OtherExpenseAggregateArgs> = {
        [P in keyof T & keyof AggregateOtherExpense]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOtherExpense[P]>
      : GetScalarType<T[P], AggregateOtherExpense[P]>
  }




  export type OtherExpenseGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: OtherExpenseWhereInput
    orderBy?: OtherExpenseOrderByWithAggregationInput | OtherExpenseOrderByWithAggregationInput[]
    by: OtherExpenseScalarFieldEnum[] | OtherExpenseScalarFieldEnum
    having?: OtherExpenseScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OtherExpenseCountAggregateInputType | true
    _avg?: OtherExpenseAvgAggregateInputType
    _sum?: OtherExpenseSumAggregateInputType
    _min?: OtherExpenseMinAggregateInputType
    _max?: OtherExpenseMaxAggregateInputType
  }

  export type OtherExpenseGroupByOutputType = {
    id: string
    main_id: string | null
    description: string
    value: number
    familyMember_id: string | null
    candidate_id: string | null
    legalResponsibleId: string | null
    application_id: string
    _count: OtherExpenseCountAggregateOutputType | null
    _avg: OtherExpenseAvgAggregateOutputType | null
    _sum: OtherExpenseSumAggregateOutputType | null
    _min: OtherExpenseMinAggregateOutputType | null
    _max: OtherExpenseMaxAggregateOutputType | null
  }

  type GetOtherExpenseGroupByPayload<T extends OtherExpenseGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OtherExpenseGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OtherExpenseGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OtherExpenseGroupByOutputType[P]>
            : GetScalarType<T[P], OtherExpenseGroupByOutputType[P]>
        }
      >
    >


  export type OtherExpenseSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    main_id?: boolean
    description?: boolean
    value?: boolean
    familyMember_id?: boolean
    candidate_id?: boolean
    legalResponsibleId?: boolean
    application_id?: boolean
    candidate?: boolean | OtherExpense$candidateArgs<ExtArgs>
    familyMember?: boolean | OtherExpense$familyMemberArgs<ExtArgs>
    LegalResponsible?: boolean | OtherExpense$LegalResponsibleArgs<ExtArgs>
  }, ExtArgs["result"]["otherExpense"]>

  export type OtherExpenseSelectScalar = {
    id?: boolean
    main_id?: boolean
    description?: boolean
    value?: boolean
    familyMember_id?: boolean
    candidate_id?: boolean
    legalResponsibleId?: boolean
    application_id?: boolean
  }

  export type OtherExpenseInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    candidate?: boolean | OtherExpense$candidateArgs<ExtArgs>
    familyMember?: boolean | OtherExpense$familyMemberArgs<ExtArgs>
    LegalResponsible?: boolean | OtherExpense$LegalResponsibleArgs<ExtArgs>
  }


  export type $OtherExpensePayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "OtherExpense"
    objects: {
      candidate: Prisma.$CandidatePayload<ExtArgs> | null
      familyMember: Prisma.$FamilyMemberPayload<ExtArgs> | null
      LegalResponsible: Prisma.$LegalResponsiblePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetResult<{
      id: string
      main_id: string | null
      description: string
      value: number
      familyMember_id: string | null
      candidate_id: string | null
      legalResponsibleId: string | null
      application_id: string
    }, ExtArgs["result"]["otherExpense"]>
    composites: {}
  }


  type OtherExpenseGetPayload<S extends boolean | null | undefined | OtherExpenseDefaultArgs> = $Result.GetResult<Prisma.$OtherExpensePayload, S>

  type OtherExpenseCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<OtherExpenseFindManyArgs, 'select' | 'include'> & {
      select?: OtherExpenseCountAggregateInputType | true
    }

  export interface OtherExpenseDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OtherExpense'], meta: { name: 'OtherExpense' } }
    /**
     * Find zero or one OtherExpense that matches the filter.
     * @param {OtherExpenseFindUniqueArgs} args - Arguments to find a OtherExpense
     * @example
     * // Get one OtherExpense
     * const otherExpense = await prisma.otherExpense.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends OtherExpenseFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, OtherExpenseFindUniqueArgs<ExtArgs>>
    ): Prisma__OtherExpenseClient<$Result.GetResult<Prisma.$OtherExpensePayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one OtherExpense that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {OtherExpenseFindUniqueOrThrowArgs} args - Arguments to find a OtherExpense
     * @example
     * // Get one OtherExpense
     * const otherExpense = await prisma.otherExpense.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends OtherExpenseFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, OtherExpenseFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__OtherExpenseClient<$Result.GetResult<Prisma.$OtherExpensePayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first OtherExpense that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OtherExpenseFindFirstArgs} args - Arguments to find a OtherExpense
     * @example
     * // Get one OtherExpense
     * const otherExpense = await prisma.otherExpense.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends OtherExpenseFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, OtherExpenseFindFirstArgs<ExtArgs>>
    ): Prisma__OtherExpenseClient<$Result.GetResult<Prisma.$OtherExpensePayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first OtherExpense that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OtherExpenseFindFirstOrThrowArgs} args - Arguments to find a OtherExpense
     * @example
     * // Get one OtherExpense
     * const otherExpense = await prisma.otherExpense.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends OtherExpenseFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, OtherExpenseFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__OtherExpenseClient<$Result.GetResult<Prisma.$OtherExpensePayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more OtherExpenses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OtherExpenseFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OtherExpenses
     * const otherExpenses = await prisma.otherExpense.findMany()
     * 
     * // Get first 10 OtherExpenses
     * const otherExpenses = await prisma.otherExpense.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const otherExpenseWithIdOnly = await prisma.otherExpense.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends OtherExpenseFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, OtherExpenseFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OtherExpensePayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a OtherExpense.
     * @param {OtherExpenseCreateArgs} args - Arguments to create a OtherExpense.
     * @example
     * // Create one OtherExpense
     * const OtherExpense = await prisma.otherExpense.create({
     *   data: {
     *     // ... data to create a OtherExpense
     *   }
     * })
     * 
    **/
    create<T extends OtherExpenseCreateArgs<ExtArgs>>(
      args: SelectSubset<T, OtherExpenseCreateArgs<ExtArgs>>
    ): Prisma__OtherExpenseClient<$Result.GetResult<Prisma.$OtherExpensePayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many OtherExpenses.
     *     @param {OtherExpenseCreateManyArgs} args - Arguments to create many OtherExpenses.
     *     @example
     *     // Create many OtherExpenses
     *     const otherExpense = await prisma.otherExpense.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends OtherExpenseCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, OtherExpenseCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a OtherExpense.
     * @param {OtherExpenseDeleteArgs} args - Arguments to delete one OtherExpense.
     * @example
     * // Delete one OtherExpense
     * const OtherExpense = await prisma.otherExpense.delete({
     *   where: {
     *     // ... filter to delete one OtherExpense
     *   }
     * })
     * 
    **/
    delete<T extends OtherExpenseDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, OtherExpenseDeleteArgs<ExtArgs>>
    ): Prisma__OtherExpenseClient<$Result.GetResult<Prisma.$OtherExpensePayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one OtherExpense.
     * @param {OtherExpenseUpdateArgs} args - Arguments to update one OtherExpense.
     * @example
     * // Update one OtherExpense
     * const otherExpense = await prisma.otherExpense.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends OtherExpenseUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, OtherExpenseUpdateArgs<ExtArgs>>
    ): Prisma__OtherExpenseClient<$Result.GetResult<Prisma.$OtherExpensePayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more OtherExpenses.
     * @param {OtherExpenseDeleteManyArgs} args - Arguments to filter OtherExpenses to delete.
     * @example
     * // Delete a few OtherExpenses
     * const { count } = await prisma.otherExpense.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends OtherExpenseDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, OtherExpenseDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OtherExpenses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OtherExpenseUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OtherExpenses
     * const otherExpense = await prisma.otherExpense.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends OtherExpenseUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, OtherExpenseUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one OtherExpense.
     * @param {OtherExpenseUpsertArgs} args - Arguments to update or create a OtherExpense.
     * @example
     * // Update or create a OtherExpense
     * const otherExpense = await prisma.otherExpense.upsert({
     *   create: {
     *     // ... data to create a OtherExpense
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OtherExpense we want to update
     *   }
     * })
    **/
    upsert<T extends OtherExpenseUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, OtherExpenseUpsertArgs<ExtArgs>>
    ): Prisma__OtherExpenseClient<$Result.GetResult<Prisma.$OtherExpensePayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of OtherExpenses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OtherExpenseCountArgs} args - Arguments to filter OtherExpenses to count.
     * @example
     * // Count the number of OtherExpenses
     * const count = await prisma.otherExpense.count({
     *   where: {
     *     // ... the filter for the OtherExpenses we want to count
     *   }
     * })
    **/
    count<T extends OtherExpenseCountArgs>(
      args?: Subset<T, OtherExpenseCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OtherExpenseCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OtherExpense.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OtherExpenseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OtherExpenseAggregateArgs>(args: Subset<T, OtherExpenseAggregateArgs>): Prisma.PrismaPromise<GetOtherExpenseAggregateType<T>>

    /**
     * Group by OtherExpense.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OtherExpenseGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OtherExpenseGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OtherExpenseGroupByArgs['orderBy'] }
        : { orderBy?: OtherExpenseGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OtherExpenseGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOtherExpenseGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OtherExpense model
   */
  readonly fields: OtherExpenseFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OtherExpense.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OtherExpenseClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    candidate<T extends OtherExpense$candidateArgs<ExtArgs> = {}>(args?: Subset<T, OtherExpense$candidateArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    familyMember<T extends OtherExpense$familyMemberArgs<ExtArgs> = {}>(args?: Subset<T, OtherExpense$familyMemberArgs<ExtArgs>>): Prisma__FamilyMemberClient<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    LegalResponsible<T extends OtherExpense$LegalResponsibleArgs<ExtArgs> = {}>(args?: Subset<T, OtherExpense$LegalResponsibleArgs<ExtArgs>>): Prisma__LegalResponsibleClient<$Result.GetResult<Prisma.$LegalResponsiblePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the OtherExpense model
   */ 
  interface OtherExpenseFieldRefs {
    readonly id: FieldRef<"OtherExpense", 'String'>
    readonly main_id: FieldRef<"OtherExpense", 'String'>
    readonly description: FieldRef<"OtherExpense", 'String'>
    readonly value: FieldRef<"OtherExpense", 'Float'>
    readonly familyMember_id: FieldRef<"OtherExpense", 'String'>
    readonly candidate_id: FieldRef<"OtherExpense", 'String'>
    readonly legalResponsibleId: FieldRef<"OtherExpense", 'String'>
    readonly application_id: FieldRef<"OtherExpense", 'String'>
  }
    

  // Custom InputTypes

  /**
   * OtherExpense findUnique
   */
  export type OtherExpenseFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OtherExpense
     */
    select?: OtherExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: OtherExpenseInclude<ExtArgs> | null
    /**
     * Filter, which OtherExpense to fetch.
     */
    where: OtherExpenseWhereUniqueInput
  }


  /**
   * OtherExpense findUniqueOrThrow
   */
  export type OtherExpenseFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OtherExpense
     */
    select?: OtherExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: OtherExpenseInclude<ExtArgs> | null
    /**
     * Filter, which OtherExpense to fetch.
     */
    where: OtherExpenseWhereUniqueInput
  }


  /**
   * OtherExpense findFirst
   */
  export type OtherExpenseFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OtherExpense
     */
    select?: OtherExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: OtherExpenseInclude<ExtArgs> | null
    /**
     * Filter, which OtherExpense to fetch.
     */
    where?: OtherExpenseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OtherExpenses to fetch.
     */
    orderBy?: OtherExpenseOrderByWithRelationInput | OtherExpenseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OtherExpenses.
     */
    cursor?: OtherExpenseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OtherExpenses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OtherExpenses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OtherExpenses.
     */
    distinct?: OtherExpenseScalarFieldEnum | OtherExpenseScalarFieldEnum[]
  }


  /**
   * OtherExpense findFirstOrThrow
   */
  export type OtherExpenseFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OtherExpense
     */
    select?: OtherExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: OtherExpenseInclude<ExtArgs> | null
    /**
     * Filter, which OtherExpense to fetch.
     */
    where?: OtherExpenseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OtherExpenses to fetch.
     */
    orderBy?: OtherExpenseOrderByWithRelationInput | OtherExpenseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OtherExpenses.
     */
    cursor?: OtherExpenseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OtherExpenses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OtherExpenses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OtherExpenses.
     */
    distinct?: OtherExpenseScalarFieldEnum | OtherExpenseScalarFieldEnum[]
  }


  /**
   * OtherExpense findMany
   */
  export type OtherExpenseFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OtherExpense
     */
    select?: OtherExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: OtherExpenseInclude<ExtArgs> | null
    /**
     * Filter, which OtherExpenses to fetch.
     */
    where?: OtherExpenseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OtherExpenses to fetch.
     */
    orderBy?: OtherExpenseOrderByWithRelationInput | OtherExpenseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OtherExpenses.
     */
    cursor?: OtherExpenseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OtherExpenses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OtherExpenses.
     */
    skip?: number
    distinct?: OtherExpenseScalarFieldEnum | OtherExpenseScalarFieldEnum[]
  }


  /**
   * OtherExpense create
   */
  export type OtherExpenseCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OtherExpense
     */
    select?: OtherExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: OtherExpenseInclude<ExtArgs> | null
    /**
     * The data needed to create a OtherExpense.
     */
    data: XOR<OtherExpenseCreateInput, OtherExpenseUncheckedCreateInput>
  }


  /**
   * OtherExpense createMany
   */
  export type OtherExpenseCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OtherExpenses.
     */
    data: OtherExpenseCreateManyInput | OtherExpenseCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * OtherExpense update
   */
  export type OtherExpenseUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OtherExpense
     */
    select?: OtherExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: OtherExpenseInclude<ExtArgs> | null
    /**
     * The data needed to update a OtherExpense.
     */
    data: XOR<OtherExpenseUpdateInput, OtherExpenseUncheckedUpdateInput>
    /**
     * Choose, which OtherExpense to update.
     */
    where: OtherExpenseWhereUniqueInput
  }


  /**
   * OtherExpense updateMany
   */
  export type OtherExpenseUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OtherExpenses.
     */
    data: XOR<OtherExpenseUpdateManyMutationInput, OtherExpenseUncheckedUpdateManyInput>
    /**
     * Filter which OtherExpenses to update
     */
    where?: OtherExpenseWhereInput
  }


  /**
   * OtherExpense upsert
   */
  export type OtherExpenseUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OtherExpense
     */
    select?: OtherExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: OtherExpenseInclude<ExtArgs> | null
    /**
     * The filter to search for the OtherExpense to update in case it exists.
     */
    where: OtherExpenseWhereUniqueInput
    /**
     * In case the OtherExpense found by the `where` argument doesn't exist, create a new OtherExpense with this data.
     */
    create: XOR<OtherExpenseCreateInput, OtherExpenseUncheckedCreateInput>
    /**
     * In case the OtherExpense was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OtherExpenseUpdateInput, OtherExpenseUncheckedUpdateInput>
  }


  /**
   * OtherExpense delete
   */
  export type OtherExpenseDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OtherExpense
     */
    select?: OtherExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: OtherExpenseInclude<ExtArgs> | null
    /**
     * Filter which OtherExpense to delete.
     */
    where: OtherExpenseWhereUniqueInput
  }


  /**
   * OtherExpense deleteMany
   */
  export type OtherExpenseDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which OtherExpenses to delete
     */
    where?: OtherExpenseWhereInput
  }


  /**
   * OtherExpense.candidate
   */
  export type OtherExpense$candidateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CandidateInclude<ExtArgs> | null
    where?: CandidateWhereInput
  }


  /**
   * OtherExpense.familyMember
   */
  export type OtherExpense$familyMemberArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    where?: FamilyMemberWhereInput
  }


  /**
   * OtherExpense.LegalResponsible
   */
  export type OtherExpense$LegalResponsibleArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalResponsible
     */
    select?: LegalResponsibleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LegalResponsibleInclude<ExtArgs> | null
    where?: LegalResponsibleWhereInput
  }


  /**
   * OtherExpense without action
   */
  export type OtherExpenseDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OtherExpense
     */
    select?: OtherExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: OtherExpenseInclude<ExtArgs> | null
  }



  /**
   * Model FamilyMemberDisease
   */

  export type AggregateFamilyMemberDisease = {
    _count: FamilyMemberDiseaseCountAggregateOutputType | null
    _min: FamilyMemberDiseaseMinAggregateOutputType | null
    _max: FamilyMemberDiseaseMaxAggregateOutputType | null
  }

  export type FamilyMemberDiseaseMinAggregateOutputType = {
    id: string | null
    main_id: string | null
    disease: $Enums.Disease | null
    specificDisease: string | null
    hasMedicalReport: boolean | null
    familyMember_id: string | null
    candidate_id: string | null
    legalResponsibleId: string | null
    application_id: string | null
  }

  export type FamilyMemberDiseaseMaxAggregateOutputType = {
    id: string | null
    main_id: string | null
    disease: $Enums.Disease | null
    specificDisease: string | null
    hasMedicalReport: boolean | null
    familyMember_id: string | null
    candidate_id: string | null
    legalResponsibleId: string | null
    application_id: string | null
  }

  export type FamilyMemberDiseaseCountAggregateOutputType = {
    id: number
    main_id: number
    disease: number
    diseases: number
    specificDisease: number
    hasMedicalReport: number
    familyMember_id: number
    candidate_id: number
    legalResponsibleId: number
    application_id: number
    _all: number
  }


  export type FamilyMemberDiseaseMinAggregateInputType = {
    id?: true
    main_id?: true
    disease?: true
    specificDisease?: true
    hasMedicalReport?: true
    familyMember_id?: true
    candidate_id?: true
    legalResponsibleId?: true
    application_id?: true
  }

  export type FamilyMemberDiseaseMaxAggregateInputType = {
    id?: true
    main_id?: true
    disease?: true
    specificDisease?: true
    hasMedicalReport?: true
    familyMember_id?: true
    candidate_id?: true
    legalResponsibleId?: true
    application_id?: true
  }

  export type FamilyMemberDiseaseCountAggregateInputType = {
    id?: true
    main_id?: true
    disease?: true
    diseases?: true
    specificDisease?: true
    hasMedicalReport?: true
    familyMember_id?: true
    candidate_id?: true
    legalResponsibleId?: true
    application_id?: true
    _all?: true
  }

  export type FamilyMemberDiseaseAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which FamilyMemberDisease to aggregate.
     */
    where?: FamilyMemberDiseaseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FamilyMemberDiseases to fetch.
     */
    orderBy?: FamilyMemberDiseaseOrderByWithRelationInput | FamilyMemberDiseaseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FamilyMemberDiseaseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FamilyMemberDiseases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FamilyMemberDiseases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FamilyMemberDiseases
    **/
    _count?: true | FamilyMemberDiseaseCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FamilyMemberDiseaseMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FamilyMemberDiseaseMaxAggregateInputType
  }

  export type GetFamilyMemberDiseaseAggregateType<T extends FamilyMemberDiseaseAggregateArgs> = {
        [P in keyof T & keyof AggregateFamilyMemberDisease]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFamilyMemberDisease[P]>
      : GetScalarType<T[P], AggregateFamilyMemberDisease[P]>
  }




  export type FamilyMemberDiseaseGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: FamilyMemberDiseaseWhereInput
    orderBy?: FamilyMemberDiseaseOrderByWithAggregationInput | FamilyMemberDiseaseOrderByWithAggregationInput[]
    by: FamilyMemberDiseaseScalarFieldEnum[] | FamilyMemberDiseaseScalarFieldEnum
    having?: FamilyMemberDiseaseScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FamilyMemberDiseaseCountAggregateInputType | true
    _min?: FamilyMemberDiseaseMinAggregateInputType
    _max?: FamilyMemberDiseaseMaxAggregateInputType
  }

  export type FamilyMemberDiseaseGroupByOutputType = {
    id: string
    main_id: string | null
    disease: $Enums.Disease | null
    diseases: $Enums.Disease[]
    specificDisease: string | null
    hasMedicalReport: boolean
    familyMember_id: string | null
    candidate_id: string | null
    legalResponsibleId: string | null
    application_id: string
    _count: FamilyMemberDiseaseCountAggregateOutputType | null
    _min: FamilyMemberDiseaseMinAggregateOutputType | null
    _max: FamilyMemberDiseaseMaxAggregateOutputType | null
  }

  type GetFamilyMemberDiseaseGroupByPayload<T extends FamilyMemberDiseaseGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FamilyMemberDiseaseGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FamilyMemberDiseaseGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FamilyMemberDiseaseGroupByOutputType[P]>
            : GetScalarType<T[P], FamilyMemberDiseaseGroupByOutputType[P]>
        }
      >
    >


  export type FamilyMemberDiseaseSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    main_id?: boolean
    disease?: boolean
    diseases?: boolean
    specificDisease?: boolean
    hasMedicalReport?: boolean
    familyMember_id?: boolean
    candidate_id?: boolean
    legalResponsibleId?: boolean
    application_id?: boolean
    familyMember?: boolean | FamilyMemberDisease$familyMemberArgs<ExtArgs>
    candidate?: boolean | FamilyMemberDisease$candidateArgs<ExtArgs>
    legalResponsible?: boolean | FamilyMemberDisease$legalResponsibleArgs<ExtArgs>
    Medication?: boolean | FamilyMemberDisease$MedicationArgs<ExtArgs>
    _count?: boolean | FamilyMemberDiseaseCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["familyMemberDisease"]>

  export type FamilyMemberDiseaseSelectScalar = {
    id?: boolean
    main_id?: boolean
    disease?: boolean
    diseases?: boolean
    specificDisease?: boolean
    hasMedicalReport?: boolean
    familyMember_id?: boolean
    candidate_id?: boolean
    legalResponsibleId?: boolean
    application_id?: boolean
  }

  export type FamilyMemberDiseaseInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    familyMember?: boolean | FamilyMemberDisease$familyMemberArgs<ExtArgs>
    candidate?: boolean | FamilyMemberDisease$candidateArgs<ExtArgs>
    legalResponsible?: boolean | FamilyMemberDisease$legalResponsibleArgs<ExtArgs>
    Medication?: boolean | FamilyMemberDisease$MedicationArgs<ExtArgs>
    _count?: boolean | FamilyMemberDiseaseCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $FamilyMemberDiseasePayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "FamilyMemberDisease"
    objects: {
      familyMember: Prisma.$FamilyMemberPayload<ExtArgs> | null
      candidate: Prisma.$CandidatePayload<ExtArgs> | null
      legalResponsible: Prisma.$LegalResponsiblePayload<ExtArgs> | null
      Medication: Prisma.$MedicationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetResult<{
      id: string
      main_id: string | null
      disease: $Enums.Disease | null
      diseases: $Enums.Disease[]
      specificDisease: string | null
      hasMedicalReport: boolean
      familyMember_id: string | null
      candidate_id: string | null
      legalResponsibleId: string | null
      application_id: string
    }, ExtArgs["result"]["familyMemberDisease"]>
    composites: {}
  }


  type FamilyMemberDiseaseGetPayload<S extends boolean | null | undefined | FamilyMemberDiseaseDefaultArgs> = $Result.GetResult<Prisma.$FamilyMemberDiseasePayload, S>

  type FamilyMemberDiseaseCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<FamilyMemberDiseaseFindManyArgs, 'select' | 'include'> & {
      select?: FamilyMemberDiseaseCountAggregateInputType | true
    }

  export interface FamilyMemberDiseaseDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FamilyMemberDisease'], meta: { name: 'FamilyMemberDisease' } }
    /**
     * Find zero or one FamilyMemberDisease that matches the filter.
     * @param {FamilyMemberDiseaseFindUniqueArgs} args - Arguments to find a FamilyMemberDisease
     * @example
     * // Get one FamilyMemberDisease
     * const familyMemberDisease = await prisma.familyMemberDisease.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FamilyMemberDiseaseFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, FamilyMemberDiseaseFindUniqueArgs<ExtArgs>>
    ): Prisma__FamilyMemberDiseaseClient<$Result.GetResult<Prisma.$FamilyMemberDiseasePayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one FamilyMemberDisease that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {FamilyMemberDiseaseFindUniqueOrThrowArgs} args - Arguments to find a FamilyMemberDisease
     * @example
     * // Get one FamilyMemberDisease
     * const familyMemberDisease = await prisma.familyMemberDisease.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends FamilyMemberDiseaseFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, FamilyMemberDiseaseFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__FamilyMemberDiseaseClient<$Result.GetResult<Prisma.$FamilyMemberDiseasePayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first FamilyMemberDisease that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberDiseaseFindFirstArgs} args - Arguments to find a FamilyMemberDisease
     * @example
     * // Get one FamilyMemberDisease
     * const familyMemberDisease = await prisma.familyMemberDisease.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FamilyMemberDiseaseFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, FamilyMemberDiseaseFindFirstArgs<ExtArgs>>
    ): Prisma__FamilyMemberDiseaseClient<$Result.GetResult<Prisma.$FamilyMemberDiseasePayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first FamilyMemberDisease that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberDiseaseFindFirstOrThrowArgs} args - Arguments to find a FamilyMemberDisease
     * @example
     * // Get one FamilyMemberDisease
     * const familyMemberDisease = await prisma.familyMemberDisease.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends FamilyMemberDiseaseFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, FamilyMemberDiseaseFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__FamilyMemberDiseaseClient<$Result.GetResult<Prisma.$FamilyMemberDiseasePayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more FamilyMemberDiseases that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberDiseaseFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FamilyMemberDiseases
     * const familyMemberDiseases = await prisma.familyMemberDisease.findMany()
     * 
     * // Get first 10 FamilyMemberDiseases
     * const familyMemberDiseases = await prisma.familyMemberDisease.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const familyMemberDiseaseWithIdOnly = await prisma.familyMemberDisease.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FamilyMemberDiseaseFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FamilyMemberDiseaseFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FamilyMemberDiseasePayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a FamilyMemberDisease.
     * @param {FamilyMemberDiseaseCreateArgs} args - Arguments to create a FamilyMemberDisease.
     * @example
     * // Create one FamilyMemberDisease
     * const FamilyMemberDisease = await prisma.familyMemberDisease.create({
     *   data: {
     *     // ... data to create a FamilyMemberDisease
     *   }
     * })
     * 
    **/
    create<T extends FamilyMemberDiseaseCreateArgs<ExtArgs>>(
      args: SelectSubset<T, FamilyMemberDiseaseCreateArgs<ExtArgs>>
    ): Prisma__FamilyMemberDiseaseClient<$Result.GetResult<Prisma.$FamilyMemberDiseasePayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many FamilyMemberDiseases.
     *     @param {FamilyMemberDiseaseCreateManyArgs} args - Arguments to create many FamilyMemberDiseases.
     *     @example
     *     // Create many FamilyMemberDiseases
     *     const familyMemberDisease = await prisma.familyMemberDisease.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends FamilyMemberDiseaseCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FamilyMemberDiseaseCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a FamilyMemberDisease.
     * @param {FamilyMemberDiseaseDeleteArgs} args - Arguments to delete one FamilyMemberDisease.
     * @example
     * // Delete one FamilyMemberDisease
     * const FamilyMemberDisease = await prisma.familyMemberDisease.delete({
     *   where: {
     *     // ... filter to delete one FamilyMemberDisease
     *   }
     * })
     * 
    **/
    delete<T extends FamilyMemberDiseaseDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, FamilyMemberDiseaseDeleteArgs<ExtArgs>>
    ): Prisma__FamilyMemberDiseaseClient<$Result.GetResult<Prisma.$FamilyMemberDiseasePayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one FamilyMemberDisease.
     * @param {FamilyMemberDiseaseUpdateArgs} args - Arguments to update one FamilyMemberDisease.
     * @example
     * // Update one FamilyMemberDisease
     * const familyMemberDisease = await prisma.familyMemberDisease.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends FamilyMemberDiseaseUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, FamilyMemberDiseaseUpdateArgs<ExtArgs>>
    ): Prisma__FamilyMemberDiseaseClient<$Result.GetResult<Prisma.$FamilyMemberDiseasePayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more FamilyMemberDiseases.
     * @param {FamilyMemberDiseaseDeleteManyArgs} args - Arguments to filter FamilyMemberDiseases to delete.
     * @example
     * // Delete a few FamilyMemberDiseases
     * const { count } = await prisma.familyMemberDisease.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends FamilyMemberDiseaseDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FamilyMemberDiseaseDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FamilyMemberDiseases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberDiseaseUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FamilyMemberDiseases
     * const familyMemberDisease = await prisma.familyMemberDisease.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends FamilyMemberDiseaseUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, FamilyMemberDiseaseUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one FamilyMemberDisease.
     * @param {FamilyMemberDiseaseUpsertArgs} args - Arguments to update or create a FamilyMemberDisease.
     * @example
     * // Update or create a FamilyMemberDisease
     * const familyMemberDisease = await prisma.familyMemberDisease.upsert({
     *   create: {
     *     // ... data to create a FamilyMemberDisease
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FamilyMemberDisease we want to update
     *   }
     * })
    **/
    upsert<T extends FamilyMemberDiseaseUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, FamilyMemberDiseaseUpsertArgs<ExtArgs>>
    ): Prisma__FamilyMemberDiseaseClient<$Result.GetResult<Prisma.$FamilyMemberDiseasePayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of FamilyMemberDiseases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberDiseaseCountArgs} args - Arguments to filter FamilyMemberDiseases to count.
     * @example
     * // Count the number of FamilyMemberDiseases
     * const count = await prisma.familyMemberDisease.count({
     *   where: {
     *     // ... the filter for the FamilyMemberDiseases we want to count
     *   }
     * })
    **/
    count<T extends FamilyMemberDiseaseCountArgs>(
      args?: Subset<T, FamilyMemberDiseaseCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FamilyMemberDiseaseCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FamilyMemberDisease.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberDiseaseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FamilyMemberDiseaseAggregateArgs>(args: Subset<T, FamilyMemberDiseaseAggregateArgs>): Prisma.PrismaPromise<GetFamilyMemberDiseaseAggregateType<T>>

    /**
     * Group by FamilyMemberDisease.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberDiseaseGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FamilyMemberDiseaseGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FamilyMemberDiseaseGroupByArgs['orderBy'] }
        : { orderBy?: FamilyMemberDiseaseGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FamilyMemberDiseaseGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFamilyMemberDiseaseGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FamilyMemberDisease model
   */
  readonly fields: FamilyMemberDiseaseFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FamilyMemberDisease.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FamilyMemberDiseaseClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    familyMember<T extends FamilyMemberDisease$familyMemberArgs<ExtArgs> = {}>(args?: Subset<T, FamilyMemberDisease$familyMemberArgs<ExtArgs>>): Prisma__FamilyMemberClient<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    candidate<T extends FamilyMemberDisease$candidateArgs<ExtArgs> = {}>(args?: Subset<T, FamilyMemberDisease$candidateArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    legalResponsible<T extends FamilyMemberDisease$legalResponsibleArgs<ExtArgs> = {}>(args?: Subset<T, FamilyMemberDisease$legalResponsibleArgs<ExtArgs>>): Prisma__LegalResponsibleClient<$Result.GetResult<Prisma.$LegalResponsiblePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    Medication<T extends FamilyMemberDisease$MedicationArgs<ExtArgs> = {}>(args?: Subset<T, FamilyMemberDisease$MedicationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MedicationPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the FamilyMemberDisease model
   */ 
  interface FamilyMemberDiseaseFieldRefs {
    readonly id: FieldRef<"FamilyMemberDisease", 'String'>
    readonly main_id: FieldRef<"FamilyMemberDisease", 'String'>
    readonly disease: FieldRef<"FamilyMemberDisease", 'Disease'>
    readonly diseases: FieldRef<"FamilyMemberDisease", 'Disease[]'>
    readonly specificDisease: FieldRef<"FamilyMemberDisease", 'String'>
    readonly hasMedicalReport: FieldRef<"FamilyMemberDisease", 'Boolean'>
    readonly familyMember_id: FieldRef<"FamilyMemberDisease", 'String'>
    readonly candidate_id: FieldRef<"FamilyMemberDisease", 'String'>
    readonly legalResponsibleId: FieldRef<"FamilyMemberDisease", 'String'>
    readonly application_id: FieldRef<"FamilyMemberDisease", 'String'>
  }
    

  // Custom InputTypes

  /**
   * FamilyMemberDisease findUnique
   */
  export type FamilyMemberDiseaseFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberDisease
     */
    select?: FamilyMemberDiseaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberDiseaseInclude<ExtArgs> | null
    /**
     * Filter, which FamilyMemberDisease to fetch.
     */
    where: FamilyMemberDiseaseWhereUniqueInput
  }


  /**
   * FamilyMemberDisease findUniqueOrThrow
   */
  export type FamilyMemberDiseaseFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberDisease
     */
    select?: FamilyMemberDiseaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberDiseaseInclude<ExtArgs> | null
    /**
     * Filter, which FamilyMemberDisease to fetch.
     */
    where: FamilyMemberDiseaseWhereUniqueInput
  }


  /**
   * FamilyMemberDisease findFirst
   */
  export type FamilyMemberDiseaseFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberDisease
     */
    select?: FamilyMemberDiseaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberDiseaseInclude<ExtArgs> | null
    /**
     * Filter, which FamilyMemberDisease to fetch.
     */
    where?: FamilyMemberDiseaseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FamilyMemberDiseases to fetch.
     */
    orderBy?: FamilyMemberDiseaseOrderByWithRelationInput | FamilyMemberDiseaseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FamilyMemberDiseases.
     */
    cursor?: FamilyMemberDiseaseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FamilyMemberDiseases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FamilyMemberDiseases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FamilyMemberDiseases.
     */
    distinct?: FamilyMemberDiseaseScalarFieldEnum | FamilyMemberDiseaseScalarFieldEnum[]
  }


  /**
   * FamilyMemberDisease findFirstOrThrow
   */
  export type FamilyMemberDiseaseFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberDisease
     */
    select?: FamilyMemberDiseaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberDiseaseInclude<ExtArgs> | null
    /**
     * Filter, which FamilyMemberDisease to fetch.
     */
    where?: FamilyMemberDiseaseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FamilyMemberDiseases to fetch.
     */
    orderBy?: FamilyMemberDiseaseOrderByWithRelationInput | FamilyMemberDiseaseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FamilyMemberDiseases.
     */
    cursor?: FamilyMemberDiseaseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FamilyMemberDiseases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FamilyMemberDiseases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FamilyMemberDiseases.
     */
    distinct?: FamilyMemberDiseaseScalarFieldEnum | FamilyMemberDiseaseScalarFieldEnum[]
  }


  /**
   * FamilyMemberDisease findMany
   */
  export type FamilyMemberDiseaseFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberDisease
     */
    select?: FamilyMemberDiseaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberDiseaseInclude<ExtArgs> | null
    /**
     * Filter, which FamilyMemberDiseases to fetch.
     */
    where?: FamilyMemberDiseaseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FamilyMemberDiseases to fetch.
     */
    orderBy?: FamilyMemberDiseaseOrderByWithRelationInput | FamilyMemberDiseaseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FamilyMemberDiseases.
     */
    cursor?: FamilyMemberDiseaseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FamilyMemberDiseases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FamilyMemberDiseases.
     */
    skip?: number
    distinct?: FamilyMemberDiseaseScalarFieldEnum | FamilyMemberDiseaseScalarFieldEnum[]
  }


  /**
   * FamilyMemberDisease create
   */
  export type FamilyMemberDiseaseCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberDisease
     */
    select?: FamilyMemberDiseaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberDiseaseInclude<ExtArgs> | null
    /**
     * The data needed to create a FamilyMemberDisease.
     */
    data: XOR<FamilyMemberDiseaseCreateInput, FamilyMemberDiseaseUncheckedCreateInput>
  }


  /**
   * FamilyMemberDisease createMany
   */
  export type FamilyMemberDiseaseCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FamilyMemberDiseases.
     */
    data: FamilyMemberDiseaseCreateManyInput | FamilyMemberDiseaseCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * FamilyMemberDisease update
   */
  export type FamilyMemberDiseaseUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberDisease
     */
    select?: FamilyMemberDiseaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberDiseaseInclude<ExtArgs> | null
    /**
     * The data needed to update a FamilyMemberDisease.
     */
    data: XOR<FamilyMemberDiseaseUpdateInput, FamilyMemberDiseaseUncheckedUpdateInput>
    /**
     * Choose, which FamilyMemberDisease to update.
     */
    where: FamilyMemberDiseaseWhereUniqueInput
  }


  /**
   * FamilyMemberDisease updateMany
   */
  export type FamilyMemberDiseaseUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FamilyMemberDiseases.
     */
    data: XOR<FamilyMemberDiseaseUpdateManyMutationInput, FamilyMemberDiseaseUncheckedUpdateManyInput>
    /**
     * Filter which FamilyMemberDiseases to update
     */
    where?: FamilyMemberDiseaseWhereInput
  }


  /**
   * FamilyMemberDisease upsert
   */
  export type FamilyMemberDiseaseUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberDisease
     */
    select?: FamilyMemberDiseaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberDiseaseInclude<ExtArgs> | null
    /**
     * The filter to search for the FamilyMemberDisease to update in case it exists.
     */
    where: FamilyMemberDiseaseWhereUniqueInput
    /**
     * In case the FamilyMemberDisease found by the `where` argument doesn't exist, create a new FamilyMemberDisease with this data.
     */
    create: XOR<FamilyMemberDiseaseCreateInput, FamilyMemberDiseaseUncheckedCreateInput>
    /**
     * In case the FamilyMemberDisease was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FamilyMemberDiseaseUpdateInput, FamilyMemberDiseaseUncheckedUpdateInput>
  }


  /**
   * FamilyMemberDisease delete
   */
  export type FamilyMemberDiseaseDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberDisease
     */
    select?: FamilyMemberDiseaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberDiseaseInclude<ExtArgs> | null
    /**
     * Filter which FamilyMemberDisease to delete.
     */
    where: FamilyMemberDiseaseWhereUniqueInput
  }


  /**
   * FamilyMemberDisease deleteMany
   */
  export type FamilyMemberDiseaseDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which FamilyMemberDiseases to delete
     */
    where?: FamilyMemberDiseaseWhereInput
  }


  /**
   * FamilyMemberDisease.familyMember
   */
  export type FamilyMemberDisease$familyMemberArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    where?: FamilyMemberWhereInput
  }


  /**
   * FamilyMemberDisease.candidate
   */
  export type FamilyMemberDisease$candidateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CandidateInclude<ExtArgs> | null
    where?: CandidateWhereInput
  }


  /**
   * FamilyMemberDisease.legalResponsible
   */
  export type FamilyMemberDisease$legalResponsibleArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalResponsible
     */
    select?: LegalResponsibleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LegalResponsibleInclude<ExtArgs> | null
    where?: LegalResponsibleWhereInput
  }


  /**
   * FamilyMemberDisease.Medication
   */
  export type FamilyMemberDisease$MedicationArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Medication
     */
    select?: MedicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MedicationInclude<ExtArgs> | null
    where?: MedicationWhereInput
    orderBy?: MedicationOrderByWithRelationInput | MedicationOrderByWithRelationInput[]
    cursor?: MedicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MedicationScalarFieldEnum | MedicationScalarFieldEnum[]
  }


  /**
   * FamilyMemberDisease without action
   */
  export type FamilyMemberDiseaseDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberDisease
     */
    select?: FamilyMemberDiseaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberDiseaseInclude<ExtArgs> | null
  }



  /**
   * Model Medication
   */

  export type AggregateMedication = {
    _count: MedicationCountAggregateOutputType | null
    _min: MedicationMinAggregateOutputType | null
    _max: MedicationMaxAggregateOutputType | null
  }

  export type MedicationMinAggregateOutputType = {
    id: string | null
    main_id: string | null
    medicationName: string | null
    obtainedPublicly: boolean | null
    specificMedicationPublicly: string | null
    familyMember_id: string | null
    candidate_id: string | null
    legalResponsibleId: string | null
    application_id: string | null
    familyMemberDiseaseId: string | null
  }

  export type MedicationMaxAggregateOutputType = {
    id: string | null
    main_id: string | null
    medicationName: string | null
    obtainedPublicly: boolean | null
    specificMedicationPublicly: string | null
    familyMember_id: string | null
    candidate_id: string | null
    legalResponsibleId: string | null
    application_id: string | null
    familyMemberDiseaseId: string | null
  }

  export type MedicationCountAggregateOutputType = {
    id: number
    main_id: number
    medicationName: number
    obtainedPublicly: number
    specificMedicationPublicly: number
    familyMember_id: number
    candidate_id: number
    legalResponsibleId: number
    application_id: number
    familyMemberDiseaseId: number
    _all: number
  }


  export type MedicationMinAggregateInputType = {
    id?: true
    main_id?: true
    medicationName?: true
    obtainedPublicly?: true
    specificMedicationPublicly?: true
    familyMember_id?: true
    candidate_id?: true
    legalResponsibleId?: true
    application_id?: true
    familyMemberDiseaseId?: true
  }

  export type MedicationMaxAggregateInputType = {
    id?: true
    main_id?: true
    medicationName?: true
    obtainedPublicly?: true
    specificMedicationPublicly?: true
    familyMember_id?: true
    candidate_id?: true
    legalResponsibleId?: true
    application_id?: true
    familyMemberDiseaseId?: true
  }

  export type MedicationCountAggregateInputType = {
    id?: true
    main_id?: true
    medicationName?: true
    obtainedPublicly?: true
    specificMedicationPublicly?: true
    familyMember_id?: true
    candidate_id?: true
    legalResponsibleId?: true
    application_id?: true
    familyMemberDiseaseId?: true
    _all?: true
  }

  export type MedicationAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which Medication to aggregate.
     */
    where?: MedicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Medications to fetch.
     */
    orderBy?: MedicationOrderByWithRelationInput | MedicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MedicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Medications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Medications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Medications
    **/
    _count?: true | MedicationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MedicationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MedicationMaxAggregateInputType
  }

  export type GetMedicationAggregateType<T extends MedicationAggregateArgs> = {
        [P in keyof T & keyof AggregateMedication]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMedication[P]>
      : GetScalarType<T[P], AggregateMedication[P]>
  }




  export type MedicationGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: MedicationWhereInput
    orderBy?: MedicationOrderByWithAggregationInput | MedicationOrderByWithAggregationInput[]
    by: MedicationScalarFieldEnum[] | MedicationScalarFieldEnum
    having?: MedicationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MedicationCountAggregateInputType | true
    _min?: MedicationMinAggregateInputType
    _max?: MedicationMaxAggregateInputType
  }

  export type MedicationGroupByOutputType = {
    id: string
    main_id: string | null
    medicationName: string
    obtainedPublicly: boolean
    specificMedicationPublicly: string | null
    familyMember_id: string | null
    candidate_id: string | null
    legalResponsibleId: string | null
    application_id: string
    familyMemberDiseaseId: string | null
    _count: MedicationCountAggregateOutputType | null
    _min: MedicationMinAggregateOutputType | null
    _max: MedicationMaxAggregateOutputType | null
  }

  type GetMedicationGroupByPayload<T extends MedicationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MedicationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MedicationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MedicationGroupByOutputType[P]>
            : GetScalarType<T[P], MedicationGroupByOutputType[P]>
        }
      >
    >


  export type MedicationSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    main_id?: boolean
    medicationName?: boolean
    obtainedPublicly?: boolean
    specificMedicationPublicly?: boolean
    familyMember_id?: boolean
    candidate_id?: boolean
    legalResponsibleId?: boolean
    application_id?: boolean
    familyMemberDiseaseId?: boolean
    familyMember?: boolean | Medication$familyMemberArgs<ExtArgs>
    candidate?: boolean | Medication$candidateArgs<ExtArgs>
    legalResponsible?: boolean | Medication$legalResponsibleArgs<ExtArgs>
    FamilyMemberDisease?: boolean | Medication$FamilyMemberDiseaseArgs<ExtArgs>
  }, ExtArgs["result"]["medication"]>

  export type MedicationSelectScalar = {
    id?: boolean
    main_id?: boolean
    medicationName?: boolean
    obtainedPublicly?: boolean
    specificMedicationPublicly?: boolean
    familyMember_id?: boolean
    candidate_id?: boolean
    legalResponsibleId?: boolean
    application_id?: boolean
    familyMemberDiseaseId?: boolean
  }

  export type MedicationInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    familyMember?: boolean | Medication$familyMemberArgs<ExtArgs>
    candidate?: boolean | Medication$candidateArgs<ExtArgs>
    legalResponsible?: boolean | Medication$legalResponsibleArgs<ExtArgs>
    FamilyMemberDisease?: boolean | Medication$FamilyMemberDiseaseArgs<ExtArgs>
  }


  export type $MedicationPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "Medication"
    objects: {
      familyMember: Prisma.$FamilyMemberPayload<ExtArgs> | null
      candidate: Prisma.$CandidatePayload<ExtArgs> | null
      legalResponsible: Prisma.$LegalResponsiblePayload<ExtArgs> | null
      FamilyMemberDisease: Prisma.$FamilyMemberDiseasePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetResult<{
      id: string
      main_id: string | null
      medicationName: string
      obtainedPublicly: boolean
      specificMedicationPublicly: string | null
      familyMember_id: string | null
      candidate_id: string | null
      legalResponsibleId: string | null
      application_id: string
      familyMemberDiseaseId: string | null
    }, ExtArgs["result"]["medication"]>
    composites: {}
  }


  type MedicationGetPayload<S extends boolean | null | undefined | MedicationDefaultArgs> = $Result.GetResult<Prisma.$MedicationPayload, S>

  type MedicationCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<MedicationFindManyArgs, 'select' | 'include'> & {
      select?: MedicationCountAggregateInputType | true
    }

  export interface MedicationDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Medication'], meta: { name: 'Medication' } }
    /**
     * Find zero or one Medication that matches the filter.
     * @param {MedicationFindUniqueArgs} args - Arguments to find a Medication
     * @example
     * // Get one Medication
     * const medication = await prisma.medication.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends MedicationFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, MedicationFindUniqueArgs<ExtArgs>>
    ): Prisma__MedicationClient<$Result.GetResult<Prisma.$MedicationPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Medication that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {MedicationFindUniqueOrThrowArgs} args - Arguments to find a Medication
     * @example
     * // Get one Medication
     * const medication = await prisma.medication.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends MedicationFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, MedicationFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__MedicationClient<$Result.GetResult<Prisma.$MedicationPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Medication that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedicationFindFirstArgs} args - Arguments to find a Medication
     * @example
     * // Get one Medication
     * const medication = await prisma.medication.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends MedicationFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, MedicationFindFirstArgs<ExtArgs>>
    ): Prisma__MedicationClient<$Result.GetResult<Prisma.$MedicationPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Medication that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedicationFindFirstOrThrowArgs} args - Arguments to find a Medication
     * @example
     * // Get one Medication
     * const medication = await prisma.medication.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends MedicationFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, MedicationFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__MedicationClient<$Result.GetResult<Prisma.$MedicationPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Medications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedicationFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Medications
     * const medications = await prisma.medication.findMany()
     * 
     * // Get first 10 Medications
     * const medications = await prisma.medication.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const medicationWithIdOnly = await prisma.medication.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends MedicationFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, MedicationFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MedicationPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Medication.
     * @param {MedicationCreateArgs} args - Arguments to create a Medication.
     * @example
     * // Create one Medication
     * const Medication = await prisma.medication.create({
     *   data: {
     *     // ... data to create a Medication
     *   }
     * })
     * 
    **/
    create<T extends MedicationCreateArgs<ExtArgs>>(
      args: SelectSubset<T, MedicationCreateArgs<ExtArgs>>
    ): Prisma__MedicationClient<$Result.GetResult<Prisma.$MedicationPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Medications.
     *     @param {MedicationCreateManyArgs} args - Arguments to create many Medications.
     *     @example
     *     // Create many Medications
     *     const medication = await prisma.medication.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends MedicationCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, MedicationCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Medication.
     * @param {MedicationDeleteArgs} args - Arguments to delete one Medication.
     * @example
     * // Delete one Medication
     * const Medication = await prisma.medication.delete({
     *   where: {
     *     // ... filter to delete one Medication
     *   }
     * })
     * 
    **/
    delete<T extends MedicationDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, MedicationDeleteArgs<ExtArgs>>
    ): Prisma__MedicationClient<$Result.GetResult<Prisma.$MedicationPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Medication.
     * @param {MedicationUpdateArgs} args - Arguments to update one Medication.
     * @example
     * // Update one Medication
     * const medication = await prisma.medication.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends MedicationUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, MedicationUpdateArgs<ExtArgs>>
    ): Prisma__MedicationClient<$Result.GetResult<Prisma.$MedicationPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Medications.
     * @param {MedicationDeleteManyArgs} args - Arguments to filter Medications to delete.
     * @example
     * // Delete a few Medications
     * const { count } = await prisma.medication.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends MedicationDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, MedicationDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Medications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedicationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Medications
     * const medication = await prisma.medication.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends MedicationUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, MedicationUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Medication.
     * @param {MedicationUpsertArgs} args - Arguments to update or create a Medication.
     * @example
     * // Update or create a Medication
     * const medication = await prisma.medication.upsert({
     *   create: {
     *     // ... data to create a Medication
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Medication we want to update
     *   }
     * })
    **/
    upsert<T extends MedicationUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, MedicationUpsertArgs<ExtArgs>>
    ): Prisma__MedicationClient<$Result.GetResult<Prisma.$MedicationPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Medications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedicationCountArgs} args - Arguments to filter Medications to count.
     * @example
     * // Count the number of Medications
     * const count = await prisma.medication.count({
     *   where: {
     *     // ... the filter for the Medications we want to count
     *   }
     * })
    **/
    count<T extends MedicationCountArgs>(
      args?: Subset<T, MedicationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MedicationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Medication.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedicationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MedicationAggregateArgs>(args: Subset<T, MedicationAggregateArgs>): Prisma.PrismaPromise<GetMedicationAggregateType<T>>

    /**
     * Group by Medication.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedicationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MedicationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MedicationGroupByArgs['orderBy'] }
        : { orderBy?: MedicationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MedicationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMedicationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Medication model
   */
  readonly fields: MedicationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Medication.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MedicationClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    familyMember<T extends Medication$familyMemberArgs<ExtArgs> = {}>(args?: Subset<T, Medication$familyMemberArgs<ExtArgs>>): Prisma__FamilyMemberClient<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    candidate<T extends Medication$candidateArgs<ExtArgs> = {}>(args?: Subset<T, Medication$candidateArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    legalResponsible<T extends Medication$legalResponsibleArgs<ExtArgs> = {}>(args?: Subset<T, Medication$legalResponsibleArgs<ExtArgs>>): Prisma__LegalResponsibleClient<$Result.GetResult<Prisma.$LegalResponsiblePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    FamilyMemberDisease<T extends Medication$FamilyMemberDiseaseArgs<ExtArgs> = {}>(args?: Subset<T, Medication$FamilyMemberDiseaseArgs<ExtArgs>>): Prisma__FamilyMemberDiseaseClient<$Result.GetResult<Prisma.$FamilyMemberDiseasePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Medication model
   */ 
  interface MedicationFieldRefs {
    readonly id: FieldRef<"Medication", 'String'>
    readonly main_id: FieldRef<"Medication", 'String'>
    readonly medicationName: FieldRef<"Medication", 'String'>
    readonly obtainedPublicly: FieldRef<"Medication", 'Boolean'>
    readonly specificMedicationPublicly: FieldRef<"Medication", 'String'>
    readonly familyMember_id: FieldRef<"Medication", 'String'>
    readonly candidate_id: FieldRef<"Medication", 'String'>
    readonly legalResponsibleId: FieldRef<"Medication", 'String'>
    readonly application_id: FieldRef<"Medication", 'String'>
    readonly familyMemberDiseaseId: FieldRef<"Medication", 'String'>
  }
    

  // Custom InputTypes

  /**
   * Medication findUnique
   */
  export type MedicationFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Medication
     */
    select?: MedicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MedicationInclude<ExtArgs> | null
    /**
     * Filter, which Medication to fetch.
     */
    where: MedicationWhereUniqueInput
  }


  /**
   * Medication findUniqueOrThrow
   */
  export type MedicationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Medication
     */
    select?: MedicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MedicationInclude<ExtArgs> | null
    /**
     * Filter, which Medication to fetch.
     */
    where: MedicationWhereUniqueInput
  }


  /**
   * Medication findFirst
   */
  export type MedicationFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Medication
     */
    select?: MedicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MedicationInclude<ExtArgs> | null
    /**
     * Filter, which Medication to fetch.
     */
    where?: MedicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Medications to fetch.
     */
    orderBy?: MedicationOrderByWithRelationInput | MedicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Medications.
     */
    cursor?: MedicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Medications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Medications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Medications.
     */
    distinct?: MedicationScalarFieldEnum | MedicationScalarFieldEnum[]
  }


  /**
   * Medication findFirstOrThrow
   */
  export type MedicationFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Medication
     */
    select?: MedicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MedicationInclude<ExtArgs> | null
    /**
     * Filter, which Medication to fetch.
     */
    where?: MedicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Medications to fetch.
     */
    orderBy?: MedicationOrderByWithRelationInput | MedicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Medications.
     */
    cursor?: MedicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Medications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Medications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Medications.
     */
    distinct?: MedicationScalarFieldEnum | MedicationScalarFieldEnum[]
  }


  /**
   * Medication findMany
   */
  export type MedicationFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Medication
     */
    select?: MedicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MedicationInclude<ExtArgs> | null
    /**
     * Filter, which Medications to fetch.
     */
    where?: MedicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Medications to fetch.
     */
    orderBy?: MedicationOrderByWithRelationInput | MedicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Medications.
     */
    cursor?: MedicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Medications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Medications.
     */
    skip?: number
    distinct?: MedicationScalarFieldEnum | MedicationScalarFieldEnum[]
  }


  /**
   * Medication create
   */
  export type MedicationCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Medication
     */
    select?: MedicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MedicationInclude<ExtArgs> | null
    /**
     * The data needed to create a Medication.
     */
    data: XOR<MedicationCreateInput, MedicationUncheckedCreateInput>
  }


  /**
   * Medication createMany
   */
  export type MedicationCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Medications.
     */
    data: MedicationCreateManyInput | MedicationCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Medication update
   */
  export type MedicationUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Medication
     */
    select?: MedicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MedicationInclude<ExtArgs> | null
    /**
     * The data needed to update a Medication.
     */
    data: XOR<MedicationUpdateInput, MedicationUncheckedUpdateInput>
    /**
     * Choose, which Medication to update.
     */
    where: MedicationWhereUniqueInput
  }


  /**
   * Medication updateMany
   */
  export type MedicationUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Medications.
     */
    data: XOR<MedicationUpdateManyMutationInput, MedicationUncheckedUpdateManyInput>
    /**
     * Filter which Medications to update
     */
    where?: MedicationWhereInput
  }


  /**
   * Medication upsert
   */
  export type MedicationUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Medication
     */
    select?: MedicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MedicationInclude<ExtArgs> | null
    /**
     * The filter to search for the Medication to update in case it exists.
     */
    where: MedicationWhereUniqueInput
    /**
     * In case the Medication found by the `where` argument doesn't exist, create a new Medication with this data.
     */
    create: XOR<MedicationCreateInput, MedicationUncheckedCreateInput>
    /**
     * In case the Medication was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MedicationUpdateInput, MedicationUncheckedUpdateInput>
  }


  /**
   * Medication delete
   */
  export type MedicationDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Medication
     */
    select?: MedicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MedicationInclude<ExtArgs> | null
    /**
     * Filter which Medication to delete.
     */
    where: MedicationWhereUniqueInput
  }


  /**
   * Medication deleteMany
   */
  export type MedicationDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which Medications to delete
     */
    where?: MedicationWhereInput
  }


  /**
   * Medication.familyMember
   */
  export type Medication$familyMemberArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    where?: FamilyMemberWhereInput
  }


  /**
   * Medication.candidate
   */
  export type Medication$candidateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CandidateInclude<ExtArgs> | null
    where?: CandidateWhereInput
  }


  /**
   * Medication.legalResponsible
   */
  export type Medication$legalResponsibleArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalResponsible
     */
    select?: LegalResponsibleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LegalResponsibleInclude<ExtArgs> | null
    where?: LegalResponsibleWhereInput
  }


  /**
   * Medication.FamilyMemberDisease
   */
  export type Medication$FamilyMemberDiseaseArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberDisease
     */
    select?: FamilyMemberDiseaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberDiseaseInclude<ExtArgs> | null
    where?: FamilyMemberDiseaseWhereInput
  }


  /**
   * Medication without action
   */
  export type MedicationDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Medication
     */
    select?: MedicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MedicationInclude<ExtArgs> | null
  }



  /**
   * Model Declarations
   */

  export type AggregateDeclarations = {
    _count: DeclarationsCountAggregateOutputType | null
    _min: DeclarationsMinAggregateOutputType | null
    _max: DeclarationsMaxAggregateOutputType | null
  }

  export type DeclarationsMinAggregateOutputType = {
    id: string | null
    declarationType: $Enums.Declaration_Type | null
    text: string | null
    familyMember_id: string | null
    candidate_id: string | null
    legalResponsibleId: string | null
    application_id: string | null
  }

  export type DeclarationsMaxAggregateOutputType = {
    id: string | null
    declarationType: $Enums.Declaration_Type | null
    text: string | null
    familyMember_id: string | null
    candidate_id: string | null
    legalResponsibleId: string | null
    application_id: string | null
  }

  export type DeclarationsCountAggregateOutputType = {
    id: number
    declarationType: number
    text: number
    familyMember_id: number
    candidate_id: number
    legalResponsibleId: number
    application_id: number
    _all: number
  }


  export type DeclarationsMinAggregateInputType = {
    id?: true
    declarationType?: true
    text?: true
    familyMember_id?: true
    candidate_id?: true
    legalResponsibleId?: true
    application_id?: true
  }

  export type DeclarationsMaxAggregateInputType = {
    id?: true
    declarationType?: true
    text?: true
    familyMember_id?: true
    candidate_id?: true
    legalResponsibleId?: true
    application_id?: true
  }

  export type DeclarationsCountAggregateInputType = {
    id?: true
    declarationType?: true
    text?: true
    familyMember_id?: true
    candidate_id?: true
    legalResponsibleId?: true
    application_id?: true
    _all?: true
  }

  export type DeclarationsAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which Declarations to aggregate.
     */
    where?: DeclarationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Declarations to fetch.
     */
    orderBy?: DeclarationsOrderByWithRelationInput | DeclarationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DeclarationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Declarations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Declarations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Declarations
    **/
    _count?: true | DeclarationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DeclarationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DeclarationsMaxAggregateInputType
  }

  export type GetDeclarationsAggregateType<T extends DeclarationsAggregateArgs> = {
        [P in keyof T & keyof AggregateDeclarations]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDeclarations[P]>
      : GetScalarType<T[P], AggregateDeclarations[P]>
  }




  export type DeclarationsGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: DeclarationsWhereInput
    orderBy?: DeclarationsOrderByWithAggregationInput | DeclarationsOrderByWithAggregationInput[]
    by: DeclarationsScalarFieldEnum[] | DeclarationsScalarFieldEnum
    having?: DeclarationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DeclarationsCountAggregateInputType | true
    _min?: DeclarationsMinAggregateInputType
    _max?: DeclarationsMaxAggregateInputType
  }

  export type DeclarationsGroupByOutputType = {
    id: string
    declarationType: $Enums.Declaration_Type
    text: string
    familyMember_id: string | null
    candidate_id: string | null
    legalResponsibleId: string | null
    application_id: string
    _count: DeclarationsCountAggregateOutputType | null
    _min: DeclarationsMinAggregateOutputType | null
    _max: DeclarationsMaxAggregateOutputType | null
  }

  type GetDeclarationsGroupByPayload<T extends DeclarationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DeclarationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DeclarationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DeclarationsGroupByOutputType[P]>
            : GetScalarType<T[P], DeclarationsGroupByOutputType[P]>
        }
      >
    >


  export type DeclarationsSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    declarationType?: boolean
    text?: boolean
    familyMember_id?: boolean
    candidate_id?: boolean
    legalResponsibleId?: boolean
    application_id?: boolean
    candidate?: boolean | Declarations$candidateArgs<ExtArgs>
    familyMember?: boolean | Declarations$familyMemberArgs<ExtArgs>
    LegalResponsible?: boolean | Declarations$LegalResponsibleArgs<ExtArgs>
  }, ExtArgs["result"]["declarations"]>

  export type DeclarationsSelectScalar = {
    id?: boolean
    declarationType?: boolean
    text?: boolean
    familyMember_id?: boolean
    candidate_id?: boolean
    legalResponsibleId?: boolean
    application_id?: boolean
  }

  export type DeclarationsInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    candidate?: boolean | Declarations$candidateArgs<ExtArgs>
    familyMember?: boolean | Declarations$familyMemberArgs<ExtArgs>
    LegalResponsible?: boolean | Declarations$LegalResponsibleArgs<ExtArgs>
  }


  export type $DeclarationsPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "Declarations"
    objects: {
      candidate: Prisma.$CandidatePayload<ExtArgs> | null
      familyMember: Prisma.$FamilyMemberPayload<ExtArgs> | null
      LegalResponsible: Prisma.$LegalResponsiblePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetResult<{
      id: string
      declarationType: $Enums.Declaration_Type
      text: string
      familyMember_id: string | null
      candidate_id: string | null
      legalResponsibleId: string | null
      application_id: string
    }, ExtArgs["result"]["declarations"]>
    composites: {}
  }


  type DeclarationsGetPayload<S extends boolean | null | undefined | DeclarationsDefaultArgs> = $Result.GetResult<Prisma.$DeclarationsPayload, S>

  type DeclarationsCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<DeclarationsFindManyArgs, 'select' | 'include'> & {
      select?: DeclarationsCountAggregateInputType | true
    }

  export interface DeclarationsDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Declarations'], meta: { name: 'Declarations' } }
    /**
     * Find zero or one Declarations that matches the filter.
     * @param {DeclarationsFindUniqueArgs} args - Arguments to find a Declarations
     * @example
     * // Get one Declarations
     * const declarations = await prisma.declarations.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends DeclarationsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, DeclarationsFindUniqueArgs<ExtArgs>>
    ): Prisma__DeclarationsClient<$Result.GetResult<Prisma.$DeclarationsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Declarations that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {DeclarationsFindUniqueOrThrowArgs} args - Arguments to find a Declarations
     * @example
     * // Get one Declarations
     * const declarations = await prisma.declarations.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends DeclarationsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, DeclarationsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__DeclarationsClient<$Result.GetResult<Prisma.$DeclarationsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Declarations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeclarationsFindFirstArgs} args - Arguments to find a Declarations
     * @example
     * // Get one Declarations
     * const declarations = await prisma.declarations.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends DeclarationsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, DeclarationsFindFirstArgs<ExtArgs>>
    ): Prisma__DeclarationsClient<$Result.GetResult<Prisma.$DeclarationsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Declarations that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeclarationsFindFirstOrThrowArgs} args - Arguments to find a Declarations
     * @example
     * // Get one Declarations
     * const declarations = await prisma.declarations.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends DeclarationsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, DeclarationsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__DeclarationsClient<$Result.GetResult<Prisma.$DeclarationsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Declarations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeclarationsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Declarations
     * const declarations = await prisma.declarations.findMany()
     * 
     * // Get first 10 Declarations
     * const declarations = await prisma.declarations.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const declarationsWithIdOnly = await prisma.declarations.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends DeclarationsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, DeclarationsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeclarationsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Declarations.
     * @param {DeclarationsCreateArgs} args - Arguments to create a Declarations.
     * @example
     * // Create one Declarations
     * const Declarations = await prisma.declarations.create({
     *   data: {
     *     // ... data to create a Declarations
     *   }
     * })
     * 
    **/
    create<T extends DeclarationsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, DeclarationsCreateArgs<ExtArgs>>
    ): Prisma__DeclarationsClient<$Result.GetResult<Prisma.$DeclarationsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Declarations.
     *     @param {DeclarationsCreateManyArgs} args - Arguments to create many Declarations.
     *     @example
     *     // Create many Declarations
     *     const declarations = await prisma.declarations.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends DeclarationsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, DeclarationsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Declarations.
     * @param {DeclarationsDeleteArgs} args - Arguments to delete one Declarations.
     * @example
     * // Delete one Declarations
     * const Declarations = await prisma.declarations.delete({
     *   where: {
     *     // ... filter to delete one Declarations
     *   }
     * })
     * 
    **/
    delete<T extends DeclarationsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, DeclarationsDeleteArgs<ExtArgs>>
    ): Prisma__DeclarationsClient<$Result.GetResult<Prisma.$DeclarationsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Declarations.
     * @param {DeclarationsUpdateArgs} args - Arguments to update one Declarations.
     * @example
     * // Update one Declarations
     * const declarations = await prisma.declarations.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends DeclarationsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, DeclarationsUpdateArgs<ExtArgs>>
    ): Prisma__DeclarationsClient<$Result.GetResult<Prisma.$DeclarationsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Declarations.
     * @param {DeclarationsDeleteManyArgs} args - Arguments to filter Declarations to delete.
     * @example
     * // Delete a few Declarations
     * const { count } = await prisma.declarations.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends DeclarationsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, DeclarationsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Declarations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeclarationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Declarations
     * const declarations = await prisma.declarations.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends DeclarationsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, DeclarationsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Declarations.
     * @param {DeclarationsUpsertArgs} args - Arguments to update or create a Declarations.
     * @example
     * // Update or create a Declarations
     * const declarations = await prisma.declarations.upsert({
     *   create: {
     *     // ... data to create a Declarations
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Declarations we want to update
     *   }
     * })
    **/
    upsert<T extends DeclarationsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, DeclarationsUpsertArgs<ExtArgs>>
    ): Prisma__DeclarationsClient<$Result.GetResult<Prisma.$DeclarationsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Declarations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeclarationsCountArgs} args - Arguments to filter Declarations to count.
     * @example
     * // Count the number of Declarations
     * const count = await prisma.declarations.count({
     *   where: {
     *     // ... the filter for the Declarations we want to count
     *   }
     * })
    **/
    count<T extends DeclarationsCountArgs>(
      args?: Subset<T, DeclarationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DeclarationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Declarations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeclarationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DeclarationsAggregateArgs>(args: Subset<T, DeclarationsAggregateArgs>): Prisma.PrismaPromise<GetDeclarationsAggregateType<T>>

    /**
     * Group by Declarations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeclarationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DeclarationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DeclarationsGroupByArgs['orderBy'] }
        : { orderBy?: DeclarationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DeclarationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDeclarationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Declarations model
   */
  readonly fields: DeclarationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Declarations.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DeclarationsClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    candidate<T extends Declarations$candidateArgs<ExtArgs> = {}>(args?: Subset<T, Declarations$candidateArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    familyMember<T extends Declarations$familyMemberArgs<ExtArgs> = {}>(args?: Subset<T, Declarations$familyMemberArgs<ExtArgs>>): Prisma__FamilyMemberClient<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    LegalResponsible<T extends Declarations$LegalResponsibleArgs<ExtArgs> = {}>(args?: Subset<T, Declarations$LegalResponsibleArgs<ExtArgs>>): Prisma__LegalResponsibleClient<$Result.GetResult<Prisma.$LegalResponsiblePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Declarations model
   */ 
  interface DeclarationsFieldRefs {
    readonly id: FieldRef<"Declarations", 'String'>
    readonly declarationType: FieldRef<"Declarations", 'Declaration_Type'>
    readonly text: FieldRef<"Declarations", 'String'>
    readonly familyMember_id: FieldRef<"Declarations", 'String'>
    readonly candidate_id: FieldRef<"Declarations", 'String'>
    readonly legalResponsibleId: FieldRef<"Declarations", 'String'>
    readonly application_id: FieldRef<"Declarations", 'String'>
  }
    

  // Custom InputTypes

  /**
   * Declarations findUnique
   */
  export type DeclarationsFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Declarations
     */
    select?: DeclarationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: DeclarationsInclude<ExtArgs> | null
    /**
     * Filter, which Declarations to fetch.
     */
    where: DeclarationsWhereUniqueInput
  }


  /**
   * Declarations findUniqueOrThrow
   */
  export type DeclarationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Declarations
     */
    select?: DeclarationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: DeclarationsInclude<ExtArgs> | null
    /**
     * Filter, which Declarations to fetch.
     */
    where: DeclarationsWhereUniqueInput
  }


  /**
   * Declarations findFirst
   */
  export type DeclarationsFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Declarations
     */
    select?: DeclarationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: DeclarationsInclude<ExtArgs> | null
    /**
     * Filter, which Declarations to fetch.
     */
    where?: DeclarationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Declarations to fetch.
     */
    orderBy?: DeclarationsOrderByWithRelationInput | DeclarationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Declarations.
     */
    cursor?: DeclarationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Declarations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Declarations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Declarations.
     */
    distinct?: DeclarationsScalarFieldEnum | DeclarationsScalarFieldEnum[]
  }


  /**
   * Declarations findFirstOrThrow
   */
  export type DeclarationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Declarations
     */
    select?: DeclarationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: DeclarationsInclude<ExtArgs> | null
    /**
     * Filter, which Declarations to fetch.
     */
    where?: DeclarationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Declarations to fetch.
     */
    orderBy?: DeclarationsOrderByWithRelationInput | DeclarationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Declarations.
     */
    cursor?: DeclarationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Declarations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Declarations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Declarations.
     */
    distinct?: DeclarationsScalarFieldEnum | DeclarationsScalarFieldEnum[]
  }


  /**
   * Declarations findMany
   */
  export type DeclarationsFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Declarations
     */
    select?: DeclarationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: DeclarationsInclude<ExtArgs> | null
    /**
     * Filter, which Declarations to fetch.
     */
    where?: DeclarationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Declarations to fetch.
     */
    orderBy?: DeclarationsOrderByWithRelationInput | DeclarationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Declarations.
     */
    cursor?: DeclarationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Declarations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Declarations.
     */
    skip?: number
    distinct?: DeclarationsScalarFieldEnum | DeclarationsScalarFieldEnum[]
  }


  /**
   * Declarations create
   */
  export type DeclarationsCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Declarations
     */
    select?: DeclarationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: DeclarationsInclude<ExtArgs> | null
    /**
     * The data needed to create a Declarations.
     */
    data: XOR<DeclarationsCreateInput, DeclarationsUncheckedCreateInput>
  }


  /**
   * Declarations createMany
   */
  export type DeclarationsCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Declarations.
     */
    data: DeclarationsCreateManyInput | DeclarationsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Declarations update
   */
  export type DeclarationsUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Declarations
     */
    select?: DeclarationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: DeclarationsInclude<ExtArgs> | null
    /**
     * The data needed to update a Declarations.
     */
    data: XOR<DeclarationsUpdateInput, DeclarationsUncheckedUpdateInput>
    /**
     * Choose, which Declarations to update.
     */
    where: DeclarationsWhereUniqueInput
  }


  /**
   * Declarations updateMany
   */
  export type DeclarationsUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Declarations.
     */
    data: XOR<DeclarationsUpdateManyMutationInput, DeclarationsUncheckedUpdateManyInput>
    /**
     * Filter which Declarations to update
     */
    where?: DeclarationsWhereInput
  }


  /**
   * Declarations upsert
   */
  export type DeclarationsUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Declarations
     */
    select?: DeclarationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: DeclarationsInclude<ExtArgs> | null
    /**
     * The filter to search for the Declarations to update in case it exists.
     */
    where: DeclarationsWhereUniqueInput
    /**
     * In case the Declarations found by the `where` argument doesn't exist, create a new Declarations with this data.
     */
    create: XOR<DeclarationsCreateInput, DeclarationsUncheckedCreateInput>
    /**
     * In case the Declarations was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DeclarationsUpdateInput, DeclarationsUncheckedUpdateInput>
  }


  /**
   * Declarations delete
   */
  export type DeclarationsDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Declarations
     */
    select?: DeclarationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: DeclarationsInclude<ExtArgs> | null
    /**
     * Filter which Declarations to delete.
     */
    where: DeclarationsWhereUniqueInput
  }


  /**
   * Declarations deleteMany
   */
  export type DeclarationsDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which Declarations to delete
     */
    where?: DeclarationsWhereInput
  }


  /**
   * Declarations.candidate
   */
  export type Declarations$candidateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidate
     */
    select?: CandidateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CandidateInclude<ExtArgs> | null
    where?: CandidateWhereInput
  }


  /**
   * Declarations.familyMember
   */
  export type Declarations$familyMemberArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    where?: FamilyMemberWhereInput
  }


  /**
   * Declarations.LegalResponsible
   */
  export type Declarations$LegalResponsibleArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalResponsible
     */
    select?: LegalResponsibleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LegalResponsibleInclude<ExtArgs> | null
    where?: LegalResponsibleWhereInput
  }


  /**
   * Declarations without action
   */
  export type DeclarationsDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Declarations
     */
    select?: DeclarationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: DeclarationsInclude<ExtArgs> | null
  }



  /**
   * Model AnnouncementInterview
   */

  export type AggregateAnnouncementInterview = {
    _count: AnnouncementInterviewCountAggregateOutputType | null
    _avg: AnnouncementInterviewAvgAggregateOutputType | null
    _sum: AnnouncementInterviewSumAggregateOutputType | null
    _min: AnnouncementInterviewMinAggregateOutputType | null
    _max: AnnouncementInterviewMaxAggregateOutputType | null
  }

  export type AnnouncementInterviewAvgAggregateOutputType = {
    interval: number | null
    duration: number | null
  }

  export type AnnouncementInterviewSumAggregateOutputType = {
    interval: number | null
    duration: number | null
  }

  export type AnnouncementInterviewMinAggregateOutputType = {
    startDate: Date | null
    endDate: Date | null
    beginHour: Date | null
    interval: number | null
    endHour: Date | null
    duration: number | null
    announcement_id: string | null
  }

  export type AnnouncementInterviewMaxAggregateOutputType = {
    startDate: Date | null
    endDate: Date | null
    beginHour: Date | null
    interval: number | null
    endHour: Date | null
    duration: number | null
    announcement_id: string | null
  }

  export type AnnouncementInterviewCountAggregateOutputType = {
    startDate: number
    endDate: number
    beginHour: number
    interval: number
    endHour: number
    duration: number
    announcement_id: number
    _all: number
  }


  export type AnnouncementInterviewAvgAggregateInputType = {
    interval?: true
    duration?: true
  }

  export type AnnouncementInterviewSumAggregateInputType = {
    interval?: true
    duration?: true
  }

  export type AnnouncementInterviewMinAggregateInputType = {
    startDate?: true
    endDate?: true
    beginHour?: true
    interval?: true
    endHour?: true
    duration?: true
    announcement_id?: true
  }

  export type AnnouncementInterviewMaxAggregateInputType = {
    startDate?: true
    endDate?: true
    beginHour?: true
    interval?: true
    endHour?: true
    duration?: true
    announcement_id?: true
  }

  export type AnnouncementInterviewCountAggregateInputType = {
    startDate?: true
    endDate?: true
    beginHour?: true
    interval?: true
    endHour?: true
    duration?: true
    announcement_id?: true
    _all?: true
  }

  export type AnnouncementInterviewAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which AnnouncementInterview to aggregate.
     */
    where?: AnnouncementInterviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AnnouncementInterviews to fetch.
     */
    orderBy?: AnnouncementInterviewOrderByWithRelationInput | AnnouncementInterviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AnnouncementInterviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AnnouncementInterviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AnnouncementInterviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AnnouncementInterviews
    **/
    _count?: true | AnnouncementInterviewCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AnnouncementInterviewAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AnnouncementInterviewSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AnnouncementInterviewMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AnnouncementInterviewMaxAggregateInputType
  }

  export type GetAnnouncementInterviewAggregateType<T extends AnnouncementInterviewAggregateArgs> = {
        [P in keyof T & keyof AggregateAnnouncementInterview]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAnnouncementInterview[P]>
      : GetScalarType<T[P], AggregateAnnouncementInterview[P]>
  }




  export type AnnouncementInterviewGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: AnnouncementInterviewWhereInput
    orderBy?: AnnouncementInterviewOrderByWithAggregationInput | AnnouncementInterviewOrderByWithAggregationInput[]
    by: AnnouncementInterviewScalarFieldEnum[] | AnnouncementInterviewScalarFieldEnum
    having?: AnnouncementInterviewScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AnnouncementInterviewCountAggregateInputType | true
    _avg?: AnnouncementInterviewAvgAggregateInputType
    _sum?: AnnouncementInterviewSumAggregateInputType
    _min?: AnnouncementInterviewMinAggregateInputType
    _max?: AnnouncementInterviewMaxAggregateInputType
  }

  export type AnnouncementInterviewGroupByOutputType = {
    startDate: Date
    endDate: Date
    beginHour: Date
    interval: number
    endHour: Date
    duration: number
    announcement_id: string
    _count: AnnouncementInterviewCountAggregateOutputType | null
    _avg: AnnouncementInterviewAvgAggregateOutputType | null
    _sum: AnnouncementInterviewSumAggregateOutputType | null
    _min: AnnouncementInterviewMinAggregateOutputType | null
    _max: AnnouncementInterviewMaxAggregateOutputType | null
  }

  type GetAnnouncementInterviewGroupByPayload<T extends AnnouncementInterviewGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AnnouncementInterviewGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AnnouncementInterviewGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AnnouncementInterviewGroupByOutputType[P]>
            : GetScalarType<T[P], AnnouncementInterviewGroupByOutputType[P]>
        }
      >
    >


  export type AnnouncementInterviewSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    startDate?: boolean
    endDate?: boolean
    beginHour?: boolean
    interval?: boolean
    endHour?: boolean
    duration?: boolean
    announcement_id?: boolean
    announcement?: boolean | AnnouncementDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["announcementInterview"]>

  export type AnnouncementInterviewSelectScalar = {
    startDate?: boolean
    endDate?: boolean
    beginHour?: boolean
    interval?: boolean
    endHour?: boolean
    duration?: boolean
    announcement_id?: boolean
  }

  export type AnnouncementInterviewInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    announcement?: boolean | AnnouncementDefaultArgs<ExtArgs>
  }


  export type $AnnouncementInterviewPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "AnnouncementInterview"
    objects: {
      announcement: Prisma.$AnnouncementPayload<ExtArgs>
    }
    scalars: $Extensions.GetResult<{
      startDate: Date
      endDate: Date
      beginHour: Date
      interval: number
      endHour: Date
      duration: number
      announcement_id: string
    }, ExtArgs["result"]["announcementInterview"]>
    composites: {}
  }


  type AnnouncementInterviewGetPayload<S extends boolean | null | undefined | AnnouncementInterviewDefaultArgs> = $Result.GetResult<Prisma.$AnnouncementInterviewPayload, S>

  type AnnouncementInterviewCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<AnnouncementInterviewFindManyArgs, 'select' | 'include'> & {
      select?: AnnouncementInterviewCountAggregateInputType | true
    }

  export interface AnnouncementInterviewDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AnnouncementInterview'], meta: { name: 'AnnouncementInterview' } }
    /**
     * Find zero or one AnnouncementInterview that matches the filter.
     * @param {AnnouncementInterviewFindUniqueArgs} args - Arguments to find a AnnouncementInterview
     * @example
     * // Get one AnnouncementInterview
     * const announcementInterview = await prisma.announcementInterview.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends AnnouncementInterviewFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, AnnouncementInterviewFindUniqueArgs<ExtArgs>>
    ): Prisma__AnnouncementInterviewClient<$Result.GetResult<Prisma.$AnnouncementInterviewPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one AnnouncementInterview that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {AnnouncementInterviewFindUniqueOrThrowArgs} args - Arguments to find a AnnouncementInterview
     * @example
     * // Get one AnnouncementInterview
     * const announcementInterview = await prisma.announcementInterview.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends AnnouncementInterviewFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, AnnouncementInterviewFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__AnnouncementInterviewClient<$Result.GetResult<Prisma.$AnnouncementInterviewPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first AnnouncementInterview that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnnouncementInterviewFindFirstArgs} args - Arguments to find a AnnouncementInterview
     * @example
     * // Get one AnnouncementInterview
     * const announcementInterview = await prisma.announcementInterview.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends AnnouncementInterviewFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, AnnouncementInterviewFindFirstArgs<ExtArgs>>
    ): Prisma__AnnouncementInterviewClient<$Result.GetResult<Prisma.$AnnouncementInterviewPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first AnnouncementInterview that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnnouncementInterviewFindFirstOrThrowArgs} args - Arguments to find a AnnouncementInterview
     * @example
     * // Get one AnnouncementInterview
     * const announcementInterview = await prisma.announcementInterview.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends AnnouncementInterviewFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, AnnouncementInterviewFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__AnnouncementInterviewClient<$Result.GetResult<Prisma.$AnnouncementInterviewPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more AnnouncementInterviews that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnnouncementInterviewFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AnnouncementInterviews
     * const announcementInterviews = await prisma.announcementInterview.findMany()
     * 
     * // Get first 10 AnnouncementInterviews
     * const announcementInterviews = await prisma.announcementInterview.findMany({ take: 10 })
     * 
     * // Only select the `startDate`
     * const announcementInterviewWithStartDateOnly = await prisma.announcementInterview.findMany({ select: { startDate: true } })
     * 
    **/
    findMany<T extends AnnouncementInterviewFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AnnouncementInterviewFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AnnouncementInterviewPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a AnnouncementInterview.
     * @param {AnnouncementInterviewCreateArgs} args - Arguments to create a AnnouncementInterview.
     * @example
     * // Create one AnnouncementInterview
     * const AnnouncementInterview = await prisma.announcementInterview.create({
     *   data: {
     *     // ... data to create a AnnouncementInterview
     *   }
     * })
     * 
    **/
    create<T extends AnnouncementInterviewCreateArgs<ExtArgs>>(
      args: SelectSubset<T, AnnouncementInterviewCreateArgs<ExtArgs>>
    ): Prisma__AnnouncementInterviewClient<$Result.GetResult<Prisma.$AnnouncementInterviewPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many AnnouncementInterviews.
     *     @param {AnnouncementInterviewCreateManyArgs} args - Arguments to create many AnnouncementInterviews.
     *     @example
     *     // Create many AnnouncementInterviews
     *     const announcementInterview = await prisma.announcementInterview.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends AnnouncementInterviewCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AnnouncementInterviewCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a AnnouncementInterview.
     * @param {AnnouncementInterviewDeleteArgs} args - Arguments to delete one AnnouncementInterview.
     * @example
     * // Delete one AnnouncementInterview
     * const AnnouncementInterview = await prisma.announcementInterview.delete({
     *   where: {
     *     // ... filter to delete one AnnouncementInterview
     *   }
     * })
     * 
    **/
    delete<T extends AnnouncementInterviewDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, AnnouncementInterviewDeleteArgs<ExtArgs>>
    ): Prisma__AnnouncementInterviewClient<$Result.GetResult<Prisma.$AnnouncementInterviewPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one AnnouncementInterview.
     * @param {AnnouncementInterviewUpdateArgs} args - Arguments to update one AnnouncementInterview.
     * @example
     * // Update one AnnouncementInterview
     * const announcementInterview = await prisma.announcementInterview.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends AnnouncementInterviewUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, AnnouncementInterviewUpdateArgs<ExtArgs>>
    ): Prisma__AnnouncementInterviewClient<$Result.GetResult<Prisma.$AnnouncementInterviewPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more AnnouncementInterviews.
     * @param {AnnouncementInterviewDeleteManyArgs} args - Arguments to filter AnnouncementInterviews to delete.
     * @example
     * // Delete a few AnnouncementInterviews
     * const { count } = await prisma.announcementInterview.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends AnnouncementInterviewDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AnnouncementInterviewDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AnnouncementInterviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnnouncementInterviewUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AnnouncementInterviews
     * const announcementInterview = await prisma.announcementInterview.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends AnnouncementInterviewUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, AnnouncementInterviewUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AnnouncementInterview.
     * @param {AnnouncementInterviewUpsertArgs} args - Arguments to update or create a AnnouncementInterview.
     * @example
     * // Update or create a AnnouncementInterview
     * const announcementInterview = await prisma.announcementInterview.upsert({
     *   create: {
     *     // ... data to create a AnnouncementInterview
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AnnouncementInterview we want to update
     *   }
     * })
    **/
    upsert<T extends AnnouncementInterviewUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, AnnouncementInterviewUpsertArgs<ExtArgs>>
    ): Prisma__AnnouncementInterviewClient<$Result.GetResult<Prisma.$AnnouncementInterviewPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of AnnouncementInterviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnnouncementInterviewCountArgs} args - Arguments to filter AnnouncementInterviews to count.
     * @example
     * // Count the number of AnnouncementInterviews
     * const count = await prisma.announcementInterview.count({
     *   where: {
     *     // ... the filter for the AnnouncementInterviews we want to count
     *   }
     * })
    **/
    count<T extends AnnouncementInterviewCountArgs>(
      args?: Subset<T, AnnouncementInterviewCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AnnouncementInterviewCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AnnouncementInterview.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnnouncementInterviewAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AnnouncementInterviewAggregateArgs>(args: Subset<T, AnnouncementInterviewAggregateArgs>): Prisma.PrismaPromise<GetAnnouncementInterviewAggregateType<T>>

    /**
     * Group by AnnouncementInterview.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnnouncementInterviewGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AnnouncementInterviewGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AnnouncementInterviewGroupByArgs['orderBy'] }
        : { orderBy?: AnnouncementInterviewGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AnnouncementInterviewGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAnnouncementInterviewGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AnnouncementInterview model
   */
  readonly fields: AnnouncementInterviewFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AnnouncementInterview.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AnnouncementInterviewClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    announcement<T extends AnnouncementDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AnnouncementDefaultArgs<ExtArgs>>): Prisma__AnnouncementClient<$Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the AnnouncementInterview model
   */ 
  interface AnnouncementInterviewFieldRefs {
    readonly startDate: FieldRef<"AnnouncementInterview", 'DateTime'>
    readonly endDate: FieldRef<"AnnouncementInterview", 'DateTime'>
    readonly beginHour: FieldRef<"AnnouncementInterview", 'DateTime'>
    readonly interval: FieldRef<"AnnouncementInterview", 'Int'>
    readonly endHour: FieldRef<"AnnouncementInterview", 'DateTime'>
    readonly duration: FieldRef<"AnnouncementInterview", 'Int'>
    readonly announcement_id: FieldRef<"AnnouncementInterview", 'String'>
  }
    

  // Custom InputTypes

  /**
   * AnnouncementInterview findUnique
   */
  export type AnnouncementInterviewFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AnnouncementInterview
     */
    select?: AnnouncementInterviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AnnouncementInterviewInclude<ExtArgs> | null
    /**
     * Filter, which AnnouncementInterview to fetch.
     */
    where: AnnouncementInterviewWhereUniqueInput
  }


  /**
   * AnnouncementInterview findUniqueOrThrow
   */
  export type AnnouncementInterviewFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AnnouncementInterview
     */
    select?: AnnouncementInterviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AnnouncementInterviewInclude<ExtArgs> | null
    /**
     * Filter, which AnnouncementInterview to fetch.
     */
    where: AnnouncementInterviewWhereUniqueInput
  }


  /**
   * AnnouncementInterview findFirst
   */
  export type AnnouncementInterviewFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AnnouncementInterview
     */
    select?: AnnouncementInterviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AnnouncementInterviewInclude<ExtArgs> | null
    /**
     * Filter, which AnnouncementInterview to fetch.
     */
    where?: AnnouncementInterviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AnnouncementInterviews to fetch.
     */
    orderBy?: AnnouncementInterviewOrderByWithRelationInput | AnnouncementInterviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AnnouncementInterviews.
     */
    cursor?: AnnouncementInterviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AnnouncementInterviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AnnouncementInterviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AnnouncementInterviews.
     */
    distinct?: AnnouncementInterviewScalarFieldEnum | AnnouncementInterviewScalarFieldEnum[]
  }


  /**
   * AnnouncementInterview findFirstOrThrow
   */
  export type AnnouncementInterviewFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AnnouncementInterview
     */
    select?: AnnouncementInterviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AnnouncementInterviewInclude<ExtArgs> | null
    /**
     * Filter, which AnnouncementInterview to fetch.
     */
    where?: AnnouncementInterviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AnnouncementInterviews to fetch.
     */
    orderBy?: AnnouncementInterviewOrderByWithRelationInput | AnnouncementInterviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AnnouncementInterviews.
     */
    cursor?: AnnouncementInterviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AnnouncementInterviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AnnouncementInterviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AnnouncementInterviews.
     */
    distinct?: AnnouncementInterviewScalarFieldEnum | AnnouncementInterviewScalarFieldEnum[]
  }


  /**
   * AnnouncementInterview findMany
   */
  export type AnnouncementInterviewFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AnnouncementInterview
     */
    select?: AnnouncementInterviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AnnouncementInterviewInclude<ExtArgs> | null
    /**
     * Filter, which AnnouncementInterviews to fetch.
     */
    where?: AnnouncementInterviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AnnouncementInterviews to fetch.
     */
    orderBy?: AnnouncementInterviewOrderByWithRelationInput | AnnouncementInterviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AnnouncementInterviews.
     */
    cursor?: AnnouncementInterviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AnnouncementInterviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AnnouncementInterviews.
     */
    skip?: number
    distinct?: AnnouncementInterviewScalarFieldEnum | AnnouncementInterviewScalarFieldEnum[]
  }


  /**
   * AnnouncementInterview create
   */
  export type AnnouncementInterviewCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AnnouncementInterview
     */
    select?: AnnouncementInterviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AnnouncementInterviewInclude<ExtArgs> | null
    /**
     * The data needed to create a AnnouncementInterview.
     */
    data: XOR<AnnouncementInterviewCreateInput, AnnouncementInterviewUncheckedCreateInput>
  }


  /**
   * AnnouncementInterview createMany
   */
  export type AnnouncementInterviewCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AnnouncementInterviews.
     */
    data: AnnouncementInterviewCreateManyInput | AnnouncementInterviewCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * AnnouncementInterview update
   */
  export type AnnouncementInterviewUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AnnouncementInterview
     */
    select?: AnnouncementInterviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AnnouncementInterviewInclude<ExtArgs> | null
    /**
     * The data needed to update a AnnouncementInterview.
     */
    data: XOR<AnnouncementInterviewUpdateInput, AnnouncementInterviewUncheckedUpdateInput>
    /**
     * Choose, which AnnouncementInterview to update.
     */
    where: AnnouncementInterviewWhereUniqueInput
  }


  /**
   * AnnouncementInterview updateMany
   */
  export type AnnouncementInterviewUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AnnouncementInterviews.
     */
    data: XOR<AnnouncementInterviewUpdateManyMutationInput, AnnouncementInterviewUncheckedUpdateManyInput>
    /**
     * Filter which AnnouncementInterviews to update
     */
    where?: AnnouncementInterviewWhereInput
  }


  /**
   * AnnouncementInterview upsert
   */
  export type AnnouncementInterviewUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AnnouncementInterview
     */
    select?: AnnouncementInterviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AnnouncementInterviewInclude<ExtArgs> | null
    /**
     * The filter to search for the AnnouncementInterview to update in case it exists.
     */
    where: AnnouncementInterviewWhereUniqueInput
    /**
     * In case the AnnouncementInterview found by the `where` argument doesn't exist, create a new AnnouncementInterview with this data.
     */
    create: XOR<AnnouncementInterviewCreateInput, AnnouncementInterviewUncheckedCreateInput>
    /**
     * In case the AnnouncementInterview was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AnnouncementInterviewUpdateInput, AnnouncementInterviewUncheckedUpdateInput>
  }


  /**
   * AnnouncementInterview delete
   */
  export type AnnouncementInterviewDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AnnouncementInterview
     */
    select?: AnnouncementInterviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AnnouncementInterviewInclude<ExtArgs> | null
    /**
     * Filter which AnnouncementInterview to delete.
     */
    where: AnnouncementInterviewWhereUniqueInput
  }


  /**
   * AnnouncementInterview deleteMany
   */
  export type AnnouncementInterviewDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which AnnouncementInterviews to delete
     */
    where?: AnnouncementInterviewWhereInput
  }


  /**
   * AnnouncementInterview without action
   */
  export type AnnouncementInterviewDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AnnouncementInterview
     */
    select?: AnnouncementInterviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AnnouncementInterviewInclude<ExtArgs> | null
  }



  /**
   * Model Announcement
   */

  export type AggregateAnnouncement = {
    _count: AnnouncementCountAggregateOutputType | null
    _avg: AnnouncementAvgAggregateOutputType | null
    _sum: AnnouncementSumAggregateOutputType | null
    _min: AnnouncementMinAggregateOutputType | null
    _max: AnnouncementMaxAggregateOutputType | null
  }

  export type AnnouncementAvgAggregateOutputType = {
    offeredVacancies: number | null
    verifiedScholarships: number | null
  }

  export type AnnouncementSumAggregateOutputType = {
    offeredVacancies: number | null
    verifiedScholarships: number | null
  }

  export type AnnouncementMinAggregateOutputType = {
    id: string | null
    entityChanged: boolean | null
    branchChanged: boolean | null
    announcementType: $Enums.AnnouncementType | null
    announcementNumber: string | null
    announcementDate: Date | null
    announcementBegin: Date | null
    openDate: Date | null
    closeDate: Date | null
    waitingList: boolean | null
    offeredVacancies: number | null
    verifiedScholarships: number | null
    description: string | null
    entity_id: string | null
    announcementName: string | null
    announcementLogo: string | null
    type2: string | null
  }

  export type AnnouncementMaxAggregateOutputType = {
    id: string | null
    entityChanged: boolean | null
    branchChanged: boolean | null
    announcementType: $Enums.AnnouncementType | null
    announcementNumber: string | null
    announcementDate: Date | null
    announcementBegin: Date | null
    openDate: Date | null
    closeDate: Date | null
    waitingList: boolean | null
    offeredVacancies: number | null
    verifiedScholarships: number | null
    description: string | null
    entity_id: string | null
    announcementName: string | null
    announcementLogo: string | null
    type2: string | null
  }

  export type AnnouncementCountAggregateOutputType = {
    id: number
    entityChanged: number
    branchChanged: number
    announcementType: number
    announcementNumber: number
    announcementDate: number
    announcementBegin: number
    openDate: number
    closeDate: number
    waitingList: number
    offeredVacancies: number
    verifiedScholarships: number
    description: number
    entity_id: number
    announcementName: number
    announcementLogo: number
    type2: number
    criteria: number
    types1: number
    _all: number
  }


  export type AnnouncementAvgAggregateInputType = {
    offeredVacancies?: true
    verifiedScholarships?: true
  }

  export type AnnouncementSumAggregateInputType = {
    offeredVacancies?: true
    verifiedScholarships?: true
  }

  export type AnnouncementMinAggregateInputType = {
    id?: true
    entityChanged?: true
    branchChanged?: true
    announcementType?: true
    announcementNumber?: true
    announcementDate?: true
    announcementBegin?: true
    openDate?: true
    closeDate?: true
    waitingList?: true
    offeredVacancies?: true
    verifiedScholarships?: true
    description?: true
    entity_id?: true
    announcementName?: true
    announcementLogo?: true
    type2?: true
  }

  export type AnnouncementMaxAggregateInputType = {
    id?: true
    entityChanged?: true
    branchChanged?: true
    announcementType?: true
    announcementNumber?: true
    announcementDate?: true
    announcementBegin?: true
    openDate?: true
    closeDate?: true
    waitingList?: true
    offeredVacancies?: true
    verifiedScholarships?: true
    description?: true
    entity_id?: true
    announcementName?: true
    announcementLogo?: true
    type2?: true
  }

  export type AnnouncementCountAggregateInputType = {
    id?: true
    entityChanged?: true
    branchChanged?: true
    announcementType?: true
    announcementNumber?: true
    announcementDate?: true
    announcementBegin?: true
    openDate?: true
    closeDate?: true
    waitingList?: true
    offeredVacancies?: true
    verifiedScholarships?: true
    description?: true
    entity_id?: true
    announcementName?: true
    announcementLogo?: true
    type2?: true
    criteria?: true
    types1?: true
    _all?: true
  }

  export type AnnouncementAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which Announcement to aggregate.
     */
    where?: AnnouncementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Announcements to fetch.
     */
    orderBy?: AnnouncementOrderByWithRelationInput | AnnouncementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AnnouncementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Announcements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Announcements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Announcements
    **/
    _count?: true | AnnouncementCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AnnouncementAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AnnouncementSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AnnouncementMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AnnouncementMaxAggregateInputType
  }

  export type GetAnnouncementAggregateType<T extends AnnouncementAggregateArgs> = {
        [P in keyof T & keyof AggregateAnnouncement]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAnnouncement[P]>
      : GetScalarType<T[P], AggregateAnnouncement[P]>
  }




  export type AnnouncementGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: AnnouncementWhereInput
    orderBy?: AnnouncementOrderByWithAggregationInput | AnnouncementOrderByWithAggregationInput[]
    by: AnnouncementScalarFieldEnum[] | AnnouncementScalarFieldEnum
    having?: AnnouncementScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AnnouncementCountAggregateInputType | true
    _avg?: AnnouncementAvgAggregateInputType
    _sum?: AnnouncementSumAggregateInputType
    _min?: AnnouncementMinAggregateInputType
    _max?: AnnouncementMaxAggregateInputType
  }

  export type AnnouncementGroupByOutputType = {
    id: string
    entityChanged: boolean | null
    branchChanged: boolean | null
    announcementType: $Enums.AnnouncementType
    announcementNumber: string | null
    announcementDate: Date | null
    announcementBegin: Date | null
    openDate: Date | null
    closeDate: Date | null
    waitingList: boolean | null
    offeredVacancies: number | null
    verifiedScholarships: number | null
    description: string | null
    entity_id: string
    announcementName: string | null
    announcementLogo: string | null
    type2: string | null
    criteria: $Enums.TiebreakerCriterias[]
    types1: $Enums.scholarshipGrantedType[]
    _count: AnnouncementCountAggregateOutputType | null
    _avg: AnnouncementAvgAggregateOutputType | null
    _sum: AnnouncementSumAggregateOutputType | null
    _min: AnnouncementMinAggregateOutputType | null
    _max: AnnouncementMaxAggregateOutputType | null
  }

  type GetAnnouncementGroupByPayload<T extends AnnouncementGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AnnouncementGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AnnouncementGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AnnouncementGroupByOutputType[P]>
            : GetScalarType<T[P], AnnouncementGroupByOutputType[P]>
        }
      >
    >


  export type AnnouncementSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    entityChanged?: boolean
    branchChanged?: boolean
    announcementType?: boolean
    announcementNumber?: boolean
    announcementDate?: boolean
    announcementBegin?: boolean
    openDate?: boolean
    closeDate?: boolean
    waitingList?: boolean
    offeredVacancies?: boolean
    verifiedScholarships?: boolean
    description?: boolean
    entity_id?: boolean
    announcementName?: boolean
    announcementLogo?: boolean
    type2?: boolean
    criteria?: boolean
    types1?: boolean
    interview?: boolean | Announcement$interviewArgs<ExtArgs>
    entity?: boolean | EntityDefaultArgs<ExtArgs>
    entity_subsidiary?: boolean | Announcement$entity_subsidiaryArgs<ExtArgs>
    Application?: boolean | Announcement$ApplicationArgs<ExtArgs>
    educationLevels?: boolean | Announcement$educationLevelsArgs<ExtArgs>
    ScholarshipGranted?: boolean | Announcement$ScholarshipGrantedArgs<ExtArgs>
    timelines?: boolean | Announcement$timelinesArgs<ExtArgs>
    socialAssistant?: boolean | Announcement$socialAssistantArgs<ExtArgs>
    _count?: boolean | AnnouncementCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["announcement"]>

  export type AnnouncementSelectScalar = {
    id?: boolean
    entityChanged?: boolean
    branchChanged?: boolean
    announcementType?: boolean
    announcementNumber?: boolean
    announcementDate?: boolean
    announcementBegin?: boolean
    openDate?: boolean
    closeDate?: boolean
    waitingList?: boolean
    offeredVacancies?: boolean
    verifiedScholarships?: boolean
    description?: boolean
    entity_id?: boolean
    announcementName?: boolean
    announcementLogo?: boolean
    type2?: boolean
    criteria?: boolean
    types1?: boolean
  }

  export type AnnouncementInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    interview?: boolean | Announcement$interviewArgs<ExtArgs>
    entity?: boolean | EntityDefaultArgs<ExtArgs>
    entity_subsidiary?: boolean | Announcement$entity_subsidiaryArgs<ExtArgs>
    Application?: boolean | Announcement$ApplicationArgs<ExtArgs>
    educationLevels?: boolean | Announcement$educationLevelsArgs<ExtArgs>
    ScholarshipGranted?: boolean | Announcement$ScholarshipGrantedArgs<ExtArgs>
    timelines?: boolean | Announcement$timelinesArgs<ExtArgs>
    socialAssistant?: boolean | Announcement$socialAssistantArgs<ExtArgs>
    _count?: boolean | AnnouncementCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $AnnouncementPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "Announcement"
    objects: {
      interview: Prisma.$AnnouncementInterviewPayload<ExtArgs> | null
      entity: Prisma.$EntityPayload<ExtArgs>
      entity_subsidiary: Prisma.$EntitySubsidiaryPayload<ExtArgs>[]
      Application: Prisma.$ApplicationPayload<ExtArgs>[]
      educationLevels: Prisma.$EducationLevelPayload<ExtArgs>[]
      ScholarshipGranted: Prisma.$ScholarshipGrantedPayload<ExtArgs>[]
      timelines: Prisma.$TimelinePayload<ExtArgs>[]
      socialAssistant: Prisma.$SocialAssistantPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetResult<{
      id: string
      entityChanged: boolean | null
      branchChanged: boolean | null
      announcementType: $Enums.AnnouncementType
      announcementNumber: string | null
      announcementDate: Date | null
      announcementBegin: Date | null
      openDate: Date | null
      closeDate: Date | null
      waitingList: boolean | null
      offeredVacancies: number | null
      verifiedScholarships: number | null
      description: string | null
      entity_id: string
      announcementName: string | null
      announcementLogo: string | null
      type2: string | null
      criteria: $Enums.TiebreakerCriterias[]
      types1: $Enums.scholarshipGrantedType[]
    }, ExtArgs["result"]["announcement"]>
    composites: {}
  }


  type AnnouncementGetPayload<S extends boolean | null | undefined | AnnouncementDefaultArgs> = $Result.GetResult<Prisma.$AnnouncementPayload, S>

  type AnnouncementCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<AnnouncementFindManyArgs, 'select' | 'include'> & {
      select?: AnnouncementCountAggregateInputType | true
    }

  export interface AnnouncementDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Announcement'], meta: { name: 'Announcement' } }
    /**
     * Find zero or one Announcement that matches the filter.
     * @param {AnnouncementFindUniqueArgs} args - Arguments to find a Announcement
     * @example
     * // Get one Announcement
     * const announcement = await prisma.announcement.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends AnnouncementFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, AnnouncementFindUniqueArgs<ExtArgs>>
    ): Prisma__AnnouncementClient<$Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Announcement that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {AnnouncementFindUniqueOrThrowArgs} args - Arguments to find a Announcement
     * @example
     * // Get one Announcement
     * const announcement = await prisma.announcement.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends AnnouncementFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, AnnouncementFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__AnnouncementClient<$Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Announcement that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnnouncementFindFirstArgs} args - Arguments to find a Announcement
     * @example
     * // Get one Announcement
     * const announcement = await prisma.announcement.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends AnnouncementFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, AnnouncementFindFirstArgs<ExtArgs>>
    ): Prisma__AnnouncementClient<$Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Announcement that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnnouncementFindFirstOrThrowArgs} args - Arguments to find a Announcement
     * @example
     * // Get one Announcement
     * const announcement = await prisma.announcement.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends AnnouncementFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, AnnouncementFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__AnnouncementClient<$Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Announcements that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnnouncementFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Announcements
     * const announcements = await prisma.announcement.findMany()
     * 
     * // Get first 10 Announcements
     * const announcements = await prisma.announcement.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const announcementWithIdOnly = await prisma.announcement.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends AnnouncementFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AnnouncementFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Announcement.
     * @param {AnnouncementCreateArgs} args - Arguments to create a Announcement.
     * @example
     * // Create one Announcement
     * const Announcement = await prisma.announcement.create({
     *   data: {
     *     // ... data to create a Announcement
     *   }
     * })
     * 
    **/
    create<T extends AnnouncementCreateArgs<ExtArgs>>(
      args: SelectSubset<T, AnnouncementCreateArgs<ExtArgs>>
    ): Prisma__AnnouncementClient<$Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Announcements.
     *     @param {AnnouncementCreateManyArgs} args - Arguments to create many Announcements.
     *     @example
     *     // Create many Announcements
     *     const announcement = await prisma.announcement.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends AnnouncementCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AnnouncementCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Announcement.
     * @param {AnnouncementDeleteArgs} args - Arguments to delete one Announcement.
     * @example
     * // Delete one Announcement
     * const Announcement = await prisma.announcement.delete({
     *   where: {
     *     // ... filter to delete one Announcement
     *   }
     * })
     * 
    **/
    delete<T extends AnnouncementDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, AnnouncementDeleteArgs<ExtArgs>>
    ): Prisma__AnnouncementClient<$Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Announcement.
     * @param {AnnouncementUpdateArgs} args - Arguments to update one Announcement.
     * @example
     * // Update one Announcement
     * const announcement = await prisma.announcement.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends AnnouncementUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, AnnouncementUpdateArgs<ExtArgs>>
    ): Prisma__AnnouncementClient<$Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Announcements.
     * @param {AnnouncementDeleteManyArgs} args - Arguments to filter Announcements to delete.
     * @example
     * // Delete a few Announcements
     * const { count } = await prisma.announcement.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends AnnouncementDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AnnouncementDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Announcements.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnnouncementUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Announcements
     * const announcement = await prisma.announcement.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends AnnouncementUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, AnnouncementUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Announcement.
     * @param {AnnouncementUpsertArgs} args - Arguments to update or create a Announcement.
     * @example
     * // Update or create a Announcement
     * const announcement = await prisma.announcement.upsert({
     *   create: {
     *     // ... data to create a Announcement
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Announcement we want to update
     *   }
     * })
    **/
    upsert<T extends AnnouncementUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, AnnouncementUpsertArgs<ExtArgs>>
    ): Prisma__AnnouncementClient<$Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Announcements.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnnouncementCountArgs} args - Arguments to filter Announcements to count.
     * @example
     * // Count the number of Announcements
     * const count = await prisma.announcement.count({
     *   where: {
     *     // ... the filter for the Announcements we want to count
     *   }
     * })
    **/
    count<T extends AnnouncementCountArgs>(
      args?: Subset<T, AnnouncementCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AnnouncementCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Announcement.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnnouncementAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AnnouncementAggregateArgs>(args: Subset<T, AnnouncementAggregateArgs>): Prisma.PrismaPromise<GetAnnouncementAggregateType<T>>

    /**
     * Group by Announcement.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnnouncementGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AnnouncementGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AnnouncementGroupByArgs['orderBy'] }
        : { orderBy?: AnnouncementGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AnnouncementGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAnnouncementGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Announcement model
   */
  readonly fields: AnnouncementFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Announcement.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AnnouncementClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    interview<T extends Announcement$interviewArgs<ExtArgs> = {}>(args?: Subset<T, Announcement$interviewArgs<ExtArgs>>): Prisma__AnnouncementInterviewClient<$Result.GetResult<Prisma.$AnnouncementInterviewPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    entity<T extends EntityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EntityDefaultArgs<ExtArgs>>): Prisma__EntityClient<$Result.GetResult<Prisma.$EntityPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    entity_subsidiary<T extends Announcement$entity_subsidiaryArgs<ExtArgs> = {}>(args?: Subset<T, Announcement$entity_subsidiaryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EntitySubsidiaryPayload<ExtArgs>, T, 'findMany'> | Null>;

    Application<T extends Announcement$ApplicationArgs<ExtArgs> = {}>(args?: Subset<T, Announcement$ApplicationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, 'findMany'> | Null>;

    educationLevels<T extends Announcement$educationLevelsArgs<ExtArgs> = {}>(args?: Subset<T, Announcement$educationLevelsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EducationLevelPayload<ExtArgs>, T, 'findMany'> | Null>;

    ScholarshipGranted<T extends Announcement$ScholarshipGrantedArgs<ExtArgs> = {}>(args?: Subset<T, Announcement$ScholarshipGrantedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ScholarshipGrantedPayload<ExtArgs>, T, 'findMany'> | Null>;

    timelines<T extends Announcement$timelinesArgs<ExtArgs> = {}>(args?: Subset<T, Announcement$timelinesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TimelinePayload<ExtArgs>, T, 'findMany'> | Null>;

    socialAssistant<T extends Announcement$socialAssistantArgs<ExtArgs> = {}>(args?: Subset<T, Announcement$socialAssistantArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SocialAssistantPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Announcement model
   */ 
  interface AnnouncementFieldRefs {
    readonly id: FieldRef<"Announcement", 'String'>
    readonly entityChanged: FieldRef<"Announcement", 'Boolean'>
    readonly branchChanged: FieldRef<"Announcement", 'Boolean'>
    readonly announcementType: FieldRef<"Announcement", 'AnnouncementType'>
    readonly announcementNumber: FieldRef<"Announcement", 'String'>
    readonly announcementDate: FieldRef<"Announcement", 'DateTime'>
    readonly announcementBegin: FieldRef<"Announcement", 'DateTime'>
    readonly openDate: FieldRef<"Announcement", 'DateTime'>
    readonly closeDate: FieldRef<"Announcement", 'DateTime'>
    readonly waitingList: FieldRef<"Announcement", 'Boolean'>
    readonly offeredVacancies: FieldRef<"Announcement", 'Int'>
    readonly verifiedScholarships: FieldRef<"Announcement", 'Int'>
    readonly description: FieldRef<"Announcement", 'String'>
    readonly entity_id: FieldRef<"Announcement", 'String'>
    readonly announcementName: FieldRef<"Announcement", 'String'>
    readonly announcementLogo: FieldRef<"Announcement", 'String'>
    readonly type2: FieldRef<"Announcement", 'String'>
    readonly criteria: FieldRef<"Announcement", 'TiebreakerCriterias[]'>
    readonly types1: FieldRef<"Announcement", 'scholarshipGrantedType[]'>
  }
    

  // Custom InputTypes

  /**
   * Announcement findUnique
   */
  export type AnnouncementFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Announcement
     */
    select?: AnnouncementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AnnouncementInclude<ExtArgs> | null
    /**
     * Filter, which Announcement to fetch.
     */
    where: AnnouncementWhereUniqueInput
  }


  /**
   * Announcement findUniqueOrThrow
   */
  export type AnnouncementFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Announcement
     */
    select?: AnnouncementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AnnouncementInclude<ExtArgs> | null
    /**
     * Filter, which Announcement to fetch.
     */
    where: AnnouncementWhereUniqueInput
  }


  /**
   * Announcement findFirst
   */
  export type AnnouncementFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Announcement
     */
    select?: AnnouncementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AnnouncementInclude<ExtArgs> | null
    /**
     * Filter, which Announcement to fetch.
     */
    where?: AnnouncementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Announcements to fetch.
     */
    orderBy?: AnnouncementOrderByWithRelationInput | AnnouncementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Announcements.
     */
    cursor?: AnnouncementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Announcements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Announcements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Announcements.
     */
    distinct?: AnnouncementScalarFieldEnum | AnnouncementScalarFieldEnum[]
  }


  /**
   * Announcement findFirstOrThrow
   */
  export type AnnouncementFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Announcement
     */
    select?: AnnouncementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AnnouncementInclude<ExtArgs> | null
    /**
     * Filter, which Announcement to fetch.
     */
    where?: AnnouncementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Announcements to fetch.
     */
    orderBy?: AnnouncementOrderByWithRelationInput | AnnouncementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Announcements.
     */
    cursor?: AnnouncementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Announcements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Announcements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Announcements.
     */
    distinct?: AnnouncementScalarFieldEnum | AnnouncementScalarFieldEnum[]
  }


  /**
   * Announcement findMany
   */
  export type AnnouncementFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Announcement
     */
    select?: AnnouncementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AnnouncementInclude<ExtArgs> | null
    /**
     * Filter, which Announcements to fetch.
     */
    where?: AnnouncementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Announcements to fetch.
     */
    orderBy?: AnnouncementOrderByWithRelationInput | AnnouncementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Announcements.
     */
    cursor?: AnnouncementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Announcements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Announcements.
     */
    skip?: number
    distinct?: AnnouncementScalarFieldEnum | AnnouncementScalarFieldEnum[]
  }


  /**
   * Announcement create
   */
  export type AnnouncementCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Announcement
     */
    select?: AnnouncementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AnnouncementInclude<ExtArgs> | null
    /**
     * The data needed to create a Announcement.
     */
    data: XOR<AnnouncementCreateInput, AnnouncementUncheckedCreateInput>
  }


  /**
   * Announcement createMany
   */
  export type AnnouncementCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Announcements.
     */
    data: AnnouncementCreateManyInput | AnnouncementCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Announcement update
   */
  export type AnnouncementUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Announcement
     */
    select?: AnnouncementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AnnouncementInclude<ExtArgs> | null
    /**
     * The data needed to update a Announcement.
     */
    data: XOR<AnnouncementUpdateInput, AnnouncementUncheckedUpdateInput>
    /**
     * Choose, which Announcement to update.
     */
    where: AnnouncementWhereUniqueInput
  }


  /**
   * Announcement updateMany
   */
  export type AnnouncementUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Announcements.
     */
    data: XOR<AnnouncementUpdateManyMutationInput, AnnouncementUncheckedUpdateManyInput>
    /**
     * Filter which Announcements to update
     */
    where?: AnnouncementWhereInput
  }


  /**
   * Announcement upsert
   */
  export type AnnouncementUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Announcement
     */
    select?: AnnouncementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AnnouncementInclude<ExtArgs> | null
    /**
     * The filter to search for the Announcement to update in case it exists.
     */
    where: AnnouncementWhereUniqueInput
    /**
     * In case the Announcement found by the `where` argument doesn't exist, create a new Announcement with this data.
     */
    create: XOR<AnnouncementCreateInput, AnnouncementUncheckedCreateInput>
    /**
     * In case the Announcement was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AnnouncementUpdateInput, AnnouncementUncheckedUpdateInput>
  }


  /**
   * Announcement delete
   */
  export type AnnouncementDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Announcement
     */
    select?: AnnouncementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AnnouncementInclude<ExtArgs> | null
    /**
     * Filter which Announcement to delete.
     */
    where: AnnouncementWhereUniqueInput
  }


  /**
   * Announcement deleteMany
   */
  export type AnnouncementDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which Announcements to delete
     */
    where?: AnnouncementWhereInput
  }


  /**
   * Announcement.interview
   */
  export type Announcement$interviewArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AnnouncementInterview
     */
    select?: AnnouncementInterviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AnnouncementInterviewInclude<ExtArgs> | null
    where?: AnnouncementInterviewWhereInput
  }


  /**
   * Announcement.entity_subsidiary
   */
  export type Announcement$entity_subsidiaryArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntitySubsidiary
     */
    select?: EntitySubsidiarySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntitySubsidiaryInclude<ExtArgs> | null
    where?: EntitySubsidiaryWhereInput
    orderBy?: EntitySubsidiaryOrderByWithRelationInput | EntitySubsidiaryOrderByWithRelationInput[]
    cursor?: EntitySubsidiaryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EntitySubsidiaryScalarFieldEnum | EntitySubsidiaryScalarFieldEnum[]
  }


  /**
   * Announcement.Application
   */
  export type Announcement$ApplicationArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ApplicationInclude<ExtArgs> | null
    where?: ApplicationWhereInput
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    cursor?: ApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ApplicationScalarFieldEnum | ApplicationScalarFieldEnum[]
  }


  /**
   * Announcement.educationLevels
   */
  export type Announcement$educationLevelsArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EducationLevel
     */
    select?: EducationLevelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EducationLevelInclude<ExtArgs> | null
    where?: EducationLevelWhereInput
    orderBy?: EducationLevelOrderByWithRelationInput | EducationLevelOrderByWithRelationInput[]
    cursor?: EducationLevelWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EducationLevelScalarFieldEnum | EducationLevelScalarFieldEnum[]
  }


  /**
   * Announcement.ScholarshipGranted
   */
  export type Announcement$ScholarshipGrantedArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipGranted
     */
    select?: ScholarshipGrantedSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ScholarshipGrantedInclude<ExtArgs> | null
    where?: ScholarshipGrantedWhereInput
    orderBy?: ScholarshipGrantedOrderByWithRelationInput | ScholarshipGrantedOrderByWithRelationInput[]
    cursor?: ScholarshipGrantedWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ScholarshipGrantedScalarFieldEnum | ScholarshipGrantedScalarFieldEnum[]
  }


  /**
   * Announcement.timelines
   */
  export type Announcement$timelinesArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Timeline
     */
    select?: TimelineSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TimelineInclude<ExtArgs> | null
    where?: TimelineWhereInput
    orderBy?: TimelineOrderByWithRelationInput | TimelineOrderByWithRelationInput[]
    cursor?: TimelineWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TimelineScalarFieldEnum | TimelineScalarFieldEnum[]
  }


  /**
   * Announcement.socialAssistant
   */
  export type Announcement$socialAssistantArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocialAssistant
     */
    select?: SocialAssistantSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SocialAssistantInclude<ExtArgs> | null
    where?: SocialAssistantWhereInput
    orderBy?: SocialAssistantOrderByWithRelationInput | SocialAssistantOrderByWithRelationInput[]
    cursor?: SocialAssistantWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SocialAssistantScalarFieldEnum | SocialAssistantScalarFieldEnum[]
  }


  /**
   * Announcement without action
   */
  export type AnnouncementDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Announcement
     */
    select?: AnnouncementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AnnouncementInclude<ExtArgs> | null
  }



  /**
   * Model Timeline
   */

  export type AggregateTimeline = {
    _count: TimelineCountAggregateOutputType | null
    _avg: TimelineAvgAggregateOutputType | null
    _sum: TimelineSumAggregateOutputType | null
    _min: TimelineMinAggregateOutputType | null
    _max: TimelineMaxAggregateOutputType | null
  }

  export type TimelineAvgAggregateOutputType = {
    controlLine: number | null
  }

  export type TimelineSumAggregateOutputType = {
    controlLine: number | null
  }

  export type TimelineMinAggregateOutputType = {
    id: string | null
    controlLine: number | null
    stage: string | null
    deadline: Date | null
    announcementId: string | null
  }

  export type TimelineMaxAggregateOutputType = {
    id: string | null
    controlLine: number | null
    stage: string | null
    deadline: Date | null
    announcementId: string | null
  }

  export type TimelineCountAggregateOutputType = {
    id: number
    controlLine: number
    stage: number
    deadline: number
    announcementId: number
    _all: number
  }


  export type TimelineAvgAggregateInputType = {
    controlLine?: true
  }

  export type TimelineSumAggregateInputType = {
    controlLine?: true
  }

  export type TimelineMinAggregateInputType = {
    id?: true
    controlLine?: true
    stage?: true
    deadline?: true
    announcementId?: true
  }

  export type TimelineMaxAggregateInputType = {
    id?: true
    controlLine?: true
    stage?: true
    deadline?: true
    announcementId?: true
  }

  export type TimelineCountAggregateInputType = {
    id?: true
    controlLine?: true
    stage?: true
    deadline?: true
    announcementId?: true
    _all?: true
  }

  export type TimelineAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which Timeline to aggregate.
     */
    where?: TimelineWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Timelines to fetch.
     */
    orderBy?: TimelineOrderByWithRelationInput | TimelineOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TimelineWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Timelines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Timelines.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Timelines
    **/
    _count?: true | TimelineCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TimelineAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TimelineSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TimelineMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TimelineMaxAggregateInputType
  }

  export type GetTimelineAggregateType<T extends TimelineAggregateArgs> = {
        [P in keyof T & keyof AggregateTimeline]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTimeline[P]>
      : GetScalarType<T[P], AggregateTimeline[P]>
  }




  export type TimelineGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: TimelineWhereInput
    orderBy?: TimelineOrderByWithAggregationInput | TimelineOrderByWithAggregationInput[]
    by: TimelineScalarFieldEnum[] | TimelineScalarFieldEnum
    having?: TimelineScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TimelineCountAggregateInputType | true
    _avg?: TimelineAvgAggregateInputType
    _sum?: TimelineSumAggregateInputType
    _min?: TimelineMinAggregateInputType
    _max?: TimelineMaxAggregateInputType
  }

  export type TimelineGroupByOutputType = {
    id: string
    controlLine: number
    stage: string
    deadline: Date
    announcementId: string
    _count: TimelineCountAggregateOutputType | null
    _avg: TimelineAvgAggregateOutputType | null
    _sum: TimelineSumAggregateOutputType | null
    _min: TimelineMinAggregateOutputType | null
    _max: TimelineMaxAggregateOutputType | null
  }

  type GetTimelineGroupByPayload<T extends TimelineGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TimelineGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TimelineGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TimelineGroupByOutputType[P]>
            : GetScalarType<T[P], TimelineGroupByOutputType[P]>
        }
      >
    >


  export type TimelineSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    controlLine?: boolean
    stage?: boolean
    deadline?: boolean
    announcementId?: boolean
    announcement?: boolean | AnnouncementDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["timeline"]>

  export type TimelineSelectScalar = {
    id?: boolean
    controlLine?: boolean
    stage?: boolean
    deadline?: boolean
    announcementId?: boolean
  }

  export type TimelineInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    announcement?: boolean | AnnouncementDefaultArgs<ExtArgs>
  }


  export type $TimelinePayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "Timeline"
    objects: {
      announcement: Prisma.$AnnouncementPayload<ExtArgs>
    }
    scalars: $Extensions.GetResult<{
      id: string
      controlLine: number
      stage: string
      deadline: Date
      announcementId: string
    }, ExtArgs["result"]["timeline"]>
    composites: {}
  }


  type TimelineGetPayload<S extends boolean | null | undefined | TimelineDefaultArgs> = $Result.GetResult<Prisma.$TimelinePayload, S>

  type TimelineCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<TimelineFindManyArgs, 'select' | 'include'> & {
      select?: TimelineCountAggregateInputType | true
    }

  export interface TimelineDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Timeline'], meta: { name: 'Timeline' } }
    /**
     * Find zero or one Timeline that matches the filter.
     * @param {TimelineFindUniqueArgs} args - Arguments to find a Timeline
     * @example
     * // Get one Timeline
     * const timeline = await prisma.timeline.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TimelineFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, TimelineFindUniqueArgs<ExtArgs>>
    ): Prisma__TimelineClient<$Result.GetResult<Prisma.$TimelinePayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Timeline that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TimelineFindUniqueOrThrowArgs} args - Arguments to find a Timeline
     * @example
     * // Get one Timeline
     * const timeline = await prisma.timeline.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TimelineFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TimelineFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__TimelineClient<$Result.GetResult<Prisma.$TimelinePayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Timeline that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TimelineFindFirstArgs} args - Arguments to find a Timeline
     * @example
     * // Get one Timeline
     * const timeline = await prisma.timeline.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TimelineFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, TimelineFindFirstArgs<ExtArgs>>
    ): Prisma__TimelineClient<$Result.GetResult<Prisma.$TimelinePayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Timeline that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TimelineFindFirstOrThrowArgs} args - Arguments to find a Timeline
     * @example
     * // Get one Timeline
     * const timeline = await prisma.timeline.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TimelineFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TimelineFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__TimelineClient<$Result.GetResult<Prisma.$TimelinePayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Timelines that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TimelineFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Timelines
     * const timelines = await prisma.timeline.findMany()
     * 
     * // Get first 10 Timelines
     * const timelines = await prisma.timeline.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const timelineWithIdOnly = await prisma.timeline.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TimelineFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TimelineFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TimelinePayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Timeline.
     * @param {TimelineCreateArgs} args - Arguments to create a Timeline.
     * @example
     * // Create one Timeline
     * const Timeline = await prisma.timeline.create({
     *   data: {
     *     // ... data to create a Timeline
     *   }
     * })
     * 
    **/
    create<T extends TimelineCreateArgs<ExtArgs>>(
      args: SelectSubset<T, TimelineCreateArgs<ExtArgs>>
    ): Prisma__TimelineClient<$Result.GetResult<Prisma.$TimelinePayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Timelines.
     *     @param {TimelineCreateManyArgs} args - Arguments to create many Timelines.
     *     @example
     *     // Create many Timelines
     *     const timeline = await prisma.timeline.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TimelineCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TimelineCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Timeline.
     * @param {TimelineDeleteArgs} args - Arguments to delete one Timeline.
     * @example
     * // Delete one Timeline
     * const Timeline = await prisma.timeline.delete({
     *   where: {
     *     // ... filter to delete one Timeline
     *   }
     * })
     * 
    **/
    delete<T extends TimelineDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, TimelineDeleteArgs<ExtArgs>>
    ): Prisma__TimelineClient<$Result.GetResult<Prisma.$TimelinePayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Timeline.
     * @param {TimelineUpdateArgs} args - Arguments to update one Timeline.
     * @example
     * // Update one Timeline
     * const timeline = await prisma.timeline.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TimelineUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, TimelineUpdateArgs<ExtArgs>>
    ): Prisma__TimelineClient<$Result.GetResult<Prisma.$TimelinePayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Timelines.
     * @param {TimelineDeleteManyArgs} args - Arguments to filter Timelines to delete.
     * @example
     * // Delete a few Timelines
     * const { count } = await prisma.timeline.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TimelineDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TimelineDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Timelines.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TimelineUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Timelines
     * const timeline = await prisma.timeline.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TimelineUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, TimelineUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Timeline.
     * @param {TimelineUpsertArgs} args - Arguments to update or create a Timeline.
     * @example
     * // Update or create a Timeline
     * const timeline = await prisma.timeline.upsert({
     *   create: {
     *     // ... data to create a Timeline
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Timeline we want to update
     *   }
     * })
    **/
    upsert<T extends TimelineUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, TimelineUpsertArgs<ExtArgs>>
    ): Prisma__TimelineClient<$Result.GetResult<Prisma.$TimelinePayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Timelines.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TimelineCountArgs} args - Arguments to filter Timelines to count.
     * @example
     * // Count the number of Timelines
     * const count = await prisma.timeline.count({
     *   where: {
     *     // ... the filter for the Timelines we want to count
     *   }
     * })
    **/
    count<T extends TimelineCountArgs>(
      args?: Subset<T, TimelineCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TimelineCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Timeline.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TimelineAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TimelineAggregateArgs>(args: Subset<T, TimelineAggregateArgs>): Prisma.PrismaPromise<GetTimelineAggregateType<T>>

    /**
     * Group by Timeline.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TimelineGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TimelineGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TimelineGroupByArgs['orderBy'] }
        : { orderBy?: TimelineGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TimelineGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTimelineGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Timeline model
   */
  readonly fields: TimelineFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Timeline.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TimelineClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    announcement<T extends AnnouncementDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AnnouncementDefaultArgs<ExtArgs>>): Prisma__AnnouncementClient<$Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Timeline model
   */ 
  interface TimelineFieldRefs {
    readonly id: FieldRef<"Timeline", 'String'>
    readonly controlLine: FieldRef<"Timeline", 'Int'>
    readonly stage: FieldRef<"Timeline", 'String'>
    readonly deadline: FieldRef<"Timeline", 'DateTime'>
    readonly announcementId: FieldRef<"Timeline", 'String'>
  }
    

  // Custom InputTypes

  /**
   * Timeline findUnique
   */
  export type TimelineFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Timeline
     */
    select?: TimelineSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TimelineInclude<ExtArgs> | null
    /**
     * Filter, which Timeline to fetch.
     */
    where: TimelineWhereUniqueInput
  }


  /**
   * Timeline findUniqueOrThrow
   */
  export type TimelineFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Timeline
     */
    select?: TimelineSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TimelineInclude<ExtArgs> | null
    /**
     * Filter, which Timeline to fetch.
     */
    where: TimelineWhereUniqueInput
  }


  /**
   * Timeline findFirst
   */
  export type TimelineFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Timeline
     */
    select?: TimelineSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TimelineInclude<ExtArgs> | null
    /**
     * Filter, which Timeline to fetch.
     */
    where?: TimelineWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Timelines to fetch.
     */
    orderBy?: TimelineOrderByWithRelationInput | TimelineOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Timelines.
     */
    cursor?: TimelineWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Timelines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Timelines.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Timelines.
     */
    distinct?: TimelineScalarFieldEnum | TimelineScalarFieldEnum[]
  }


  /**
   * Timeline findFirstOrThrow
   */
  export type TimelineFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Timeline
     */
    select?: TimelineSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TimelineInclude<ExtArgs> | null
    /**
     * Filter, which Timeline to fetch.
     */
    where?: TimelineWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Timelines to fetch.
     */
    orderBy?: TimelineOrderByWithRelationInput | TimelineOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Timelines.
     */
    cursor?: TimelineWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Timelines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Timelines.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Timelines.
     */
    distinct?: TimelineScalarFieldEnum | TimelineScalarFieldEnum[]
  }


  /**
   * Timeline findMany
   */
  export type TimelineFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Timeline
     */
    select?: TimelineSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TimelineInclude<ExtArgs> | null
    /**
     * Filter, which Timelines to fetch.
     */
    where?: TimelineWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Timelines to fetch.
     */
    orderBy?: TimelineOrderByWithRelationInput | TimelineOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Timelines.
     */
    cursor?: TimelineWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Timelines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Timelines.
     */
    skip?: number
    distinct?: TimelineScalarFieldEnum | TimelineScalarFieldEnum[]
  }


  /**
   * Timeline create
   */
  export type TimelineCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Timeline
     */
    select?: TimelineSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TimelineInclude<ExtArgs> | null
    /**
     * The data needed to create a Timeline.
     */
    data: XOR<TimelineCreateInput, TimelineUncheckedCreateInput>
  }


  /**
   * Timeline createMany
   */
  export type TimelineCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Timelines.
     */
    data: TimelineCreateManyInput | TimelineCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Timeline update
   */
  export type TimelineUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Timeline
     */
    select?: TimelineSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TimelineInclude<ExtArgs> | null
    /**
     * The data needed to update a Timeline.
     */
    data: XOR<TimelineUpdateInput, TimelineUncheckedUpdateInput>
    /**
     * Choose, which Timeline to update.
     */
    where: TimelineWhereUniqueInput
  }


  /**
   * Timeline updateMany
   */
  export type TimelineUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Timelines.
     */
    data: XOR<TimelineUpdateManyMutationInput, TimelineUncheckedUpdateManyInput>
    /**
     * Filter which Timelines to update
     */
    where?: TimelineWhereInput
  }


  /**
   * Timeline upsert
   */
  export type TimelineUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Timeline
     */
    select?: TimelineSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TimelineInclude<ExtArgs> | null
    /**
     * The filter to search for the Timeline to update in case it exists.
     */
    where: TimelineWhereUniqueInput
    /**
     * In case the Timeline found by the `where` argument doesn't exist, create a new Timeline with this data.
     */
    create: XOR<TimelineCreateInput, TimelineUncheckedCreateInput>
    /**
     * In case the Timeline was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TimelineUpdateInput, TimelineUncheckedUpdateInput>
  }


  /**
   * Timeline delete
   */
  export type TimelineDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Timeline
     */
    select?: TimelineSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TimelineInclude<ExtArgs> | null
    /**
     * Filter which Timeline to delete.
     */
    where: TimelineWhereUniqueInput
  }


  /**
   * Timeline deleteMany
   */
  export type TimelineDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which Timelines to delete
     */
    where?: TimelineWhereInput
  }


  /**
   * Timeline without action
   */
  export type TimelineDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Timeline
     */
    select?: TimelineSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TimelineInclude<ExtArgs> | null
  }



  /**
   * Model EducationLevel
   */

  export type AggregateEducationLevel = {
    _count: EducationLevelCountAggregateOutputType | null
    _avg: EducationLevelAvgAggregateOutputType | null
    _sum: EducationLevelSumAggregateOutputType | null
    _min: EducationLevelMinAggregateOutputType | null
    _max: EducationLevelMaxAggregateOutputType | null
  }

  export type EducationLevelAvgAggregateOutputType = {
    offeredVacancies: number | null
    verifiedScholarships: number | null
    semester: number | null
  }

  export type EducationLevelSumAggregateOutputType = {
    offeredVacancies: number | null
    verifiedScholarships: number | null
    semester: number | null
  }

  export type EducationLevelMinAggregateOutputType = {
    id: string | null
    level: $Enums.LevelType | null
    basicEduType: $Enums.BasicEducationType | null
    scholarshipType: $Enums.ScholarshipOfferType | null
    higherEduScholarshipType: $Enums.HigherEducationScholarshipType | null
    offeredCourseType: $Enums.OfferedCourseType | null
    availableCourses: string | null
    offeredVacancies: number | null
    verifiedScholarships: number | null
    shift: $Enums.SHIFT | null
    semester: number | null
    grade: string | null
    announcementId: string | null
    entitySubsidiaryId: string | null
  }

  export type EducationLevelMaxAggregateOutputType = {
    id: string | null
    level: $Enums.LevelType | null
    basicEduType: $Enums.BasicEducationType | null
    scholarshipType: $Enums.ScholarshipOfferType | null
    higherEduScholarshipType: $Enums.HigherEducationScholarshipType | null
    offeredCourseType: $Enums.OfferedCourseType | null
    availableCourses: string | null
    offeredVacancies: number | null
    verifiedScholarships: number | null
    shift: $Enums.SHIFT | null
    semester: number | null
    grade: string | null
    announcementId: string | null
    entitySubsidiaryId: string | null
  }

  export type EducationLevelCountAggregateOutputType = {
    id: number
    level: number
    basicEduType: number
    scholarshipType: number
    higherEduScholarshipType: number
    offeredCourseType: number
    availableCourses: number
    offeredVacancies: number
    verifiedScholarships: number
    shift: number
    semester: number
    grade: number
    announcementId: number
    entitySubsidiaryId: number
    _all: number
  }


  export type EducationLevelAvgAggregateInputType = {
    offeredVacancies?: true
    verifiedScholarships?: true
    semester?: true
  }

  export type EducationLevelSumAggregateInputType = {
    offeredVacancies?: true
    verifiedScholarships?: true
    semester?: true
  }

  export type EducationLevelMinAggregateInputType = {
    id?: true
    level?: true
    basicEduType?: true
    scholarshipType?: true
    higherEduScholarshipType?: true
    offeredCourseType?: true
    availableCourses?: true
    offeredVacancies?: true
    verifiedScholarships?: true
    shift?: true
    semester?: true
    grade?: true
    announcementId?: true
    entitySubsidiaryId?: true
  }

  export type EducationLevelMaxAggregateInputType = {
    id?: true
    level?: true
    basicEduType?: true
    scholarshipType?: true
    higherEduScholarshipType?: true
    offeredCourseType?: true
    availableCourses?: true
    offeredVacancies?: true
    verifiedScholarships?: true
    shift?: true
    semester?: true
    grade?: true
    announcementId?: true
    entitySubsidiaryId?: true
  }

  export type EducationLevelCountAggregateInputType = {
    id?: true
    level?: true
    basicEduType?: true
    scholarshipType?: true
    higherEduScholarshipType?: true
    offeredCourseType?: true
    availableCourses?: true
    offeredVacancies?: true
    verifiedScholarships?: true
    shift?: true
    semester?: true
    grade?: true
    announcementId?: true
    entitySubsidiaryId?: true
    _all?: true
  }

  export type EducationLevelAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which EducationLevel to aggregate.
     */
    where?: EducationLevelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EducationLevels to fetch.
     */
    orderBy?: EducationLevelOrderByWithRelationInput | EducationLevelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EducationLevelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EducationLevels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EducationLevels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EducationLevels
    **/
    _count?: true | EducationLevelCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EducationLevelAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EducationLevelSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EducationLevelMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EducationLevelMaxAggregateInputType
  }

  export type GetEducationLevelAggregateType<T extends EducationLevelAggregateArgs> = {
        [P in keyof T & keyof AggregateEducationLevel]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEducationLevel[P]>
      : GetScalarType<T[P], AggregateEducationLevel[P]>
  }




  export type EducationLevelGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: EducationLevelWhereInput
    orderBy?: EducationLevelOrderByWithAggregationInput | EducationLevelOrderByWithAggregationInput[]
    by: EducationLevelScalarFieldEnum[] | EducationLevelScalarFieldEnum
    having?: EducationLevelScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EducationLevelCountAggregateInputType | true
    _avg?: EducationLevelAvgAggregateInputType
    _sum?: EducationLevelSumAggregateInputType
    _min?: EducationLevelMinAggregateInputType
    _max?: EducationLevelMaxAggregateInputType
  }

  export type EducationLevelGroupByOutputType = {
    id: string
    level: $Enums.LevelType
    basicEduType: $Enums.BasicEducationType | null
    scholarshipType: $Enums.ScholarshipOfferType | null
    higherEduScholarshipType: $Enums.HigherEducationScholarshipType | null
    offeredCourseType: $Enums.OfferedCourseType | null
    availableCourses: string | null
    offeredVacancies: number | null
    verifiedScholarships: number | null
    shift: $Enums.SHIFT | null
    semester: number | null
    grade: string | null
    announcementId: string
    entitySubsidiaryId: string | null
    _count: EducationLevelCountAggregateOutputType | null
    _avg: EducationLevelAvgAggregateOutputType | null
    _sum: EducationLevelSumAggregateOutputType | null
    _min: EducationLevelMinAggregateOutputType | null
    _max: EducationLevelMaxAggregateOutputType | null
  }

  type GetEducationLevelGroupByPayload<T extends EducationLevelGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EducationLevelGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EducationLevelGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EducationLevelGroupByOutputType[P]>
            : GetScalarType<T[P], EducationLevelGroupByOutputType[P]>
        }
      >
    >


  export type EducationLevelSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    level?: boolean
    basicEduType?: boolean
    scholarshipType?: boolean
    higherEduScholarshipType?: boolean
    offeredCourseType?: boolean
    availableCourses?: boolean
    offeredVacancies?: boolean
    verifiedScholarships?: boolean
    shift?: boolean
    semester?: boolean
    grade?: boolean
    announcementId?: boolean
    entitySubsidiaryId?: boolean
    Application?: boolean | EducationLevel$ApplicationArgs<ExtArgs>
    announcement?: boolean | AnnouncementDefaultArgs<ExtArgs>
    entitySubsidiary?: boolean | EducationLevel$entitySubsidiaryArgs<ExtArgs>
    _count?: boolean | EducationLevelCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["educationLevel"]>

  export type EducationLevelSelectScalar = {
    id?: boolean
    level?: boolean
    basicEduType?: boolean
    scholarshipType?: boolean
    higherEduScholarshipType?: boolean
    offeredCourseType?: boolean
    availableCourses?: boolean
    offeredVacancies?: boolean
    verifiedScholarships?: boolean
    shift?: boolean
    semester?: boolean
    grade?: boolean
    announcementId?: boolean
    entitySubsidiaryId?: boolean
  }

  export type EducationLevelInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    Application?: boolean | EducationLevel$ApplicationArgs<ExtArgs>
    announcement?: boolean | AnnouncementDefaultArgs<ExtArgs>
    entitySubsidiary?: boolean | EducationLevel$entitySubsidiaryArgs<ExtArgs>
    _count?: boolean | EducationLevelCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $EducationLevelPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "EducationLevel"
    objects: {
      Application: Prisma.$ApplicationPayload<ExtArgs>[]
      announcement: Prisma.$AnnouncementPayload<ExtArgs>
      entitySubsidiary: Prisma.$EntitySubsidiaryPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetResult<{
      id: string
      level: $Enums.LevelType
      basicEduType: $Enums.BasicEducationType | null
      scholarshipType: $Enums.ScholarshipOfferType | null
      higherEduScholarshipType: $Enums.HigherEducationScholarshipType | null
      offeredCourseType: $Enums.OfferedCourseType | null
      availableCourses: string | null
      offeredVacancies: number | null
      verifiedScholarships: number | null
      shift: $Enums.SHIFT | null
      semester: number | null
      grade: string | null
      announcementId: string
      entitySubsidiaryId: string | null
    }, ExtArgs["result"]["educationLevel"]>
    composites: {}
  }


  type EducationLevelGetPayload<S extends boolean | null | undefined | EducationLevelDefaultArgs> = $Result.GetResult<Prisma.$EducationLevelPayload, S>

  type EducationLevelCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<EducationLevelFindManyArgs, 'select' | 'include'> & {
      select?: EducationLevelCountAggregateInputType | true
    }

  export interface EducationLevelDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EducationLevel'], meta: { name: 'EducationLevel' } }
    /**
     * Find zero or one EducationLevel that matches the filter.
     * @param {EducationLevelFindUniqueArgs} args - Arguments to find a EducationLevel
     * @example
     * // Get one EducationLevel
     * const educationLevel = await prisma.educationLevel.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends EducationLevelFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, EducationLevelFindUniqueArgs<ExtArgs>>
    ): Prisma__EducationLevelClient<$Result.GetResult<Prisma.$EducationLevelPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one EducationLevel that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {EducationLevelFindUniqueOrThrowArgs} args - Arguments to find a EducationLevel
     * @example
     * // Get one EducationLevel
     * const educationLevel = await prisma.educationLevel.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends EducationLevelFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, EducationLevelFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__EducationLevelClient<$Result.GetResult<Prisma.$EducationLevelPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first EducationLevel that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EducationLevelFindFirstArgs} args - Arguments to find a EducationLevel
     * @example
     * // Get one EducationLevel
     * const educationLevel = await prisma.educationLevel.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends EducationLevelFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, EducationLevelFindFirstArgs<ExtArgs>>
    ): Prisma__EducationLevelClient<$Result.GetResult<Prisma.$EducationLevelPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first EducationLevel that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EducationLevelFindFirstOrThrowArgs} args - Arguments to find a EducationLevel
     * @example
     * // Get one EducationLevel
     * const educationLevel = await prisma.educationLevel.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends EducationLevelFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, EducationLevelFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__EducationLevelClient<$Result.GetResult<Prisma.$EducationLevelPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more EducationLevels that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EducationLevelFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EducationLevels
     * const educationLevels = await prisma.educationLevel.findMany()
     * 
     * // Get first 10 EducationLevels
     * const educationLevels = await prisma.educationLevel.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const educationLevelWithIdOnly = await prisma.educationLevel.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends EducationLevelFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, EducationLevelFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EducationLevelPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a EducationLevel.
     * @param {EducationLevelCreateArgs} args - Arguments to create a EducationLevel.
     * @example
     * // Create one EducationLevel
     * const EducationLevel = await prisma.educationLevel.create({
     *   data: {
     *     // ... data to create a EducationLevel
     *   }
     * })
     * 
    **/
    create<T extends EducationLevelCreateArgs<ExtArgs>>(
      args: SelectSubset<T, EducationLevelCreateArgs<ExtArgs>>
    ): Prisma__EducationLevelClient<$Result.GetResult<Prisma.$EducationLevelPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many EducationLevels.
     *     @param {EducationLevelCreateManyArgs} args - Arguments to create many EducationLevels.
     *     @example
     *     // Create many EducationLevels
     *     const educationLevel = await prisma.educationLevel.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends EducationLevelCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, EducationLevelCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a EducationLevel.
     * @param {EducationLevelDeleteArgs} args - Arguments to delete one EducationLevel.
     * @example
     * // Delete one EducationLevel
     * const EducationLevel = await prisma.educationLevel.delete({
     *   where: {
     *     // ... filter to delete one EducationLevel
     *   }
     * })
     * 
    **/
    delete<T extends EducationLevelDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, EducationLevelDeleteArgs<ExtArgs>>
    ): Prisma__EducationLevelClient<$Result.GetResult<Prisma.$EducationLevelPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one EducationLevel.
     * @param {EducationLevelUpdateArgs} args - Arguments to update one EducationLevel.
     * @example
     * // Update one EducationLevel
     * const educationLevel = await prisma.educationLevel.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends EducationLevelUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, EducationLevelUpdateArgs<ExtArgs>>
    ): Prisma__EducationLevelClient<$Result.GetResult<Prisma.$EducationLevelPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more EducationLevels.
     * @param {EducationLevelDeleteManyArgs} args - Arguments to filter EducationLevels to delete.
     * @example
     * // Delete a few EducationLevels
     * const { count } = await prisma.educationLevel.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends EducationLevelDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, EducationLevelDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EducationLevels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EducationLevelUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EducationLevels
     * const educationLevel = await prisma.educationLevel.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends EducationLevelUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, EducationLevelUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one EducationLevel.
     * @param {EducationLevelUpsertArgs} args - Arguments to update or create a EducationLevel.
     * @example
     * // Update or create a EducationLevel
     * const educationLevel = await prisma.educationLevel.upsert({
     *   create: {
     *     // ... data to create a EducationLevel
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EducationLevel we want to update
     *   }
     * })
    **/
    upsert<T extends EducationLevelUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, EducationLevelUpsertArgs<ExtArgs>>
    ): Prisma__EducationLevelClient<$Result.GetResult<Prisma.$EducationLevelPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of EducationLevels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EducationLevelCountArgs} args - Arguments to filter EducationLevels to count.
     * @example
     * // Count the number of EducationLevels
     * const count = await prisma.educationLevel.count({
     *   where: {
     *     // ... the filter for the EducationLevels we want to count
     *   }
     * })
    **/
    count<T extends EducationLevelCountArgs>(
      args?: Subset<T, EducationLevelCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EducationLevelCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EducationLevel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EducationLevelAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EducationLevelAggregateArgs>(args: Subset<T, EducationLevelAggregateArgs>): Prisma.PrismaPromise<GetEducationLevelAggregateType<T>>

    /**
     * Group by EducationLevel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EducationLevelGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EducationLevelGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EducationLevelGroupByArgs['orderBy'] }
        : { orderBy?: EducationLevelGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EducationLevelGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEducationLevelGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EducationLevel model
   */
  readonly fields: EducationLevelFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EducationLevel.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EducationLevelClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    Application<T extends EducationLevel$ApplicationArgs<ExtArgs> = {}>(args?: Subset<T, EducationLevel$ApplicationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, 'findMany'> | Null>;

    announcement<T extends AnnouncementDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AnnouncementDefaultArgs<ExtArgs>>): Prisma__AnnouncementClient<$Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    entitySubsidiary<T extends EducationLevel$entitySubsidiaryArgs<ExtArgs> = {}>(args?: Subset<T, EducationLevel$entitySubsidiaryArgs<ExtArgs>>): Prisma__EntitySubsidiaryClient<$Result.GetResult<Prisma.$EntitySubsidiaryPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the EducationLevel model
   */ 
  interface EducationLevelFieldRefs {
    readonly id: FieldRef<"EducationLevel", 'String'>
    readonly level: FieldRef<"EducationLevel", 'LevelType'>
    readonly basicEduType: FieldRef<"EducationLevel", 'BasicEducationType'>
    readonly scholarshipType: FieldRef<"EducationLevel", 'ScholarshipOfferType'>
    readonly higherEduScholarshipType: FieldRef<"EducationLevel", 'HigherEducationScholarshipType'>
    readonly offeredCourseType: FieldRef<"EducationLevel", 'OfferedCourseType'>
    readonly availableCourses: FieldRef<"EducationLevel", 'String'>
    readonly offeredVacancies: FieldRef<"EducationLevel", 'Int'>
    readonly verifiedScholarships: FieldRef<"EducationLevel", 'Int'>
    readonly shift: FieldRef<"EducationLevel", 'SHIFT'>
    readonly semester: FieldRef<"EducationLevel", 'Int'>
    readonly grade: FieldRef<"EducationLevel", 'String'>
    readonly announcementId: FieldRef<"EducationLevel", 'String'>
    readonly entitySubsidiaryId: FieldRef<"EducationLevel", 'String'>
  }
    

  // Custom InputTypes

  /**
   * EducationLevel findUnique
   */
  export type EducationLevelFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EducationLevel
     */
    select?: EducationLevelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EducationLevelInclude<ExtArgs> | null
    /**
     * Filter, which EducationLevel to fetch.
     */
    where: EducationLevelWhereUniqueInput
  }


  /**
   * EducationLevel findUniqueOrThrow
   */
  export type EducationLevelFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EducationLevel
     */
    select?: EducationLevelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EducationLevelInclude<ExtArgs> | null
    /**
     * Filter, which EducationLevel to fetch.
     */
    where: EducationLevelWhereUniqueInput
  }


  /**
   * EducationLevel findFirst
   */
  export type EducationLevelFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EducationLevel
     */
    select?: EducationLevelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EducationLevelInclude<ExtArgs> | null
    /**
     * Filter, which EducationLevel to fetch.
     */
    where?: EducationLevelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EducationLevels to fetch.
     */
    orderBy?: EducationLevelOrderByWithRelationInput | EducationLevelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EducationLevels.
     */
    cursor?: EducationLevelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EducationLevels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EducationLevels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EducationLevels.
     */
    distinct?: EducationLevelScalarFieldEnum | EducationLevelScalarFieldEnum[]
  }


  /**
   * EducationLevel findFirstOrThrow
   */
  export type EducationLevelFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EducationLevel
     */
    select?: EducationLevelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EducationLevelInclude<ExtArgs> | null
    /**
     * Filter, which EducationLevel to fetch.
     */
    where?: EducationLevelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EducationLevels to fetch.
     */
    orderBy?: EducationLevelOrderByWithRelationInput | EducationLevelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EducationLevels.
     */
    cursor?: EducationLevelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EducationLevels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EducationLevels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EducationLevels.
     */
    distinct?: EducationLevelScalarFieldEnum | EducationLevelScalarFieldEnum[]
  }


  /**
   * EducationLevel findMany
   */
  export type EducationLevelFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EducationLevel
     */
    select?: EducationLevelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EducationLevelInclude<ExtArgs> | null
    /**
     * Filter, which EducationLevels to fetch.
     */
    where?: EducationLevelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EducationLevels to fetch.
     */
    orderBy?: EducationLevelOrderByWithRelationInput | EducationLevelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EducationLevels.
     */
    cursor?: EducationLevelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EducationLevels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EducationLevels.
     */
    skip?: number
    distinct?: EducationLevelScalarFieldEnum | EducationLevelScalarFieldEnum[]
  }


  /**
   * EducationLevel create
   */
  export type EducationLevelCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EducationLevel
     */
    select?: EducationLevelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EducationLevelInclude<ExtArgs> | null
    /**
     * The data needed to create a EducationLevel.
     */
    data: XOR<EducationLevelCreateInput, EducationLevelUncheckedCreateInput>
  }


  /**
   * EducationLevel createMany
   */
  export type EducationLevelCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EducationLevels.
     */
    data: EducationLevelCreateManyInput | EducationLevelCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * EducationLevel update
   */
  export type EducationLevelUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EducationLevel
     */
    select?: EducationLevelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EducationLevelInclude<ExtArgs> | null
    /**
     * The data needed to update a EducationLevel.
     */
    data: XOR<EducationLevelUpdateInput, EducationLevelUncheckedUpdateInput>
    /**
     * Choose, which EducationLevel to update.
     */
    where: EducationLevelWhereUniqueInput
  }


  /**
   * EducationLevel updateMany
   */
  export type EducationLevelUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EducationLevels.
     */
    data: XOR<EducationLevelUpdateManyMutationInput, EducationLevelUncheckedUpdateManyInput>
    /**
     * Filter which EducationLevels to update
     */
    where?: EducationLevelWhereInput
  }


  /**
   * EducationLevel upsert
   */
  export type EducationLevelUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EducationLevel
     */
    select?: EducationLevelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EducationLevelInclude<ExtArgs> | null
    /**
     * The filter to search for the EducationLevel to update in case it exists.
     */
    where: EducationLevelWhereUniqueInput
    /**
     * In case the EducationLevel found by the `where` argument doesn't exist, create a new EducationLevel with this data.
     */
    create: XOR<EducationLevelCreateInput, EducationLevelUncheckedCreateInput>
    /**
     * In case the EducationLevel was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EducationLevelUpdateInput, EducationLevelUncheckedUpdateInput>
  }


  /**
   * EducationLevel delete
   */
  export type EducationLevelDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EducationLevel
     */
    select?: EducationLevelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EducationLevelInclude<ExtArgs> | null
    /**
     * Filter which EducationLevel to delete.
     */
    where: EducationLevelWhereUniqueInput
  }


  /**
   * EducationLevel deleteMany
   */
  export type EducationLevelDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which EducationLevels to delete
     */
    where?: EducationLevelWhereInput
  }


  /**
   * EducationLevel.Application
   */
  export type EducationLevel$ApplicationArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ApplicationInclude<ExtArgs> | null
    where?: ApplicationWhereInput
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    cursor?: ApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ApplicationScalarFieldEnum | ApplicationScalarFieldEnum[]
  }


  /**
   * EducationLevel.entitySubsidiary
   */
  export type EducationLevel$entitySubsidiaryArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntitySubsidiary
     */
    select?: EntitySubsidiarySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EntitySubsidiaryInclude<ExtArgs> | null
    where?: EntitySubsidiaryWhereInput
  }


  /**
   * EducationLevel without action
   */
  export type EducationLevelDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EducationLevel
     */
    select?: EducationLevelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: EducationLevelInclude<ExtArgs> | null
  }



  /**
   * Model Application
   */

  export type AggregateApplication = {
    _count: ApplicationCountAggregateOutputType | null
    _avg: ApplicationAvgAggregateOutputType | null
    _sum: ApplicationSumAggregateOutputType | null
    _min: ApplicationMinAggregateOutputType | null
    _max: ApplicationMaxAggregateOutputType | null
  }

  export type ApplicationAvgAggregateOutputType = {
    averageIncome: number | null
    perCapita: number | null
    position: number | null
    number: number | null
  }

  export type ApplicationSumAggregateOutputType = {
    averageIncome: number | null
    perCapita: number | null
    position: number | null
    number: number | null
  }

  export type ApplicationMinAggregateOutputType = {
    id: string | null
    candidate_id: string | null
    announcement_id: string | null
    status: $Enums.ApplicationStatus | null
    socialAssistant_id: string | null
    educationLevel_id: string | null
    candidateName: string | null
    SocialAssistantName: string | null
    CadUnico: boolean | null
    hasSevereDesease: boolean | null
    averageIncome: number | null
    perCapita: number | null
    position: number | null
    number: number | null
    reponsible_id: string | null
  }

  export type ApplicationMaxAggregateOutputType = {
    id: string | null
    candidate_id: string | null
    announcement_id: string | null
    status: $Enums.ApplicationStatus | null
    socialAssistant_id: string | null
    educationLevel_id: string | null
    candidateName: string | null
    SocialAssistantName: string | null
    CadUnico: boolean | null
    hasSevereDesease: boolean | null
    averageIncome: number | null
    perCapita: number | null
    position: number | null
    number: number | null
    reponsible_id: string | null
  }

  export type ApplicationCountAggregateOutputType = {
    id: number
    candidate_id: number
    announcement_id: number
    status: number
    socialAssistant_id: number
    educationLevel_id: number
    candidateName: number
    SocialAssistantName: number
    CadUnico: number
    hasSevereDesease: number
    averageIncome: number
    perCapita: number
    position: number
    number: number
    reponsible_id: number
    _all: number
  }


  export type ApplicationAvgAggregateInputType = {
    averageIncome?: true
    perCapita?: true
    position?: true
    number?: true
  }

  export type ApplicationSumAggregateInputType = {
    averageIncome?: true
    perCapita?: true
    position?: true
    number?: true
  }

  export type ApplicationMinAggregateInputType = {
    id?: true
    candidate_id?: true
    announcement_id?: true
    status?: true
    socialAssistant_id?: true
    educationLevel_id?: true
    candidateName?: true
    SocialAssistantName?: true
    CadUnico?: true
    hasSevereDesease?: true
    averageIncome?: true
    perCapita?: true
    position?: true
    number?: true
    reponsible_id?: true
  }

  export type ApplicationMaxAggregateInputType = {
    id?: true
    candidate_id?: true
    announcement_id?: true
    status?: true
    socialAssistant_id?: true
    educationLevel_id?: true
    candidateName?: true
    SocialAssistantName?: true
    CadUnico?: true
    hasSevereDesease?: true
    averageIncome?: true
    perCapita?: true
    position?: true
    number?: true
    reponsible_id?: true
  }

  export type ApplicationCountAggregateInputType = {
    id?: true
    candidate_id?: true
    announcement_id?: true
    status?: true
    socialAssistant_id?: true
    educationLevel_id?: true
    candidateName?: true
    SocialAssistantName?: true
    CadUnico?: true
    hasSevereDesease?: true
    averageIncome?: true
    perCapita?: true
    position?: true
    number?: true
    reponsible_id?: true
    _all?: true
  }

  export type ApplicationAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which Application to aggregate.
     */
    where?: ApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Applications to fetch.
     */
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Applications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Applications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Applications
    **/
    _count?: true | ApplicationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ApplicationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ApplicationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ApplicationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ApplicationMaxAggregateInputType
  }

  export type GetApplicationAggregateType<T extends ApplicationAggregateArgs> = {
        [P in keyof T & keyof AggregateApplication]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateApplication[P]>
      : GetScalarType<T[P], AggregateApplication[P]>
  }




  export type ApplicationGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: ApplicationWhereInput
    orderBy?: ApplicationOrderByWithAggregationInput | ApplicationOrderByWithAggregationInput[]
    by: ApplicationScalarFieldEnum[] | ApplicationScalarFieldEnum
    having?: ApplicationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ApplicationCountAggregateInputType | true
    _avg?: ApplicationAvgAggregateInputType
    _sum?: ApplicationSumAggregateInputType
    _min?: ApplicationMinAggregateInputType
    _max?: ApplicationMaxAggregateInputType
  }

  export type ApplicationGroupByOutputType = {
    id: string
    candidate_id: string
    announcement_id: string
    status: $Enums.ApplicationStatus
    socialAssistant_id: string | null
    educationLevel_id: string
    candidateName: string | null
    SocialAssistantName: string | null
    CadUnico: boolean | null
    hasSevereDesease: boolean | null
    averageIncome: number | null
    perCapita: number | null
    position: number | null
    number: number
    reponsible_id: string | null
    _count: ApplicationCountAggregateOutputType | null
    _avg: ApplicationAvgAggregateOutputType | null
    _sum: ApplicationSumAggregateOutputType | null
    _min: ApplicationMinAggregateOutputType | null
    _max: ApplicationMaxAggregateOutputType | null
  }

  type GetApplicationGroupByPayload<T extends ApplicationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ApplicationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ApplicationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ApplicationGroupByOutputType[P]>
            : GetScalarType<T[P], ApplicationGroupByOutputType[P]>
        }
      >
    >


  export type ApplicationSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    candidate_id?: boolean
    announcement_id?: boolean
    status?: boolean
    socialAssistant_id?: boolean
    educationLevel_id?: boolean
    candidateName?: boolean
    SocialAssistantName?: boolean
    CadUnico?: boolean
    hasSevereDesease?: boolean
    averageIncome?: boolean
    perCapita?: boolean
    position?: boolean
    number?: boolean
    reponsible_id?: boolean
    announcement?: boolean | AnnouncementDefaultArgs<ExtArgs>
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
    EducationLevel?: boolean | EducationLevelDefaultArgs<ExtArgs>
    SocialAssistant?: boolean | Application$SocialAssistantArgs<ExtArgs>
    applicationHistories?: boolean | Application$applicationHistoriesArgs<ExtArgs>
    ScholarshipGranted?: boolean | Application$ScholarshipGrantedArgs<ExtArgs>
    responsible?: boolean | Application$responsibleArgs<ExtArgs>
    _count?: boolean | ApplicationCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["application"]>

  export type ApplicationSelectScalar = {
    id?: boolean
    candidate_id?: boolean
    announcement_id?: boolean
    status?: boolean
    socialAssistant_id?: boolean
    educationLevel_id?: boolean
    candidateName?: boolean
    SocialAssistantName?: boolean
    CadUnico?: boolean
    hasSevereDesease?: boolean
    averageIncome?: boolean
    perCapita?: boolean
    position?: boolean
    number?: boolean
    reponsible_id?: boolean
  }

  export type ApplicationInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    announcement?: boolean | AnnouncementDefaultArgs<ExtArgs>
    candidate?: boolean | CandidateDefaultArgs<ExtArgs>
    EducationLevel?: boolean | EducationLevelDefaultArgs<ExtArgs>
    SocialAssistant?: boolean | Application$SocialAssistantArgs<ExtArgs>
    applicationHistories?: boolean | Application$applicationHistoriesArgs<ExtArgs>
    ScholarshipGranted?: boolean | Application$ScholarshipGrantedArgs<ExtArgs>
    responsible?: boolean | Application$responsibleArgs<ExtArgs>
    _count?: boolean | ApplicationCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $ApplicationPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "Application"
    objects: {
      announcement: Prisma.$AnnouncementPayload<ExtArgs>
      candidate: Prisma.$CandidatePayload<ExtArgs>
      EducationLevel: Prisma.$EducationLevelPayload<ExtArgs>
      SocialAssistant: Prisma.$SocialAssistantPayload<ExtArgs> | null
      applicationHistories: Prisma.$ApplicationHistoryPayload<ExtArgs>[]
      ScholarshipGranted: Prisma.$ScholarshipGrantedPayload<ExtArgs> | null
      responsible: Prisma.$LegalResponsiblePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetResult<{
      id: string
      candidate_id: string
      announcement_id: string
      status: $Enums.ApplicationStatus
      socialAssistant_id: string | null
      educationLevel_id: string
      candidateName: string | null
      SocialAssistantName: string | null
      CadUnico: boolean | null
      hasSevereDesease: boolean | null
      averageIncome: number | null
      perCapita: number | null
      position: number | null
      number: number
      reponsible_id: string | null
    }, ExtArgs["result"]["application"]>
    composites: {}
  }


  type ApplicationGetPayload<S extends boolean | null | undefined | ApplicationDefaultArgs> = $Result.GetResult<Prisma.$ApplicationPayload, S>

  type ApplicationCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<ApplicationFindManyArgs, 'select' | 'include'> & {
      select?: ApplicationCountAggregateInputType | true
    }

  export interface ApplicationDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Application'], meta: { name: 'Application' } }
    /**
     * Find zero or one Application that matches the filter.
     * @param {ApplicationFindUniqueArgs} args - Arguments to find a Application
     * @example
     * // Get one Application
     * const application = await prisma.application.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ApplicationFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, ApplicationFindUniqueArgs<ExtArgs>>
    ): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Application that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {ApplicationFindUniqueOrThrowArgs} args - Arguments to find a Application
     * @example
     * // Get one Application
     * const application = await prisma.application.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ApplicationFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ApplicationFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Application that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationFindFirstArgs} args - Arguments to find a Application
     * @example
     * // Get one Application
     * const application = await prisma.application.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ApplicationFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, ApplicationFindFirstArgs<ExtArgs>>
    ): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Application that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationFindFirstOrThrowArgs} args - Arguments to find a Application
     * @example
     * // Get one Application
     * const application = await prisma.application.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ApplicationFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ApplicationFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Applications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Applications
     * const applications = await prisma.application.findMany()
     * 
     * // Get first 10 Applications
     * const applications = await prisma.application.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const applicationWithIdOnly = await prisma.application.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ApplicationFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ApplicationFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Application.
     * @param {ApplicationCreateArgs} args - Arguments to create a Application.
     * @example
     * // Create one Application
     * const Application = await prisma.application.create({
     *   data: {
     *     // ... data to create a Application
     *   }
     * })
     * 
    **/
    create<T extends ApplicationCreateArgs<ExtArgs>>(
      args: SelectSubset<T, ApplicationCreateArgs<ExtArgs>>
    ): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Applications.
     *     @param {ApplicationCreateManyArgs} args - Arguments to create many Applications.
     *     @example
     *     // Create many Applications
     *     const application = await prisma.application.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ApplicationCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ApplicationCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Application.
     * @param {ApplicationDeleteArgs} args - Arguments to delete one Application.
     * @example
     * // Delete one Application
     * const Application = await prisma.application.delete({
     *   where: {
     *     // ... filter to delete one Application
     *   }
     * })
     * 
    **/
    delete<T extends ApplicationDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, ApplicationDeleteArgs<ExtArgs>>
    ): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Application.
     * @param {ApplicationUpdateArgs} args - Arguments to update one Application.
     * @example
     * // Update one Application
     * const application = await prisma.application.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ApplicationUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, ApplicationUpdateArgs<ExtArgs>>
    ): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Applications.
     * @param {ApplicationDeleteManyArgs} args - Arguments to filter Applications to delete.
     * @example
     * // Delete a few Applications
     * const { count } = await prisma.application.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ApplicationDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ApplicationDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Applications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Applications
     * const application = await prisma.application.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ApplicationUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, ApplicationUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Application.
     * @param {ApplicationUpsertArgs} args - Arguments to update or create a Application.
     * @example
     * // Update or create a Application
     * const application = await prisma.application.upsert({
     *   create: {
     *     // ... data to create a Application
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Application we want to update
     *   }
     * })
    **/
    upsert<T extends ApplicationUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, ApplicationUpsertArgs<ExtArgs>>
    ): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Applications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationCountArgs} args - Arguments to filter Applications to count.
     * @example
     * // Count the number of Applications
     * const count = await prisma.application.count({
     *   where: {
     *     // ... the filter for the Applications we want to count
     *   }
     * })
    **/
    count<T extends ApplicationCountArgs>(
      args?: Subset<T, ApplicationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ApplicationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Application.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ApplicationAggregateArgs>(args: Subset<T, ApplicationAggregateArgs>): Prisma.PrismaPromise<GetApplicationAggregateType<T>>

    /**
     * Group by Application.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ApplicationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ApplicationGroupByArgs['orderBy'] }
        : { orderBy?: ApplicationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ApplicationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetApplicationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Application model
   */
  readonly fields: ApplicationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Application.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ApplicationClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    announcement<T extends AnnouncementDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AnnouncementDefaultArgs<ExtArgs>>): Prisma__AnnouncementClient<$Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    candidate<T extends CandidateDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CandidateDefaultArgs<ExtArgs>>): Prisma__CandidateClient<$Result.GetResult<Prisma.$CandidatePayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    EducationLevel<T extends EducationLevelDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EducationLevelDefaultArgs<ExtArgs>>): Prisma__EducationLevelClient<$Result.GetResult<Prisma.$EducationLevelPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    SocialAssistant<T extends Application$SocialAssistantArgs<ExtArgs> = {}>(args?: Subset<T, Application$SocialAssistantArgs<ExtArgs>>): Prisma__SocialAssistantClient<$Result.GetResult<Prisma.$SocialAssistantPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    applicationHistories<T extends Application$applicationHistoriesArgs<ExtArgs> = {}>(args?: Subset<T, Application$applicationHistoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationHistoryPayload<ExtArgs>, T, 'findMany'> | Null>;

    ScholarshipGranted<T extends Application$ScholarshipGrantedArgs<ExtArgs> = {}>(args?: Subset<T, Application$ScholarshipGrantedArgs<ExtArgs>>): Prisma__ScholarshipGrantedClient<$Result.GetResult<Prisma.$ScholarshipGrantedPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    responsible<T extends Application$responsibleArgs<ExtArgs> = {}>(args?: Subset<T, Application$responsibleArgs<ExtArgs>>): Prisma__LegalResponsibleClient<$Result.GetResult<Prisma.$LegalResponsiblePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Application model
   */ 
  interface ApplicationFieldRefs {
    readonly id: FieldRef<"Application", 'String'>
    readonly candidate_id: FieldRef<"Application", 'String'>
    readonly announcement_id: FieldRef<"Application", 'String'>
    readonly status: FieldRef<"Application", 'ApplicationStatus'>
    readonly socialAssistant_id: FieldRef<"Application", 'String'>
    readonly educationLevel_id: FieldRef<"Application", 'String'>
    readonly candidateName: FieldRef<"Application", 'String'>
    readonly SocialAssistantName: FieldRef<"Application", 'String'>
    readonly CadUnico: FieldRef<"Application", 'Boolean'>
    readonly hasSevereDesease: FieldRef<"Application", 'Boolean'>
    readonly averageIncome: FieldRef<"Application", 'Float'>
    readonly perCapita: FieldRef<"Application", 'Float'>
    readonly position: FieldRef<"Application", 'Int'>
    readonly number: FieldRef<"Application", 'Int'>
    readonly reponsible_id: FieldRef<"Application", 'String'>
  }
    

  // Custom InputTypes

  /**
   * Application findUnique
   */
  export type ApplicationFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * Filter, which Application to fetch.
     */
    where: ApplicationWhereUniqueInput
  }


  /**
   * Application findUniqueOrThrow
   */
  export type ApplicationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * Filter, which Application to fetch.
     */
    where: ApplicationWhereUniqueInput
  }


  /**
   * Application findFirst
   */
  export type ApplicationFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * Filter, which Application to fetch.
     */
    where?: ApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Applications to fetch.
     */
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Applications.
     */
    cursor?: ApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Applications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Applications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Applications.
     */
    distinct?: ApplicationScalarFieldEnum | ApplicationScalarFieldEnum[]
  }


  /**
   * Application findFirstOrThrow
   */
  export type ApplicationFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * Filter, which Application to fetch.
     */
    where?: ApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Applications to fetch.
     */
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Applications.
     */
    cursor?: ApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Applications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Applications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Applications.
     */
    distinct?: ApplicationScalarFieldEnum | ApplicationScalarFieldEnum[]
  }


  /**
   * Application findMany
   */
  export type ApplicationFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * Filter, which Applications to fetch.
     */
    where?: ApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Applications to fetch.
     */
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Applications.
     */
    cursor?: ApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Applications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Applications.
     */
    skip?: number
    distinct?: ApplicationScalarFieldEnum | ApplicationScalarFieldEnum[]
  }


  /**
   * Application create
   */
  export type ApplicationCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * The data needed to create a Application.
     */
    data: XOR<ApplicationCreateInput, ApplicationUncheckedCreateInput>
  }


  /**
   * Application createMany
   */
  export type ApplicationCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Applications.
     */
    data: ApplicationCreateManyInput | ApplicationCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Application update
   */
  export type ApplicationUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * The data needed to update a Application.
     */
    data: XOR<ApplicationUpdateInput, ApplicationUncheckedUpdateInput>
    /**
     * Choose, which Application to update.
     */
    where: ApplicationWhereUniqueInput
  }


  /**
   * Application updateMany
   */
  export type ApplicationUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Applications.
     */
    data: XOR<ApplicationUpdateManyMutationInput, ApplicationUncheckedUpdateManyInput>
    /**
     * Filter which Applications to update
     */
    where?: ApplicationWhereInput
  }


  /**
   * Application upsert
   */
  export type ApplicationUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * The filter to search for the Application to update in case it exists.
     */
    where: ApplicationWhereUniqueInput
    /**
     * In case the Application found by the `where` argument doesn't exist, create a new Application with this data.
     */
    create: XOR<ApplicationCreateInput, ApplicationUncheckedCreateInput>
    /**
     * In case the Application was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ApplicationUpdateInput, ApplicationUncheckedUpdateInput>
  }


  /**
   * Application delete
   */
  export type ApplicationDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * Filter which Application to delete.
     */
    where: ApplicationWhereUniqueInput
  }


  /**
   * Application deleteMany
   */
  export type ApplicationDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which Applications to delete
     */
    where?: ApplicationWhereInput
  }


  /**
   * Application.SocialAssistant
   */
  export type Application$SocialAssistantArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocialAssistant
     */
    select?: SocialAssistantSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SocialAssistantInclude<ExtArgs> | null
    where?: SocialAssistantWhereInput
  }


  /**
   * Application.applicationHistories
   */
  export type Application$applicationHistoriesArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationHistory
     */
    select?: ApplicationHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ApplicationHistoryInclude<ExtArgs> | null
    where?: ApplicationHistoryWhereInput
    orderBy?: ApplicationHistoryOrderByWithRelationInput | ApplicationHistoryOrderByWithRelationInput[]
    cursor?: ApplicationHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ApplicationHistoryScalarFieldEnum | ApplicationHistoryScalarFieldEnum[]
  }


  /**
   * Application.ScholarshipGranted
   */
  export type Application$ScholarshipGrantedArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipGranted
     */
    select?: ScholarshipGrantedSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ScholarshipGrantedInclude<ExtArgs> | null
    where?: ScholarshipGrantedWhereInput
  }


  /**
   * Application.responsible
   */
  export type Application$responsibleArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalResponsible
     */
    select?: LegalResponsibleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LegalResponsibleInclude<ExtArgs> | null
    where?: LegalResponsibleWhereInput
  }


  /**
   * Application without action
   */
  export type ApplicationDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ApplicationInclude<ExtArgs> | null
  }



  /**
   * Model ApplicationHistory
   */

  export type AggregateApplicationHistory = {
    _count: ApplicationHistoryCountAggregateOutputType | null
    _min: ApplicationHistoryMinAggregateOutputType | null
    _max: ApplicationHistoryMaxAggregateOutputType | null
  }

  export type ApplicationHistoryMinAggregateOutputType = {
    id: string | null
    application_id: string | null
    description: string | null
    solicitation: $Enums.SolicitationType | null
    report: string | null
    answered: boolean | null
    deadLine: Date | null
    date: Date | null
  }

  export type ApplicationHistoryMaxAggregateOutputType = {
    id: string | null
    application_id: string | null
    description: string | null
    solicitation: $Enums.SolicitationType | null
    report: string | null
    answered: boolean | null
    deadLine: Date | null
    date: Date | null
  }

  export type ApplicationHistoryCountAggregateOutputType = {
    id: number
    application_id: number
    description: number
    solicitation: number
    report: number
    answered: number
    deadLine: number
    date: number
    _all: number
  }


  export type ApplicationHistoryMinAggregateInputType = {
    id?: true
    application_id?: true
    description?: true
    solicitation?: true
    report?: true
    answered?: true
    deadLine?: true
    date?: true
  }

  export type ApplicationHistoryMaxAggregateInputType = {
    id?: true
    application_id?: true
    description?: true
    solicitation?: true
    report?: true
    answered?: true
    deadLine?: true
    date?: true
  }

  export type ApplicationHistoryCountAggregateInputType = {
    id?: true
    application_id?: true
    description?: true
    solicitation?: true
    report?: true
    answered?: true
    deadLine?: true
    date?: true
    _all?: true
  }

  export type ApplicationHistoryAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which ApplicationHistory to aggregate.
     */
    where?: ApplicationHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApplicationHistories to fetch.
     */
    orderBy?: ApplicationHistoryOrderByWithRelationInput | ApplicationHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ApplicationHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApplicationHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApplicationHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ApplicationHistories
    **/
    _count?: true | ApplicationHistoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ApplicationHistoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ApplicationHistoryMaxAggregateInputType
  }

  export type GetApplicationHistoryAggregateType<T extends ApplicationHistoryAggregateArgs> = {
        [P in keyof T & keyof AggregateApplicationHistory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateApplicationHistory[P]>
      : GetScalarType<T[P], AggregateApplicationHistory[P]>
  }




  export type ApplicationHistoryGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: ApplicationHistoryWhereInput
    orderBy?: ApplicationHistoryOrderByWithAggregationInput | ApplicationHistoryOrderByWithAggregationInput[]
    by: ApplicationHistoryScalarFieldEnum[] | ApplicationHistoryScalarFieldEnum
    having?: ApplicationHistoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ApplicationHistoryCountAggregateInputType | true
    _min?: ApplicationHistoryMinAggregateInputType
    _max?: ApplicationHistoryMaxAggregateInputType
  }

  export type ApplicationHistoryGroupByOutputType = {
    id: string
    application_id: string
    description: string
    solicitation: $Enums.SolicitationType | null
    report: string | null
    answered: boolean | null
    deadLine: Date | null
    date: Date
    _count: ApplicationHistoryCountAggregateOutputType | null
    _min: ApplicationHistoryMinAggregateOutputType | null
    _max: ApplicationHistoryMaxAggregateOutputType | null
  }

  type GetApplicationHistoryGroupByPayload<T extends ApplicationHistoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ApplicationHistoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ApplicationHistoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ApplicationHistoryGroupByOutputType[P]>
            : GetScalarType<T[P], ApplicationHistoryGroupByOutputType[P]>
        }
      >
    >


  export type ApplicationHistorySelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    application_id?: boolean
    description?: boolean
    solicitation?: boolean
    report?: boolean
    answered?: boolean
    deadLine?: boolean
    date?: boolean
    application?: boolean | ApplicationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["applicationHistory"]>

  export type ApplicationHistorySelectScalar = {
    id?: boolean
    application_id?: boolean
    description?: boolean
    solicitation?: boolean
    report?: boolean
    answered?: boolean
    deadLine?: boolean
    date?: boolean
  }

  export type ApplicationHistoryInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    application?: boolean | ApplicationDefaultArgs<ExtArgs>
  }


  export type $ApplicationHistoryPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "ApplicationHistory"
    objects: {
      application: Prisma.$ApplicationPayload<ExtArgs>
    }
    scalars: $Extensions.GetResult<{
      id: string
      application_id: string
      description: string
      solicitation: $Enums.SolicitationType | null
      report: string | null
      answered: boolean | null
      deadLine: Date | null
      date: Date
    }, ExtArgs["result"]["applicationHistory"]>
    composites: {}
  }


  type ApplicationHistoryGetPayload<S extends boolean | null | undefined | ApplicationHistoryDefaultArgs> = $Result.GetResult<Prisma.$ApplicationHistoryPayload, S>

  type ApplicationHistoryCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<ApplicationHistoryFindManyArgs, 'select' | 'include'> & {
      select?: ApplicationHistoryCountAggregateInputType | true
    }

  export interface ApplicationHistoryDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ApplicationHistory'], meta: { name: 'ApplicationHistory' } }
    /**
     * Find zero or one ApplicationHistory that matches the filter.
     * @param {ApplicationHistoryFindUniqueArgs} args - Arguments to find a ApplicationHistory
     * @example
     * // Get one ApplicationHistory
     * const applicationHistory = await prisma.applicationHistory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ApplicationHistoryFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, ApplicationHistoryFindUniqueArgs<ExtArgs>>
    ): Prisma__ApplicationHistoryClient<$Result.GetResult<Prisma.$ApplicationHistoryPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one ApplicationHistory that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {ApplicationHistoryFindUniqueOrThrowArgs} args - Arguments to find a ApplicationHistory
     * @example
     * // Get one ApplicationHistory
     * const applicationHistory = await prisma.applicationHistory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ApplicationHistoryFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ApplicationHistoryFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__ApplicationHistoryClient<$Result.GetResult<Prisma.$ApplicationHistoryPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first ApplicationHistory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationHistoryFindFirstArgs} args - Arguments to find a ApplicationHistory
     * @example
     * // Get one ApplicationHistory
     * const applicationHistory = await prisma.applicationHistory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ApplicationHistoryFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, ApplicationHistoryFindFirstArgs<ExtArgs>>
    ): Prisma__ApplicationHistoryClient<$Result.GetResult<Prisma.$ApplicationHistoryPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first ApplicationHistory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationHistoryFindFirstOrThrowArgs} args - Arguments to find a ApplicationHistory
     * @example
     * // Get one ApplicationHistory
     * const applicationHistory = await prisma.applicationHistory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ApplicationHistoryFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ApplicationHistoryFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__ApplicationHistoryClient<$Result.GetResult<Prisma.$ApplicationHistoryPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more ApplicationHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationHistoryFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ApplicationHistories
     * const applicationHistories = await prisma.applicationHistory.findMany()
     * 
     * // Get first 10 ApplicationHistories
     * const applicationHistories = await prisma.applicationHistory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const applicationHistoryWithIdOnly = await prisma.applicationHistory.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ApplicationHistoryFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ApplicationHistoryFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationHistoryPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a ApplicationHistory.
     * @param {ApplicationHistoryCreateArgs} args - Arguments to create a ApplicationHistory.
     * @example
     * // Create one ApplicationHistory
     * const ApplicationHistory = await prisma.applicationHistory.create({
     *   data: {
     *     // ... data to create a ApplicationHistory
     *   }
     * })
     * 
    **/
    create<T extends ApplicationHistoryCreateArgs<ExtArgs>>(
      args: SelectSubset<T, ApplicationHistoryCreateArgs<ExtArgs>>
    ): Prisma__ApplicationHistoryClient<$Result.GetResult<Prisma.$ApplicationHistoryPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many ApplicationHistories.
     *     @param {ApplicationHistoryCreateManyArgs} args - Arguments to create many ApplicationHistories.
     *     @example
     *     // Create many ApplicationHistories
     *     const applicationHistory = await prisma.applicationHistory.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ApplicationHistoryCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ApplicationHistoryCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ApplicationHistory.
     * @param {ApplicationHistoryDeleteArgs} args - Arguments to delete one ApplicationHistory.
     * @example
     * // Delete one ApplicationHistory
     * const ApplicationHistory = await prisma.applicationHistory.delete({
     *   where: {
     *     // ... filter to delete one ApplicationHistory
     *   }
     * })
     * 
    **/
    delete<T extends ApplicationHistoryDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, ApplicationHistoryDeleteArgs<ExtArgs>>
    ): Prisma__ApplicationHistoryClient<$Result.GetResult<Prisma.$ApplicationHistoryPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one ApplicationHistory.
     * @param {ApplicationHistoryUpdateArgs} args - Arguments to update one ApplicationHistory.
     * @example
     * // Update one ApplicationHistory
     * const applicationHistory = await prisma.applicationHistory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ApplicationHistoryUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, ApplicationHistoryUpdateArgs<ExtArgs>>
    ): Prisma__ApplicationHistoryClient<$Result.GetResult<Prisma.$ApplicationHistoryPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more ApplicationHistories.
     * @param {ApplicationHistoryDeleteManyArgs} args - Arguments to filter ApplicationHistories to delete.
     * @example
     * // Delete a few ApplicationHistories
     * const { count } = await prisma.applicationHistory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ApplicationHistoryDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ApplicationHistoryDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ApplicationHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationHistoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ApplicationHistories
     * const applicationHistory = await prisma.applicationHistory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ApplicationHistoryUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, ApplicationHistoryUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ApplicationHistory.
     * @param {ApplicationHistoryUpsertArgs} args - Arguments to update or create a ApplicationHistory.
     * @example
     * // Update or create a ApplicationHistory
     * const applicationHistory = await prisma.applicationHistory.upsert({
     *   create: {
     *     // ... data to create a ApplicationHistory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ApplicationHistory we want to update
     *   }
     * })
    **/
    upsert<T extends ApplicationHistoryUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, ApplicationHistoryUpsertArgs<ExtArgs>>
    ): Prisma__ApplicationHistoryClient<$Result.GetResult<Prisma.$ApplicationHistoryPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of ApplicationHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationHistoryCountArgs} args - Arguments to filter ApplicationHistories to count.
     * @example
     * // Count the number of ApplicationHistories
     * const count = await prisma.applicationHistory.count({
     *   where: {
     *     // ... the filter for the ApplicationHistories we want to count
     *   }
     * })
    **/
    count<T extends ApplicationHistoryCountArgs>(
      args?: Subset<T, ApplicationHistoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ApplicationHistoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ApplicationHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ApplicationHistoryAggregateArgs>(args: Subset<T, ApplicationHistoryAggregateArgs>): Prisma.PrismaPromise<GetApplicationHistoryAggregateType<T>>

    /**
     * Group by ApplicationHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationHistoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ApplicationHistoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ApplicationHistoryGroupByArgs['orderBy'] }
        : { orderBy?: ApplicationHistoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ApplicationHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetApplicationHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ApplicationHistory model
   */
  readonly fields: ApplicationHistoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ApplicationHistory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ApplicationHistoryClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    application<T extends ApplicationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ApplicationDefaultArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the ApplicationHistory model
   */ 
  interface ApplicationHistoryFieldRefs {
    readonly id: FieldRef<"ApplicationHistory", 'String'>
    readonly application_id: FieldRef<"ApplicationHistory", 'String'>
    readonly description: FieldRef<"ApplicationHistory", 'String'>
    readonly solicitation: FieldRef<"ApplicationHistory", 'SolicitationType'>
    readonly report: FieldRef<"ApplicationHistory", 'String'>
    readonly answered: FieldRef<"ApplicationHistory", 'Boolean'>
    readonly deadLine: FieldRef<"ApplicationHistory", 'DateTime'>
    readonly date: FieldRef<"ApplicationHistory", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * ApplicationHistory findUnique
   */
  export type ApplicationHistoryFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationHistory
     */
    select?: ApplicationHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ApplicationHistoryInclude<ExtArgs> | null
    /**
     * Filter, which ApplicationHistory to fetch.
     */
    where: ApplicationHistoryWhereUniqueInput
  }


  /**
   * ApplicationHistory findUniqueOrThrow
   */
  export type ApplicationHistoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationHistory
     */
    select?: ApplicationHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ApplicationHistoryInclude<ExtArgs> | null
    /**
     * Filter, which ApplicationHistory to fetch.
     */
    where: ApplicationHistoryWhereUniqueInput
  }


  /**
   * ApplicationHistory findFirst
   */
  export type ApplicationHistoryFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationHistory
     */
    select?: ApplicationHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ApplicationHistoryInclude<ExtArgs> | null
    /**
     * Filter, which ApplicationHistory to fetch.
     */
    where?: ApplicationHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApplicationHistories to fetch.
     */
    orderBy?: ApplicationHistoryOrderByWithRelationInput | ApplicationHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ApplicationHistories.
     */
    cursor?: ApplicationHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApplicationHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApplicationHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ApplicationHistories.
     */
    distinct?: ApplicationHistoryScalarFieldEnum | ApplicationHistoryScalarFieldEnum[]
  }


  /**
   * ApplicationHistory findFirstOrThrow
   */
  export type ApplicationHistoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationHistory
     */
    select?: ApplicationHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ApplicationHistoryInclude<ExtArgs> | null
    /**
     * Filter, which ApplicationHistory to fetch.
     */
    where?: ApplicationHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApplicationHistories to fetch.
     */
    orderBy?: ApplicationHistoryOrderByWithRelationInput | ApplicationHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ApplicationHistories.
     */
    cursor?: ApplicationHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApplicationHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApplicationHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ApplicationHistories.
     */
    distinct?: ApplicationHistoryScalarFieldEnum | ApplicationHistoryScalarFieldEnum[]
  }


  /**
   * ApplicationHistory findMany
   */
  export type ApplicationHistoryFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationHistory
     */
    select?: ApplicationHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ApplicationHistoryInclude<ExtArgs> | null
    /**
     * Filter, which ApplicationHistories to fetch.
     */
    where?: ApplicationHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApplicationHistories to fetch.
     */
    orderBy?: ApplicationHistoryOrderByWithRelationInput | ApplicationHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ApplicationHistories.
     */
    cursor?: ApplicationHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApplicationHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApplicationHistories.
     */
    skip?: number
    distinct?: ApplicationHistoryScalarFieldEnum | ApplicationHistoryScalarFieldEnum[]
  }


  /**
   * ApplicationHistory create
   */
  export type ApplicationHistoryCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationHistory
     */
    select?: ApplicationHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ApplicationHistoryInclude<ExtArgs> | null
    /**
     * The data needed to create a ApplicationHistory.
     */
    data: XOR<ApplicationHistoryCreateInput, ApplicationHistoryUncheckedCreateInput>
  }


  /**
   * ApplicationHistory createMany
   */
  export type ApplicationHistoryCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ApplicationHistories.
     */
    data: ApplicationHistoryCreateManyInput | ApplicationHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * ApplicationHistory update
   */
  export type ApplicationHistoryUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationHistory
     */
    select?: ApplicationHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ApplicationHistoryInclude<ExtArgs> | null
    /**
     * The data needed to update a ApplicationHistory.
     */
    data: XOR<ApplicationHistoryUpdateInput, ApplicationHistoryUncheckedUpdateInput>
    /**
     * Choose, which ApplicationHistory to update.
     */
    where: ApplicationHistoryWhereUniqueInput
  }


  /**
   * ApplicationHistory updateMany
   */
  export type ApplicationHistoryUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ApplicationHistories.
     */
    data: XOR<ApplicationHistoryUpdateManyMutationInput, ApplicationHistoryUncheckedUpdateManyInput>
    /**
     * Filter which ApplicationHistories to update
     */
    where?: ApplicationHistoryWhereInput
  }


  /**
   * ApplicationHistory upsert
   */
  export type ApplicationHistoryUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationHistory
     */
    select?: ApplicationHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ApplicationHistoryInclude<ExtArgs> | null
    /**
     * The filter to search for the ApplicationHistory to update in case it exists.
     */
    where: ApplicationHistoryWhereUniqueInput
    /**
     * In case the ApplicationHistory found by the `where` argument doesn't exist, create a new ApplicationHistory with this data.
     */
    create: XOR<ApplicationHistoryCreateInput, ApplicationHistoryUncheckedCreateInput>
    /**
     * In case the ApplicationHistory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ApplicationHistoryUpdateInput, ApplicationHistoryUncheckedUpdateInput>
  }


  /**
   * ApplicationHistory delete
   */
  export type ApplicationHistoryDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationHistory
     */
    select?: ApplicationHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ApplicationHistoryInclude<ExtArgs> | null
    /**
     * Filter which ApplicationHistory to delete.
     */
    where: ApplicationHistoryWhereUniqueInput
  }


  /**
   * ApplicationHistory deleteMany
   */
  export type ApplicationHistoryDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which ApplicationHistories to delete
     */
    where?: ApplicationHistoryWhereInput
  }


  /**
   * ApplicationHistory without action
   */
  export type ApplicationHistoryDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationHistory
     */
    select?: ApplicationHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ApplicationHistoryInclude<ExtArgs> | null
  }



  /**
   * Model ScholarshipGranted
   */

  export type AggregateScholarshipGranted = {
    _count: ScholarshipGrantedCountAggregateOutputType | null
    _min: ScholarshipGrantedMinAggregateOutputType | null
    _max: ScholarshipGrantedMaxAggregateOutputType | null
  }

  export type ScholarshipGrantedMinAggregateOutputType = {
    id: string | null
    gaveUp: boolean | null
    ScholarshipCode: string | null
    application_id: string | null
    announcement_id: string | null
  }

  export type ScholarshipGrantedMaxAggregateOutputType = {
    id: string | null
    gaveUp: boolean | null
    ScholarshipCode: string | null
    application_id: string | null
    announcement_id: string | null
  }

  export type ScholarshipGrantedCountAggregateOutputType = {
    id: number
    gaveUp: number
    ScholarshipCode: number
    types: number
    application_id: number
    announcement_id: number
    _all: number
  }


  export type ScholarshipGrantedMinAggregateInputType = {
    id?: true
    gaveUp?: true
    ScholarshipCode?: true
    application_id?: true
    announcement_id?: true
  }

  export type ScholarshipGrantedMaxAggregateInputType = {
    id?: true
    gaveUp?: true
    ScholarshipCode?: true
    application_id?: true
    announcement_id?: true
  }

  export type ScholarshipGrantedCountAggregateInputType = {
    id?: true
    gaveUp?: true
    ScholarshipCode?: true
    types?: true
    application_id?: true
    announcement_id?: true
    _all?: true
  }

  export type ScholarshipGrantedAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which ScholarshipGranted to aggregate.
     */
    where?: ScholarshipGrantedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ScholarshipGranteds to fetch.
     */
    orderBy?: ScholarshipGrantedOrderByWithRelationInput | ScholarshipGrantedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ScholarshipGrantedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ScholarshipGranteds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ScholarshipGranteds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ScholarshipGranteds
    **/
    _count?: true | ScholarshipGrantedCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ScholarshipGrantedMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ScholarshipGrantedMaxAggregateInputType
  }

  export type GetScholarshipGrantedAggregateType<T extends ScholarshipGrantedAggregateArgs> = {
        [P in keyof T & keyof AggregateScholarshipGranted]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateScholarshipGranted[P]>
      : GetScalarType<T[P], AggregateScholarshipGranted[P]>
  }




  export type ScholarshipGrantedGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: ScholarshipGrantedWhereInput
    orderBy?: ScholarshipGrantedOrderByWithAggregationInput | ScholarshipGrantedOrderByWithAggregationInput[]
    by: ScholarshipGrantedScalarFieldEnum[] | ScholarshipGrantedScalarFieldEnum
    having?: ScholarshipGrantedScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ScholarshipGrantedCountAggregateInputType | true
    _min?: ScholarshipGrantedMinAggregateInputType
    _max?: ScholarshipGrantedMaxAggregateInputType
  }

  export type ScholarshipGrantedGroupByOutputType = {
    id: string
    gaveUp: boolean
    ScholarshipCode: string | null
    types: $Enums.scholarshipGrantedType[]
    application_id: string
    announcement_id: string
    _count: ScholarshipGrantedCountAggregateOutputType | null
    _min: ScholarshipGrantedMinAggregateOutputType | null
    _max: ScholarshipGrantedMaxAggregateOutputType | null
  }

  type GetScholarshipGrantedGroupByPayload<T extends ScholarshipGrantedGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ScholarshipGrantedGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ScholarshipGrantedGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ScholarshipGrantedGroupByOutputType[P]>
            : GetScalarType<T[P], ScholarshipGrantedGroupByOutputType[P]>
        }
      >
    >


  export type ScholarshipGrantedSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    gaveUp?: boolean
    ScholarshipCode?: boolean
    types?: boolean
    application_id?: boolean
    announcement_id?: boolean
    announmentent?: boolean | AnnouncementDefaultArgs<ExtArgs>
    application?: boolean | ApplicationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["scholarshipGranted"]>

  export type ScholarshipGrantedSelectScalar = {
    id?: boolean
    gaveUp?: boolean
    ScholarshipCode?: boolean
    types?: boolean
    application_id?: boolean
    announcement_id?: boolean
  }

  export type ScholarshipGrantedInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    announmentent?: boolean | AnnouncementDefaultArgs<ExtArgs>
    application?: boolean | ApplicationDefaultArgs<ExtArgs>
  }


  export type $ScholarshipGrantedPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "ScholarshipGranted"
    objects: {
      announmentent: Prisma.$AnnouncementPayload<ExtArgs>
      application: Prisma.$ApplicationPayload<ExtArgs>
    }
    scalars: $Extensions.GetResult<{
      id: string
      gaveUp: boolean
      ScholarshipCode: string | null
      types: $Enums.scholarshipGrantedType[]
      application_id: string
      announcement_id: string
    }, ExtArgs["result"]["scholarshipGranted"]>
    composites: {}
  }


  type ScholarshipGrantedGetPayload<S extends boolean | null | undefined | ScholarshipGrantedDefaultArgs> = $Result.GetResult<Prisma.$ScholarshipGrantedPayload, S>

  type ScholarshipGrantedCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<ScholarshipGrantedFindManyArgs, 'select' | 'include'> & {
      select?: ScholarshipGrantedCountAggregateInputType | true
    }

  export interface ScholarshipGrantedDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ScholarshipGranted'], meta: { name: 'ScholarshipGranted' } }
    /**
     * Find zero or one ScholarshipGranted that matches the filter.
     * @param {ScholarshipGrantedFindUniqueArgs} args - Arguments to find a ScholarshipGranted
     * @example
     * // Get one ScholarshipGranted
     * const scholarshipGranted = await prisma.scholarshipGranted.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ScholarshipGrantedFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, ScholarshipGrantedFindUniqueArgs<ExtArgs>>
    ): Prisma__ScholarshipGrantedClient<$Result.GetResult<Prisma.$ScholarshipGrantedPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one ScholarshipGranted that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {ScholarshipGrantedFindUniqueOrThrowArgs} args - Arguments to find a ScholarshipGranted
     * @example
     * // Get one ScholarshipGranted
     * const scholarshipGranted = await prisma.scholarshipGranted.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ScholarshipGrantedFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ScholarshipGrantedFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__ScholarshipGrantedClient<$Result.GetResult<Prisma.$ScholarshipGrantedPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first ScholarshipGranted that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScholarshipGrantedFindFirstArgs} args - Arguments to find a ScholarshipGranted
     * @example
     * // Get one ScholarshipGranted
     * const scholarshipGranted = await prisma.scholarshipGranted.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ScholarshipGrantedFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, ScholarshipGrantedFindFirstArgs<ExtArgs>>
    ): Prisma__ScholarshipGrantedClient<$Result.GetResult<Prisma.$ScholarshipGrantedPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first ScholarshipGranted that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScholarshipGrantedFindFirstOrThrowArgs} args - Arguments to find a ScholarshipGranted
     * @example
     * // Get one ScholarshipGranted
     * const scholarshipGranted = await prisma.scholarshipGranted.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ScholarshipGrantedFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ScholarshipGrantedFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__ScholarshipGrantedClient<$Result.GetResult<Prisma.$ScholarshipGrantedPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more ScholarshipGranteds that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScholarshipGrantedFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ScholarshipGranteds
     * const scholarshipGranteds = await prisma.scholarshipGranted.findMany()
     * 
     * // Get first 10 ScholarshipGranteds
     * const scholarshipGranteds = await prisma.scholarshipGranted.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const scholarshipGrantedWithIdOnly = await prisma.scholarshipGranted.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ScholarshipGrantedFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ScholarshipGrantedFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ScholarshipGrantedPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a ScholarshipGranted.
     * @param {ScholarshipGrantedCreateArgs} args - Arguments to create a ScholarshipGranted.
     * @example
     * // Create one ScholarshipGranted
     * const ScholarshipGranted = await prisma.scholarshipGranted.create({
     *   data: {
     *     // ... data to create a ScholarshipGranted
     *   }
     * })
     * 
    **/
    create<T extends ScholarshipGrantedCreateArgs<ExtArgs>>(
      args: SelectSubset<T, ScholarshipGrantedCreateArgs<ExtArgs>>
    ): Prisma__ScholarshipGrantedClient<$Result.GetResult<Prisma.$ScholarshipGrantedPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many ScholarshipGranteds.
     *     @param {ScholarshipGrantedCreateManyArgs} args - Arguments to create many ScholarshipGranteds.
     *     @example
     *     // Create many ScholarshipGranteds
     *     const scholarshipGranted = await prisma.scholarshipGranted.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ScholarshipGrantedCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ScholarshipGrantedCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ScholarshipGranted.
     * @param {ScholarshipGrantedDeleteArgs} args - Arguments to delete one ScholarshipGranted.
     * @example
     * // Delete one ScholarshipGranted
     * const ScholarshipGranted = await prisma.scholarshipGranted.delete({
     *   where: {
     *     // ... filter to delete one ScholarshipGranted
     *   }
     * })
     * 
    **/
    delete<T extends ScholarshipGrantedDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, ScholarshipGrantedDeleteArgs<ExtArgs>>
    ): Prisma__ScholarshipGrantedClient<$Result.GetResult<Prisma.$ScholarshipGrantedPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one ScholarshipGranted.
     * @param {ScholarshipGrantedUpdateArgs} args - Arguments to update one ScholarshipGranted.
     * @example
     * // Update one ScholarshipGranted
     * const scholarshipGranted = await prisma.scholarshipGranted.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ScholarshipGrantedUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, ScholarshipGrantedUpdateArgs<ExtArgs>>
    ): Prisma__ScholarshipGrantedClient<$Result.GetResult<Prisma.$ScholarshipGrantedPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more ScholarshipGranteds.
     * @param {ScholarshipGrantedDeleteManyArgs} args - Arguments to filter ScholarshipGranteds to delete.
     * @example
     * // Delete a few ScholarshipGranteds
     * const { count } = await prisma.scholarshipGranted.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ScholarshipGrantedDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ScholarshipGrantedDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ScholarshipGranteds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScholarshipGrantedUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ScholarshipGranteds
     * const scholarshipGranted = await prisma.scholarshipGranted.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ScholarshipGrantedUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, ScholarshipGrantedUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ScholarshipGranted.
     * @param {ScholarshipGrantedUpsertArgs} args - Arguments to update or create a ScholarshipGranted.
     * @example
     * // Update or create a ScholarshipGranted
     * const scholarshipGranted = await prisma.scholarshipGranted.upsert({
     *   create: {
     *     // ... data to create a ScholarshipGranted
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ScholarshipGranted we want to update
     *   }
     * })
    **/
    upsert<T extends ScholarshipGrantedUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, ScholarshipGrantedUpsertArgs<ExtArgs>>
    ): Prisma__ScholarshipGrantedClient<$Result.GetResult<Prisma.$ScholarshipGrantedPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of ScholarshipGranteds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScholarshipGrantedCountArgs} args - Arguments to filter ScholarshipGranteds to count.
     * @example
     * // Count the number of ScholarshipGranteds
     * const count = await prisma.scholarshipGranted.count({
     *   where: {
     *     // ... the filter for the ScholarshipGranteds we want to count
     *   }
     * })
    **/
    count<T extends ScholarshipGrantedCountArgs>(
      args?: Subset<T, ScholarshipGrantedCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ScholarshipGrantedCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ScholarshipGranted.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScholarshipGrantedAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ScholarshipGrantedAggregateArgs>(args: Subset<T, ScholarshipGrantedAggregateArgs>): Prisma.PrismaPromise<GetScholarshipGrantedAggregateType<T>>

    /**
     * Group by ScholarshipGranted.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScholarshipGrantedGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ScholarshipGrantedGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ScholarshipGrantedGroupByArgs['orderBy'] }
        : { orderBy?: ScholarshipGrantedGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ScholarshipGrantedGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetScholarshipGrantedGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ScholarshipGranted model
   */
  readonly fields: ScholarshipGrantedFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ScholarshipGranted.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ScholarshipGrantedClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    announmentent<T extends AnnouncementDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AnnouncementDefaultArgs<ExtArgs>>): Prisma__AnnouncementClient<$Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    application<T extends ApplicationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ApplicationDefaultArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the ScholarshipGranted model
   */ 
  interface ScholarshipGrantedFieldRefs {
    readonly id: FieldRef<"ScholarshipGranted", 'String'>
    readonly gaveUp: FieldRef<"ScholarshipGranted", 'Boolean'>
    readonly ScholarshipCode: FieldRef<"ScholarshipGranted", 'String'>
    readonly types: FieldRef<"ScholarshipGranted", 'scholarshipGrantedType[]'>
    readonly application_id: FieldRef<"ScholarshipGranted", 'String'>
    readonly announcement_id: FieldRef<"ScholarshipGranted", 'String'>
  }
    

  // Custom InputTypes

  /**
   * ScholarshipGranted findUnique
   */
  export type ScholarshipGrantedFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipGranted
     */
    select?: ScholarshipGrantedSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ScholarshipGrantedInclude<ExtArgs> | null
    /**
     * Filter, which ScholarshipGranted to fetch.
     */
    where: ScholarshipGrantedWhereUniqueInput
  }


  /**
   * ScholarshipGranted findUniqueOrThrow
   */
  export type ScholarshipGrantedFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipGranted
     */
    select?: ScholarshipGrantedSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ScholarshipGrantedInclude<ExtArgs> | null
    /**
     * Filter, which ScholarshipGranted to fetch.
     */
    where: ScholarshipGrantedWhereUniqueInput
  }


  /**
   * ScholarshipGranted findFirst
   */
  export type ScholarshipGrantedFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipGranted
     */
    select?: ScholarshipGrantedSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ScholarshipGrantedInclude<ExtArgs> | null
    /**
     * Filter, which ScholarshipGranted to fetch.
     */
    where?: ScholarshipGrantedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ScholarshipGranteds to fetch.
     */
    orderBy?: ScholarshipGrantedOrderByWithRelationInput | ScholarshipGrantedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ScholarshipGranteds.
     */
    cursor?: ScholarshipGrantedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ScholarshipGranteds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ScholarshipGranteds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ScholarshipGranteds.
     */
    distinct?: ScholarshipGrantedScalarFieldEnum | ScholarshipGrantedScalarFieldEnum[]
  }


  /**
   * ScholarshipGranted findFirstOrThrow
   */
  export type ScholarshipGrantedFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipGranted
     */
    select?: ScholarshipGrantedSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ScholarshipGrantedInclude<ExtArgs> | null
    /**
     * Filter, which ScholarshipGranted to fetch.
     */
    where?: ScholarshipGrantedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ScholarshipGranteds to fetch.
     */
    orderBy?: ScholarshipGrantedOrderByWithRelationInput | ScholarshipGrantedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ScholarshipGranteds.
     */
    cursor?: ScholarshipGrantedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ScholarshipGranteds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ScholarshipGranteds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ScholarshipGranteds.
     */
    distinct?: ScholarshipGrantedScalarFieldEnum | ScholarshipGrantedScalarFieldEnum[]
  }


  /**
   * ScholarshipGranted findMany
   */
  export type ScholarshipGrantedFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipGranted
     */
    select?: ScholarshipGrantedSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ScholarshipGrantedInclude<ExtArgs> | null
    /**
     * Filter, which ScholarshipGranteds to fetch.
     */
    where?: ScholarshipGrantedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ScholarshipGranteds to fetch.
     */
    orderBy?: ScholarshipGrantedOrderByWithRelationInput | ScholarshipGrantedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ScholarshipGranteds.
     */
    cursor?: ScholarshipGrantedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ScholarshipGranteds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ScholarshipGranteds.
     */
    skip?: number
    distinct?: ScholarshipGrantedScalarFieldEnum | ScholarshipGrantedScalarFieldEnum[]
  }


  /**
   * ScholarshipGranted create
   */
  export type ScholarshipGrantedCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipGranted
     */
    select?: ScholarshipGrantedSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ScholarshipGrantedInclude<ExtArgs> | null
    /**
     * The data needed to create a ScholarshipGranted.
     */
    data: XOR<ScholarshipGrantedCreateInput, ScholarshipGrantedUncheckedCreateInput>
  }


  /**
   * ScholarshipGranted createMany
   */
  export type ScholarshipGrantedCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ScholarshipGranteds.
     */
    data: ScholarshipGrantedCreateManyInput | ScholarshipGrantedCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * ScholarshipGranted update
   */
  export type ScholarshipGrantedUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipGranted
     */
    select?: ScholarshipGrantedSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ScholarshipGrantedInclude<ExtArgs> | null
    /**
     * The data needed to update a ScholarshipGranted.
     */
    data: XOR<ScholarshipGrantedUpdateInput, ScholarshipGrantedUncheckedUpdateInput>
    /**
     * Choose, which ScholarshipGranted to update.
     */
    where: ScholarshipGrantedWhereUniqueInput
  }


  /**
   * ScholarshipGranted updateMany
   */
  export type ScholarshipGrantedUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ScholarshipGranteds.
     */
    data: XOR<ScholarshipGrantedUpdateManyMutationInput, ScholarshipGrantedUncheckedUpdateManyInput>
    /**
     * Filter which ScholarshipGranteds to update
     */
    where?: ScholarshipGrantedWhereInput
  }


  /**
   * ScholarshipGranted upsert
   */
  export type ScholarshipGrantedUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipGranted
     */
    select?: ScholarshipGrantedSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ScholarshipGrantedInclude<ExtArgs> | null
    /**
     * The filter to search for the ScholarshipGranted to update in case it exists.
     */
    where: ScholarshipGrantedWhereUniqueInput
    /**
     * In case the ScholarshipGranted found by the `where` argument doesn't exist, create a new ScholarshipGranted with this data.
     */
    create: XOR<ScholarshipGrantedCreateInput, ScholarshipGrantedUncheckedCreateInput>
    /**
     * In case the ScholarshipGranted was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ScholarshipGrantedUpdateInput, ScholarshipGrantedUncheckedUpdateInput>
  }


  /**
   * ScholarshipGranted delete
   */
  export type ScholarshipGrantedDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipGranted
     */
    select?: ScholarshipGrantedSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ScholarshipGrantedInclude<ExtArgs> | null
    /**
     * Filter which ScholarshipGranted to delete.
     */
    where: ScholarshipGrantedWhereUniqueInput
  }


  /**
   * ScholarshipGranted deleteMany
   */
  export type ScholarshipGrantedDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which ScholarshipGranteds to delete
     */
    where?: ScholarshipGrantedWhereInput
  }


  /**
   * ScholarshipGranted without action
   */
  export type ScholarshipGrantedDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipGranted
     */
    select?: ScholarshipGrantedSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ScholarshipGrantedInclude<ExtArgs> | null
  }



  /**
   * Model FamilyMemberToVehicle
   */

  export type AggregateFamilyMemberToVehicle = {
    _count: FamilyMemberToVehicleCountAggregateOutputType | null
    _min: FamilyMemberToVehicleMinAggregateOutputType | null
    _max: FamilyMemberToVehicleMaxAggregateOutputType | null
  }

  export type FamilyMemberToVehicleMinAggregateOutputType = {
    A: string | null
    B: string | null
    application_id: string | null
    main_id: string | null
  }

  export type FamilyMemberToVehicleMaxAggregateOutputType = {
    A: string | null
    B: string | null
    application_id: string | null
    main_id: string | null
  }

  export type FamilyMemberToVehicleCountAggregateOutputType = {
    A: number
    B: number
    application_id: number
    main_id: number
    _all: number
  }


  export type FamilyMemberToVehicleMinAggregateInputType = {
    A?: true
    B?: true
    application_id?: true
    main_id?: true
  }

  export type FamilyMemberToVehicleMaxAggregateInputType = {
    A?: true
    B?: true
    application_id?: true
    main_id?: true
  }

  export type FamilyMemberToVehicleCountAggregateInputType = {
    A?: true
    B?: true
    application_id?: true
    main_id?: true
    _all?: true
  }

  export type FamilyMemberToVehicleAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which FamilyMemberToVehicle to aggregate.
     */
    where?: FamilyMemberToVehicleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FamilyMemberToVehicles to fetch.
     */
    orderBy?: FamilyMemberToVehicleOrderByWithRelationInput | FamilyMemberToVehicleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FamilyMemberToVehicleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FamilyMemberToVehicles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FamilyMemberToVehicles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FamilyMemberToVehicles
    **/
    _count?: true | FamilyMemberToVehicleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FamilyMemberToVehicleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FamilyMemberToVehicleMaxAggregateInputType
  }

  export type GetFamilyMemberToVehicleAggregateType<T extends FamilyMemberToVehicleAggregateArgs> = {
        [P in keyof T & keyof AggregateFamilyMemberToVehicle]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFamilyMemberToVehicle[P]>
      : GetScalarType<T[P], AggregateFamilyMemberToVehicle[P]>
  }




  export type FamilyMemberToVehicleGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: FamilyMemberToVehicleWhereInput
    orderBy?: FamilyMemberToVehicleOrderByWithAggregationInput | FamilyMemberToVehicleOrderByWithAggregationInput[]
    by: FamilyMemberToVehicleScalarFieldEnum[] | FamilyMemberToVehicleScalarFieldEnum
    having?: FamilyMemberToVehicleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FamilyMemberToVehicleCountAggregateInputType | true
    _min?: FamilyMemberToVehicleMinAggregateInputType
    _max?: FamilyMemberToVehicleMaxAggregateInputType
  }

  export type FamilyMemberToVehicleGroupByOutputType = {
    A: string
    B: string
    application_id: string
    main_id: string | null
    _count: FamilyMemberToVehicleCountAggregateOutputType | null
    _min: FamilyMemberToVehicleMinAggregateOutputType | null
    _max: FamilyMemberToVehicleMaxAggregateOutputType | null
  }

  type GetFamilyMemberToVehicleGroupByPayload<T extends FamilyMemberToVehicleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FamilyMemberToVehicleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FamilyMemberToVehicleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FamilyMemberToVehicleGroupByOutputType[P]>
            : GetScalarType<T[P], FamilyMemberToVehicleGroupByOutputType[P]>
        }
      >
    >


  export type FamilyMemberToVehicleSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    A?: boolean
    B?: boolean
    application_id?: boolean
    main_id?: boolean
    familyMembers?: boolean | FamilyMemberDefaultArgs<ExtArgs>
    Vehicle?: boolean | VehicleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["familyMemberToVehicle"]>

  export type FamilyMemberToVehicleSelectScalar = {
    A?: boolean
    B?: boolean
    application_id?: boolean
    main_id?: boolean
  }

  export type FamilyMemberToVehicleInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    familyMembers?: boolean | FamilyMemberDefaultArgs<ExtArgs>
    Vehicle?: boolean | VehicleDefaultArgs<ExtArgs>
  }


  export type $FamilyMemberToVehiclePayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "FamilyMemberToVehicle"
    objects: {
      familyMembers: Prisma.$FamilyMemberPayload<ExtArgs>
      Vehicle: Prisma.$VehiclePayload<ExtArgs>
    }
    scalars: $Extensions.GetResult<{
      A: string
      B: string
      application_id: string
      main_id: string | null
    }, ExtArgs["result"]["familyMemberToVehicle"]>
    composites: {}
  }


  type FamilyMemberToVehicleGetPayload<S extends boolean | null | undefined | FamilyMemberToVehicleDefaultArgs> = $Result.GetResult<Prisma.$FamilyMemberToVehiclePayload, S>

  type FamilyMemberToVehicleCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<FamilyMemberToVehicleFindManyArgs, 'select' | 'include'> & {
      select?: FamilyMemberToVehicleCountAggregateInputType | true
    }

  export interface FamilyMemberToVehicleDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FamilyMemberToVehicle'], meta: { name: 'FamilyMemberToVehicle' } }
    /**
     * Find zero or one FamilyMemberToVehicle that matches the filter.
     * @param {FamilyMemberToVehicleFindUniqueArgs} args - Arguments to find a FamilyMemberToVehicle
     * @example
     * // Get one FamilyMemberToVehicle
     * const familyMemberToVehicle = await prisma.familyMemberToVehicle.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FamilyMemberToVehicleFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, FamilyMemberToVehicleFindUniqueArgs<ExtArgs>>
    ): Prisma__FamilyMemberToVehicleClient<$Result.GetResult<Prisma.$FamilyMemberToVehiclePayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one FamilyMemberToVehicle that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {FamilyMemberToVehicleFindUniqueOrThrowArgs} args - Arguments to find a FamilyMemberToVehicle
     * @example
     * // Get one FamilyMemberToVehicle
     * const familyMemberToVehicle = await prisma.familyMemberToVehicle.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends FamilyMemberToVehicleFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, FamilyMemberToVehicleFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__FamilyMemberToVehicleClient<$Result.GetResult<Prisma.$FamilyMemberToVehiclePayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first FamilyMemberToVehicle that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberToVehicleFindFirstArgs} args - Arguments to find a FamilyMemberToVehicle
     * @example
     * // Get one FamilyMemberToVehicle
     * const familyMemberToVehicle = await prisma.familyMemberToVehicle.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FamilyMemberToVehicleFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, FamilyMemberToVehicleFindFirstArgs<ExtArgs>>
    ): Prisma__FamilyMemberToVehicleClient<$Result.GetResult<Prisma.$FamilyMemberToVehiclePayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first FamilyMemberToVehicle that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberToVehicleFindFirstOrThrowArgs} args - Arguments to find a FamilyMemberToVehicle
     * @example
     * // Get one FamilyMemberToVehicle
     * const familyMemberToVehicle = await prisma.familyMemberToVehicle.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends FamilyMemberToVehicleFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, FamilyMemberToVehicleFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__FamilyMemberToVehicleClient<$Result.GetResult<Prisma.$FamilyMemberToVehiclePayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more FamilyMemberToVehicles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberToVehicleFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FamilyMemberToVehicles
     * const familyMemberToVehicles = await prisma.familyMemberToVehicle.findMany()
     * 
     * // Get first 10 FamilyMemberToVehicles
     * const familyMemberToVehicles = await prisma.familyMemberToVehicle.findMany({ take: 10 })
     * 
     * // Only select the `A`
     * const familyMemberToVehicleWithAOnly = await prisma.familyMemberToVehicle.findMany({ select: { A: true } })
     * 
    **/
    findMany<T extends FamilyMemberToVehicleFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FamilyMemberToVehicleFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FamilyMemberToVehiclePayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a FamilyMemberToVehicle.
     * @param {FamilyMemberToVehicleCreateArgs} args - Arguments to create a FamilyMemberToVehicle.
     * @example
     * // Create one FamilyMemberToVehicle
     * const FamilyMemberToVehicle = await prisma.familyMemberToVehicle.create({
     *   data: {
     *     // ... data to create a FamilyMemberToVehicle
     *   }
     * })
     * 
    **/
    create<T extends FamilyMemberToVehicleCreateArgs<ExtArgs>>(
      args: SelectSubset<T, FamilyMemberToVehicleCreateArgs<ExtArgs>>
    ): Prisma__FamilyMemberToVehicleClient<$Result.GetResult<Prisma.$FamilyMemberToVehiclePayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many FamilyMemberToVehicles.
     *     @param {FamilyMemberToVehicleCreateManyArgs} args - Arguments to create many FamilyMemberToVehicles.
     *     @example
     *     // Create many FamilyMemberToVehicles
     *     const familyMemberToVehicle = await prisma.familyMemberToVehicle.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends FamilyMemberToVehicleCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FamilyMemberToVehicleCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a FamilyMemberToVehicle.
     * @param {FamilyMemberToVehicleDeleteArgs} args - Arguments to delete one FamilyMemberToVehicle.
     * @example
     * // Delete one FamilyMemberToVehicle
     * const FamilyMemberToVehicle = await prisma.familyMemberToVehicle.delete({
     *   where: {
     *     // ... filter to delete one FamilyMemberToVehicle
     *   }
     * })
     * 
    **/
    delete<T extends FamilyMemberToVehicleDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, FamilyMemberToVehicleDeleteArgs<ExtArgs>>
    ): Prisma__FamilyMemberToVehicleClient<$Result.GetResult<Prisma.$FamilyMemberToVehiclePayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one FamilyMemberToVehicle.
     * @param {FamilyMemberToVehicleUpdateArgs} args - Arguments to update one FamilyMemberToVehicle.
     * @example
     * // Update one FamilyMemberToVehicle
     * const familyMemberToVehicle = await prisma.familyMemberToVehicle.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends FamilyMemberToVehicleUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, FamilyMemberToVehicleUpdateArgs<ExtArgs>>
    ): Prisma__FamilyMemberToVehicleClient<$Result.GetResult<Prisma.$FamilyMemberToVehiclePayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more FamilyMemberToVehicles.
     * @param {FamilyMemberToVehicleDeleteManyArgs} args - Arguments to filter FamilyMemberToVehicles to delete.
     * @example
     * // Delete a few FamilyMemberToVehicles
     * const { count } = await prisma.familyMemberToVehicle.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends FamilyMemberToVehicleDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FamilyMemberToVehicleDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FamilyMemberToVehicles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberToVehicleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FamilyMemberToVehicles
     * const familyMemberToVehicle = await prisma.familyMemberToVehicle.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends FamilyMemberToVehicleUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, FamilyMemberToVehicleUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one FamilyMemberToVehicle.
     * @param {FamilyMemberToVehicleUpsertArgs} args - Arguments to update or create a FamilyMemberToVehicle.
     * @example
     * // Update or create a FamilyMemberToVehicle
     * const familyMemberToVehicle = await prisma.familyMemberToVehicle.upsert({
     *   create: {
     *     // ... data to create a FamilyMemberToVehicle
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FamilyMemberToVehicle we want to update
     *   }
     * })
    **/
    upsert<T extends FamilyMemberToVehicleUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, FamilyMemberToVehicleUpsertArgs<ExtArgs>>
    ): Prisma__FamilyMemberToVehicleClient<$Result.GetResult<Prisma.$FamilyMemberToVehiclePayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of FamilyMemberToVehicles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberToVehicleCountArgs} args - Arguments to filter FamilyMemberToVehicles to count.
     * @example
     * // Count the number of FamilyMemberToVehicles
     * const count = await prisma.familyMemberToVehicle.count({
     *   where: {
     *     // ... the filter for the FamilyMemberToVehicles we want to count
     *   }
     * })
    **/
    count<T extends FamilyMemberToVehicleCountArgs>(
      args?: Subset<T, FamilyMemberToVehicleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FamilyMemberToVehicleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FamilyMemberToVehicle.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberToVehicleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FamilyMemberToVehicleAggregateArgs>(args: Subset<T, FamilyMemberToVehicleAggregateArgs>): Prisma.PrismaPromise<GetFamilyMemberToVehicleAggregateType<T>>

    /**
     * Group by FamilyMemberToVehicle.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberToVehicleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FamilyMemberToVehicleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FamilyMemberToVehicleGroupByArgs['orderBy'] }
        : { orderBy?: FamilyMemberToVehicleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FamilyMemberToVehicleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFamilyMemberToVehicleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FamilyMemberToVehicle model
   */
  readonly fields: FamilyMemberToVehicleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FamilyMemberToVehicle.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FamilyMemberToVehicleClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    familyMembers<T extends FamilyMemberDefaultArgs<ExtArgs> = {}>(args?: Subset<T, FamilyMemberDefaultArgs<ExtArgs>>): Prisma__FamilyMemberClient<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    Vehicle<T extends VehicleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, VehicleDefaultArgs<ExtArgs>>): Prisma__VehicleClient<$Result.GetResult<Prisma.$VehiclePayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the FamilyMemberToVehicle model
   */ 
  interface FamilyMemberToVehicleFieldRefs {
    readonly A: FieldRef<"FamilyMemberToVehicle", 'String'>
    readonly B: FieldRef<"FamilyMemberToVehicle", 'String'>
    readonly application_id: FieldRef<"FamilyMemberToVehicle", 'String'>
    readonly main_id: FieldRef<"FamilyMemberToVehicle", 'String'>
  }
    

  // Custom InputTypes

  /**
   * FamilyMemberToVehicle findUnique
   */
  export type FamilyMemberToVehicleFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberToVehicle
     */
    select?: FamilyMemberToVehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberToVehicleInclude<ExtArgs> | null
    /**
     * Filter, which FamilyMemberToVehicle to fetch.
     */
    where: FamilyMemberToVehicleWhereUniqueInput
  }


  /**
   * FamilyMemberToVehicle findUniqueOrThrow
   */
  export type FamilyMemberToVehicleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberToVehicle
     */
    select?: FamilyMemberToVehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberToVehicleInclude<ExtArgs> | null
    /**
     * Filter, which FamilyMemberToVehicle to fetch.
     */
    where: FamilyMemberToVehicleWhereUniqueInput
  }


  /**
   * FamilyMemberToVehicle findFirst
   */
  export type FamilyMemberToVehicleFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberToVehicle
     */
    select?: FamilyMemberToVehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberToVehicleInclude<ExtArgs> | null
    /**
     * Filter, which FamilyMemberToVehicle to fetch.
     */
    where?: FamilyMemberToVehicleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FamilyMemberToVehicles to fetch.
     */
    orderBy?: FamilyMemberToVehicleOrderByWithRelationInput | FamilyMemberToVehicleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FamilyMemberToVehicles.
     */
    cursor?: FamilyMemberToVehicleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FamilyMemberToVehicles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FamilyMemberToVehicles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FamilyMemberToVehicles.
     */
    distinct?: FamilyMemberToVehicleScalarFieldEnum | FamilyMemberToVehicleScalarFieldEnum[]
  }


  /**
   * FamilyMemberToVehicle findFirstOrThrow
   */
  export type FamilyMemberToVehicleFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberToVehicle
     */
    select?: FamilyMemberToVehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberToVehicleInclude<ExtArgs> | null
    /**
     * Filter, which FamilyMemberToVehicle to fetch.
     */
    where?: FamilyMemberToVehicleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FamilyMemberToVehicles to fetch.
     */
    orderBy?: FamilyMemberToVehicleOrderByWithRelationInput | FamilyMemberToVehicleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FamilyMemberToVehicles.
     */
    cursor?: FamilyMemberToVehicleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FamilyMemberToVehicles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FamilyMemberToVehicles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FamilyMemberToVehicles.
     */
    distinct?: FamilyMemberToVehicleScalarFieldEnum | FamilyMemberToVehicleScalarFieldEnum[]
  }


  /**
   * FamilyMemberToVehicle findMany
   */
  export type FamilyMemberToVehicleFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberToVehicle
     */
    select?: FamilyMemberToVehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberToVehicleInclude<ExtArgs> | null
    /**
     * Filter, which FamilyMemberToVehicles to fetch.
     */
    where?: FamilyMemberToVehicleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FamilyMemberToVehicles to fetch.
     */
    orderBy?: FamilyMemberToVehicleOrderByWithRelationInput | FamilyMemberToVehicleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FamilyMemberToVehicles.
     */
    cursor?: FamilyMemberToVehicleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FamilyMemberToVehicles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FamilyMemberToVehicles.
     */
    skip?: number
    distinct?: FamilyMemberToVehicleScalarFieldEnum | FamilyMemberToVehicleScalarFieldEnum[]
  }


  /**
   * FamilyMemberToVehicle create
   */
  export type FamilyMemberToVehicleCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberToVehicle
     */
    select?: FamilyMemberToVehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberToVehicleInclude<ExtArgs> | null
    /**
     * The data needed to create a FamilyMemberToVehicle.
     */
    data: XOR<FamilyMemberToVehicleCreateInput, FamilyMemberToVehicleUncheckedCreateInput>
  }


  /**
   * FamilyMemberToVehicle createMany
   */
  export type FamilyMemberToVehicleCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FamilyMemberToVehicles.
     */
    data: FamilyMemberToVehicleCreateManyInput | FamilyMemberToVehicleCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * FamilyMemberToVehicle update
   */
  export type FamilyMemberToVehicleUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberToVehicle
     */
    select?: FamilyMemberToVehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberToVehicleInclude<ExtArgs> | null
    /**
     * The data needed to update a FamilyMemberToVehicle.
     */
    data: XOR<FamilyMemberToVehicleUpdateInput, FamilyMemberToVehicleUncheckedUpdateInput>
    /**
     * Choose, which FamilyMemberToVehicle to update.
     */
    where: FamilyMemberToVehicleWhereUniqueInput
  }


  /**
   * FamilyMemberToVehicle updateMany
   */
  export type FamilyMemberToVehicleUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FamilyMemberToVehicles.
     */
    data: XOR<FamilyMemberToVehicleUpdateManyMutationInput, FamilyMemberToVehicleUncheckedUpdateManyInput>
    /**
     * Filter which FamilyMemberToVehicles to update
     */
    where?: FamilyMemberToVehicleWhereInput
  }


  /**
   * FamilyMemberToVehicle upsert
   */
  export type FamilyMemberToVehicleUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberToVehicle
     */
    select?: FamilyMemberToVehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberToVehicleInclude<ExtArgs> | null
    /**
     * The filter to search for the FamilyMemberToVehicle to update in case it exists.
     */
    where: FamilyMemberToVehicleWhereUniqueInput
    /**
     * In case the FamilyMemberToVehicle found by the `where` argument doesn't exist, create a new FamilyMemberToVehicle with this data.
     */
    create: XOR<FamilyMemberToVehicleCreateInput, FamilyMemberToVehicleUncheckedCreateInput>
    /**
     * In case the FamilyMemberToVehicle was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FamilyMemberToVehicleUpdateInput, FamilyMemberToVehicleUncheckedUpdateInput>
  }


  /**
   * FamilyMemberToVehicle delete
   */
  export type FamilyMemberToVehicleDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberToVehicle
     */
    select?: FamilyMemberToVehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberToVehicleInclude<ExtArgs> | null
    /**
     * Filter which FamilyMemberToVehicle to delete.
     */
    where: FamilyMemberToVehicleWhereUniqueInput
  }


  /**
   * FamilyMemberToVehicle deleteMany
   */
  export type FamilyMemberToVehicleDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which FamilyMemberToVehicles to delete
     */
    where?: FamilyMemberToVehicleWhereInput
  }


  /**
   * FamilyMemberToVehicle without action
   */
  export type FamilyMemberToVehicleDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberToVehicle
     */
    select?: FamilyMemberToVehicleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FamilyMemberToVehicleInclude<ExtArgs> | null
  }



  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const IdMappingScalarFieldEnum: {
    id: 'id',
    mainId: 'mainId',
    newId: 'newId',
    application_id: 'application_id'
  };

  export type IdMappingScalarFieldEnum = (typeof IdMappingScalarFieldEnum)[keyof typeof IdMappingScalarFieldEnum]


  export const CandidateScalarFieldEnum: {
    id: 'id',
    name: 'name',
    CPF: 'CPF',
    main_id: 'main_id',
    birthDate: 'birthDate',
    role: 'role',
    createdAt: 'createdAt',
    user_id: 'user_id',
    responsible_id: 'responsible_id',
    profilePicture: 'profilePicture',
    email: 'email',
    finishedapplication: 'finishedapplication',
    application_id: 'application_id'
  };

  export type CandidateScalarFieldEnum = (typeof CandidateScalarFieldEnum)[keyof typeof CandidateScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    password: 'password',
    role: 'role',
    createdAt: 'createdAt',
    profilePicture: 'profilePicture'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const LegalResponsibleScalarFieldEnum: {
    id: 'id',
    name: 'name',
    main_id: 'main_id',
    CPF: 'CPF',
    birthDate: 'birthDate',
    livesAtSameAddress: 'livesAtSameAddress',
    institutionType: 'institutionType',
    responsibleEducationLevel: 'responsibleEducationLevel',
    responsibleGradeOrSemester: 'responsibleGradeOrSemester',
    responsibleShift: 'responsibleShift',
    ResponsibleEducationInstitution: 'ResponsibleEducationInstitution',
    role: 'role',
    createdAt: 'createdAt',
    user_id: 'user_id',
    hasScholarship: 'hasScholarship',
    monthlyAmount: 'monthlyAmount',
    percentageOfScholarship: 'percentageOfScholarship',
    application_id: 'application_id'
  };

  export type LegalResponsibleScalarFieldEnum = (typeof LegalResponsibleScalarFieldEnum)[keyof typeof LegalResponsibleScalarFieldEnum]


  export const SocialAssistantScalarFieldEnum: {
    id: 'id',
    name: 'name',
    CPF: 'CPF',
    RG: 'RG',
    CRESS: 'CRESS',
    phone: 'phone',
    user_id: 'user_id',
    entity_id: 'entity_id'
  };

  export type SocialAssistantScalarFieldEnum = (typeof SocialAssistantScalarFieldEnum)[keyof typeof SocialAssistantScalarFieldEnum]


  export const EntityScalarFieldEnum: {
    id: 'id',
    name: 'name',
    socialReason: 'socialReason',
    logo: 'logo',
    CNPJ: 'CNPJ',
    CEP: 'CEP',
    address: 'address',
    addressNumber: 'addressNumber',
    neighborhood: 'neighborhood',
    UF: 'UF',
    city: 'city',
    educationalInstitutionCode: 'educationalInstitutionCode',
    user_id: 'user_id'
  };

  export type EntityScalarFieldEnum = (typeof EntityScalarFieldEnum)[keyof typeof EntityScalarFieldEnum]


  export const EntitySubsidiaryScalarFieldEnum: {
    id: 'id',
    CNPJ: 'CNPJ',
    name: 'name',
    socialReason: 'socialReason',
    CEP: 'CEP',
    address: 'address',
    addressNumber: 'addressNumber',
    city: 'city',
    neighborhood: 'neighborhood',
    UF: 'UF',
    educationalInstitutionCode: 'educationalInstitutionCode',
    entity_id: 'entity_id',
    user_id: 'user_id'
  };

  export type EntitySubsidiaryScalarFieldEnum = (typeof EntitySubsidiaryScalarFieldEnum)[keyof typeof EntitySubsidiaryScalarFieldEnum]


  export const EntityDirectorScalarFieldEnum: {
    id: 'id',
    name: 'name',
    CPF: 'CPF',
    phone: 'phone',
    user_id: 'user_id',
    entity_subsidiary_id: 'entity_subsidiary_id',
    entity_id: 'entity_id'
  };

  export type EntityDirectorScalarFieldEnum = (typeof EntityDirectorScalarFieldEnum)[keyof typeof EntityDirectorScalarFieldEnum]


  export const IdentityDetailsScalarFieldEnum: {
    id: 'id',
    fullName: 'fullName',
    socialName: 'socialName',
    main_id: 'main_id',
    birthDate: 'birthDate',
    gender: 'gender',
    nationality: 'nationality',
    natural_city: 'natural_city',
    natural_UF: 'natural_UF',
    CPF: 'CPF',
    RG: 'RG',
    rgIssuingAuthority: 'rgIssuingAuthority',
    rgIssuingState: 'rgIssuingState',
    documentType: 'documentType',
    CadUnico: 'CadUnico',
    hasSevereDeseaseOrUsesMedication: 'hasSevereDeseaseOrUsesMedication',
    hasBankAccount: 'hasBankAccount',
    documentNumber: 'documentNumber',
    documentValidity: 'documentValidity',
    maritalStatus: 'maritalStatus',
    skinColor: 'skinColor',
    religion: 'religion',
    educationLevel: 'educationLevel',
    specialNeeds: 'specialNeeds',
    address: 'address',
    addressNumber: 'addressNumber',
    complement: 'complement',
    neighborhood: 'neighborhood',
    city: 'city',
    UF: 'UF',
    CEP: 'CEP',
    specialNeedsDescription: 'specialNeedsDescription',
    specialNeedsType: 'specialNeedsType',
    hasMedicalReport: 'hasMedicalReport',
    email: 'email',
    landlinePhone: 'landlinePhone',
    workPhone: 'workPhone',
    contactNameForMessage: 'contactNameForMessage',
    profession: 'profession',
    enrolledGovernmentProgram: 'enrolledGovernmentProgram',
    NIS: 'NIS',
    incomeSource: 'incomeSource',
    livesAlone: 'livesAlone',
    intendsToGetScholarship: 'intendsToGetScholarship',
    attendedPublicHighSchool: 'attendedPublicHighSchool',
    benefitedFromCebasScholarship_basic: 'benefitedFromCebasScholarship_basic',
    yearsBenefitedFromCebas_basic: 'yearsBenefitedFromCebas_basic',
    scholarshipType_basic: 'scholarshipType_basic',
    institutionName_basic: 'institutionName_basic',
    institutionCNPJ_basic: 'institutionCNPJ_basic',
    benefitedFromCebasScholarship_professional: 'benefitedFromCebasScholarship_professional',
    lastYearBenefitedFromCebas_professional: 'lastYearBenefitedFromCebas_professional',
    scholarshipType_professional: 'scholarshipType_professional',
    institutionName_professional: 'institutionName_professional',
    institutionCNPJ_professional: 'institutionCNPJ_professional',
    nameOfScholarshipCourse_professional: 'nameOfScholarshipCourse_professional',
    candidate_id: 'candidate_id',
    responsible_id: 'responsible_id',
    application_id: 'application_id'
  };

  export type IdentityDetailsScalarFieldEnum = (typeof IdentityDetailsScalarFieldEnum)[keyof typeof IdentityDetailsScalarFieldEnum]


  export const FamilyMemberScalarFieldEnum: {
    id: 'id',
    relationship: 'relationship',
    otherRelationship: 'otherRelationship',
    main_id: 'main_id',
    fullName: 'fullName',
    socialName: 'socialName',
    birthDate: 'birthDate',
    gender: 'gender',
    nationality: 'nationality',
    natural_city: 'natural_city',
    natural_UF: 'natural_UF',
    CPF: 'CPF',
    RG: 'RG',
    rgIssuingAuthority: 'rgIssuingAuthority',
    rgIssuingState: 'rgIssuingState',
    documentType: 'documentType',
    documentNumber: 'documentNumber',
    documentValidity: 'documentValidity',
    numberOfBirthRegister: 'numberOfBirthRegister',
    bookOfBirthRegister: 'bookOfBirthRegister',
    pageOfBirthRegister: 'pageOfBirthRegister',
    maritalStatus: 'maritalStatus',
    skinColor: 'skinColor',
    religion: 'religion',
    educationLevel: 'educationLevel',
    specialNeeds: 'specialNeeds',
    specialNeedsDescription: 'specialNeedsDescription',
    specialNeedsType: 'specialNeedsType',
    hasMedicalReport: 'hasMedicalReport',
    landlinePhone: 'landlinePhone',
    workPhone: 'workPhone',
    contactNameForMessage: 'contactNameForMessage',
    email: 'email',
    profession: 'profession',
    enrolledGovernmentProgram: 'enrolledGovernmentProgram',
    NIS: 'NIS',
    educationPlace: 'educationPlace',
    institutionName: 'institutionName',
    coursingEducationLevel: 'coursingEducationLevel',
    cycleOfEducation: 'cycleOfEducation',
    turnOfEducation: 'turnOfEducation',
    hasScholarship: 'hasScholarship',
    percentageOfScholarship: 'percentageOfScholarship',
    monthlyAmount: 'monthlyAmount',
    candidate_id: 'candidate_id',
    attendedPublicHighSchool: 'attendedPublicHighSchool',
    benefitedFromCebasScholarship_basic: 'benefitedFromCebasScholarship_basic',
    benefitedFromCebasScholarship_professional: 'benefitedFromCebasScholarship_professional',
    CadUnico: 'CadUnico',
    hasSevereDeseaseOrUsesMedication: 'hasSevereDeseaseOrUsesMedication',
    hasBankAccount: 'hasBankAccount',
    incomeSource: 'incomeSource',
    legalResponsibleId: 'legalResponsibleId',
    application_id: 'application_id'
  };

  export type FamilyMemberScalarFieldEnum = (typeof FamilyMemberScalarFieldEnum)[keyof typeof FamilyMemberScalarFieldEnum]


  export const HousingScalarFieldEnum: {
    id: 'id',
    propertyStatus: 'propertyStatus',
    contractType: 'contractType',
    main_id: 'main_id',
    grantorName: 'grantorName',
    timeLivingInProperty: 'timeLivingInProperty',
    domicileType: 'domicileType',
    numberOfRooms: 'numberOfRooms',
    numberOfBedrooms: 'numberOfBedrooms',
    candidate_id: 'candidate_id',
    responsible_id: 'responsible_id',
    application_id: 'application_id'
  };

  export type HousingScalarFieldEnum = (typeof HousingScalarFieldEnum)[keyof typeof HousingScalarFieldEnum]


  export const VehicleScalarFieldEnum: {
    id: 'id',
    vehicleType: 'vehicleType',
    modelAndBrand: 'modelAndBrand',
    main_id: 'main_id',
    manufacturingYear: 'manufacturingYear',
    situation: 'situation',
    financedMonths: 'financedMonths',
    monthsToPayOff: 'monthsToPayOff',
    hasInsurance: 'hasInsurance',
    insuranceValue: 'insuranceValue',
    usage: 'usage',
    candidate_id: 'candidate_id',
    owners_id: 'owners_id',
    legalResponsibleId: 'legalResponsibleId',
    application_id: 'application_id'
  };

  export type VehicleScalarFieldEnum = (typeof VehicleScalarFieldEnum)[keyof typeof VehicleScalarFieldEnum]


  export const FamilyMemberIncomeScalarFieldEnum: {
    id: 'id',
    employmentType: 'employmentType',
    averageIncome: 'averageIncome',
    main_id: 'main_id',
    admissionDate: 'admissionDate',
    position: 'position',
    payingSource: 'payingSource',
    payingSourcePhone: 'payingSourcePhone',
    startDate: 'startDate',
    CNPJ: 'CNPJ',
    financialAssistantCPF: 'financialAssistantCPF',
    socialReason: 'socialReason',
    fantasyName: 'fantasyName',
    CPNJ: 'CPNJ',
    receivesUnemployment: 'receivesUnemployment',
    parcels: 'parcels',
    firstParcelDate: 'firstParcelDate',
    parcelValue: 'parcelValue',
    familyMember_id: 'familyMember_id',
    quantity: 'quantity',
    candidate_id: 'candidate_id',
    application_id: 'application_id',
    legalResponsibleId: 'legalResponsibleId'
  };

  export type FamilyMemberIncomeScalarFieldEnum = (typeof FamilyMemberIncomeScalarFieldEnum)[keyof typeof FamilyMemberIncomeScalarFieldEnum]


  export const MonthlyIncomeScalarFieldEnum: {
    id: 'id',
    date: 'date',
    main_id: 'main_id',
    grossAmount: 'grossAmount',
    liquidAmount: 'liquidAmount',
    proLabore: 'proLabore',
    dividends: 'dividends',
    total: 'total',
    deductionValue: 'deductionValue',
    publicPension: 'publicPension',
    incomeTax: 'incomeTax',
    otherDeductions: 'otherDeductions',
    foodAllowanceValue: 'foodAllowanceValue',
    transportAllowanceValue: 'transportAllowanceValue',
    expenseReimbursementValue: 'expenseReimbursementValue',
    advancePaymentValue: 'advancePaymentValue',
    reversalValue: 'reversalValue',
    compensationValue: 'compensationValue',
    judicialPensionValue: 'judicialPensionValue',
    familyMember_id: 'familyMember_id',
    candidate_id: 'candidate_id',
    incomeSource: 'incomeSource',
    application_id: 'application_id',
    legalResponsibleId: 'legalResponsibleId'
  };

  export type MonthlyIncomeScalarFieldEnum = (typeof MonthlyIncomeScalarFieldEnum)[keyof typeof MonthlyIncomeScalarFieldEnum]


  export const BankAccountScalarFieldEnum: {
    id: 'id',
    main_id: 'main_id',
    bankName: 'bankName',
    agencyNumber: 'agencyNumber',
    accountNumber: 'accountNumber',
    accountType: 'accountType',
    familyMember_id: 'familyMember_id',
    candidate_id: 'candidate_id',
    legalResponsibleId: 'legalResponsibleId',
    application_id: 'application_id'
  };

  export type BankAccountScalarFieldEnum = (typeof BankAccountScalarFieldEnum)[keyof typeof BankAccountScalarFieldEnum]


  export const ExpenseScalarFieldEnum: {
    id: 'id',
    main_id: 'main_id',
    date: 'date',
    waterSewage: 'waterSewage',
    electricity: 'electricity',
    landlinePhone: 'landlinePhone',
    mobilePhone: 'mobilePhone',
    food: 'food',
    rent: 'rent',
    garageRent: 'garageRent',
    condominium: 'condominium',
    cableTV: 'cableTV',
    streamingServices: 'streamingServices',
    fuel: 'fuel',
    annualIPVA: 'annualIPVA',
    annualIPTU: 'annualIPTU',
    annualITR: 'annualITR',
    annualIR: 'annualIR',
    INSS: 'INSS',
    publicTransport: 'publicTransport',
    schoolTransport: 'schoolTransport',
    internet: 'internet',
    courses: 'courses',
    healthPlan: 'healthPlan',
    dentalPlan: 'dentalPlan',
    medicationExpenses: 'medicationExpenses',
    totalExpense: 'totalExpense',
    candidate_id: 'candidate_id',
    installmentCountIPTU: 'installmentCountIPTU',
    installmentCountIPVA: 'installmentCountIPVA',
    installmentCountIR: 'installmentCountIR',
    installmentCountITR: 'installmentCountITR',
    installmentValueIPTU: 'installmentValueIPTU',
    installmentValueIPVA: 'installmentValueIPVA',
    installmentValueIR: 'installmentValueIR',
    installmentValueITR: 'installmentValueITR',
    financing: 'financing',
    creditCard: 'creditCard',
    optedForInstallmentIPTU: 'optedForInstallmentIPTU',
    optedForInstallmentIPVA: 'optedForInstallmentIPVA',
    optedForInstallmentIR: 'optedForInstallmentIR',
    optedForInstallmentITR: 'optedForInstallmentITR',
    otherExpensesDescription: 'otherExpensesDescription',
    otherExpensesValue: 'otherExpensesValue',
    legalResponsibleId: 'legalResponsibleId',
    application_id: 'application_id'
  };

  export type ExpenseScalarFieldEnum = (typeof ExpenseScalarFieldEnum)[keyof typeof ExpenseScalarFieldEnum]


  export const LoanScalarFieldEnum: {
    id: 'id',
    main_id: 'main_id',
    familyMemberName: 'familyMemberName',
    installmentValue: 'installmentValue',
    totalInstallments: 'totalInstallments',
    paidInstallments: 'paidInstallments',
    bankName: 'bankName',
    familyMember_id: 'familyMember_id',
    candidate_id: 'candidate_id',
    legalResponsibleId: 'legalResponsibleId',
    application_id: 'application_id'
  };

  export type LoanScalarFieldEnum = (typeof LoanScalarFieldEnum)[keyof typeof LoanScalarFieldEnum]


  export const FinancingScalarFieldEnum: {
    id: 'id',
    main_id: 'main_id',
    familyMemberName: 'familyMemberName',
    installmentValue: 'installmentValue',
    totalInstallments: 'totalInstallments',
    paidInstallments: 'paidInstallments',
    bankName: 'bankName',
    familyMember_id: 'familyMember_id',
    candidate_id: 'candidate_id',
    otherFinancing: 'otherFinancing',
    financingType: 'financingType',
    legalResponsibleId: 'legalResponsibleId',
    application_id: 'application_id'
  };

  export type FinancingScalarFieldEnum = (typeof FinancingScalarFieldEnum)[keyof typeof FinancingScalarFieldEnum]


  export const CreditCardScalarFieldEnum: {
    id: 'id',
    main_id: 'main_id',
    familyMemberName: 'familyMemberName',
    usersCount: 'usersCount',
    cardType: 'cardType',
    bankName: 'bankName',
    cardFlag: 'cardFlag',
    invoiceValue: 'invoiceValue',
    familyMember_id: 'familyMember_id',
    candidate_id: 'candidate_id',
    legalResponsibleId: 'legalResponsibleId',
    application_id: 'application_id'
  };

  export type CreditCardScalarFieldEnum = (typeof CreditCardScalarFieldEnum)[keyof typeof CreditCardScalarFieldEnum]


  export const OtherExpenseScalarFieldEnum: {
    id: 'id',
    main_id: 'main_id',
    description: 'description',
    value: 'value',
    familyMember_id: 'familyMember_id',
    candidate_id: 'candidate_id',
    legalResponsibleId: 'legalResponsibleId',
    application_id: 'application_id'
  };

  export type OtherExpenseScalarFieldEnum = (typeof OtherExpenseScalarFieldEnum)[keyof typeof OtherExpenseScalarFieldEnum]


  export const FamilyMemberDiseaseScalarFieldEnum: {
    id: 'id',
    main_id: 'main_id',
    disease: 'disease',
    diseases: 'diseases',
    specificDisease: 'specificDisease',
    hasMedicalReport: 'hasMedicalReport',
    familyMember_id: 'familyMember_id',
    candidate_id: 'candidate_id',
    legalResponsibleId: 'legalResponsibleId',
    application_id: 'application_id'
  };

  export type FamilyMemberDiseaseScalarFieldEnum = (typeof FamilyMemberDiseaseScalarFieldEnum)[keyof typeof FamilyMemberDiseaseScalarFieldEnum]


  export const MedicationScalarFieldEnum: {
    id: 'id',
    main_id: 'main_id',
    medicationName: 'medicationName',
    obtainedPublicly: 'obtainedPublicly',
    specificMedicationPublicly: 'specificMedicationPublicly',
    familyMember_id: 'familyMember_id',
    candidate_id: 'candidate_id',
    legalResponsibleId: 'legalResponsibleId',
    application_id: 'application_id',
    familyMemberDiseaseId: 'familyMemberDiseaseId'
  };

  export type MedicationScalarFieldEnum = (typeof MedicationScalarFieldEnum)[keyof typeof MedicationScalarFieldEnum]


  export const DeclarationsScalarFieldEnum: {
    id: 'id',
    declarationType: 'declarationType',
    text: 'text',
    familyMember_id: 'familyMember_id',
    candidate_id: 'candidate_id',
    legalResponsibleId: 'legalResponsibleId',
    application_id: 'application_id'
  };

  export type DeclarationsScalarFieldEnum = (typeof DeclarationsScalarFieldEnum)[keyof typeof DeclarationsScalarFieldEnum]


  export const AnnouncementInterviewScalarFieldEnum: {
    startDate: 'startDate',
    endDate: 'endDate',
    beginHour: 'beginHour',
    interval: 'interval',
    endHour: 'endHour',
    duration: 'duration',
    announcement_id: 'announcement_id'
  };

  export type AnnouncementInterviewScalarFieldEnum = (typeof AnnouncementInterviewScalarFieldEnum)[keyof typeof AnnouncementInterviewScalarFieldEnum]


  export const AnnouncementScalarFieldEnum: {
    id: 'id',
    entityChanged: 'entityChanged',
    branchChanged: 'branchChanged',
    announcementType: 'announcementType',
    announcementNumber: 'announcementNumber',
    announcementDate: 'announcementDate',
    announcementBegin: 'announcementBegin',
    openDate: 'openDate',
    closeDate: 'closeDate',
    waitingList: 'waitingList',
    offeredVacancies: 'offeredVacancies',
    verifiedScholarships: 'verifiedScholarships',
    description: 'description',
    entity_id: 'entity_id',
    announcementName: 'announcementName',
    announcementLogo: 'announcementLogo',
    type2: 'type2',
    criteria: 'criteria',
    types1: 'types1'
  };

  export type AnnouncementScalarFieldEnum = (typeof AnnouncementScalarFieldEnum)[keyof typeof AnnouncementScalarFieldEnum]


  export const TimelineScalarFieldEnum: {
    id: 'id',
    controlLine: 'controlLine',
    stage: 'stage',
    deadline: 'deadline',
    announcementId: 'announcementId'
  };

  export type TimelineScalarFieldEnum = (typeof TimelineScalarFieldEnum)[keyof typeof TimelineScalarFieldEnum]


  export const EducationLevelScalarFieldEnum: {
    id: 'id',
    level: 'level',
    basicEduType: 'basicEduType',
    scholarshipType: 'scholarshipType',
    higherEduScholarshipType: 'higherEduScholarshipType',
    offeredCourseType: 'offeredCourseType',
    availableCourses: 'availableCourses',
    offeredVacancies: 'offeredVacancies',
    verifiedScholarships: 'verifiedScholarships',
    shift: 'shift',
    semester: 'semester',
    grade: 'grade',
    announcementId: 'announcementId',
    entitySubsidiaryId: 'entitySubsidiaryId'
  };

  export type EducationLevelScalarFieldEnum = (typeof EducationLevelScalarFieldEnum)[keyof typeof EducationLevelScalarFieldEnum]


  export const ApplicationScalarFieldEnum: {
    id: 'id',
    candidate_id: 'candidate_id',
    announcement_id: 'announcement_id',
    status: 'status',
    socialAssistant_id: 'socialAssistant_id',
    educationLevel_id: 'educationLevel_id',
    candidateName: 'candidateName',
    SocialAssistantName: 'SocialAssistantName',
    CadUnico: 'CadUnico',
    hasSevereDesease: 'hasSevereDesease',
    averageIncome: 'averageIncome',
    perCapita: 'perCapita',
    position: 'position',
    number: 'number',
    reponsible_id: 'reponsible_id'
  };

  export type ApplicationScalarFieldEnum = (typeof ApplicationScalarFieldEnum)[keyof typeof ApplicationScalarFieldEnum]


  export const ApplicationHistoryScalarFieldEnum: {
    id: 'id',
    application_id: 'application_id',
    description: 'description',
    solicitation: 'solicitation',
    report: 'report',
    answered: 'answered',
    deadLine: 'deadLine',
    date: 'date'
  };

  export type ApplicationHistoryScalarFieldEnum = (typeof ApplicationHistoryScalarFieldEnum)[keyof typeof ApplicationHistoryScalarFieldEnum]


  export const ScholarshipGrantedScalarFieldEnum: {
    id: 'id',
    gaveUp: 'gaveUp',
    ScholarshipCode: 'ScholarshipCode',
    types: 'types',
    application_id: 'application_id',
    announcement_id: 'announcement_id'
  };

  export type ScholarshipGrantedScalarFieldEnum = (typeof ScholarshipGrantedScalarFieldEnum)[keyof typeof ScholarshipGrantedScalarFieldEnum]


  export const FamilyMemberToVehicleScalarFieldEnum: {
    A: 'A',
    B: 'B',
    application_id: 'application_id',
    main_id: 'main_id'
  };

  export type FamilyMemberToVehicleScalarFieldEnum = (typeof FamilyMemberToVehicleScalarFieldEnum)[keyof typeof FamilyMemberToVehicleScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'ROLE'
   */
  export type EnumROLEFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ROLE'>
    


  /**
   * Reference to a field of type 'ROLE[]'
   */
  export type ListEnumROLEFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ROLE[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'INSTITUTION_TYPE'
   */
  export type EnumINSTITUTION_TYPEFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'INSTITUTION_TYPE'>
    


  /**
   * Reference to a field of type 'INSTITUTION_TYPE[]'
   */
  export type ListEnumINSTITUTION_TYPEFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'INSTITUTION_TYPE[]'>
    


  /**
   * Reference to a field of type 'EDUCATION_TYPE'
   */
  export type EnumEDUCATION_TYPEFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EDUCATION_TYPE'>
    


  /**
   * Reference to a field of type 'EDUCATION_TYPE[]'
   */
  export type ListEnumEDUCATION_TYPEFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EDUCATION_TYPE[]'>
    


  /**
   * Reference to a field of type 'SHIFT'
   */
  export type EnumSHIFTFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SHIFT'>
    


  /**
   * Reference to a field of type 'SHIFT[]'
   */
  export type ListEnumSHIFTFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SHIFT[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'COUNTRY'
   */
  export type EnumCOUNTRYFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'COUNTRY'>
    


  /**
   * Reference to a field of type 'COUNTRY[]'
   */
  export type ListEnumCOUNTRYFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'COUNTRY[]'>
    


  /**
   * Reference to a field of type 'GENDER'
   */
  export type EnumGENDERFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'GENDER'>
    


  /**
   * Reference to a field of type 'GENDER[]'
   */
  export type ListEnumGENDERFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'GENDER[]'>
    


  /**
   * Reference to a field of type 'DOCUMENT_TYPE'
   */
  export type EnumDOCUMENT_TYPEFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DOCUMENT_TYPE'>
    


  /**
   * Reference to a field of type 'DOCUMENT_TYPE[]'
   */
  export type ListEnumDOCUMENT_TYPEFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DOCUMENT_TYPE[]'>
    


  /**
   * Reference to a field of type 'MARITAL_STATUS'
   */
  export type EnumMARITAL_STATUSFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MARITAL_STATUS'>
    


  /**
   * Reference to a field of type 'MARITAL_STATUS[]'
   */
  export type ListEnumMARITAL_STATUSFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MARITAL_STATUS[]'>
    


  /**
   * Reference to a field of type 'SkinColor'
   */
  export type EnumSkinColorFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SkinColor'>
    


  /**
   * Reference to a field of type 'SkinColor[]'
   */
  export type ListEnumSkinColorFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SkinColor[]'>
    


  /**
   * Reference to a field of type 'RELIGION'
   */
  export type EnumRELIGIONFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RELIGION'>
    


  /**
   * Reference to a field of type 'RELIGION[]'
   */
  export type ListEnumRELIGIONFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RELIGION[]'>
    


  /**
   * Reference to a field of type 'SCHOLARSHIP'
   */
  export type EnumSCHOLARSHIPFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SCHOLARSHIP'>
    


  /**
   * Reference to a field of type 'SCHOLARSHIP[]'
   */
  export type ListEnumSCHOLARSHIPFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SCHOLARSHIP[]'>
    


  /**
   * Reference to a field of type 'IncomeSource[]'
   */
  export type ListEnumIncomeSourceFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'IncomeSource[]'>
    


  /**
   * Reference to a field of type 'IncomeSource'
   */
  export type EnumIncomeSourceFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'IncomeSource'>
    


  /**
   * Reference to a field of type 'ScholarshipType'
   */
  export type EnumScholarshipTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ScholarshipType'>
    


  /**
   * Reference to a field of type 'ScholarshipType[]'
   */
  export type ListEnumScholarshipTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ScholarshipType[]'>
    


  /**
   * Reference to a field of type 'Relationship'
   */
  export type EnumRelationshipFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Relationship'>
    


  /**
   * Reference to a field of type 'Relationship[]'
   */
  export type ListEnumRelationshipFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Relationship[]'>
    


  /**
   * Reference to a field of type 'PropertyStatus'
   */
  export type EnumPropertyStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PropertyStatus'>
    


  /**
   * Reference to a field of type 'PropertyStatus[]'
   */
  export type ListEnumPropertyStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PropertyStatus[]'>
    


  /**
   * Reference to a field of type 'ContractType'
   */
  export type EnumContractTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ContractType'>
    


  /**
   * Reference to a field of type 'ContractType[]'
   */
  export type ListEnumContractTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ContractType[]'>
    


  /**
   * Reference to a field of type 'TimeLivingInProperty'
   */
  export type EnumTimeLivingInPropertyFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TimeLivingInProperty'>
    


  /**
   * Reference to a field of type 'TimeLivingInProperty[]'
   */
  export type ListEnumTimeLivingInPropertyFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TimeLivingInProperty[]'>
    


  /**
   * Reference to a field of type 'DomicileType'
   */
  export type EnumDomicileTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DomicileType'>
    


  /**
   * Reference to a field of type 'DomicileType[]'
   */
  export type ListEnumDomicileTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DomicileType[]'>
    


  /**
   * Reference to a field of type 'NumberOfRooms'
   */
  export type EnumNumberOfRoomsFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'NumberOfRooms'>
    


  /**
   * Reference to a field of type 'NumberOfRooms[]'
   */
  export type ListEnumNumberOfRoomsFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'NumberOfRooms[]'>
    


  /**
   * Reference to a field of type 'VehicleType'
   */
  export type EnumVehicleTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'VehicleType'>
    


  /**
   * Reference to a field of type 'VehicleType[]'
   */
  export type ListEnumVehicleTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'VehicleType[]'>
    


  /**
   * Reference to a field of type 'VehicleSituation'
   */
  export type EnumVehicleSituationFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'VehicleSituation'>
    


  /**
   * Reference to a field of type 'VehicleSituation[]'
   */
  export type ListEnumVehicleSituationFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'VehicleSituation[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'VehicleUsage'
   */
  export type EnumVehicleUsageFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'VehicleUsage'>
    


  /**
   * Reference to a field of type 'VehicleUsage[]'
   */
  export type ListEnumVehicleUsageFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'VehicleUsage[]'>
    


  /**
   * Reference to a field of type 'EmploymentType'
   */
  export type EnumEmploymentTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EmploymentType'>
    


  /**
   * Reference to a field of type 'EmploymentType[]'
   */
  export type ListEnumEmploymentTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EmploymentType[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'AccountType'
   */
  export type EnumAccountTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AccountType'>
    


  /**
   * Reference to a field of type 'AccountType[]'
   */
  export type ListEnumAccountTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AccountType[]'>
    


  /**
   * Reference to a field of type 'FinancingType'
   */
  export type EnumFinancingTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'FinancingType'>
    


  /**
   * Reference to a field of type 'FinancingType[]'
   */
  export type ListEnumFinancingTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'FinancingType[]'>
    


  /**
   * Reference to a field of type 'Disease'
   */
  export type EnumDiseaseFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Disease'>
    


  /**
   * Reference to a field of type 'Disease[]'
   */
  export type ListEnumDiseaseFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Disease[]'>
    


  /**
   * Reference to a field of type 'Declaration_Type'
   */
  export type EnumDeclaration_TypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Declaration_Type'>
    


  /**
   * Reference to a field of type 'Declaration_Type[]'
   */
  export type ListEnumDeclaration_TypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Declaration_Type[]'>
    


  /**
   * Reference to a field of type 'AnnouncementType'
   */
  export type EnumAnnouncementTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AnnouncementType'>
    


  /**
   * Reference to a field of type 'AnnouncementType[]'
   */
  export type ListEnumAnnouncementTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AnnouncementType[]'>
    


  /**
   * Reference to a field of type 'TiebreakerCriterias[]'
   */
  export type ListEnumTiebreakerCriteriasFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TiebreakerCriterias[]'>
    


  /**
   * Reference to a field of type 'TiebreakerCriterias'
   */
  export type EnumTiebreakerCriteriasFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TiebreakerCriterias'>
    


  /**
   * Reference to a field of type 'scholarshipGrantedType[]'
   */
  export type ListEnumscholarshipGrantedTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'scholarshipGrantedType[]'>
    


  /**
   * Reference to a field of type 'scholarshipGrantedType'
   */
  export type EnumscholarshipGrantedTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'scholarshipGrantedType'>
    


  /**
   * Reference to a field of type 'LevelType'
   */
  export type EnumLevelTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'LevelType'>
    


  /**
   * Reference to a field of type 'LevelType[]'
   */
  export type ListEnumLevelTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'LevelType[]'>
    


  /**
   * Reference to a field of type 'BasicEducationType'
   */
  export type EnumBasicEducationTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BasicEducationType'>
    


  /**
   * Reference to a field of type 'BasicEducationType[]'
   */
  export type ListEnumBasicEducationTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BasicEducationType[]'>
    


  /**
   * Reference to a field of type 'ScholarshipOfferType'
   */
  export type EnumScholarshipOfferTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ScholarshipOfferType'>
    


  /**
   * Reference to a field of type 'ScholarshipOfferType[]'
   */
  export type ListEnumScholarshipOfferTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ScholarshipOfferType[]'>
    


  /**
   * Reference to a field of type 'HigherEducationScholarshipType'
   */
  export type EnumHigherEducationScholarshipTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'HigherEducationScholarshipType'>
    


  /**
   * Reference to a field of type 'HigherEducationScholarshipType[]'
   */
  export type ListEnumHigherEducationScholarshipTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'HigherEducationScholarshipType[]'>
    


  /**
   * Reference to a field of type 'OfferedCourseType'
   */
  export type EnumOfferedCourseTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OfferedCourseType'>
    


  /**
   * Reference to a field of type 'OfferedCourseType[]'
   */
  export type ListEnumOfferedCourseTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OfferedCourseType[]'>
    


  /**
   * Reference to a field of type 'ApplicationStatus'
   */
  export type EnumApplicationStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ApplicationStatus'>
    


  /**
   * Reference to a field of type 'ApplicationStatus[]'
   */
  export type ListEnumApplicationStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ApplicationStatus[]'>
    


  /**
   * Reference to a field of type 'SolicitationType'
   */
  export type EnumSolicitationTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SolicitationType'>
    


  /**
   * Reference to a field of type 'SolicitationType[]'
   */
  export type ListEnumSolicitationTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SolicitationType[]'>
    
  /**
   * Deep Input Types
   */


  export type IdMappingWhereInput = {
    AND?: IdMappingWhereInput | IdMappingWhereInput[]
    OR?: IdMappingWhereInput[]
    NOT?: IdMappingWhereInput | IdMappingWhereInput[]
    id?: StringFilter<"IdMapping"> | string
    mainId?: StringFilter<"IdMapping"> | string
    newId?: StringFilter<"IdMapping"> | string
    application_id?: StringFilter<"IdMapping"> | string
  }

  export type IdMappingOrderByWithRelationInput = {
    id?: SortOrder
    mainId?: SortOrder
    newId?: SortOrder
    application_id?: SortOrder
  }

  export type IdMappingWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: IdMappingWhereInput | IdMappingWhereInput[]
    OR?: IdMappingWhereInput[]
    NOT?: IdMappingWhereInput | IdMappingWhereInput[]
    mainId?: StringFilter<"IdMapping"> | string
    newId?: StringFilter<"IdMapping"> | string
    application_id?: StringFilter<"IdMapping"> | string
  }, "id">

  export type IdMappingOrderByWithAggregationInput = {
    id?: SortOrder
    mainId?: SortOrder
    newId?: SortOrder
    application_id?: SortOrder
    _count?: IdMappingCountOrderByAggregateInput
    _max?: IdMappingMaxOrderByAggregateInput
    _min?: IdMappingMinOrderByAggregateInput
  }

  export type IdMappingScalarWhereWithAggregatesInput = {
    AND?: IdMappingScalarWhereWithAggregatesInput | IdMappingScalarWhereWithAggregatesInput[]
    OR?: IdMappingScalarWhereWithAggregatesInput[]
    NOT?: IdMappingScalarWhereWithAggregatesInput | IdMappingScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"IdMapping"> | string
    mainId?: StringWithAggregatesFilter<"IdMapping"> | string
    newId?: StringWithAggregatesFilter<"IdMapping"> | string
    application_id?: StringWithAggregatesFilter<"IdMapping"> | string
  }

  export type CandidateWhereInput = {
    AND?: CandidateWhereInput | CandidateWhereInput[]
    OR?: CandidateWhereInput[]
    NOT?: CandidateWhereInput | CandidateWhereInput[]
    id?: StringFilter<"Candidate"> | string
    name?: StringFilter<"Candidate"> | string
    CPF?: StringFilter<"Candidate"> | string
    main_id?: StringNullableFilter<"Candidate"> | string | null
    birthDate?: DateTimeFilter<"Candidate"> | Date | string
    role?: EnumROLEFilter<"Candidate"> | $Enums.ROLE
    createdAt?: DateTimeFilter<"Candidate"> | Date | string
    user_id?: StringNullableFilter<"Candidate"> | string | null
    responsible_id?: StringNullableFilter<"Candidate"> | string | null
    profilePicture?: StringNullableFilter<"Candidate"> | string | null
    email?: StringNullableFilter<"Candidate"> | string | null
    finishedapplication?: BoolFilter<"Candidate"> | boolean
    application_id?: StringNullableFilter<"Candidate"> | string | null
    Application?: ApplicationListRelationFilter
    CreditCard?: CreditCardListRelationFilter
    Expense?: ExpenseListRelationFilter
    Financing?: FinancingListRelationFilter
    IdentityDetails?: IdentityDetailsListRelationFilter
    FamilyMemberIncome?: FamilyMemberIncomeListRelationFilter
    Loan?: LoanListRelationFilter
    OtherExpense?: OtherExpenseListRelationFilter
    Vehicle?: VehicleListRelationFilter
    responsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
    FamillyMember?: FamilyMemberListRelationFilter
    Housing?: HousingListRelationFilter
    MonthlyIncome?: MonthlyIncomeListRelationFilter
    FamilyMemberDisease?: FamilyMemberDiseaseListRelationFilter
    Medication?: MedicationListRelationFilter
    BankAccount?: BankAccountListRelationFilter
    Declarations?: DeclarationsListRelationFilter
  }

  export type CandidateOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    CPF?: SortOrder
    main_id?: SortOrderInput | SortOrder
    birthDate?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    user_id?: SortOrderInput | SortOrder
    responsible_id?: SortOrderInput | SortOrder
    profilePicture?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    finishedapplication?: SortOrder
    application_id?: SortOrderInput | SortOrder
    Application?: ApplicationOrderByRelationAggregateInput
    CreditCard?: CreditCardOrderByRelationAggregateInput
    Expense?: ExpenseOrderByRelationAggregateInput
    Financing?: FinancingOrderByRelationAggregateInput
    IdentityDetails?: IdentityDetailsOrderByRelationAggregateInput
    FamilyMemberIncome?: FamilyMemberIncomeOrderByRelationAggregateInput
    Loan?: LoanOrderByRelationAggregateInput
    OtherExpense?: OtherExpenseOrderByRelationAggregateInput
    Vehicle?: VehicleOrderByRelationAggregateInput
    responsible?: LegalResponsibleOrderByWithRelationInput
    FamillyMember?: FamilyMemberOrderByRelationAggregateInput
    Housing?: HousingOrderByRelationAggregateInput
    MonthlyIncome?: MonthlyIncomeOrderByRelationAggregateInput
    FamilyMemberDisease?: FamilyMemberDiseaseOrderByRelationAggregateInput
    Medication?: MedicationOrderByRelationAggregateInput
    BankAccount?: BankAccountOrderByRelationAggregateInput
    Declarations?: DeclarationsOrderByRelationAggregateInput
  }

  export type CandidateWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    application_id?: string
    id_responsible_id?: CandidateIdResponsible_idCompoundUniqueInput
    AND?: CandidateWhereInput | CandidateWhereInput[]
    OR?: CandidateWhereInput[]
    NOT?: CandidateWhereInput | CandidateWhereInput[]
    name?: StringFilter<"Candidate"> | string
    CPF?: StringFilter<"Candidate"> | string
    main_id?: StringNullableFilter<"Candidate"> | string | null
    birthDate?: DateTimeFilter<"Candidate"> | Date | string
    role?: EnumROLEFilter<"Candidate"> | $Enums.ROLE
    createdAt?: DateTimeFilter<"Candidate"> | Date | string
    user_id?: StringNullableFilter<"Candidate"> | string | null
    responsible_id?: StringNullableFilter<"Candidate"> | string | null
    profilePicture?: StringNullableFilter<"Candidate"> | string | null
    email?: StringNullableFilter<"Candidate"> | string | null
    finishedapplication?: BoolFilter<"Candidate"> | boolean
    Application?: ApplicationListRelationFilter
    CreditCard?: CreditCardListRelationFilter
    Expense?: ExpenseListRelationFilter
    Financing?: FinancingListRelationFilter
    IdentityDetails?: IdentityDetailsListRelationFilter
    FamilyMemberIncome?: FamilyMemberIncomeListRelationFilter
    Loan?: LoanListRelationFilter
    OtherExpense?: OtherExpenseListRelationFilter
    Vehicle?: VehicleListRelationFilter
    responsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
    FamillyMember?: FamilyMemberListRelationFilter
    Housing?: HousingListRelationFilter
    MonthlyIncome?: MonthlyIncomeListRelationFilter
    FamilyMemberDisease?: FamilyMemberDiseaseListRelationFilter
    Medication?: MedicationListRelationFilter
    BankAccount?: BankAccountListRelationFilter
    Declarations?: DeclarationsListRelationFilter
  }, "id" | "application_id" | "id_responsible_id">

  export type CandidateOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    CPF?: SortOrder
    main_id?: SortOrderInput | SortOrder
    birthDate?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    user_id?: SortOrderInput | SortOrder
    responsible_id?: SortOrderInput | SortOrder
    profilePicture?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    finishedapplication?: SortOrder
    application_id?: SortOrderInput | SortOrder
    _count?: CandidateCountOrderByAggregateInput
    _max?: CandidateMaxOrderByAggregateInput
    _min?: CandidateMinOrderByAggregateInput
  }

  export type CandidateScalarWhereWithAggregatesInput = {
    AND?: CandidateScalarWhereWithAggregatesInput | CandidateScalarWhereWithAggregatesInput[]
    OR?: CandidateScalarWhereWithAggregatesInput[]
    NOT?: CandidateScalarWhereWithAggregatesInput | CandidateScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Candidate"> | string
    name?: StringWithAggregatesFilter<"Candidate"> | string
    CPF?: StringWithAggregatesFilter<"Candidate"> | string
    main_id?: StringNullableWithAggregatesFilter<"Candidate"> | string | null
    birthDate?: DateTimeWithAggregatesFilter<"Candidate"> | Date | string
    role?: EnumROLEWithAggregatesFilter<"Candidate"> | $Enums.ROLE
    createdAt?: DateTimeWithAggregatesFilter<"Candidate"> | Date | string
    user_id?: StringNullableWithAggregatesFilter<"Candidate"> | string | null
    responsible_id?: StringNullableWithAggregatesFilter<"Candidate"> | string | null
    profilePicture?: StringNullableWithAggregatesFilter<"Candidate"> | string | null
    email?: StringNullableWithAggregatesFilter<"Candidate"> | string | null
    finishedapplication?: BoolWithAggregatesFilter<"Candidate"> | boolean
    application_id?: StringNullableWithAggregatesFilter<"Candidate"> | string | null
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    role?: EnumROLEFilter<"User"> | $Enums.ROLE
    createdAt?: DateTimeFilter<"User"> | Date | string
    profilePicture?: StringNullableFilter<"User"> | string | null
    EntityDirector?: XOR<EntityDirectorNullableRelationFilter, EntityDirectorWhereInput> | null
    EntitySubsidiary?: XOR<EntitySubsidiaryNullableRelationFilter, EntitySubsidiaryWhereInput> | null
    SocialAssistant?: XOR<SocialAssistantNullableRelationFilter, SocialAssistantWhereInput> | null
    Entity?: XOR<EntityNullableRelationFilter, EntityWhereInput> | null
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    profilePicture?: SortOrderInput | SortOrder
    EntityDirector?: EntityDirectorOrderByWithRelationInput
    EntitySubsidiary?: EntitySubsidiaryOrderByWithRelationInput
    SocialAssistant?: SocialAssistantOrderByWithRelationInput
    Entity?: EntityOrderByWithRelationInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    password?: StringFilter<"User"> | string
    role?: EnumROLEFilter<"User"> | $Enums.ROLE
    createdAt?: DateTimeFilter<"User"> | Date | string
    profilePicture?: StringNullableFilter<"User"> | string | null
    EntityDirector?: XOR<EntityDirectorNullableRelationFilter, EntityDirectorWhereInput> | null
    EntitySubsidiary?: XOR<EntitySubsidiaryNullableRelationFilter, EntitySubsidiaryWhereInput> | null
    SocialAssistant?: XOR<SocialAssistantNullableRelationFilter, SocialAssistantWhereInput> | null
    Entity?: XOR<EntityNullableRelationFilter, EntityWhereInput> | null
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    profilePicture?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    role?: EnumROLEWithAggregatesFilter<"User"> | $Enums.ROLE
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    profilePicture?: StringNullableWithAggregatesFilter<"User"> | string | null
  }

  export type LegalResponsibleWhereInput = {
    AND?: LegalResponsibleWhereInput | LegalResponsibleWhereInput[]
    OR?: LegalResponsibleWhereInput[]
    NOT?: LegalResponsibleWhereInput | LegalResponsibleWhereInput[]
    id?: StringFilter<"LegalResponsible"> | string
    name?: StringFilter<"LegalResponsible"> | string
    main_id?: StringNullableFilter<"LegalResponsible"> | string | null
    CPF?: StringFilter<"LegalResponsible"> | string
    birthDate?: DateTimeFilter<"LegalResponsible"> | Date | string
    livesAtSameAddress?: BoolNullableFilter<"LegalResponsible"> | boolean | null
    institutionType?: EnumINSTITUTION_TYPENullableFilter<"LegalResponsible"> | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: EnumEDUCATION_TYPENullableFilter<"LegalResponsible"> | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: StringNullableFilter<"LegalResponsible"> | string | null
    responsibleShift?: EnumSHIFTNullableFilter<"LegalResponsible"> | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: StringNullableFilter<"LegalResponsible"> | string | null
    role?: EnumROLEFilter<"LegalResponsible"> | $Enums.ROLE
    createdAt?: DateTimeFilter<"LegalResponsible"> | Date | string
    user_id?: StringFilter<"LegalResponsible"> | string
    hasScholarship?: BoolNullableFilter<"LegalResponsible"> | boolean | null
    monthlyAmount?: StringNullableFilter<"LegalResponsible"> | string | null
    percentageOfScholarship?: StringNullableFilter<"LegalResponsible"> | string | null
    application_id?: StringNullableFilter<"LegalResponsible"> | string | null
    IdentityDetails?: IdentityDetailsListRelationFilter
    Candidate?: CandidateListRelationFilter
    Housing?: HousingListRelationFilter
    FamillyMember?: FamilyMemberListRelationFilter
    CreditCard?: CreditCardListRelationFilter
    Expense?: ExpenseListRelationFilter
    Financing?: FinancingListRelationFilter
    Loan?: LoanListRelationFilter
    OtherExpense?: OtherExpenseListRelationFilter
    Vehicle?: VehicleListRelationFilter
    FamilyMemberDisease?: FamilyMemberDiseaseListRelationFilter
    Medication?: MedicationListRelationFilter
    Application?: ApplicationListRelationFilter
    FamilyMemberIncome?: FamilyMemberIncomeListRelationFilter
    MonthlyIncome?: MonthlyIncomeListRelationFilter
    BankAccount?: BankAccountListRelationFilter
    Declarations?: DeclarationsListRelationFilter
  }

  export type LegalResponsibleOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    main_id?: SortOrderInput | SortOrder
    CPF?: SortOrder
    birthDate?: SortOrder
    livesAtSameAddress?: SortOrderInput | SortOrder
    institutionType?: SortOrderInput | SortOrder
    responsibleEducationLevel?: SortOrderInput | SortOrder
    responsibleGradeOrSemester?: SortOrderInput | SortOrder
    responsibleShift?: SortOrderInput | SortOrder
    ResponsibleEducationInstitution?: SortOrderInput | SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    user_id?: SortOrder
    hasScholarship?: SortOrderInput | SortOrder
    monthlyAmount?: SortOrderInput | SortOrder
    percentageOfScholarship?: SortOrderInput | SortOrder
    application_id?: SortOrderInput | SortOrder
    IdentityDetails?: IdentityDetailsOrderByRelationAggregateInput
    Candidate?: CandidateOrderByRelationAggregateInput
    Housing?: HousingOrderByRelationAggregateInput
    FamillyMember?: FamilyMemberOrderByRelationAggregateInput
    CreditCard?: CreditCardOrderByRelationAggregateInput
    Expense?: ExpenseOrderByRelationAggregateInput
    Financing?: FinancingOrderByRelationAggregateInput
    Loan?: LoanOrderByRelationAggregateInput
    OtherExpense?: OtherExpenseOrderByRelationAggregateInput
    Vehicle?: VehicleOrderByRelationAggregateInput
    FamilyMemberDisease?: FamilyMemberDiseaseOrderByRelationAggregateInput
    Medication?: MedicationOrderByRelationAggregateInput
    Application?: ApplicationOrderByRelationAggregateInput
    FamilyMemberIncome?: FamilyMemberIncomeOrderByRelationAggregateInput
    MonthlyIncome?: MonthlyIncomeOrderByRelationAggregateInput
    BankAccount?: BankAccountOrderByRelationAggregateInput
    Declarations?: DeclarationsOrderByRelationAggregateInput
  }

  export type LegalResponsibleWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    application_id?: string
    id_user_id?: LegalResponsibleIdUser_idCompoundUniqueInput
    AND?: LegalResponsibleWhereInput | LegalResponsibleWhereInput[]
    OR?: LegalResponsibleWhereInput[]
    NOT?: LegalResponsibleWhereInput | LegalResponsibleWhereInput[]
    name?: StringFilter<"LegalResponsible"> | string
    main_id?: StringNullableFilter<"LegalResponsible"> | string | null
    CPF?: StringFilter<"LegalResponsible"> | string
    birthDate?: DateTimeFilter<"LegalResponsible"> | Date | string
    livesAtSameAddress?: BoolNullableFilter<"LegalResponsible"> | boolean | null
    institutionType?: EnumINSTITUTION_TYPENullableFilter<"LegalResponsible"> | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: EnumEDUCATION_TYPENullableFilter<"LegalResponsible"> | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: StringNullableFilter<"LegalResponsible"> | string | null
    responsibleShift?: EnumSHIFTNullableFilter<"LegalResponsible"> | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: StringNullableFilter<"LegalResponsible"> | string | null
    role?: EnumROLEFilter<"LegalResponsible"> | $Enums.ROLE
    createdAt?: DateTimeFilter<"LegalResponsible"> | Date | string
    user_id?: StringFilter<"LegalResponsible"> | string
    hasScholarship?: BoolNullableFilter<"LegalResponsible"> | boolean | null
    monthlyAmount?: StringNullableFilter<"LegalResponsible"> | string | null
    percentageOfScholarship?: StringNullableFilter<"LegalResponsible"> | string | null
    IdentityDetails?: IdentityDetailsListRelationFilter
    Candidate?: CandidateListRelationFilter
    Housing?: HousingListRelationFilter
    FamillyMember?: FamilyMemberListRelationFilter
    CreditCard?: CreditCardListRelationFilter
    Expense?: ExpenseListRelationFilter
    Financing?: FinancingListRelationFilter
    Loan?: LoanListRelationFilter
    OtherExpense?: OtherExpenseListRelationFilter
    Vehicle?: VehicleListRelationFilter
    FamilyMemberDisease?: FamilyMemberDiseaseListRelationFilter
    Medication?: MedicationListRelationFilter
    Application?: ApplicationListRelationFilter
    FamilyMemberIncome?: FamilyMemberIncomeListRelationFilter
    MonthlyIncome?: MonthlyIncomeListRelationFilter
    BankAccount?: BankAccountListRelationFilter
    Declarations?: DeclarationsListRelationFilter
  }, "id" | "application_id" | "id_user_id">

  export type LegalResponsibleOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    main_id?: SortOrderInput | SortOrder
    CPF?: SortOrder
    birthDate?: SortOrder
    livesAtSameAddress?: SortOrderInput | SortOrder
    institutionType?: SortOrderInput | SortOrder
    responsibleEducationLevel?: SortOrderInput | SortOrder
    responsibleGradeOrSemester?: SortOrderInput | SortOrder
    responsibleShift?: SortOrderInput | SortOrder
    ResponsibleEducationInstitution?: SortOrderInput | SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    user_id?: SortOrder
    hasScholarship?: SortOrderInput | SortOrder
    monthlyAmount?: SortOrderInput | SortOrder
    percentageOfScholarship?: SortOrderInput | SortOrder
    application_id?: SortOrderInput | SortOrder
    _count?: LegalResponsibleCountOrderByAggregateInput
    _max?: LegalResponsibleMaxOrderByAggregateInput
    _min?: LegalResponsibleMinOrderByAggregateInput
  }

  export type LegalResponsibleScalarWhereWithAggregatesInput = {
    AND?: LegalResponsibleScalarWhereWithAggregatesInput | LegalResponsibleScalarWhereWithAggregatesInput[]
    OR?: LegalResponsibleScalarWhereWithAggregatesInput[]
    NOT?: LegalResponsibleScalarWhereWithAggregatesInput | LegalResponsibleScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"LegalResponsible"> | string
    name?: StringWithAggregatesFilter<"LegalResponsible"> | string
    main_id?: StringNullableWithAggregatesFilter<"LegalResponsible"> | string | null
    CPF?: StringWithAggregatesFilter<"LegalResponsible"> | string
    birthDate?: DateTimeWithAggregatesFilter<"LegalResponsible"> | Date | string
    livesAtSameAddress?: BoolNullableWithAggregatesFilter<"LegalResponsible"> | boolean | null
    institutionType?: EnumINSTITUTION_TYPENullableWithAggregatesFilter<"LegalResponsible"> | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: EnumEDUCATION_TYPENullableWithAggregatesFilter<"LegalResponsible"> | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: StringNullableWithAggregatesFilter<"LegalResponsible"> | string | null
    responsibleShift?: EnumSHIFTNullableWithAggregatesFilter<"LegalResponsible"> | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: StringNullableWithAggregatesFilter<"LegalResponsible"> | string | null
    role?: EnumROLEWithAggregatesFilter<"LegalResponsible"> | $Enums.ROLE
    createdAt?: DateTimeWithAggregatesFilter<"LegalResponsible"> | Date | string
    user_id?: StringWithAggregatesFilter<"LegalResponsible"> | string
    hasScholarship?: BoolNullableWithAggregatesFilter<"LegalResponsible"> | boolean | null
    monthlyAmount?: StringNullableWithAggregatesFilter<"LegalResponsible"> | string | null
    percentageOfScholarship?: StringNullableWithAggregatesFilter<"LegalResponsible"> | string | null
    application_id?: StringNullableWithAggregatesFilter<"LegalResponsible"> | string | null
  }

  export type SocialAssistantWhereInput = {
    AND?: SocialAssistantWhereInput | SocialAssistantWhereInput[]
    OR?: SocialAssistantWhereInput[]
    NOT?: SocialAssistantWhereInput | SocialAssistantWhereInput[]
    id?: StringFilter<"SocialAssistant"> | string
    name?: StringFilter<"SocialAssistant"> | string
    CPF?: StringFilter<"SocialAssistant"> | string
    RG?: StringFilter<"SocialAssistant"> | string
    CRESS?: StringFilter<"SocialAssistant"> | string
    phone?: StringFilter<"SocialAssistant"> | string
    user_id?: StringFilter<"SocialAssistant"> | string
    entity_id?: StringFilter<"SocialAssistant"> | string
    Application?: ApplicationListRelationFilter
    entity?: XOR<EntityRelationFilter, EntityWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
    Announcement?: AnnouncementListRelationFilter
    entity_subsidiary?: EntitySubsidiaryListRelationFilter
  }

  export type SocialAssistantOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    CPF?: SortOrder
    RG?: SortOrder
    CRESS?: SortOrder
    phone?: SortOrder
    user_id?: SortOrder
    entity_id?: SortOrder
    Application?: ApplicationOrderByRelationAggregateInput
    entity?: EntityOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    Announcement?: AnnouncementOrderByRelationAggregateInput
    entity_subsidiary?: EntitySubsidiaryOrderByRelationAggregateInput
  }

  export type SocialAssistantWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    CPF?: string
    RG?: string
    CRESS?: string
    user_id?: string
    AND?: SocialAssistantWhereInput | SocialAssistantWhereInput[]
    OR?: SocialAssistantWhereInput[]
    NOT?: SocialAssistantWhereInput | SocialAssistantWhereInput[]
    name?: StringFilter<"SocialAssistant"> | string
    phone?: StringFilter<"SocialAssistant"> | string
    entity_id?: StringFilter<"SocialAssistant"> | string
    Application?: ApplicationListRelationFilter
    entity?: XOR<EntityRelationFilter, EntityWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
    Announcement?: AnnouncementListRelationFilter
    entity_subsidiary?: EntitySubsidiaryListRelationFilter
  }, "id" | "CPF" | "RG" | "CRESS" | "user_id">

  export type SocialAssistantOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    CPF?: SortOrder
    RG?: SortOrder
    CRESS?: SortOrder
    phone?: SortOrder
    user_id?: SortOrder
    entity_id?: SortOrder
    _count?: SocialAssistantCountOrderByAggregateInput
    _max?: SocialAssistantMaxOrderByAggregateInput
    _min?: SocialAssistantMinOrderByAggregateInput
  }

  export type SocialAssistantScalarWhereWithAggregatesInput = {
    AND?: SocialAssistantScalarWhereWithAggregatesInput | SocialAssistantScalarWhereWithAggregatesInput[]
    OR?: SocialAssistantScalarWhereWithAggregatesInput[]
    NOT?: SocialAssistantScalarWhereWithAggregatesInput | SocialAssistantScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SocialAssistant"> | string
    name?: StringWithAggregatesFilter<"SocialAssistant"> | string
    CPF?: StringWithAggregatesFilter<"SocialAssistant"> | string
    RG?: StringWithAggregatesFilter<"SocialAssistant"> | string
    CRESS?: StringWithAggregatesFilter<"SocialAssistant"> | string
    phone?: StringWithAggregatesFilter<"SocialAssistant"> | string
    user_id?: StringWithAggregatesFilter<"SocialAssistant"> | string
    entity_id?: StringWithAggregatesFilter<"SocialAssistant"> | string
  }

  export type EntityWhereInput = {
    AND?: EntityWhereInput | EntityWhereInput[]
    OR?: EntityWhereInput[]
    NOT?: EntityWhereInput | EntityWhereInput[]
    id?: StringFilter<"Entity"> | string
    name?: StringNullableFilter<"Entity"> | string | null
    socialReason?: StringFilter<"Entity"> | string
    logo?: StringNullableFilter<"Entity"> | string | null
    CNPJ?: StringFilter<"Entity"> | string
    CEP?: StringFilter<"Entity"> | string
    address?: StringFilter<"Entity"> | string
    addressNumber?: IntNullableFilter<"Entity"> | number | null
    neighborhood?: StringFilter<"Entity"> | string
    UF?: EnumCOUNTRYNullableFilter<"Entity"> | $Enums.COUNTRY | null
    city?: StringFilter<"Entity"> | string
    educationalInstitutionCode?: StringNullableFilter<"Entity"> | string | null
    user_id?: StringFilter<"Entity"> | string
    Announcement?: AnnouncementListRelationFilter
    EntityDirector?: EntityDirectorListRelationFilter
    EntitySubsidiary?: EntitySubsidiaryListRelationFilter
    SocialAssistant?: SocialAssistantListRelationFilter
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type EntityOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrderInput | SortOrder
    socialReason?: SortOrder
    logo?: SortOrderInput | SortOrder
    CNPJ?: SortOrder
    CEP?: SortOrder
    address?: SortOrder
    addressNumber?: SortOrderInput | SortOrder
    neighborhood?: SortOrder
    UF?: SortOrderInput | SortOrder
    city?: SortOrder
    educationalInstitutionCode?: SortOrderInput | SortOrder
    user_id?: SortOrder
    Announcement?: AnnouncementOrderByRelationAggregateInput
    EntityDirector?: EntityDirectorOrderByRelationAggregateInput
    EntitySubsidiary?: EntitySubsidiaryOrderByRelationAggregateInput
    SocialAssistant?: SocialAssistantOrderByRelationAggregateInput
    user?: UserOrderByWithRelationInput
  }

  export type EntityWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    CNPJ?: string
    user_id?: string
    AND?: EntityWhereInput | EntityWhereInput[]
    OR?: EntityWhereInput[]
    NOT?: EntityWhereInput | EntityWhereInput[]
    name?: StringNullableFilter<"Entity"> | string | null
    socialReason?: StringFilter<"Entity"> | string
    logo?: StringNullableFilter<"Entity"> | string | null
    CEP?: StringFilter<"Entity"> | string
    address?: StringFilter<"Entity"> | string
    addressNumber?: IntNullableFilter<"Entity"> | number | null
    neighborhood?: StringFilter<"Entity"> | string
    UF?: EnumCOUNTRYNullableFilter<"Entity"> | $Enums.COUNTRY | null
    city?: StringFilter<"Entity"> | string
    educationalInstitutionCode?: StringNullableFilter<"Entity"> | string | null
    Announcement?: AnnouncementListRelationFilter
    EntityDirector?: EntityDirectorListRelationFilter
    EntitySubsidiary?: EntitySubsidiaryListRelationFilter
    SocialAssistant?: SocialAssistantListRelationFilter
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "CNPJ" | "user_id">

  export type EntityOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrderInput | SortOrder
    socialReason?: SortOrder
    logo?: SortOrderInput | SortOrder
    CNPJ?: SortOrder
    CEP?: SortOrder
    address?: SortOrder
    addressNumber?: SortOrderInput | SortOrder
    neighborhood?: SortOrder
    UF?: SortOrderInput | SortOrder
    city?: SortOrder
    educationalInstitutionCode?: SortOrderInput | SortOrder
    user_id?: SortOrder
    _count?: EntityCountOrderByAggregateInput
    _avg?: EntityAvgOrderByAggregateInput
    _max?: EntityMaxOrderByAggregateInput
    _min?: EntityMinOrderByAggregateInput
    _sum?: EntitySumOrderByAggregateInput
  }

  export type EntityScalarWhereWithAggregatesInput = {
    AND?: EntityScalarWhereWithAggregatesInput | EntityScalarWhereWithAggregatesInput[]
    OR?: EntityScalarWhereWithAggregatesInput[]
    NOT?: EntityScalarWhereWithAggregatesInput | EntityScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Entity"> | string
    name?: StringNullableWithAggregatesFilter<"Entity"> | string | null
    socialReason?: StringWithAggregatesFilter<"Entity"> | string
    logo?: StringNullableWithAggregatesFilter<"Entity"> | string | null
    CNPJ?: StringWithAggregatesFilter<"Entity"> | string
    CEP?: StringWithAggregatesFilter<"Entity"> | string
    address?: StringWithAggregatesFilter<"Entity"> | string
    addressNumber?: IntNullableWithAggregatesFilter<"Entity"> | number | null
    neighborhood?: StringWithAggregatesFilter<"Entity"> | string
    UF?: EnumCOUNTRYNullableWithAggregatesFilter<"Entity"> | $Enums.COUNTRY | null
    city?: StringWithAggregatesFilter<"Entity"> | string
    educationalInstitutionCode?: StringNullableWithAggregatesFilter<"Entity"> | string | null
    user_id?: StringWithAggregatesFilter<"Entity"> | string
  }

  export type EntitySubsidiaryWhereInput = {
    AND?: EntitySubsidiaryWhereInput | EntitySubsidiaryWhereInput[]
    OR?: EntitySubsidiaryWhereInput[]
    NOT?: EntitySubsidiaryWhereInput | EntitySubsidiaryWhereInput[]
    id?: StringFilter<"EntitySubsidiary"> | string
    CNPJ?: StringFilter<"EntitySubsidiary"> | string
    name?: StringFilter<"EntitySubsidiary"> | string
    socialReason?: StringFilter<"EntitySubsidiary"> | string
    CEP?: StringFilter<"EntitySubsidiary"> | string
    address?: StringFilter<"EntitySubsidiary"> | string
    addressNumber?: IntNullableFilter<"EntitySubsidiary"> | number | null
    city?: StringNullableFilter<"EntitySubsidiary"> | string | null
    neighborhood?: StringNullableFilter<"EntitySubsidiary"> | string | null
    UF?: EnumCOUNTRYNullableFilter<"EntitySubsidiary"> | $Enums.COUNTRY | null
    educationalInstitutionCode?: StringNullableFilter<"EntitySubsidiary"> | string | null
    entity_id?: StringFilter<"EntitySubsidiary"> | string
    user_id?: StringFilter<"EntitySubsidiary"> | string
    Announcement?: AnnouncementListRelationFilter
    EntityDirector?: EntityDirectorListRelationFilter
    entity?: XOR<EntityRelationFilter, EntityWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
    SocialAssistant?: SocialAssistantListRelationFilter
    EducationLevel?: EducationLevelListRelationFilter
  }

  export type EntitySubsidiaryOrderByWithRelationInput = {
    id?: SortOrder
    CNPJ?: SortOrder
    name?: SortOrder
    socialReason?: SortOrder
    CEP?: SortOrder
    address?: SortOrder
    addressNumber?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    neighborhood?: SortOrderInput | SortOrder
    UF?: SortOrderInput | SortOrder
    educationalInstitutionCode?: SortOrderInput | SortOrder
    entity_id?: SortOrder
    user_id?: SortOrder
    Announcement?: AnnouncementOrderByRelationAggregateInput
    EntityDirector?: EntityDirectorOrderByRelationAggregateInput
    entity?: EntityOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    SocialAssistant?: SocialAssistantOrderByRelationAggregateInput
    EducationLevel?: EducationLevelOrderByRelationAggregateInput
  }

  export type EntitySubsidiaryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    CNPJ?: string
    user_id?: string
    AND?: EntitySubsidiaryWhereInput | EntitySubsidiaryWhereInput[]
    OR?: EntitySubsidiaryWhereInput[]
    NOT?: EntitySubsidiaryWhereInput | EntitySubsidiaryWhereInput[]
    name?: StringFilter<"EntitySubsidiary"> | string
    socialReason?: StringFilter<"EntitySubsidiary"> | string
    CEP?: StringFilter<"EntitySubsidiary"> | string
    address?: StringFilter<"EntitySubsidiary"> | string
    addressNumber?: IntNullableFilter<"EntitySubsidiary"> | number | null
    city?: StringNullableFilter<"EntitySubsidiary"> | string | null
    neighborhood?: StringNullableFilter<"EntitySubsidiary"> | string | null
    UF?: EnumCOUNTRYNullableFilter<"EntitySubsidiary"> | $Enums.COUNTRY | null
    educationalInstitutionCode?: StringNullableFilter<"EntitySubsidiary"> | string | null
    entity_id?: StringFilter<"EntitySubsidiary"> | string
    Announcement?: AnnouncementListRelationFilter
    EntityDirector?: EntityDirectorListRelationFilter
    entity?: XOR<EntityRelationFilter, EntityWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
    SocialAssistant?: SocialAssistantListRelationFilter
    EducationLevel?: EducationLevelListRelationFilter
  }, "id" | "CNPJ" | "user_id">

  export type EntitySubsidiaryOrderByWithAggregationInput = {
    id?: SortOrder
    CNPJ?: SortOrder
    name?: SortOrder
    socialReason?: SortOrder
    CEP?: SortOrder
    address?: SortOrder
    addressNumber?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    neighborhood?: SortOrderInput | SortOrder
    UF?: SortOrderInput | SortOrder
    educationalInstitutionCode?: SortOrderInput | SortOrder
    entity_id?: SortOrder
    user_id?: SortOrder
    _count?: EntitySubsidiaryCountOrderByAggregateInput
    _avg?: EntitySubsidiaryAvgOrderByAggregateInput
    _max?: EntitySubsidiaryMaxOrderByAggregateInput
    _min?: EntitySubsidiaryMinOrderByAggregateInput
    _sum?: EntitySubsidiarySumOrderByAggregateInput
  }

  export type EntitySubsidiaryScalarWhereWithAggregatesInput = {
    AND?: EntitySubsidiaryScalarWhereWithAggregatesInput | EntitySubsidiaryScalarWhereWithAggregatesInput[]
    OR?: EntitySubsidiaryScalarWhereWithAggregatesInput[]
    NOT?: EntitySubsidiaryScalarWhereWithAggregatesInput | EntitySubsidiaryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"EntitySubsidiary"> | string
    CNPJ?: StringWithAggregatesFilter<"EntitySubsidiary"> | string
    name?: StringWithAggregatesFilter<"EntitySubsidiary"> | string
    socialReason?: StringWithAggregatesFilter<"EntitySubsidiary"> | string
    CEP?: StringWithAggregatesFilter<"EntitySubsidiary"> | string
    address?: StringWithAggregatesFilter<"EntitySubsidiary"> | string
    addressNumber?: IntNullableWithAggregatesFilter<"EntitySubsidiary"> | number | null
    city?: StringNullableWithAggregatesFilter<"EntitySubsidiary"> | string | null
    neighborhood?: StringNullableWithAggregatesFilter<"EntitySubsidiary"> | string | null
    UF?: EnumCOUNTRYNullableWithAggregatesFilter<"EntitySubsidiary"> | $Enums.COUNTRY | null
    educationalInstitutionCode?: StringNullableWithAggregatesFilter<"EntitySubsidiary"> | string | null
    entity_id?: StringWithAggregatesFilter<"EntitySubsidiary"> | string
    user_id?: StringWithAggregatesFilter<"EntitySubsidiary"> | string
  }

  export type EntityDirectorWhereInput = {
    AND?: EntityDirectorWhereInput | EntityDirectorWhereInput[]
    OR?: EntityDirectorWhereInput[]
    NOT?: EntityDirectorWhereInput | EntityDirectorWhereInput[]
    id?: StringFilter<"EntityDirector"> | string
    name?: StringFilter<"EntityDirector"> | string
    CPF?: StringFilter<"EntityDirector"> | string
    phone?: StringFilter<"EntityDirector"> | string
    user_id?: StringFilter<"EntityDirector"> | string
    entity_subsidiary_id?: StringNullableFilter<"EntityDirector"> | string | null
    entity_id?: StringNullableFilter<"EntityDirector"> | string | null
    entity?: XOR<EntityNullableRelationFilter, EntityWhereInput> | null
    entity_subsidiary?: XOR<EntitySubsidiaryNullableRelationFilter, EntitySubsidiaryWhereInput> | null
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type EntityDirectorOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    CPF?: SortOrder
    phone?: SortOrder
    user_id?: SortOrder
    entity_subsidiary_id?: SortOrderInput | SortOrder
    entity_id?: SortOrderInput | SortOrder
    entity?: EntityOrderByWithRelationInput
    entity_subsidiary?: EntitySubsidiaryOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type EntityDirectorWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    CPF?: string
    user_id?: string
    AND?: EntityDirectorWhereInput | EntityDirectorWhereInput[]
    OR?: EntityDirectorWhereInput[]
    NOT?: EntityDirectorWhereInput | EntityDirectorWhereInput[]
    name?: StringFilter<"EntityDirector"> | string
    phone?: StringFilter<"EntityDirector"> | string
    entity_subsidiary_id?: StringNullableFilter<"EntityDirector"> | string | null
    entity_id?: StringNullableFilter<"EntityDirector"> | string | null
    entity?: XOR<EntityNullableRelationFilter, EntityWhereInput> | null
    entity_subsidiary?: XOR<EntitySubsidiaryNullableRelationFilter, EntitySubsidiaryWhereInput> | null
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "CPF" | "user_id">

  export type EntityDirectorOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    CPF?: SortOrder
    phone?: SortOrder
    user_id?: SortOrder
    entity_subsidiary_id?: SortOrderInput | SortOrder
    entity_id?: SortOrderInput | SortOrder
    _count?: EntityDirectorCountOrderByAggregateInput
    _max?: EntityDirectorMaxOrderByAggregateInput
    _min?: EntityDirectorMinOrderByAggregateInput
  }

  export type EntityDirectorScalarWhereWithAggregatesInput = {
    AND?: EntityDirectorScalarWhereWithAggregatesInput | EntityDirectorScalarWhereWithAggregatesInput[]
    OR?: EntityDirectorScalarWhereWithAggregatesInput[]
    NOT?: EntityDirectorScalarWhereWithAggregatesInput | EntityDirectorScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"EntityDirector"> | string
    name?: StringWithAggregatesFilter<"EntityDirector"> | string
    CPF?: StringWithAggregatesFilter<"EntityDirector"> | string
    phone?: StringWithAggregatesFilter<"EntityDirector"> | string
    user_id?: StringWithAggregatesFilter<"EntityDirector"> | string
    entity_subsidiary_id?: StringNullableWithAggregatesFilter<"EntityDirector"> | string | null
    entity_id?: StringNullableWithAggregatesFilter<"EntityDirector"> | string | null
  }

  export type IdentityDetailsWhereInput = {
    AND?: IdentityDetailsWhereInput | IdentityDetailsWhereInput[]
    OR?: IdentityDetailsWhereInput[]
    NOT?: IdentityDetailsWhereInput | IdentityDetailsWhereInput[]
    id?: StringFilter<"IdentityDetails"> | string
    fullName?: StringFilter<"IdentityDetails"> | string
    socialName?: StringNullableFilter<"IdentityDetails"> | string | null
    main_id?: StringNullableFilter<"IdentityDetails"> | string | null
    birthDate?: DateTimeFilter<"IdentityDetails"> | Date | string
    gender?: EnumGENDERFilter<"IdentityDetails"> | $Enums.GENDER
    nationality?: StringFilter<"IdentityDetails"> | string
    natural_city?: StringFilter<"IdentityDetails"> | string
    natural_UF?: EnumCOUNTRYFilter<"IdentityDetails"> | $Enums.COUNTRY
    CPF?: StringNullableFilter<"IdentityDetails"> | string | null
    RG?: StringFilter<"IdentityDetails"> | string
    rgIssuingAuthority?: StringFilter<"IdentityDetails"> | string
    rgIssuingState?: StringFilter<"IdentityDetails"> | string
    documentType?: EnumDOCUMENT_TYPENullableFilter<"IdentityDetails"> | $Enums.DOCUMENT_TYPE | null
    CadUnico?: BoolFilter<"IdentityDetails"> | boolean
    hasSevereDeseaseOrUsesMedication?: BoolNullableFilter<"IdentityDetails"> | boolean | null
    hasBankAccount?: BoolNullableFilter<"IdentityDetails"> | boolean | null
    documentNumber?: StringNullableFilter<"IdentityDetails"> | string | null
    documentValidity?: DateTimeNullableFilter<"IdentityDetails"> | Date | string | null
    maritalStatus?: EnumMARITAL_STATUSFilter<"IdentityDetails"> | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFilter<"IdentityDetails"> | $Enums.SkinColor
    religion?: EnumRELIGIONFilter<"IdentityDetails"> | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFilter<"IdentityDetails"> | $Enums.SCHOLARSHIP
    specialNeeds?: BoolNullableFilter<"IdentityDetails"> | boolean | null
    address?: StringNullableFilter<"IdentityDetails"> | string | null
    addressNumber?: StringNullableFilter<"IdentityDetails"> | string | null
    complement?: StringNullableFilter<"IdentityDetails"> | string | null
    neighborhood?: StringNullableFilter<"IdentityDetails"> | string | null
    city?: StringNullableFilter<"IdentityDetails"> | string | null
    UF?: EnumCOUNTRYNullableFilter<"IdentityDetails"> | $Enums.COUNTRY | null
    CEP?: StringNullableFilter<"IdentityDetails"> | string | null
    specialNeedsDescription?: StringNullableFilter<"IdentityDetails"> | string | null
    specialNeedsType?: StringNullableFilter<"IdentityDetails"> | string | null
    hasMedicalReport?: BoolNullableFilter<"IdentityDetails"> | boolean | null
    email?: StringNullableFilter<"IdentityDetails"> | string | null
    landlinePhone?: StringNullableFilter<"IdentityDetails"> | string | null
    workPhone?: StringNullableFilter<"IdentityDetails"> | string | null
    contactNameForMessage?: StringNullableFilter<"IdentityDetails"> | string | null
    profession?: StringFilter<"IdentityDetails"> | string
    enrolledGovernmentProgram?: StringNullableFilter<"IdentityDetails"> | string | null
    NIS?: StringNullableFilter<"IdentityDetails"> | string | null
    incomeSource?: EnumIncomeSourceNullableListFilter<"IdentityDetails">
    livesAlone?: BoolFilter<"IdentityDetails"> | boolean
    intendsToGetScholarship?: BoolFilter<"IdentityDetails"> | boolean
    attendedPublicHighSchool?: BoolNullableFilter<"IdentityDetails"> | boolean | null
    benefitedFromCebasScholarship_basic?: BoolNullableFilter<"IdentityDetails"> | boolean | null
    yearsBenefitedFromCebas_basic?: StringNullableListFilter<"IdentityDetails">
    scholarshipType_basic?: EnumScholarshipTypeNullableFilter<"IdentityDetails"> | $Enums.ScholarshipType | null
    institutionName_basic?: StringNullableFilter<"IdentityDetails"> | string | null
    institutionCNPJ_basic?: StringNullableFilter<"IdentityDetails"> | string | null
    benefitedFromCebasScholarship_professional?: BoolNullableFilter<"IdentityDetails"> | boolean | null
    lastYearBenefitedFromCebas_professional?: StringNullableFilter<"IdentityDetails"> | string | null
    scholarshipType_professional?: EnumScholarshipTypeNullableFilter<"IdentityDetails"> | $Enums.ScholarshipType | null
    institutionName_professional?: StringNullableFilter<"IdentityDetails"> | string | null
    institutionCNPJ_professional?: StringNullableFilter<"IdentityDetails"> | string | null
    nameOfScholarshipCourse_professional?: StringNullableFilter<"IdentityDetails"> | string | null
    candidate_id?: StringNullableFilter<"IdentityDetails"> | string | null
    responsible_id?: StringNullableFilter<"IdentityDetails"> | string | null
    application_id?: StringFilter<"IdentityDetails"> | string
    candidate?: XOR<CandidateNullableRelationFilter, CandidateWhereInput> | null
    responsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
  }

  export type IdentityDetailsOrderByWithRelationInput = {
    id?: SortOrder
    fullName?: SortOrder
    socialName?: SortOrderInput | SortOrder
    main_id?: SortOrderInput | SortOrder
    birthDate?: SortOrder
    gender?: SortOrder
    nationality?: SortOrder
    natural_city?: SortOrder
    natural_UF?: SortOrder
    CPF?: SortOrderInput | SortOrder
    RG?: SortOrder
    rgIssuingAuthority?: SortOrder
    rgIssuingState?: SortOrder
    documentType?: SortOrderInput | SortOrder
    CadUnico?: SortOrder
    hasSevereDeseaseOrUsesMedication?: SortOrderInput | SortOrder
    hasBankAccount?: SortOrderInput | SortOrder
    documentNumber?: SortOrderInput | SortOrder
    documentValidity?: SortOrderInput | SortOrder
    maritalStatus?: SortOrder
    skinColor?: SortOrder
    religion?: SortOrder
    educationLevel?: SortOrder
    specialNeeds?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    addressNumber?: SortOrderInput | SortOrder
    complement?: SortOrderInput | SortOrder
    neighborhood?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    UF?: SortOrderInput | SortOrder
    CEP?: SortOrderInput | SortOrder
    specialNeedsDescription?: SortOrderInput | SortOrder
    specialNeedsType?: SortOrderInput | SortOrder
    hasMedicalReport?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    landlinePhone?: SortOrderInput | SortOrder
    workPhone?: SortOrderInput | SortOrder
    contactNameForMessage?: SortOrderInput | SortOrder
    profession?: SortOrder
    enrolledGovernmentProgram?: SortOrderInput | SortOrder
    NIS?: SortOrderInput | SortOrder
    incomeSource?: SortOrder
    livesAlone?: SortOrder
    intendsToGetScholarship?: SortOrder
    attendedPublicHighSchool?: SortOrderInput | SortOrder
    benefitedFromCebasScholarship_basic?: SortOrderInput | SortOrder
    yearsBenefitedFromCebas_basic?: SortOrder
    scholarshipType_basic?: SortOrderInput | SortOrder
    institutionName_basic?: SortOrderInput | SortOrder
    institutionCNPJ_basic?: SortOrderInput | SortOrder
    benefitedFromCebasScholarship_professional?: SortOrderInput | SortOrder
    lastYearBenefitedFromCebas_professional?: SortOrderInput | SortOrder
    scholarshipType_professional?: SortOrderInput | SortOrder
    institutionName_professional?: SortOrderInput | SortOrder
    institutionCNPJ_professional?: SortOrderInput | SortOrder
    nameOfScholarshipCourse_professional?: SortOrderInput | SortOrder
    candidate_id?: SortOrderInput | SortOrder
    responsible_id?: SortOrderInput | SortOrder
    application_id?: SortOrder
    candidate?: CandidateOrderByWithRelationInput
    responsible?: LegalResponsibleOrderByWithRelationInput
  }

  export type IdentityDetailsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    application_id?: string
    AND?: IdentityDetailsWhereInput | IdentityDetailsWhereInput[]
    OR?: IdentityDetailsWhereInput[]
    NOT?: IdentityDetailsWhereInput | IdentityDetailsWhereInput[]
    fullName?: StringFilter<"IdentityDetails"> | string
    socialName?: StringNullableFilter<"IdentityDetails"> | string | null
    main_id?: StringNullableFilter<"IdentityDetails"> | string | null
    birthDate?: DateTimeFilter<"IdentityDetails"> | Date | string
    gender?: EnumGENDERFilter<"IdentityDetails"> | $Enums.GENDER
    nationality?: StringFilter<"IdentityDetails"> | string
    natural_city?: StringFilter<"IdentityDetails"> | string
    natural_UF?: EnumCOUNTRYFilter<"IdentityDetails"> | $Enums.COUNTRY
    CPF?: StringNullableFilter<"IdentityDetails"> | string | null
    RG?: StringFilter<"IdentityDetails"> | string
    rgIssuingAuthority?: StringFilter<"IdentityDetails"> | string
    rgIssuingState?: StringFilter<"IdentityDetails"> | string
    documentType?: EnumDOCUMENT_TYPENullableFilter<"IdentityDetails"> | $Enums.DOCUMENT_TYPE | null
    CadUnico?: BoolFilter<"IdentityDetails"> | boolean
    hasSevereDeseaseOrUsesMedication?: BoolNullableFilter<"IdentityDetails"> | boolean | null
    hasBankAccount?: BoolNullableFilter<"IdentityDetails"> | boolean | null
    documentNumber?: StringNullableFilter<"IdentityDetails"> | string | null
    documentValidity?: DateTimeNullableFilter<"IdentityDetails"> | Date | string | null
    maritalStatus?: EnumMARITAL_STATUSFilter<"IdentityDetails"> | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFilter<"IdentityDetails"> | $Enums.SkinColor
    religion?: EnumRELIGIONFilter<"IdentityDetails"> | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFilter<"IdentityDetails"> | $Enums.SCHOLARSHIP
    specialNeeds?: BoolNullableFilter<"IdentityDetails"> | boolean | null
    address?: StringNullableFilter<"IdentityDetails"> | string | null
    addressNumber?: StringNullableFilter<"IdentityDetails"> | string | null
    complement?: StringNullableFilter<"IdentityDetails"> | string | null
    neighborhood?: StringNullableFilter<"IdentityDetails"> | string | null
    city?: StringNullableFilter<"IdentityDetails"> | string | null
    UF?: EnumCOUNTRYNullableFilter<"IdentityDetails"> | $Enums.COUNTRY | null
    CEP?: StringNullableFilter<"IdentityDetails"> | string | null
    specialNeedsDescription?: StringNullableFilter<"IdentityDetails"> | string | null
    specialNeedsType?: StringNullableFilter<"IdentityDetails"> | string | null
    hasMedicalReport?: BoolNullableFilter<"IdentityDetails"> | boolean | null
    email?: StringNullableFilter<"IdentityDetails"> | string | null
    landlinePhone?: StringNullableFilter<"IdentityDetails"> | string | null
    workPhone?: StringNullableFilter<"IdentityDetails"> | string | null
    contactNameForMessage?: StringNullableFilter<"IdentityDetails"> | string | null
    profession?: StringFilter<"IdentityDetails"> | string
    enrolledGovernmentProgram?: StringNullableFilter<"IdentityDetails"> | string | null
    NIS?: StringNullableFilter<"IdentityDetails"> | string | null
    incomeSource?: EnumIncomeSourceNullableListFilter<"IdentityDetails">
    livesAlone?: BoolFilter<"IdentityDetails"> | boolean
    intendsToGetScholarship?: BoolFilter<"IdentityDetails"> | boolean
    attendedPublicHighSchool?: BoolNullableFilter<"IdentityDetails"> | boolean | null
    benefitedFromCebasScholarship_basic?: BoolNullableFilter<"IdentityDetails"> | boolean | null
    yearsBenefitedFromCebas_basic?: StringNullableListFilter<"IdentityDetails">
    scholarshipType_basic?: EnumScholarshipTypeNullableFilter<"IdentityDetails"> | $Enums.ScholarshipType | null
    institutionName_basic?: StringNullableFilter<"IdentityDetails"> | string | null
    institutionCNPJ_basic?: StringNullableFilter<"IdentityDetails"> | string | null
    benefitedFromCebasScholarship_professional?: BoolNullableFilter<"IdentityDetails"> | boolean | null
    lastYearBenefitedFromCebas_professional?: StringNullableFilter<"IdentityDetails"> | string | null
    scholarshipType_professional?: EnumScholarshipTypeNullableFilter<"IdentityDetails"> | $Enums.ScholarshipType | null
    institutionName_professional?: StringNullableFilter<"IdentityDetails"> | string | null
    institutionCNPJ_professional?: StringNullableFilter<"IdentityDetails"> | string | null
    nameOfScholarshipCourse_professional?: StringNullableFilter<"IdentityDetails"> | string | null
    candidate_id?: StringNullableFilter<"IdentityDetails"> | string | null
    responsible_id?: StringNullableFilter<"IdentityDetails"> | string | null
    candidate?: XOR<CandidateNullableRelationFilter, CandidateWhereInput> | null
    responsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
  }, "id" | "application_id">

  export type IdentityDetailsOrderByWithAggregationInput = {
    id?: SortOrder
    fullName?: SortOrder
    socialName?: SortOrderInput | SortOrder
    main_id?: SortOrderInput | SortOrder
    birthDate?: SortOrder
    gender?: SortOrder
    nationality?: SortOrder
    natural_city?: SortOrder
    natural_UF?: SortOrder
    CPF?: SortOrderInput | SortOrder
    RG?: SortOrder
    rgIssuingAuthority?: SortOrder
    rgIssuingState?: SortOrder
    documentType?: SortOrderInput | SortOrder
    CadUnico?: SortOrder
    hasSevereDeseaseOrUsesMedication?: SortOrderInput | SortOrder
    hasBankAccount?: SortOrderInput | SortOrder
    documentNumber?: SortOrderInput | SortOrder
    documentValidity?: SortOrderInput | SortOrder
    maritalStatus?: SortOrder
    skinColor?: SortOrder
    religion?: SortOrder
    educationLevel?: SortOrder
    specialNeeds?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    addressNumber?: SortOrderInput | SortOrder
    complement?: SortOrderInput | SortOrder
    neighborhood?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    UF?: SortOrderInput | SortOrder
    CEP?: SortOrderInput | SortOrder
    specialNeedsDescription?: SortOrderInput | SortOrder
    specialNeedsType?: SortOrderInput | SortOrder
    hasMedicalReport?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    landlinePhone?: SortOrderInput | SortOrder
    workPhone?: SortOrderInput | SortOrder
    contactNameForMessage?: SortOrderInput | SortOrder
    profession?: SortOrder
    enrolledGovernmentProgram?: SortOrderInput | SortOrder
    NIS?: SortOrderInput | SortOrder
    incomeSource?: SortOrder
    livesAlone?: SortOrder
    intendsToGetScholarship?: SortOrder
    attendedPublicHighSchool?: SortOrderInput | SortOrder
    benefitedFromCebasScholarship_basic?: SortOrderInput | SortOrder
    yearsBenefitedFromCebas_basic?: SortOrder
    scholarshipType_basic?: SortOrderInput | SortOrder
    institutionName_basic?: SortOrderInput | SortOrder
    institutionCNPJ_basic?: SortOrderInput | SortOrder
    benefitedFromCebasScholarship_professional?: SortOrderInput | SortOrder
    lastYearBenefitedFromCebas_professional?: SortOrderInput | SortOrder
    scholarshipType_professional?: SortOrderInput | SortOrder
    institutionName_professional?: SortOrderInput | SortOrder
    institutionCNPJ_professional?: SortOrderInput | SortOrder
    nameOfScholarshipCourse_professional?: SortOrderInput | SortOrder
    candidate_id?: SortOrderInput | SortOrder
    responsible_id?: SortOrderInput | SortOrder
    application_id?: SortOrder
    _count?: IdentityDetailsCountOrderByAggregateInput
    _max?: IdentityDetailsMaxOrderByAggregateInput
    _min?: IdentityDetailsMinOrderByAggregateInput
  }

  export type IdentityDetailsScalarWhereWithAggregatesInput = {
    AND?: IdentityDetailsScalarWhereWithAggregatesInput | IdentityDetailsScalarWhereWithAggregatesInput[]
    OR?: IdentityDetailsScalarWhereWithAggregatesInput[]
    NOT?: IdentityDetailsScalarWhereWithAggregatesInput | IdentityDetailsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"IdentityDetails"> | string
    fullName?: StringWithAggregatesFilter<"IdentityDetails"> | string
    socialName?: StringNullableWithAggregatesFilter<"IdentityDetails"> | string | null
    main_id?: StringNullableWithAggregatesFilter<"IdentityDetails"> | string | null
    birthDate?: DateTimeWithAggregatesFilter<"IdentityDetails"> | Date | string
    gender?: EnumGENDERWithAggregatesFilter<"IdentityDetails"> | $Enums.GENDER
    nationality?: StringWithAggregatesFilter<"IdentityDetails"> | string
    natural_city?: StringWithAggregatesFilter<"IdentityDetails"> | string
    natural_UF?: EnumCOUNTRYWithAggregatesFilter<"IdentityDetails"> | $Enums.COUNTRY
    CPF?: StringNullableWithAggregatesFilter<"IdentityDetails"> | string | null
    RG?: StringWithAggregatesFilter<"IdentityDetails"> | string
    rgIssuingAuthority?: StringWithAggregatesFilter<"IdentityDetails"> | string
    rgIssuingState?: StringWithAggregatesFilter<"IdentityDetails"> | string
    documentType?: EnumDOCUMENT_TYPENullableWithAggregatesFilter<"IdentityDetails"> | $Enums.DOCUMENT_TYPE | null
    CadUnico?: BoolWithAggregatesFilter<"IdentityDetails"> | boolean
    hasSevereDeseaseOrUsesMedication?: BoolNullableWithAggregatesFilter<"IdentityDetails"> | boolean | null
    hasBankAccount?: BoolNullableWithAggregatesFilter<"IdentityDetails"> | boolean | null
    documentNumber?: StringNullableWithAggregatesFilter<"IdentityDetails"> | string | null
    documentValidity?: DateTimeNullableWithAggregatesFilter<"IdentityDetails"> | Date | string | null
    maritalStatus?: EnumMARITAL_STATUSWithAggregatesFilter<"IdentityDetails"> | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorWithAggregatesFilter<"IdentityDetails"> | $Enums.SkinColor
    religion?: EnumRELIGIONWithAggregatesFilter<"IdentityDetails"> | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPWithAggregatesFilter<"IdentityDetails"> | $Enums.SCHOLARSHIP
    specialNeeds?: BoolNullableWithAggregatesFilter<"IdentityDetails"> | boolean | null
    address?: StringNullableWithAggregatesFilter<"IdentityDetails"> | string | null
    addressNumber?: StringNullableWithAggregatesFilter<"IdentityDetails"> | string | null
    complement?: StringNullableWithAggregatesFilter<"IdentityDetails"> | string | null
    neighborhood?: StringNullableWithAggregatesFilter<"IdentityDetails"> | string | null
    city?: StringNullableWithAggregatesFilter<"IdentityDetails"> | string | null
    UF?: EnumCOUNTRYNullableWithAggregatesFilter<"IdentityDetails"> | $Enums.COUNTRY | null
    CEP?: StringNullableWithAggregatesFilter<"IdentityDetails"> | string | null
    specialNeedsDescription?: StringNullableWithAggregatesFilter<"IdentityDetails"> | string | null
    specialNeedsType?: StringNullableWithAggregatesFilter<"IdentityDetails"> | string | null
    hasMedicalReport?: BoolNullableWithAggregatesFilter<"IdentityDetails"> | boolean | null
    email?: StringNullableWithAggregatesFilter<"IdentityDetails"> | string | null
    landlinePhone?: StringNullableWithAggregatesFilter<"IdentityDetails"> | string | null
    workPhone?: StringNullableWithAggregatesFilter<"IdentityDetails"> | string | null
    contactNameForMessage?: StringNullableWithAggregatesFilter<"IdentityDetails"> | string | null
    profession?: StringWithAggregatesFilter<"IdentityDetails"> | string
    enrolledGovernmentProgram?: StringNullableWithAggregatesFilter<"IdentityDetails"> | string | null
    NIS?: StringNullableWithAggregatesFilter<"IdentityDetails"> | string | null
    incomeSource?: EnumIncomeSourceNullableListFilter<"IdentityDetails">
    livesAlone?: BoolWithAggregatesFilter<"IdentityDetails"> | boolean
    intendsToGetScholarship?: BoolWithAggregatesFilter<"IdentityDetails"> | boolean
    attendedPublicHighSchool?: BoolNullableWithAggregatesFilter<"IdentityDetails"> | boolean | null
    benefitedFromCebasScholarship_basic?: BoolNullableWithAggregatesFilter<"IdentityDetails"> | boolean | null
    yearsBenefitedFromCebas_basic?: StringNullableListFilter<"IdentityDetails">
    scholarshipType_basic?: EnumScholarshipTypeNullableWithAggregatesFilter<"IdentityDetails"> | $Enums.ScholarshipType | null
    institutionName_basic?: StringNullableWithAggregatesFilter<"IdentityDetails"> | string | null
    institutionCNPJ_basic?: StringNullableWithAggregatesFilter<"IdentityDetails"> | string | null
    benefitedFromCebasScholarship_professional?: BoolNullableWithAggregatesFilter<"IdentityDetails"> | boolean | null
    lastYearBenefitedFromCebas_professional?: StringNullableWithAggregatesFilter<"IdentityDetails"> | string | null
    scholarshipType_professional?: EnumScholarshipTypeNullableWithAggregatesFilter<"IdentityDetails"> | $Enums.ScholarshipType | null
    institutionName_professional?: StringNullableWithAggregatesFilter<"IdentityDetails"> | string | null
    institutionCNPJ_professional?: StringNullableWithAggregatesFilter<"IdentityDetails"> | string | null
    nameOfScholarshipCourse_professional?: StringNullableWithAggregatesFilter<"IdentityDetails"> | string | null
    candidate_id?: StringNullableWithAggregatesFilter<"IdentityDetails"> | string | null
    responsible_id?: StringNullableWithAggregatesFilter<"IdentityDetails"> | string | null
    application_id?: StringWithAggregatesFilter<"IdentityDetails"> | string
  }

  export type FamilyMemberWhereInput = {
    AND?: FamilyMemberWhereInput | FamilyMemberWhereInput[]
    OR?: FamilyMemberWhereInput[]
    NOT?: FamilyMemberWhereInput | FamilyMemberWhereInput[]
    id?: StringFilter<"FamilyMember"> | string
    relationship?: EnumRelationshipFilter<"FamilyMember"> | $Enums.Relationship
    otherRelationship?: StringNullableFilter<"FamilyMember"> | string | null
    main_id?: StringNullableFilter<"FamilyMember"> | string | null
    fullName?: StringFilter<"FamilyMember"> | string
    socialName?: StringNullableFilter<"FamilyMember"> | string | null
    birthDate?: DateTimeFilter<"FamilyMember"> | Date | string
    gender?: EnumGENDERFilter<"FamilyMember"> | $Enums.GENDER
    nationality?: StringFilter<"FamilyMember"> | string
    natural_city?: StringFilter<"FamilyMember"> | string
    natural_UF?: EnumCOUNTRYFilter<"FamilyMember"> | $Enums.COUNTRY
    CPF?: StringFilter<"FamilyMember"> | string
    RG?: StringFilter<"FamilyMember"> | string
    rgIssuingAuthority?: StringFilter<"FamilyMember"> | string
    rgIssuingState?: StringFilter<"FamilyMember"> | string
    documentType?: EnumDOCUMENT_TYPENullableFilter<"FamilyMember"> | $Enums.DOCUMENT_TYPE | null
    documentNumber?: StringNullableFilter<"FamilyMember"> | string | null
    documentValidity?: DateTimeNullableFilter<"FamilyMember"> | Date | string | null
    numberOfBirthRegister?: StringNullableFilter<"FamilyMember"> | string | null
    bookOfBirthRegister?: StringNullableFilter<"FamilyMember"> | string | null
    pageOfBirthRegister?: StringNullableFilter<"FamilyMember"> | string | null
    maritalStatus?: EnumMARITAL_STATUSFilter<"FamilyMember"> | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFilter<"FamilyMember"> | $Enums.SkinColor
    religion?: EnumRELIGIONFilter<"FamilyMember"> | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFilter<"FamilyMember"> | $Enums.SCHOLARSHIP
    specialNeeds?: BoolNullableFilter<"FamilyMember"> | boolean | null
    specialNeedsDescription?: StringNullableFilter<"FamilyMember"> | string | null
    specialNeedsType?: StringNullableFilter<"FamilyMember"> | string | null
    hasMedicalReport?: BoolNullableFilter<"FamilyMember"> | boolean | null
    landlinePhone?: StringNullableFilter<"FamilyMember"> | string | null
    workPhone?: StringNullableFilter<"FamilyMember"> | string | null
    contactNameForMessage?: StringNullableFilter<"FamilyMember"> | string | null
    email?: StringNullableFilter<"FamilyMember"> | string | null
    profession?: StringFilter<"FamilyMember"> | string
    enrolledGovernmentProgram?: StringNullableFilter<"FamilyMember"> | string | null
    NIS?: StringNullableFilter<"FamilyMember"> | string | null
    educationPlace?: EnumINSTITUTION_TYPENullableFilter<"FamilyMember"> | $Enums.INSTITUTION_TYPE | null
    institutionName?: StringNullableFilter<"FamilyMember"> | string | null
    coursingEducationLevel?: EnumEDUCATION_TYPENullableFilter<"FamilyMember"> | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: StringNullableFilter<"FamilyMember"> | string | null
    turnOfEducation?: EnumSHIFTNullableFilter<"FamilyMember"> | $Enums.SHIFT | null
    hasScholarship?: BoolNullableFilter<"FamilyMember"> | boolean | null
    percentageOfScholarship?: StringNullableFilter<"FamilyMember"> | string | null
    monthlyAmount?: StringNullableFilter<"FamilyMember"> | string | null
    candidate_id?: StringNullableFilter<"FamilyMember"> | string | null
    attendedPublicHighSchool?: BoolNullableFilter<"FamilyMember"> | boolean | null
    benefitedFromCebasScholarship_basic?: BoolNullableFilter<"FamilyMember"> | boolean | null
    benefitedFromCebasScholarship_professional?: BoolNullableFilter<"FamilyMember"> | boolean | null
    CadUnico?: BoolNullableFilter<"FamilyMember"> | boolean | null
    hasSevereDeseaseOrUsesMedication?: BoolNullableFilter<"FamilyMember"> | boolean | null
    hasBankAccount?: BoolNullableFilter<"FamilyMember"> | boolean | null
    incomeSource?: EnumIncomeSourceNullableListFilter<"FamilyMember">
    legalResponsibleId?: StringNullableFilter<"FamilyMember"> | string | null
    application_id?: StringFilter<"FamilyMember"> | string
    CreditCard?: CreditCardListRelationFilter
    FamilyMemberIncome?: FamilyMemberIncomeListRelationFilter
    Financing?: FinancingListRelationFilter
    Loan?: LoanListRelationFilter
    MonthlyIncome?: MonthlyIncomeListRelationFilter
    OtherExpense?: OtherExpenseListRelationFilter
    FamilyMemberToVehicle?: FamilyMemberToVehicleListRelationFilter
    FamilyMemberDisease?: FamilyMemberDiseaseListRelationFilter
    candidate?: XOR<CandidateNullableRelationFilter, CandidateWhereInput> | null
    Medication?: MedicationListRelationFilter
    LegalResponsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
    BankAccount?: BankAccountListRelationFilter
    Declarations?: DeclarationsListRelationFilter
  }

  export type FamilyMemberOrderByWithRelationInput = {
    id?: SortOrder
    relationship?: SortOrder
    otherRelationship?: SortOrderInput | SortOrder
    main_id?: SortOrderInput | SortOrder
    fullName?: SortOrder
    socialName?: SortOrderInput | SortOrder
    birthDate?: SortOrder
    gender?: SortOrder
    nationality?: SortOrder
    natural_city?: SortOrder
    natural_UF?: SortOrder
    CPF?: SortOrder
    RG?: SortOrder
    rgIssuingAuthority?: SortOrder
    rgIssuingState?: SortOrder
    documentType?: SortOrderInput | SortOrder
    documentNumber?: SortOrderInput | SortOrder
    documentValidity?: SortOrderInput | SortOrder
    numberOfBirthRegister?: SortOrderInput | SortOrder
    bookOfBirthRegister?: SortOrderInput | SortOrder
    pageOfBirthRegister?: SortOrderInput | SortOrder
    maritalStatus?: SortOrder
    skinColor?: SortOrder
    religion?: SortOrder
    educationLevel?: SortOrder
    specialNeeds?: SortOrderInput | SortOrder
    specialNeedsDescription?: SortOrderInput | SortOrder
    specialNeedsType?: SortOrderInput | SortOrder
    hasMedicalReport?: SortOrderInput | SortOrder
    landlinePhone?: SortOrderInput | SortOrder
    workPhone?: SortOrderInput | SortOrder
    contactNameForMessage?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    profession?: SortOrder
    enrolledGovernmentProgram?: SortOrderInput | SortOrder
    NIS?: SortOrderInput | SortOrder
    educationPlace?: SortOrderInput | SortOrder
    institutionName?: SortOrderInput | SortOrder
    coursingEducationLevel?: SortOrderInput | SortOrder
    cycleOfEducation?: SortOrderInput | SortOrder
    turnOfEducation?: SortOrderInput | SortOrder
    hasScholarship?: SortOrderInput | SortOrder
    percentageOfScholarship?: SortOrderInput | SortOrder
    monthlyAmount?: SortOrderInput | SortOrder
    candidate_id?: SortOrderInput | SortOrder
    attendedPublicHighSchool?: SortOrderInput | SortOrder
    benefitedFromCebasScholarship_basic?: SortOrderInput | SortOrder
    benefitedFromCebasScholarship_professional?: SortOrderInput | SortOrder
    CadUnico?: SortOrderInput | SortOrder
    hasSevereDeseaseOrUsesMedication?: SortOrderInput | SortOrder
    hasBankAccount?: SortOrderInput | SortOrder
    incomeSource?: SortOrder
    legalResponsibleId?: SortOrderInput | SortOrder
    application_id?: SortOrder
    CreditCard?: CreditCardOrderByRelationAggregateInput
    FamilyMemberIncome?: FamilyMemberIncomeOrderByRelationAggregateInput
    Financing?: FinancingOrderByRelationAggregateInput
    Loan?: LoanOrderByRelationAggregateInput
    MonthlyIncome?: MonthlyIncomeOrderByRelationAggregateInput
    OtherExpense?: OtherExpenseOrderByRelationAggregateInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleOrderByRelationAggregateInput
    FamilyMemberDisease?: FamilyMemberDiseaseOrderByRelationAggregateInput
    candidate?: CandidateOrderByWithRelationInput
    Medication?: MedicationOrderByRelationAggregateInput
    LegalResponsible?: LegalResponsibleOrderByWithRelationInput
    BankAccount?: BankAccountOrderByRelationAggregateInput
    Declarations?: DeclarationsOrderByRelationAggregateInput
  }

  export type FamilyMemberWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    application_id_main_id?: FamilyMemberApplication_idMain_idCompoundUniqueInput
    AND?: FamilyMemberWhereInput | FamilyMemberWhereInput[]
    OR?: FamilyMemberWhereInput[]
    NOT?: FamilyMemberWhereInput | FamilyMemberWhereInput[]
    relationship?: EnumRelationshipFilter<"FamilyMember"> | $Enums.Relationship
    otherRelationship?: StringNullableFilter<"FamilyMember"> | string | null
    main_id?: StringNullableFilter<"FamilyMember"> | string | null
    fullName?: StringFilter<"FamilyMember"> | string
    socialName?: StringNullableFilter<"FamilyMember"> | string | null
    birthDate?: DateTimeFilter<"FamilyMember"> | Date | string
    gender?: EnumGENDERFilter<"FamilyMember"> | $Enums.GENDER
    nationality?: StringFilter<"FamilyMember"> | string
    natural_city?: StringFilter<"FamilyMember"> | string
    natural_UF?: EnumCOUNTRYFilter<"FamilyMember"> | $Enums.COUNTRY
    CPF?: StringFilter<"FamilyMember"> | string
    RG?: StringFilter<"FamilyMember"> | string
    rgIssuingAuthority?: StringFilter<"FamilyMember"> | string
    rgIssuingState?: StringFilter<"FamilyMember"> | string
    documentType?: EnumDOCUMENT_TYPENullableFilter<"FamilyMember"> | $Enums.DOCUMENT_TYPE | null
    documentNumber?: StringNullableFilter<"FamilyMember"> | string | null
    documentValidity?: DateTimeNullableFilter<"FamilyMember"> | Date | string | null
    numberOfBirthRegister?: StringNullableFilter<"FamilyMember"> | string | null
    bookOfBirthRegister?: StringNullableFilter<"FamilyMember"> | string | null
    pageOfBirthRegister?: StringNullableFilter<"FamilyMember"> | string | null
    maritalStatus?: EnumMARITAL_STATUSFilter<"FamilyMember"> | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFilter<"FamilyMember"> | $Enums.SkinColor
    religion?: EnumRELIGIONFilter<"FamilyMember"> | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFilter<"FamilyMember"> | $Enums.SCHOLARSHIP
    specialNeeds?: BoolNullableFilter<"FamilyMember"> | boolean | null
    specialNeedsDescription?: StringNullableFilter<"FamilyMember"> | string | null
    specialNeedsType?: StringNullableFilter<"FamilyMember"> | string | null
    hasMedicalReport?: BoolNullableFilter<"FamilyMember"> | boolean | null
    landlinePhone?: StringNullableFilter<"FamilyMember"> | string | null
    workPhone?: StringNullableFilter<"FamilyMember"> | string | null
    contactNameForMessage?: StringNullableFilter<"FamilyMember"> | string | null
    email?: StringNullableFilter<"FamilyMember"> | string | null
    profession?: StringFilter<"FamilyMember"> | string
    enrolledGovernmentProgram?: StringNullableFilter<"FamilyMember"> | string | null
    NIS?: StringNullableFilter<"FamilyMember"> | string | null
    educationPlace?: EnumINSTITUTION_TYPENullableFilter<"FamilyMember"> | $Enums.INSTITUTION_TYPE | null
    institutionName?: StringNullableFilter<"FamilyMember"> | string | null
    coursingEducationLevel?: EnumEDUCATION_TYPENullableFilter<"FamilyMember"> | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: StringNullableFilter<"FamilyMember"> | string | null
    turnOfEducation?: EnumSHIFTNullableFilter<"FamilyMember"> | $Enums.SHIFT | null
    hasScholarship?: BoolNullableFilter<"FamilyMember"> | boolean | null
    percentageOfScholarship?: StringNullableFilter<"FamilyMember"> | string | null
    monthlyAmount?: StringNullableFilter<"FamilyMember"> | string | null
    candidate_id?: StringNullableFilter<"FamilyMember"> | string | null
    attendedPublicHighSchool?: BoolNullableFilter<"FamilyMember"> | boolean | null
    benefitedFromCebasScholarship_basic?: BoolNullableFilter<"FamilyMember"> | boolean | null
    benefitedFromCebasScholarship_professional?: BoolNullableFilter<"FamilyMember"> | boolean | null
    CadUnico?: BoolNullableFilter<"FamilyMember"> | boolean | null
    hasSevereDeseaseOrUsesMedication?: BoolNullableFilter<"FamilyMember"> | boolean | null
    hasBankAccount?: BoolNullableFilter<"FamilyMember"> | boolean | null
    incomeSource?: EnumIncomeSourceNullableListFilter<"FamilyMember">
    legalResponsibleId?: StringNullableFilter<"FamilyMember"> | string | null
    application_id?: StringFilter<"FamilyMember"> | string
    CreditCard?: CreditCardListRelationFilter
    FamilyMemberIncome?: FamilyMemberIncomeListRelationFilter
    Financing?: FinancingListRelationFilter
    Loan?: LoanListRelationFilter
    MonthlyIncome?: MonthlyIncomeListRelationFilter
    OtherExpense?: OtherExpenseListRelationFilter
    FamilyMemberToVehicle?: FamilyMemberToVehicleListRelationFilter
    FamilyMemberDisease?: FamilyMemberDiseaseListRelationFilter
    candidate?: XOR<CandidateNullableRelationFilter, CandidateWhereInput> | null
    Medication?: MedicationListRelationFilter
    LegalResponsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
    BankAccount?: BankAccountListRelationFilter
    Declarations?: DeclarationsListRelationFilter
  }, "id" | "application_id_main_id">

  export type FamilyMemberOrderByWithAggregationInput = {
    id?: SortOrder
    relationship?: SortOrder
    otherRelationship?: SortOrderInput | SortOrder
    main_id?: SortOrderInput | SortOrder
    fullName?: SortOrder
    socialName?: SortOrderInput | SortOrder
    birthDate?: SortOrder
    gender?: SortOrder
    nationality?: SortOrder
    natural_city?: SortOrder
    natural_UF?: SortOrder
    CPF?: SortOrder
    RG?: SortOrder
    rgIssuingAuthority?: SortOrder
    rgIssuingState?: SortOrder
    documentType?: SortOrderInput | SortOrder
    documentNumber?: SortOrderInput | SortOrder
    documentValidity?: SortOrderInput | SortOrder
    numberOfBirthRegister?: SortOrderInput | SortOrder
    bookOfBirthRegister?: SortOrderInput | SortOrder
    pageOfBirthRegister?: SortOrderInput | SortOrder
    maritalStatus?: SortOrder
    skinColor?: SortOrder
    religion?: SortOrder
    educationLevel?: SortOrder
    specialNeeds?: SortOrderInput | SortOrder
    specialNeedsDescription?: SortOrderInput | SortOrder
    specialNeedsType?: SortOrderInput | SortOrder
    hasMedicalReport?: SortOrderInput | SortOrder
    landlinePhone?: SortOrderInput | SortOrder
    workPhone?: SortOrderInput | SortOrder
    contactNameForMessage?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    profession?: SortOrder
    enrolledGovernmentProgram?: SortOrderInput | SortOrder
    NIS?: SortOrderInput | SortOrder
    educationPlace?: SortOrderInput | SortOrder
    institutionName?: SortOrderInput | SortOrder
    coursingEducationLevel?: SortOrderInput | SortOrder
    cycleOfEducation?: SortOrderInput | SortOrder
    turnOfEducation?: SortOrderInput | SortOrder
    hasScholarship?: SortOrderInput | SortOrder
    percentageOfScholarship?: SortOrderInput | SortOrder
    monthlyAmount?: SortOrderInput | SortOrder
    candidate_id?: SortOrderInput | SortOrder
    attendedPublicHighSchool?: SortOrderInput | SortOrder
    benefitedFromCebasScholarship_basic?: SortOrderInput | SortOrder
    benefitedFromCebasScholarship_professional?: SortOrderInput | SortOrder
    CadUnico?: SortOrderInput | SortOrder
    hasSevereDeseaseOrUsesMedication?: SortOrderInput | SortOrder
    hasBankAccount?: SortOrderInput | SortOrder
    incomeSource?: SortOrder
    legalResponsibleId?: SortOrderInput | SortOrder
    application_id?: SortOrder
    _count?: FamilyMemberCountOrderByAggregateInput
    _max?: FamilyMemberMaxOrderByAggregateInput
    _min?: FamilyMemberMinOrderByAggregateInput
  }

  export type FamilyMemberScalarWhereWithAggregatesInput = {
    AND?: FamilyMemberScalarWhereWithAggregatesInput | FamilyMemberScalarWhereWithAggregatesInput[]
    OR?: FamilyMemberScalarWhereWithAggregatesInput[]
    NOT?: FamilyMemberScalarWhereWithAggregatesInput | FamilyMemberScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"FamilyMember"> | string
    relationship?: EnumRelationshipWithAggregatesFilter<"FamilyMember"> | $Enums.Relationship
    otherRelationship?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    main_id?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    fullName?: StringWithAggregatesFilter<"FamilyMember"> | string
    socialName?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    birthDate?: DateTimeWithAggregatesFilter<"FamilyMember"> | Date | string
    gender?: EnumGENDERWithAggregatesFilter<"FamilyMember"> | $Enums.GENDER
    nationality?: StringWithAggregatesFilter<"FamilyMember"> | string
    natural_city?: StringWithAggregatesFilter<"FamilyMember"> | string
    natural_UF?: EnumCOUNTRYWithAggregatesFilter<"FamilyMember"> | $Enums.COUNTRY
    CPF?: StringWithAggregatesFilter<"FamilyMember"> | string
    RG?: StringWithAggregatesFilter<"FamilyMember"> | string
    rgIssuingAuthority?: StringWithAggregatesFilter<"FamilyMember"> | string
    rgIssuingState?: StringWithAggregatesFilter<"FamilyMember"> | string
    documentType?: EnumDOCUMENT_TYPENullableWithAggregatesFilter<"FamilyMember"> | $Enums.DOCUMENT_TYPE | null
    documentNumber?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    documentValidity?: DateTimeNullableWithAggregatesFilter<"FamilyMember"> | Date | string | null
    numberOfBirthRegister?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    bookOfBirthRegister?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    pageOfBirthRegister?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    maritalStatus?: EnumMARITAL_STATUSWithAggregatesFilter<"FamilyMember"> | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorWithAggregatesFilter<"FamilyMember"> | $Enums.SkinColor
    religion?: EnumRELIGIONWithAggregatesFilter<"FamilyMember"> | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPWithAggregatesFilter<"FamilyMember"> | $Enums.SCHOLARSHIP
    specialNeeds?: BoolNullableWithAggregatesFilter<"FamilyMember"> | boolean | null
    specialNeedsDescription?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    specialNeedsType?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    hasMedicalReport?: BoolNullableWithAggregatesFilter<"FamilyMember"> | boolean | null
    landlinePhone?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    workPhone?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    contactNameForMessage?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    email?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    profession?: StringWithAggregatesFilter<"FamilyMember"> | string
    enrolledGovernmentProgram?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    NIS?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    educationPlace?: EnumINSTITUTION_TYPENullableWithAggregatesFilter<"FamilyMember"> | $Enums.INSTITUTION_TYPE | null
    institutionName?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    coursingEducationLevel?: EnumEDUCATION_TYPENullableWithAggregatesFilter<"FamilyMember"> | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    turnOfEducation?: EnumSHIFTNullableWithAggregatesFilter<"FamilyMember"> | $Enums.SHIFT | null
    hasScholarship?: BoolNullableWithAggregatesFilter<"FamilyMember"> | boolean | null
    percentageOfScholarship?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    monthlyAmount?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    candidate_id?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    attendedPublicHighSchool?: BoolNullableWithAggregatesFilter<"FamilyMember"> | boolean | null
    benefitedFromCebasScholarship_basic?: BoolNullableWithAggregatesFilter<"FamilyMember"> | boolean | null
    benefitedFromCebasScholarship_professional?: BoolNullableWithAggregatesFilter<"FamilyMember"> | boolean | null
    CadUnico?: BoolNullableWithAggregatesFilter<"FamilyMember"> | boolean | null
    hasSevereDeseaseOrUsesMedication?: BoolNullableWithAggregatesFilter<"FamilyMember"> | boolean | null
    hasBankAccount?: BoolNullableWithAggregatesFilter<"FamilyMember"> | boolean | null
    incomeSource?: EnumIncomeSourceNullableListFilter<"FamilyMember">
    legalResponsibleId?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    application_id?: StringWithAggregatesFilter<"FamilyMember"> | string
  }

  export type HousingWhereInput = {
    AND?: HousingWhereInput | HousingWhereInput[]
    OR?: HousingWhereInput[]
    NOT?: HousingWhereInput | HousingWhereInput[]
    id?: StringFilter<"Housing"> | string
    propertyStatus?: EnumPropertyStatusFilter<"Housing"> | $Enums.PropertyStatus
    contractType?: EnumContractTypeNullableFilter<"Housing"> | $Enums.ContractType | null
    main_id?: StringNullableFilter<"Housing"> | string | null
    grantorName?: StringNullableFilter<"Housing"> | string | null
    timeLivingInProperty?: EnumTimeLivingInPropertyFilter<"Housing"> | $Enums.TimeLivingInProperty
    domicileType?: EnumDomicileTypeFilter<"Housing"> | $Enums.DomicileType
    numberOfRooms?: EnumNumberOfRoomsFilter<"Housing"> | $Enums.NumberOfRooms
    numberOfBedrooms?: IntFilter<"Housing"> | number
    candidate_id?: StringNullableFilter<"Housing"> | string | null
    responsible_id?: StringNullableFilter<"Housing"> | string | null
    application_id?: StringFilter<"Housing"> | string
    candidate?: XOR<CandidateNullableRelationFilter, CandidateWhereInput> | null
    responsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
  }

  export type HousingOrderByWithRelationInput = {
    id?: SortOrder
    propertyStatus?: SortOrder
    contractType?: SortOrderInput | SortOrder
    main_id?: SortOrderInput | SortOrder
    grantorName?: SortOrderInput | SortOrder
    timeLivingInProperty?: SortOrder
    domicileType?: SortOrder
    numberOfRooms?: SortOrder
    numberOfBedrooms?: SortOrder
    candidate_id?: SortOrderInput | SortOrder
    responsible_id?: SortOrderInput | SortOrder
    application_id?: SortOrder
    candidate?: CandidateOrderByWithRelationInput
    responsible?: LegalResponsibleOrderByWithRelationInput
  }

  export type HousingWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    application_id?: string
    application_id_main_id?: HousingApplication_idMain_idCompoundUniqueInput
    AND?: HousingWhereInput | HousingWhereInput[]
    OR?: HousingWhereInput[]
    NOT?: HousingWhereInput | HousingWhereInput[]
    propertyStatus?: EnumPropertyStatusFilter<"Housing"> | $Enums.PropertyStatus
    contractType?: EnumContractTypeNullableFilter<"Housing"> | $Enums.ContractType | null
    main_id?: StringNullableFilter<"Housing"> | string | null
    grantorName?: StringNullableFilter<"Housing"> | string | null
    timeLivingInProperty?: EnumTimeLivingInPropertyFilter<"Housing"> | $Enums.TimeLivingInProperty
    domicileType?: EnumDomicileTypeFilter<"Housing"> | $Enums.DomicileType
    numberOfRooms?: EnumNumberOfRoomsFilter<"Housing"> | $Enums.NumberOfRooms
    numberOfBedrooms?: IntFilter<"Housing"> | number
    candidate_id?: StringNullableFilter<"Housing"> | string | null
    responsible_id?: StringNullableFilter<"Housing"> | string | null
    candidate?: XOR<CandidateNullableRelationFilter, CandidateWhereInput> | null
    responsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
  }, "id" | "application_id" | "application_id_main_id">

  export type HousingOrderByWithAggregationInput = {
    id?: SortOrder
    propertyStatus?: SortOrder
    contractType?: SortOrderInput | SortOrder
    main_id?: SortOrderInput | SortOrder
    grantorName?: SortOrderInput | SortOrder
    timeLivingInProperty?: SortOrder
    domicileType?: SortOrder
    numberOfRooms?: SortOrder
    numberOfBedrooms?: SortOrder
    candidate_id?: SortOrderInput | SortOrder
    responsible_id?: SortOrderInput | SortOrder
    application_id?: SortOrder
    _count?: HousingCountOrderByAggregateInput
    _avg?: HousingAvgOrderByAggregateInput
    _max?: HousingMaxOrderByAggregateInput
    _min?: HousingMinOrderByAggregateInput
    _sum?: HousingSumOrderByAggregateInput
  }

  export type HousingScalarWhereWithAggregatesInput = {
    AND?: HousingScalarWhereWithAggregatesInput | HousingScalarWhereWithAggregatesInput[]
    OR?: HousingScalarWhereWithAggregatesInput[]
    NOT?: HousingScalarWhereWithAggregatesInput | HousingScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Housing"> | string
    propertyStatus?: EnumPropertyStatusWithAggregatesFilter<"Housing"> | $Enums.PropertyStatus
    contractType?: EnumContractTypeNullableWithAggregatesFilter<"Housing"> | $Enums.ContractType | null
    main_id?: StringNullableWithAggregatesFilter<"Housing"> | string | null
    grantorName?: StringNullableWithAggregatesFilter<"Housing"> | string | null
    timeLivingInProperty?: EnumTimeLivingInPropertyWithAggregatesFilter<"Housing"> | $Enums.TimeLivingInProperty
    domicileType?: EnumDomicileTypeWithAggregatesFilter<"Housing"> | $Enums.DomicileType
    numberOfRooms?: EnumNumberOfRoomsWithAggregatesFilter<"Housing"> | $Enums.NumberOfRooms
    numberOfBedrooms?: IntWithAggregatesFilter<"Housing"> | number
    candidate_id?: StringNullableWithAggregatesFilter<"Housing"> | string | null
    responsible_id?: StringNullableWithAggregatesFilter<"Housing"> | string | null
    application_id?: StringWithAggregatesFilter<"Housing"> | string
  }

  export type VehicleWhereInput = {
    AND?: VehicleWhereInput | VehicleWhereInput[]
    OR?: VehicleWhereInput[]
    NOT?: VehicleWhereInput | VehicleWhereInput[]
    id?: StringFilter<"Vehicle"> | string
    vehicleType?: EnumVehicleTypeFilter<"Vehicle"> | $Enums.VehicleType
    modelAndBrand?: StringFilter<"Vehicle"> | string
    main_id?: StringNullableFilter<"Vehicle"> | string | null
    manufacturingYear?: IntFilter<"Vehicle"> | number
    situation?: EnumVehicleSituationFilter<"Vehicle"> | $Enums.VehicleSituation
    financedMonths?: IntNullableFilter<"Vehicle"> | number | null
    monthsToPayOff?: IntNullableFilter<"Vehicle"> | number | null
    hasInsurance?: BoolFilter<"Vehicle"> | boolean
    insuranceValue?: FloatNullableFilter<"Vehicle"> | number | null
    usage?: EnumVehicleUsageFilter<"Vehicle"> | $Enums.VehicleUsage
    candidate_id?: StringNullableFilter<"Vehicle"> | string | null
    owners_id?: StringNullableListFilter<"Vehicle">
    legalResponsibleId?: StringNullableFilter<"Vehicle"> | string | null
    application_id?: StringFilter<"Vehicle"> | string
    candidate?: XOR<CandidateNullableRelationFilter, CandidateWhereInput> | null
    FamilyMemberToVehicle?: FamilyMemberToVehicleListRelationFilter
    LegalResponsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
  }

  export type VehicleOrderByWithRelationInput = {
    id?: SortOrder
    vehicleType?: SortOrder
    modelAndBrand?: SortOrder
    main_id?: SortOrderInput | SortOrder
    manufacturingYear?: SortOrder
    situation?: SortOrder
    financedMonths?: SortOrderInput | SortOrder
    monthsToPayOff?: SortOrderInput | SortOrder
    hasInsurance?: SortOrder
    insuranceValue?: SortOrderInput | SortOrder
    usage?: SortOrder
    candidate_id?: SortOrderInput | SortOrder
    owners_id?: SortOrder
    legalResponsibleId?: SortOrderInput | SortOrder
    application_id?: SortOrder
    candidate?: CandidateOrderByWithRelationInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleOrderByRelationAggregateInput
    LegalResponsible?: LegalResponsibleOrderByWithRelationInput
  }

  export type VehicleWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    application_id_main_id?: VehicleApplication_idMain_idCompoundUniqueInput
    AND?: VehicleWhereInput | VehicleWhereInput[]
    OR?: VehicleWhereInput[]
    NOT?: VehicleWhereInput | VehicleWhereInput[]
    vehicleType?: EnumVehicleTypeFilter<"Vehicle"> | $Enums.VehicleType
    modelAndBrand?: StringFilter<"Vehicle"> | string
    main_id?: StringNullableFilter<"Vehicle"> | string | null
    manufacturingYear?: IntFilter<"Vehicle"> | number
    situation?: EnumVehicleSituationFilter<"Vehicle"> | $Enums.VehicleSituation
    financedMonths?: IntNullableFilter<"Vehicle"> | number | null
    monthsToPayOff?: IntNullableFilter<"Vehicle"> | number | null
    hasInsurance?: BoolFilter<"Vehicle"> | boolean
    insuranceValue?: FloatNullableFilter<"Vehicle"> | number | null
    usage?: EnumVehicleUsageFilter<"Vehicle"> | $Enums.VehicleUsage
    candidate_id?: StringNullableFilter<"Vehicle"> | string | null
    owners_id?: StringNullableListFilter<"Vehicle">
    legalResponsibleId?: StringNullableFilter<"Vehicle"> | string | null
    application_id?: StringFilter<"Vehicle"> | string
    candidate?: XOR<CandidateNullableRelationFilter, CandidateWhereInput> | null
    FamilyMemberToVehicle?: FamilyMemberToVehicleListRelationFilter
    LegalResponsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
  }, "id" | "application_id_main_id">

  export type VehicleOrderByWithAggregationInput = {
    id?: SortOrder
    vehicleType?: SortOrder
    modelAndBrand?: SortOrder
    main_id?: SortOrderInput | SortOrder
    manufacturingYear?: SortOrder
    situation?: SortOrder
    financedMonths?: SortOrderInput | SortOrder
    monthsToPayOff?: SortOrderInput | SortOrder
    hasInsurance?: SortOrder
    insuranceValue?: SortOrderInput | SortOrder
    usage?: SortOrder
    candidate_id?: SortOrderInput | SortOrder
    owners_id?: SortOrder
    legalResponsibleId?: SortOrderInput | SortOrder
    application_id?: SortOrder
    _count?: VehicleCountOrderByAggregateInput
    _avg?: VehicleAvgOrderByAggregateInput
    _max?: VehicleMaxOrderByAggregateInput
    _min?: VehicleMinOrderByAggregateInput
    _sum?: VehicleSumOrderByAggregateInput
  }

  export type VehicleScalarWhereWithAggregatesInput = {
    AND?: VehicleScalarWhereWithAggregatesInput | VehicleScalarWhereWithAggregatesInput[]
    OR?: VehicleScalarWhereWithAggregatesInput[]
    NOT?: VehicleScalarWhereWithAggregatesInput | VehicleScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Vehicle"> | string
    vehicleType?: EnumVehicleTypeWithAggregatesFilter<"Vehicle"> | $Enums.VehicleType
    modelAndBrand?: StringWithAggregatesFilter<"Vehicle"> | string
    main_id?: StringNullableWithAggregatesFilter<"Vehicle"> | string | null
    manufacturingYear?: IntWithAggregatesFilter<"Vehicle"> | number
    situation?: EnumVehicleSituationWithAggregatesFilter<"Vehicle"> | $Enums.VehicleSituation
    financedMonths?: IntNullableWithAggregatesFilter<"Vehicle"> | number | null
    monthsToPayOff?: IntNullableWithAggregatesFilter<"Vehicle"> | number | null
    hasInsurance?: BoolWithAggregatesFilter<"Vehicle"> | boolean
    insuranceValue?: FloatNullableWithAggregatesFilter<"Vehicle"> | number | null
    usage?: EnumVehicleUsageWithAggregatesFilter<"Vehicle"> | $Enums.VehicleUsage
    candidate_id?: StringNullableWithAggregatesFilter<"Vehicle"> | string | null
    owners_id?: StringNullableListFilter<"Vehicle">
    legalResponsibleId?: StringNullableWithAggregatesFilter<"Vehicle"> | string | null
    application_id?: StringWithAggregatesFilter<"Vehicle"> | string
  }

  export type FamilyMemberIncomeWhereInput = {
    AND?: FamilyMemberIncomeWhereInput | FamilyMemberIncomeWhereInput[]
    OR?: FamilyMemberIncomeWhereInput[]
    NOT?: FamilyMemberIncomeWhereInput | FamilyMemberIncomeWhereInput[]
    id?: StringFilter<"FamilyMemberIncome"> | string
    employmentType?: EnumEmploymentTypeFilter<"FamilyMemberIncome"> | $Enums.EmploymentType
    averageIncome?: StringFilter<"FamilyMemberIncome"> | string
    main_id?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    admissionDate?: DateTimeNullableFilter<"FamilyMemberIncome"> | Date | string | null
    position?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    payingSource?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    payingSourcePhone?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    startDate?: DateTimeNullableFilter<"FamilyMemberIncome"> | Date | string | null
    CNPJ?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    financialAssistantCPF?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    socialReason?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    fantasyName?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    CPNJ?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    receivesUnemployment?: BoolNullableFilter<"FamilyMemberIncome"> | boolean | null
    parcels?: IntNullableFilter<"FamilyMemberIncome"> | number | null
    firstParcelDate?: DateTimeNullableFilter<"FamilyMemberIncome"> | Date | string | null
    parcelValue?: FloatNullableFilter<"FamilyMemberIncome"> | number | null
    familyMember_id?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    quantity?: IntFilter<"FamilyMemberIncome"> | number
    candidate_id?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    application_id?: StringFilter<"FamilyMemberIncome"> | string
    legalResponsibleId?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    familyMember?: XOR<FamilyMemberNullableRelationFilter, FamilyMemberWhereInput> | null
    candidate?: XOR<CandidateNullableRelationFilter, CandidateWhereInput> | null
    LegalResponsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
  }

  export type FamilyMemberIncomeOrderByWithRelationInput = {
    id?: SortOrder
    employmentType?: SortOrder
    averageIncome?: SortOrder
    main_id?: SortOrderInput | SortOrder
    admissionDate?: SortOrderInput | SortOrder
    position?: SortOrderInput | SortOrder
    payingSource?: SortOrderInput | SortOrder
    payingSourcePhone?: SortOrderInput | SortOrder
    startDate?: SortOrderInput | SortOrder
    CNPJ?: SortOrderInput | SortOrder
    financialAssistantCPF?: SortOrderInput | SortOrder
    socialReason?: SortOrderInput | SortOrder
    fantasyName?: SortOrderInput | SortOrder
    CPNJ?: SortOrderInput | SortOrder
    receivesUnemployment?: SortOrderInput | SortOrder
    parcels?: SortOrderInput | SortOrder
    firstParcelDate?: SortOrderInput | SortOrder
    parcelValue?: SortOrderInput | SortOrder
    familyMember_id?: SortOrderInput | SortOrder
    quantity?: SortOrder
    candidate_id?: SortOrderInput | SortOrder
    application_id?: SortOrder
    legalResponsibleId?: SortOrderInput | SortOrder
    familyMember?: FamilyMemberOrderByWithRelationInput
    candidate?: CandidateOrderByWithRelationInput
    LegalResponsible?: LegalResponsibleOrderByWithRelationInput
  }

  export type FamilyMemberIncomeWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    application_id_main_id?: FamilyMemberIncomeApplication_idMain_idCompoundUniqueInput
    AND?: FamilyMemberIncomeWhereInput | FamilyMemberIncomeWhereInput[]
    OR?: FamilyMemberIncomeWhereInput[]
    NOT?: FamilyMemberIncomeWhereInput | FamilyMemberIncomeWhereInput[]
    employmentType?: EnumEmploymentTypeFilter<"FamilyMemberIncome"> | $Enums.EmploymentType
    averageIncome?: StringFilter<"FamilyMemberIncome"> | string
    main_id?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    admissionDate?: DateTimeNullableFilter<"FamilyMemberIncome"> | Date | string | null
    position?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    payingSource?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    payingSourcePhone?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    startDate?: DateTimeNullableFilter<"FamilyMemberIncome"> | Date | string | null
    CNPJ?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    financialAssistantCPF?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    socialReason?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    fantasyName?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    CPNJ?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    receivesUnemployment?: BoolNullableFilter<"FamilyMemberIncome"> | boolean | null
    parcels?: IntNullableFilter<"FamilyMemberIncome"> | number | null
    firstParcelDate?: DateTimeNullableFilter<"FamilyMemberIncome"> | Date | string | null
    parcelValue?: FloatNullableFilter<"FamilyMemberIncome"> | number | null
    familyMember_id?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    quantity?: IntFilter<"FamilyMemberIncome"> | number
    candidate_id?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    application_id?: StringFilter<"FamilyMemberIncome"> | string
    legalResponsibleId?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    familyMember?: XOR<FamilyMemberNullableRelationFilter, FamilyMemberWhereInput> | null
    candidate?: XOR<CandidateNullableRelationFilter, CandidateWhereInput> | null
    LegalResponsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
  }, "id" | "application_id_main_id">

  export type FamilyMemberIncomeOrderByWithAggregationInput = {
    id?: SortOrder
    employmentType?: SortOrder
    averageIncome?: SortOrder
    main_id?: SortOrderInput | SortOrder
    admissionDate?: SortOrderInput | SortOrder
    position?: SortOrderInput | SortOrder
    payingSource?: SortOrderInput | SortOrder
    payingSourcePhone?: SortOrderInput | SortOrder
    startDate?: SortOrderInput | SortOrder
    CNPJ?: SortOrderInput | SortOrder
    financialAssistantCPF?: SortOrderInput | SortOrder
    socialReason?: SortOrderInput | SortOrder
    fantasyName?: SortOrderInput | SortOrder
    CPNJ?: SortOrderInput | SortOrder
    receivesUnemployment?: SortOrderInput | SortOrder
    parcels?: SortOrderInput | SortOrder
    firstParcelDate?: SortOrderInput | SortOrder
    parcelValue?: SortOrderInput | SortOrder
    familyMember_id?: SortOrderInput | SortOrder
    quantity?: SortOrder
    candidate_id?: SortOrderInput | SortOrder
    application_id?: SortOrder
    legalResponsibleId?: SortOrderInput | SortOrder
    _count?: FamilyMemberIncomeCountOrderByAggregateInput
    _avg?: FamilyMemberIncomeAvgOrderByAggregateInput
    _max?: FamilyMemberIncomeMaxOrderByAggregateInput
    _min?: FamilyMemberIncomeMinOrderByAggregateInput
    _sum?: FamilyMemberIncomeSumOrderByAggregateInput
  }

  export type FamilyMemberIncomeScalarWhereWithAggregatesInput = {
    AND?: FamilyMemberIncomeScalarWhereWithAggregatesInput | FamilyMemberIncomeScalarWhereWithAggregatesInput[]
    OR?: FamilyMemberIncomeScalarWhereWithAggregatesInput[]
    NOT?: FamilyMemberIncomeScalarWhereWithAggregatesInput | FamilyMemberIncomeScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"FamilyMemberIncome"> | string
    employmentType?: EnumEmploymentTypeWithAggregatesFilter<"FamilyMemberIncome"> | $Enums.EmploymentType
    averageIncome?: StringWithAggregatesFilter<"FamilyMemberIncome"> | string
    main_id?: StringNullableWithAggregatesFilter<"FamilyMemberIncome"> | string | null
    admissionDate?: DateTimeNullableWithAggregatesFilter<"FamilyMemberIncome"> | Date | string | null
    position?: StringNullableWithAggregatesFilter<"FamilyMemberIncome"> | string | null
    payingSource?: StringNullableWithAggregatesFilter<"FamilyMemberIncome"> | string | null
    payingSourcePhone?: StringNullableWithAggregatesFilter<"FamilyMemberIncome"> | string | null
    startDate?: DateTimeNullableWithAggregatesFilter<"FamilyMemberIncome"> | Date | string | null
    CNPJ?: StringNullableWithAggregatesFilter<"FamilyMemberIncome"> | string | null
    financialAssistantCPF?: StringNullableWithAggregatesFilter<"FamilyMemberIncome"> | string | null
    socialReason?: StringNullableWithAggregatesFilter<"FamilyMemberIncome"> | string | null
    fantasyName?: StringNullableWithAggregatesFilter<"FamilyMemberIncome"> | string | null
    CPNJ?: StringNullableWithAggregatesFilter<"FamilyMemberIncome"> | string | null
    receivesUnemployment?: BoolNullableWithAggregatesFilter<"FamilyMemberIncome"> | boolean | null
    parcels?: IntNullableWithAggregatesFilter<"FamilyMemberIncome"> | number | null
    firstParcelDate?: DateTimeNullableWithAggregatesFilter<"FamilyMemberIncome"> | Date | string | null
    parcelValue?: FloatNullableWithAggregatesFilter<"FamilyMemberIncome"> | number | null
    familyMember_id?: StringNullableWithAggregatesFilter<"FamilyMemberIncome"> | string | null
    quantity?: IntWithAggregatesFilter<"FamilyMemberIncome"> | number
    candidate_id?: StringNullableWithAggregatesFilter<"FamilyMemberIncome"> | string | null
    application_id?: StringWithAggregatesFilter<"FamilyMemberIncome"> | string
    legalResponsibleId?: StringNullableWithAggregatesFilter<"FamilyMemberIncome"> | string | null
  }

  export type MonthlyIncomeWhereInput = {
    AND?: MonthlyIncomeWhereInput | MonthlyIncomeWhereInput[]
    OR?: MonthlyIncomeWhereInput[]
    NOT?: MonthlyIncomeWhereInput | MonthlyIncomeWhereInput[]
    id?: StringFilter<"MonthlyIncome"> | string
    date?: DateTimeNullableFilter<"MonthlyIncome"> | Date | string | null
    main_id?: StringNullableFilter<"MonthlyIncome"> | string | null
    grossAmount?: FloatNullableFilter<"MonthlyIncome"> | number | null
    liquidAmount?: FloatNullableFilter<"MonthlyIncome"> | number | null
    proLabore?: FloatNullableFilter<"MonthlyIncome"> | number | null
    dividends?: FloatNullableFilter<"MonthlyIncome"> | number | null
    total?: FloatNullableFilter<"MonthlyIncome"> | number | null
    deductionValue?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    publicPension?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    incomeTax?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    otherDeductions?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    foodAllowanceValue?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    transportAllowanceValue?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    expenseReimbursementValue?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    advancePaymentValue?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    reversalValue?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    compensationValue?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    judicialPensionValue?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    familyMember_id?: StringNullableFilter<"MonthlyIncome"> | string | null
    candidate_id?: StringNullableFilter<"MonthlyIncome"> | string | null
    incomeSource?: EnumIncomeSourceNullableFilter<"MonthlyIncome"> | $Enums.IncomeSource | null
    application_id?: StringFilter<"MonthlyIncome"> | string
    legalResponsibleId?: StringNullableFilter<"MonthlyIncome"> | string | null
    familyMember?: XOR<FamilyMemberNullableRelationFilter, FamilyMemberWhereInput> | null
    candidate?: XOR<CandidateNullableRelationFilter, CandidateWhereInput> | null
    LegalResponsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
  }

  export type MonthlyIncomeOrderByWithRelationInput = {
    id?: SortOrder
    date?: SortOrderInput | SortOrder
    main_id?: SortOrderInput | SortOrder
    grossAmount?: SortOrderInput | SortOrder
    liquidAmount?: SortOrderInput | SortOrder
    proLabore?: SortOrderInput | SortOrder
    dividends?: SortOrderInput | SortOrder
    total?: SortOrderInput | SortOrder
    deductionValue?: SortOrderInput | SortOrder
    publicPension?: SortOrderInput | SortOrder
    incomeTax?: SortOrderInput | SortOrder
    otherDeductions?: SortOrderInput | SortOrder
    foodAllowanceValue?: SortOrderInput | SortOrder
    transportAllowanceValue?: SortOrderInput | SortOrder
    expenseReimbursementValue?: SortOrderInput | SortOrder
    advancePaymentValue?: SortOrderInput | SortOrder
    reversalValue?: SortOrderInput | SortOrder
    compensationValue?: SortOrderInput | SortOrder
    judicialPensionValue?: SortOrderInput | SortOrder
    familyMember_id?: SortOrderInput | SortOrder
    candidate_id?: SortOrderInput | SortOrder
    incomeSource?: SortOrderInput | SortOrder
    application_id?: SortOrder
    legalResponsibleId?: SortOrderInput | SortOrder
    familyMember?: FamilyMemberOrderByWithRelationInput
    candidate?: CandidateOrderByWithRelationInput
    LegalResponsible?: LegalResponsibleOrderByWithRelationInput
  }

  export type MonthlyIncomeWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    application_id_main_id?: MonthlyIncomeApplication_idMain_idCompoundUniqueInput
    AND?: MonthlyIncomeWhereInput | MonthlyIncomeWhereInput[]
    OR?: MonthlyIncomeWhereInput[]
    NOT?: MonthlyIncomeWhereInput | MonthlyIncomeWhereInput[]
    date?: DateTimeNullableFilter<"MonthlyIncome"> | Date | string | null
    main_id?: StringNullableFilter<"MonthlyIncome"> | string | null
    grossAmount?: FloatNullableFilter<"MonthlyIncome"> | number | null
    liquidAmount?: FloatNullableFilter<"MonthlyIncome"> | number | null
    proLabore?: FloatNullableFilter<"MonthlyIncome"> | number | null
    dividends?: FloatNullableFilter<"MonthlyIncome"> | number | null
    total?: FloatNullableFilter<"MonthlyIncome"> | number | null
    deductionValue?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    publicPension?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    incomeTax?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    otherDeductions?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    foodAllowanceValue?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    transportAllowanceValue?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    expenseReimbursementValue?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    advancePaymentValue?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    reversalValue?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    compensationValue?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    judicialPensionValue?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    familyMember_id?: StringNullableFilter<"MonthlyIncome"> | string | null
    candidate_id?: StringNullableFilter<"MonthlyIncome"> | string | null
    incomeSource?: EnumIncomeSourceNullableFilter<"MonthlyIncome"> | $Enums.IncomeSource | null
    application_id?: StringFilter<"MonthlyIncome"> | string
    legalResponsibleId?: StringNullableFilter<"MonthlyIncome"> | string | null
    familyMember?: XOR<FamilyMemberNullableRelationFilter, FamilyMemberWhereInput> | null
    candidate?: XOR<CandidateNullableRelationFilter, CandidateWhereInput> | null
    LegalResponsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
  }, "id" | "application_id_main_id">

  export type MonthlyIncomeOrderByWithAggregationInput = {
    id?: SortOrder
    date?: SortOrderInput | SortOrder
    main_id?: SortOrderInput | SortOrder
    grossAmount?: SortOrderInput | SortOrder
    liquidAmount?: SortOrderInput | SortOrder
    proLabore?: SortOrderInput | SortOrder
    dividends?: SortOrderInput | SortOrder
    total?: SortOrderInput | SortOrder
    deductionValue?: SortOrderInput | SortOrder
    publicPension?: SortOrderInput | SortOrder
    incomeTax?: SortOrderInput | SortOrder
    otherDeductions?: SortOrderInput | SortOrder
    foodAllowanceValue?: SortOrderInput | SortOrder
    transportAllowanceValue?: SortOrderInput | SortOrder
    expenseReimbursementValue?: SortOrderInput | SortOrder
    advancePaymentValue?: SortOrderInput | SortOrder
    reversalValue?: SortOrderInput | SortOrder
    compensationValue?: SortOrderInput | SortOrder
    judicialPensionValue?: SortOrderInput | SortOrder
    familyMember_id?: SortOrderInput | SortOrder
    candidate_id?: SortOrderInput | SortOrder
    incomeSource?: SortOrderInput | SortOrder
    application_id?: SortOrder
    legalResponsibleId?: SortOrderInput | SortOrder
    _count?: MonthlyIncomeCountOrderByAggregateInput
    _avg?: MonthlyIncomeAvgOrderByAggregateInput
    _max?: MonthlyIncomeMaxOrderByAggregateInput
    _min?: MonthlyIncomeMinOrderByAggregateInput
    _sum?: MonthlyIncomeSumOrderByAggregateInput
  }

  export type MonthlyIncomeScalarWhereWithAggregatesInput = {
    AND?: MonthlyIncomeScalarWhereWithAggregatesInput | MonthlyIncomeScalarWhereWithAggregatesInput[]
    OR?: MonthlyIncomeScalarWhereWithAggregatesInput[]
    NOT?: MonthlyIncomeScalarWhereWithAggregatesInput | MonthlyIncomeScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"MonthlyIncome"> | string
    date?: DateTimeNullableWithAggregatesFilter<"MonthlyIncome"> | Date | string | null
    main_id?: StringNullableWithAggregatesFilter<"MonthlyIncome"> | string | null
    grossAmount?: FloatNullableWithAggregatesFilter<"MonthlyIncome"> | number | null
    liquidAmount?: FloatNullableWithAggregatesFilter<"MonthlyIncome"> | number | null
    proLabore?: FloatNullableWithAggregatesFilter<"MonthlyIncome"> | number | null
    dividends?: FloatNullableWithAggregatesFilter<"MonthlyIncome"> | number | null
    total?: FloatNullableWithAggregatesFilter<"MonthlyIncome"> | number | null
    deductionValue?: DecimalNullableWithAggregatesFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    publicPension?: DecimalNullableWithAggregatesFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    incomeTax?: DecimalNullableWithAggregatesFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    otherDeductions?: DecimalNullableWithAggregatesFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    foodAllowanceValue?: DecimalNullableWithAggregatesFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    transportAllowanceValue?: DecimalNullableWithAggregatesFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    expenseReimbursementValue?: DecimalNullableWithAggregatesFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    advancePaymentValue?: DecimalNullableWithAggregatesFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    reversalValue?: DecimalNullableWithAggregatesFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    compensationValue?: DecimalNullableWithAggregatesFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    judicialPensionValue?: DecimalNullableWithAggregatesFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    familyMember_id?: StringNullableWithAggregatesFilter<"MonthlyIncome"> | string | null
    candidate_id?: StringNullableWithAggregatesFilter<"MonthlyIncome"> | string | null
    incomeSource?: EnumIncomeSourceNullableWithAggregatesFilter<"MonthlyIncome"> | $Enums.IncomeSource | null
    application_id?: StringWithAggregatesFilter<"MonthlyIncome"> | string
    legalResponsibleId?: StringNullableWithAggregatesFilter<"MonthlyIncome"> | string | null
  }

  export type BankAccountWhereInput = {
    AND?: BankAccountWhereInput | BankAccountWhereInput[]
    OR?: BankAccountWhereInput[]
    NOT?: BankAccountWhereInput | BankAccountWhereInput[]
    id?: StringFilter<"BankAccount"> | string
    main_id?: StringNullableFilter<"BankAccount"> | string | null
    bankName?: StringFilter<"BankAccount"> | string
    agencyNumber?: StringFilter<"BankAccount"> | string
    accountNumber?: StringFilter<"BankAccount"> | string
    accountType?: EnumAccountTypeFilter<"BankAccount"> | $Enums.AccountType
    familyMember_id?: StringNullableFilter<"BankAccount"> | string | null
    candidate_id?: StringNullableFilter<"BankAccount"> | string | null
    legalResponsibleId?: StringNullableFilter<"BankAccount"> | string | null
    application_id?: StringFilter<"BankAccount"> | string
    familyMember?: XOR<FamilyMemberNullableRelationFilter, FamilyMemberWhereInput> | null
    candidate?: XOR<CandidateNullableRelationFilter, CandidateWhereInput> | null
    LegalResponsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
  }

  export type BankAccountOrderByWithRelationInput = {
    id?: SortOrder
    main_id?: SortOrderInput | SortOrder
    bankName?: SortOrder
    agencyNumber?: SortOrder
    accountNumber?: SortOrder
    accountType?: SortOrder
    familyMember_id?: SortOrderInput | SortOrder
    candidate_id?: SortOrderInput | SortOrder
    legalResponsibleId?: SortOrderInput | SortOrder
    application_id?: SortOrder
    familyMember?: FamilyMemberOrderByWithRelationInput
    candidate?: CandidateOrderByWithRelationInput
    LegalResponsible?: LegalResponsibleOrderByWithRelationInput
  }

  export type BankAccountWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: BankAccountWhereInput | BankAccountWhereInput[]
    OR?: BankAccountWhereInput[]
    NOT?: BankAccountWhereInput | BankAccountWhereInput[]
    main_id?: StringNullableFilter<"BankAccount"> | string | null
    bankName?: StringFilter<"BankAccount"> | string
    agencyNumber?: StringFilter<"BankAccount"> | string
    accountNumber?: StringFilter<"BankAccount"> | string
    accountType?: EnumAccountTypeFilter<"BankAccount"> | $Enums.AccountType
    familyMember_id?: StringNullableFilter<"BankAccount"> | string | null
    candidate_id?: StringNullableFilter<"BankAccount"> | string | null
    legalResponsibleId?: StringNullableFilter<"BankAccount"> | string | null
    application_id?: StringFilter<"BankAccount"> | string
    familyMember?: XOR<FamilyMemberNullableRelationFilter, FamilyMemberWhereInput> | null
    candidate?: XOR<CandidateNullableRelationFilter, CandidateWhereInput> | null
    LegalResponsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
  }, "id">

  export type BankAccountOrderByWithAggregationInput = {
    id?: SortOrder
    main_id?: SortOrderInput | SortOrder
    bankName?: SortOrder
    agencyNumber?: SortOrder
    accountNumber?: SortOrder
    accountType?: SortOrder
    familyMember_id?: SortOrderInput | SortOrder
    candidate_id?: SortOrderInput | SortOrder
    legalResponsibleId?: SortOrderInput | SortOrder
    application_id?: SortOrder
    _count?: BankAccountCountOrderByAggregateInput
    _max?: BankAccountMaxOrderByAggregateInput
    _min?: BankAccountMinOrderByAggregateInput
  }

  export type BankAccountScalarWhereWithAggregatesInput = {
    AND?: BankAccountScalarWhereWithAggregatesInput | BankAccountScalarWhereWithAggregatesInput[]
    OR?: BankAccountScalarWhereWithAggregatesInput[]
    NOT?: BankAccountScalarWhereWithAggregatesInput | BankAccountScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"BankAccount"> | string
    main_id?: StringNullableWithAggregatesFilter<"BankAccount"> | string | null
    bankName?: StringWithAggregatesFilter<"BankAccount"> | string
    agencyNumber?: StringWithAggregatesFilter<"BankAccount"> | string
    accountNumber?: StringWithAggregatesFilter<"BankAccount"> | string
    accountType?: EnumAccountTypeWithAggregatesFilter<"BankAccount"> | $Enums.AccountType
    familyMember_id?: StringNullableWithAggregatesFilter<"BankAccount"> | string | null
    candidate_id?: StringNullableWithAggregatesFilter<"BankAccount"> | string | null
    legalResponsibleId?: StringNullableWithAggregatesFilter<"BankAccount"> | string | null
    application_id?: StringWithAggregatesFilter<"BankAccount"> | string
  }

  export type ExpenseWhereInput = {
    AND?: ExpenseWhereInput | ExpenseWhereInput[]
    OR?: ExpenseWhereInput[]
    NOT?: ExpenseWhereInput | ExpenseWhereInput[]
    id?: StringFilter<"Expense"> | string
    main_id?: StringNullableFilter<"Expense"> | string | null
    date?: DateTimeFilter<"Expense"> | Date | string
    waterSewage?: FloatNullableFilter<"Expense"> | number | null
    electricity?: FloatNullableFilter<"Expense"> | number | null
    landlinePhone?: FloatNullableFilter<"Expense"> | number | null
    mobilePhone?: FloatNullableFilter<"Expense"> | number | null
    food?: FloatNullableFilter<"Expense"> | number | null
    rent?: FloatNullableFilter<"Expense"> | number | null
    garageRent?: FloatNullableFilter<"Expense"> | number | null
    condominium?: FloatNullableFilter<"Expense"> | number | null
    cableTV?: FloatNullableFilter<"Expense"> | number | null
    streamingServices?: FloatNullableFilter<"Expense"> | number | null
    fuel?: FloatNullableFilter<"Expense"> | number | null
    annualIPVA?: FloatNullableFilter<"Expense"> | number | null
    annualIPTU?: FloatNullableFilter<"Expense"> | number | null
    annualITR?: FloatNullableFilter<"Expense"> | number | null
    annualIR?: FloatNullableFilter<"Expense"> | number | null
    INSS?: FloatNullableFilter<"Expense"> | number | null
    publicTransport?: FloatNullableFilter<"Expense"> | number | null
    schoolTransport?: FloatNullableFilter<"Expense"> | number | null
    internet?: FloatNullableFilter<"Expense"> | number | null
    courses?: FloatNullableFilter<"Expense"> | number | null
    healthPlan?: FloatNullableFilter<"Expense"> | number | null
    dentalPlan?: FloatNullableFilter<"Expense"> | number | null
    medicationExpenses?: FloatNullableFilter<"Expense"> | number | null
    totalExpense?: FloatNullableFilter<"Expense"> | number | null
    candidate_id?: StringNullableFilter<"Expense"> | string | null
    installmentCountIPTU?: IntNullableFilter<"Expense"> | number | null
    installmentCountIPVA?: IntNullableFilter<"Expense"> | number | null
    installmentCountIR?: IntNullableFilter<"Expense"> | number | null
    installmentCountITR?: IntNullableFilter<"Expense"> | number | null
    installmentValueIPTU?: FloatNullableFilter<"Expense"> | number | null
    installmentValueIPVA?: FloatNullableFilter<"Expense"> | number | null
    installmentValueIR?: FloatNullableFilter<"Expense"> | number | null
    installmentValueITR?: FloatNullableFilter<"Expense"> | number | null
    financing?: FloatNullableFilter<"Expense"> | number | null
    creditCard?: FloatNullableFilter<"Expense"> | number | null
    optedForInstallmentIPTU?: BoolNullableFilter<"Expense"> | boolean | null
    optedForInstallmentIPVA?: BoolNullableFilter<"Expense"> | boolean | null
    optedForInstallmentIR?: BoolNullableFilter<"Expense"> | boolean | null
    optedForInstallmentITR?: BoolNullableFilter<"Expense"> | boolean | null
    otherExpensesDescription?: StringNullableListFilter<"Expense">
    otherExpensesValue?: FloatNullableListFilter<"Expense">
    legalResponsibleId?: StringNullableFilter<"Expense"> | string | null
    application_id?: StringFilter<"Expense"> | string
    candidate?: XOR<CandidateNullableRelationFilter, CandidateWhereInput> | null
    LegalResponsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
  }

  export type ExpenseOrderByWithRelationInput = {
    id?: SortOrder
    main_id?: SortOrderInput | SortOrder
    date?: SortOrder
    waterSewage?: SortOrderInput | SortOrder
    electricity?: SortOrderInput | SortOrder
    landlinePhone?: SortOrderInput | SortOrder
    mobilePhone?: SortOrderInput | SortOrder
    food?: SortOrderInput | SortOrder
    rent?: SortOrderInput | SortOrder
    garageRent?: SortOrderInput | SortOrder
    condominium?: SortOrderInput | SortOrder
    cableTV?: SortOrderInput | SortOrder
    streamingServices?: SortOrderInput | SortOrder
    fuel?: SortOrderInput | SortOrder
    annualIPVA?: SortOrderInput | SortOrder
    annualIPTU?: SortOrderInput | SortOrder
    annualITR?: SortOrderInput | SortOrder
    annualIR?: SortOrderInput | SortOrder
    INSS?: SortOrderInput | SortOrder
    publicTransport?: SortOrderInput | SortOrder
    schoolTransport?: SortOrderInput | SortOrder
    internet?: SortOrderInput | SortOrder
    courses?: SortOrderInput | SortOrder
    healthPlan?: SortOrderInput | SortOrder
    dentalPlan?: SortOrderInput | SortOrder
    medicationExpenses?: SortOrderInput | SortOrder
    totalExpense?: SortOrderInput | SortOrder
    candidate_id?: SortOrderInput | SortOrder
    installmentCountIPTU?: SortOrderInput | SortOrder
    installmentCountIPVA?: SortOrderInput | SortOrder
    installmentCountIR?: SortOrderInput | SortOrder
    installmentCountITR?: SortOrderInput | SortOrder
    installmentValueIPTU?: SortOrderInput | SortOrder
    installmentValueIPVA?: SortOrderInput | SortOrder
    installmentValueIR?: SortOrderInput | SortOrder
    installmentValueITR?: SortOrderInput | SortOrder
    financing?: SortOrderInput | SortOrder
    creditCard?: SortOrderInput | SortOrder
    optedForInstallmentIPTU?: SortOrderInput | SortOrder
    optedForInstallmentIPVA?: SortOrderInput | SortOrder
    optedForInstallmentIR?: SortOrderInput | SortOrder
    optedForInstallmentITR?: SortOrderInput | SortOrder
    otherExpensesDescription?: SortOrder
    otherExpensesValue?: SortOrder
    legalResponsibleId?: SortOrderInput | SortOrder
    application_id?: SortOrder
    candidate?: CandidateOrderByWithRelationInput
    LegalResponsible?: LegalResponsibleOrderByWithRelationInput
  }

  export type ExpenseWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    application_id_main_id?: ExpenseApplication_idMain_idCompoundUniqueInput
    AND?: ExpenseWhereInput | ExpenseWhereInput[]
    OR?: ExpenseWhereInput[]
    NOT?: ExpenseWhereInput | ExpenseWhereInput[]
    main_id?: StringNullableFilter<"Expense"> | string | null
    date?: DateTimeFilter<"Expense"> | Date | string
    waterSewage?: FloatNullableFilter<"Expense"> | number | null
    electricity?: FloatNullableFilter<"Expense"> | number | null
    landlinePhone?: FloatNullableFilter<"Expense"> | number | null
    mobilePhone?: FloatNullableFilter<"Expense"> | number | null
    food?: FloatNullableFilter<"Expense"> | number | null
    rent?: FloatNullableFilter<"Expense"> | number | null
    garageRent?: FloatNullableFilter<"Expense"> | number | null
    condominium?: FloatNullableFilter<"Expense"> | number | null
    cableTV?: FloatNullableFilter<"Expense"> | number | null
    streamingServices?: FloatNullableFilter<"Expense"> | number | null
    fuel?: FloatNullableFilter<"Expense"> | number | null
    annualIPVA?: FloatNullableFilter<"Expense"> | number | null
    annualIPTU?: FloatNullableFilter<"Expense"> | number | null
    annualITR?: FloatNullableFilter<"Expense"> | number | null
    annualIR?: FloatNullableFilter<"Expense"> | number | null
    INSS?: FloatNullableFilter<"Expense"> | number | null
    publicTransport?: FloatNullableFilter<"Expense"> | number | null
    schoolTransport?: FloatNullableFilter<"Expense"> | number | null
    internet?: FloatNullableFilter<"Expense"> | number | null
    courses?: FloatNullableFilter<"Expense"> | number | null
    healthPlan?: FloatNullableFilter<"Expense"> | number | null
    dentalPlan?: FloatNullableFilter<"Expense"> | number | null
    medicationExpenses?: FloatNullableFilter<"Expense"> | number | null
    totalExpense?: FloatNullableFilter<"Expense"> | number | null
    candidate_id?: StringNullableFilter<"Expense"> | string | null
    installmentCountIPTU?: IntNullableFilter<"Expense"> | number | null
    installmentCountIPVA?: IntNullableFilter<"Expense"> | number | null
    installmentCountIR?: IntNullableFilter<"Expense"> | number | null
    installmentCountITR?: IntNullableFilter<"Expense"> | number | null
    installmentValueIPTU?: FloatNullableFilter<"Expense"> | number | null
    installmentValueIPVA?: FloatNullableFilter<"Expense"> | number | null
    installmentValueIR?: FloatNullableFilter<"Expense"> | number | null
    installmentValueITR?: FloatNullableFilter<"Expense"> | number | null
    financing?: FloatNullableFilter<"Expense"> | number | null
    creditCard?: FloatNullableFilter<"Expense"> | number | null
    optedForInstallmentIPTU?: BoolNullableFilter<"Expense"> | boolean | null
    optedForInstallmentIPVA?: BoolNullableFilter<"Expense"> | boolean | null
    optedForInstallmentIR?: BoolNullableFilter<"Expense"> | boolean | null
    optedForInstallmentITR?: BoolNullableFilter<"Expense"> | boolean | null
    otherExpensesDescription?: StringNullableListFilter<"Expense">
    otherExpensesValue?: FloatNullableListFilter<"Expense">
    legalResponsibleId?: StringNullableFilter<"Expense"> | string | null
    application_id?: StringFilter<"Expense"> | string
    candidate?: XOR<CandidateNullableRelationFilter, CandidateWhereInput> | null
    LegalResponsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
  }, "id" | "application_id_main_id">

  export type ExpenseOrderByWithAggregationInput = {
    id?: SortOrder
    main_id?: SortOrderInput | SortOrder
    date?: SortOrder
    waterSewage?: SortOrderInput | SortOrder
    electricity?: SortOrderInput | SortOrder
    landlinePhone?: SortOrderInput | SortOrder
    mobilePhone?: SortOrderInput | SortOrder
    food?: SortOrderInput | SortOrder
    rent?: SortOrderInput | SortOrder
    garageRent?: SortOrderInput | SortOrder
    condominium?: SortOrderInput | SortOrder
    cableTV?: SortOrderInput | SortOrder
    streamingServices?: SortOrderInput | SortOrder
    fuel?: SortOrderInput | SortOrder
    annualIPVA?: SortOrderInput | SortOrder
    annualIPTU?: SortOrderInput | SortOrder
    annualITR?: SortOrderInput | SortOrder
    annualIR?: SortOrderInput | SortOrder
    INSS?: SortOrderInput | SortOrder
    publicTransport?: SortOrderInput | SortOrder
    schoolTransport?: SortOrderInput | SortOrder
    internet?: SortOrderInput | SortOrder
    courses?: SortOrderInput | SortOrder
    healthPlan?: SortOrderInput | SortOrder
    dentalPlan?: SortOrderInput | SortOrder
    medicationExpenses?: SortOrderInput | SortOrder
    totalExpense?: SortOrderInput | SortOrder
    candidate_id?: SortOrderInput | SortOrder
    installmentCountIPTU?: SortOrderInput | SortOrder
    installmentCountIPVA?: SortOrderInput | SortOrder
    installmentCountIR?: SortOrderInput | SortOrder
    installmentCountITR?: SortOrderInput | SortOrder
    installmentValueIPTU?: SortOrderInput | SortOrder
    installmentValueIPVA?: SortOrderInput | SortOrder
    installmentValueIR?: SortOrderInput | SortOrder
    installmentValueITR?: SortOrderInput | SortOrder
    financing?: SortOrderInput | SortOrder
    creditCard?: SortOrderInput | SortOrder
    optedForInstallmentIPTU?: SortOrderInput | SortOrder
    optedForInstallmentIPVA?: SortOrderInput | SortOrder
    optedForInstallmentIR?: SortOrderInput | SortOrder
    optedForInstallmentITR?: SortOrderInput | SortOrder
    otherExpensesDescription?: SortOrder
    otherExpensesValue?: SortOrder
    legalResponsibleId?: SortOrderInput | SortOrder
    application_id?: SortOrder
    _count?: ExpenseCountOrderByAggregateInput
    _avg?: ExpenseAvgOrderByAggregateInput
    _max?: ExpenseMaxOrderByAggregateInput
    _min?: ExpenseMinOrderByAggregateInput
    _sum?: ExpenseSumOrderByAggregateInput
  }

  export type ExpenseScalarWhereWithAggregatesInput = {
    AND?: ExpenseScalarWhereWithAggregatesInput | ExpenseScalarWhereWithAggregatesInput[]
    OR?: ExpenseScalarWhereWithAggregatesInput[]
    NOT?: ExpenseScalarWhereWithAggregatesInput | ExpenseScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Expense"> | string
    main_id?: StringNullableWithAggregatesFilter<"Expense"> | string | null
    date?: DateTimeWithAggregatesFilter<"Expense"> | Date | string
    waterSewage?: FloatNullableWithAggregatesFilter<"Expense"> | number | null
    electricity?: FloatNullableWithAggregatesFilter<"Expense"> | number | null
    landlinePhone?: FloatNullableWithAggregatesFilter<"Expense"> | number | null
    mobilePhone?: FloatNullableWithAggregatesFilter<"Expense"> | number | null
    food?: FloatNullableWithAggregatesFilter<"Expense"> | number | null
    rent?: FloatNullableWithAggregatesFilter<"Expense"> | number | null
    garageRent?: FloatNullableWithAggregatesFilter<"Expense"> | number | null
    condominium?: FloatNullableWithAggregatesFilter<"Expense"> | number | null
    cableTV?: FloatNullableWithAggregatesFilter<"Expense"> | number | null
    streamingServices?: FloatNullableWithAggregatesFilter<"Expense"> | number | null
    fuel?: FloatNullableWithAggregatesFilter<"Expense"> | number | null
    annualIPVA?: FloatNullableWithAggregatesFilter<"Expense"> | number | null
    annualIPTU?: FloatNullableWithAggregatesFilter<"Expense"> | number | null
    annualITR?: FloatNullableWithAggregatesFilter<"Expense"> | number | null
    annualIR?: FloatNullableWithAggregatesFilter<"Expense"> | number | null
    INSS?: FloatNullableWithAggregatesFilter<"Expense"> | number | null
    publicTransport?: FloatNullableWithAggregatesFilter<"Expense"> | number | null
    schoolTransport?: FloatNullableWithAggregatesFilter<"Expense"> | number | null
    internet?: FloatNullableWithAggregatesFilter<"Expense"> | number | null
    courses?: FloatNullableWithAggregatesFilter<"Expense"> | number | null
    healthPlan?: FloatNullableWithAggregatesFilter<"Expense"> | number | null
    dentalPlan?: FloatNullableWithAggregatesFilter<"Expense"> | number | null
    medicationExpenses?: FloatNullableWithAggregatesFilter<"Expense"> | number | null
    totalExpense?: FloatNullableWithAggregatesFilter<"Expense"> | number | null
    candidate_id?: StringNullableWithAggregatesFilter<"Expense"> | string | null
    installmentCountIPTU?: IntNullableWithAggregatesFilter<"Expense"> | number | null
    installmentCountIPVA?: IntNullableWithAggregatesFilter<"Expense"> | number | null
    installmentCountIR?: IntNullableWithAggregatesFilter<"Expense"> | number | null
    installmentCountITR?: IntNullableWithAggregatesFilter<"Expense"> | number | null
    installmentValueIPTU?: FloatNullableWithAggregatesFilter<"Expense"> | number | null
    installmentValueIPVA?: FloatNullableWithAggregatesFilter<"Expense"> | number | null
    installmentValueIR?: FloatNullableWithAggregatesFilter<"Expense"> | number | null
    installmentValueITR?: FloatNullableWithAggregatesFilter<"Expense"> | number | null
    financing?: FloatNullableWithAggregatesFilter<"Expense"> | number | null
    creditCard?: FloatNullableWithAggregatesFilter<"Expense"> | number | null
    optedForInstallmentIPTU?: BoolNullableWithAggregatesFilter<"Expense"> | boolean | null
    optedForInstallmentIPVA?: BoolNullableWithAggregatesFilter<"Expense"> | boolean | null
    optedForInstallmentIR?: BoolNullableWithAggregatesFilter<"Expense"> | boolean | null
    optedForInstallmentITR?: BoolNullableWithAggregatesFilter<"Expense"> | boolean | null
    otherExpensesDescription?: StringNullableListFilter<"Expense">
    otherExpensesValue?: FloatNullableListFilter<"Expense">
    legalResponsibleId?: StringNullableWithAggregatesFilter<"Expense"> | string | null
    application_id?: StringWithAggregatesFilter<"Expense"> | string
  }

  export type LoanWhereInput = {
    AND?: LoanWhereInput | LoanWhereInput[]
    OR?: LoanWhereInput[]
    NOT?: LoanWhereInput | LoanWhereInput[]
    id?: StringFilter<"Loan"> | string
    main_id?: StringNullableFilter<"Loan"> | string | null
    familyMemberName?: StringFilter<"Loan"> | string
    installmentValue?: FloatFilter<"Loan"> | number
    totalInstallments?: IntFilter<"Loan"> | number
    paidInstallments?: IntFilter<"Loan"> | number
    bankName?: StringFilter<"Loan"> | string
    familyMember_id?: StringNullableFilter<"Loan"> | string | null
    candidate_id?: StringNullableFilter<"Loan"> | string | null
    legalResponsibleId?: StringNullableFilter<"Loan"> | string | null
    application_id?: StringFilter<"Loan"> | string
    candidate?: XOR<CandidateNullableRelationFilter, CandidateWhereInput> | null
    familyMember?: XOR<FamilyMemberNullableRelationFilter, FamilyMemberWhereInput> | null
    LegalResponsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
  }

  export type LoanOrderByWithRelationInput = {
    id?: SortOrder
    main_id?: SortOrderInput | SortOrder
    familyMemberName?: SortOrder
    installmentValue?: SortOrder
    totalInstallments?: SortOrder
    paidInstallments?: SortOrder
    bankName?: SortOrder
    familyMember_id?: SortOrderInput | SortOrder
    candidate_id?: SortOrderInput | SortOrder
    legalResponsibleId?: SortOrderInput | SortOrder
    application_id?: SortOrder
    candidate?: CandidateOrderByWithRelationInput
    familyMember?: FamilyMemberOrderByWithRelationInput
    LegalResponsible?: LegalResponsibleOrderByWithRelationInput
  }

  export type LoanWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    application_id_main_id?: LoanApplication_idMain_idCompoundUniqueInput
    AND?: LoanWhereInput | LoanWhereInput[]
    OR?: LoanWhereInput[]
    NOT?: LoanWhereInput | LoanWhereInput[]
    main_id?: StringNullableFilter<"Loan"> | string | null
    familyMemberName?: StringFilter<"Loan"> | string
    installmentValue?: FloatFilter<"Loan"> | number
    totalInstallments?: IntFilter<"Loan"> | number
    paidInstallments?: IntFilter<"Loan"> | number
    bankName?: StringFilter<"Loan"> | string
    familyMember_id?: StringNullableFilter<"Loan"> | string | null
    candidate_id?: StringNullableFilter<"Loan"> | string | null
    legalResponsibleId?: StringNullableFilter<"Loan"> | string | null
    application_id?: StringFilter<"Loan"> | string
    candidate?: XOR<CandidateNullableRelationFilter, CandidateWhereInput> | null
    familyMember?: XOR<FamilyMemberNullableRelationFilter, FamilyMemberWhereInput> | null
    LegalResponsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
  }, "id" | "application_id_main_id">

  export type LoanOrderByWithAggregationInput = {
    id?: SortOrder
    main_id?: SortOrderInput | SortOrder
    familyMemberName?: SortOrder
    installmentValue?: SortOrder
    totalInstallments?: SortOrder
    paidInstallments?: SortOrder
    bankName?: SortOrder
    familyMember_id?: SortOrderInput | SortOrder
    candidate_id?: SortOrderInput | SortOrder
    legalResponsibleId?: SortOrderInput | SortOrder
    application_id?: SortOrder
    _count?: LoanCountOrderByAggregateInput
    _avg?: LoanAvgOrderByAggregateInput
    _max?: LoanMaxOrderByAggregateInput
    _min?: LoanMinOrderByAggregateInput
    _sum?: LoanSumOrderByAggregateInput
  }

  export type LoanScalarWhereWithAggregatesInput = {
    AND?: LoanScalarWhereWithAggregatesInput | LoanScalarWhereWithAggregatesInput[]
    OR?: LoanScalarWhereWithAggregatesInput[]
    NOT?: LoanScalarWhereWithAggregatesInput | LoanScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Loan"> | string
    main_id?: StringNullableWithAggregatesFilter<"Loan"> | string | null
    familyMemberName?: StringWithAggregatesFilter<"Loan"> | string
    installmentValue?: FloatWithAggregatesFilter<"Loan"> | number
    totalInstallments?: IntWithAggregatesFilter<"Loan"> | number
    paidInstallments?: IntWithAggregatesFilter<"Loan"> | number
    bankName?: StringWithAggregatesFilter<"Loan"> | string
    familyMember_id?: StringNullableWithAggregatesFilter<"Loan"> | string | null
    candidate_id?: StringNullableWithAggregatesFilter<"Loan"> | string | null
    legalResponsibleId?: StringNullableWithAggregatesFilter<"Loan"> | string | null
    application_id?: StringWithAggregatesFilter<"Loan"> | string
  }

  export type FinancingWhereInput = {
    AND?: FinancingWhereInput | FinancingWhereInput[]
    OR?: FinancingWhereInput[]
    NOT?: FinancingWhereInput | FinancingWhereInput[]
    id?: StringFilter<"Financing"> | string
    main_id?: StringNullableFilter<"Financing"> | string | null
    familyMemberName?: StringFilter<"Financing"> | string
    installmentValue?: FloatFilter<"Financing"> | number
    totalInstallments?: IntFilter<"Financing"> | number
    paidInstallments?: IntFilter<"Financing"> | number
    bankName?: StringFilter<"Financing"> | string
    familyMember_id?: StringNullableFilter<"Financing"> | string | null
    candidate_id?: StringNullableFilter<"Financing"> | string | null
    otherFinancing?: StringNullableFilter<"Financing"> | string | null
    financingType?: EnumFinancingTypeFilter<"Financing"> | $Enums.FinancingType
    legalResponsibleId?: StringNullableFilter<"Financing"> | string | null
    application_id?: StringFilter<"Financing"> | string
    candidate?: XOR<CandidateNullableRelationFilter, CandidateWhereInput> | null
    familyMember?: XOR<FamilyMemberNullableRelationFilter, FamilyMemberWhereInput> | null
    LegalResponsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
  }

  export type FinancingOrderByWithRelationInput = {
    id?: SortOrder
    main_id?: SortOrderInput | SortOrder
    familyMemberName?: SortOrder
    installmentValue?: SortOrder
    totalInstallments?: SortOrder
    paidInstallments?: SortOrder
    bankName?: SortOrder
    familyMember_id?: SortOrderInput | SortOrder
    candidate_id?: SortOrderInput | SortOrder
    otherFinancing?: SortOrderInput | SortOrder
    financingType?: SortOrder
    legalResponsibleId?: SortOrderInput | SortOrder
    application_id?: SortOrder
    candidate?: CandidateOrderByWithRelationInput
    familyMember?: FamilyMemberOrderByWithRelationInput
    LegalResponsible?: LegalResponsibleOrderByWithRelationInput
  }

  export type FinancingWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    application_id_main_id?: FinancingApplication_idMain_idCompoundUniqueInput
    AND?: FinancingWhereInput | FinancingWhereInput[]
    OR?: FinancingWhereInput[]
    NOT?: FinancingWhereInput | FinancingWhereInput[]
    main_id?: StringNullableFilter<"Financing"> | string | null
    familyMemberName?: StringFilter<"Financing"> | string
    installmentValue?: FloatFilter<"Financing"> | number
    totalInstallments?: IntFilter<"Financing"> | number
    paidInstallments?: IntFilter<"Financing"> | number
    bankName?: StringFilter<"Financing"> | string
    familyMember_id?: StringNullableFilter<"Financing"> | string | null
    candidate_id?: StringNullableFilter<"Financing"> | string | null
    otherFinancing?: StringNullableFilter<"Financing"> | string | null
    financingType?: EnumFinancingTypeFilter<"Financing"> | $Enums.FinancingType
    legalResponsibleId?: StringNullableFilter<"Financing"> | string | null
    application_id?: StringFilter<"Financing"> | string
    candidate?: XOR<CandidateNullableRelationFilter, CandidateWhereInput> | null
    familyMember?: XOR<FamilyMemberNullableRelationFilter, FamilyMemberWhereInput> | null
    LegalResponsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
  }, "id" | "application_id_main_id">

  export type FinancingOrderByWithAggregationInput = {
    id?: SortOrder
    main_id?: SortOrderInput | SortOrder
    familyMemberName?: SortOrder
    installmentValue?: SortOrder
    totalInstallments?: SortOrder
    paidInstallments?: SortOrder
    bankName?: SortOrder
    familyMember_id?: SortOrderInput | SortOrder
    candidate_id?: SortOrderInput | SortOrder
    otherFinancing?: SortOrderInput | SortOrder
    financingType?: SortOrder
    legalResponsibleId?: SortOrderInput | SortOrder
    application_id?: SortOrder
    _count?: FinancingCountOrderByAggregateInput
    _avg?: FinancingAvgOrderByAggregateInput
    _max?: FinancingMaxOrderByAggregateInput
    _min?: FinancingMinOrderByAggregateInput
    _sum?: FinancingSumOrderByAggregateInput
  }

  export type FinancingScalarWhereWithAggregatesInput = {
    AND?: FinancingScalarWhereWithAggregatesInput | FinancingScalarWhereWithAggregatesInput[]
    OR?: FinancingScalarWhereWithAggregatesInput[]
    NOT?: FinancingScalarWhereWithAggregatesInput | FinancingScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Financing"> | string
    main_id?: StringNullableWithAggregatesFilter<"Financing"> | string | null
    familyMemberName?: StringWithAggregatesFilter<"Financing"> | string
    installmentValue?: FloatWithAggregatesFilter<"Financing"> | number
    totalInstallments?: IntWithAggregatesFilter<"Financing"> | number
    paidInstallments?: IntWithAggregatesFilter<"Financing"> | number
    bankName?: StringWithAggregatesFilter<"Financing"> | string
    familyMember_id?: StringNullableWithAggregatesFilter<"Financing"> | string | null
    candidate_id?: StringNullableWithAggregatesFilter<"Financing"> | string | null
    otherFinancing?: StringNullableWithAggregatesFilter<"Financing"> | string | null
    financingType?: EnumFinancingTypeWithAggregatesFilter<"Financing"> | $Enums.FinancingType
    legalResponsibleId?: StringNullableWithAggregatesFilter<"Financing"> | string | null
    application_id?: StringWithAggregatesFilter<"Financing"> | string
  }

  export type CreditCardWhereInput = {
    AND?: CreditCardWhereInput | CreditCardWhereInput[]
    OR?: CreditCardWhereInput[]
    NOT?: CreditCardWhereInput | CreditCardWhereInput[]
    id?: StringFilter<"CreditCard"> | string
    main_id?: StringNullableFilter<"CreditCard"> | string | null
    familyMemberName?: StringFilter<"CreditCard"> | string
    usersCount?: IntFilter<"CreditCard"> | number
    cardType?: StringFilter<"CreditCard"> | string
    bankName?: StringFilter<"CreditCard"> | string
    cardFlag?: StringFilter<"CreditCard"> | string
    invoiceValue?: FloatFilter<"CreditCard"> | number
    familyMember_id?: StringNullableFilter<"CreditCard"> | string | null
    candidate_id?: StringNullableFilter<"CreditCard"> | string | null
    legalResponsibleId?: StringNullableFilter<"CreditCard"> | string | null
    application_id?: StringFilter<"CreditCard"> | string
    candidate?: XOR<CandidateNullableRelationFilter, CandidateWhereInput> | null
    familyMember?: XOR<FamilyMemberNullableRelationFilter, FamilyMemberWhereInput> | null
    LegalResponsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
  }

  export type CreditCardOrderByWithRelationInput = {
    id?: SortOrder
    main_id?: SortOrderInput | SortOrder
    familyMemberName?: SortOrder
    usersCount?: SortOrder
    cardType?: SortOrder
    bankName?: SortOrder
    cardFlag?: SortOrder
    invoiceValue?: SortOrder
    familyMember_id?: SortOrderInput | SortOrder
    candidate_id?: SortOrderInput | SortOrder
    legalResponsibleId?: SortOrderInput | SortOrder
    application_id?: SortOrder
    candidate?: CandidateOrderByWithRelationInput
    familyMember?: FamilyMemberOrderByWithRelationInput
    LegalResponsible?: LegalResponsibleOrderByWithRelationInput
  }

  export type CreditCardWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    application_id_main_id?: CreditCardApplication_idMain_idCompoundUniqueInput
    AND?: CreditCardWhereInput | CreditCardWhereInput[]
    OR?: CreditCardWhereInput[]
    NOT?: CreditCardWhereInput | CreditCardWhereInput[]
    main_id?: StringNullableFilter<"CreditCard"> | string | null
    familyMemberName?: StringFilter<"CreditCard"> | string
    usersCount?: IntFilter<"CreditCard"> | number
    cardType?: StringFilter<"CreditCard"> | string
    bankName?: StringFilter<"CreditCard"> | string
    cardFlag?: StringFilter<"CreditCard"> | string
    invoiceValue?: FloatFilter<"CreditCard"> | number
    familyMember_id?: StringNullableFilter<"CreditCard"> | string | null
    candidate_id?: StringNullableFilter<"CreditCard"> | string | null
    legalResponsibleId?: StringNullableFilter<"CreditCard"> | string | null
    application_id?: StringFilter<"CreditCard"> | string
    candidate?: XOR<CandidateNullableRelationFilter, CandidateWhereInput> | null
    familyMember?: XOR<FamilyMemberNullableRelationFilter, FamilyMemberWhereInput> | null
    LegalResponsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
  }, "id" | "application_id_main_id">

  export type CreditCardOrderByWithAggregationInput = {
    id?: SortOrder
    main_id?: SortOrderInput | SortOrder
    familyMemberName?: SortOrder
    usersCount?: SortOrder
    cardType?: SortOrder
    bankName?: SortOrder
    cardFlag?: SortOrder
    invoiceValue?: SortOrder
    familyMember_id?: SortOrderInput | SortOrder
    candidate_id?: SortOrderInput | SortOrder
    legalResponsibleId?: SortOrderInput | SortOrder
    application_id?: SortOrder
    _count?: CreditCardCountOrderByAggregateInput
    _avg?: CreditCardAvgOrderByAggregateInput
    _max?: CreditCardMaxOrderByAggregateInput
    _min?: CreditCardMinOrderByAggregateInput
    _sum?: CreditCardSumOrderByAggregateInput
  }

  export type CreditCardScalarWhereWithAggregatesInput = {
    AND?: CreditCardScalarWhereWithAggregatesInput | CreditCardScalarWhereWithAggregatesInput[]
    OR?: CreditCardScalarWhereWithAggregatesInput[]
    NOT?: CreditCardScalarWhereWithAggregatesInput | CreditCardScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CreditCard"> | string
    main_id?: StringNullableWithAggregatesFilter<"CreditCard"> | string | null
    familyMemberName?: StringWithAggregatesFilter<"CreditCard"> | string
    usersCount?: IntWithAggregatesFilter<"CreditCard"> | number
    cardType?: StringWithAggregatesFilter<"CreditCard"> | string
    bankName?: StringWithAggregatesFilter<"CreditCard"> | string
    cardFlag?: StringWithAggregatesFilter<"CreditCard"> | string
    invoiceValue?: FloatWithAggregatesFilter<"CreditCard"> | number
    familyMember_id?: StringNullableWithAggregatesFilter<"CreditCard"> | string | null
    candidate_id?: StringNullableWithAggregatesFilter<"CreditCard"> | string | null
    legalResponsibleId?: StringNullableWithAggregatesFilter<"CreditCard"> | string | null
    application_id?: StringWithAggregatesFilter<"CreditCard"> | string
  }

  export type OtherExpenseWhereInput = {
    AND?: OtherExpenseWhereInput | OtherExpenseWhereInput[]
    OR?: OtherExpenseWhereInput[]
    NOT?: OtherExpenseWhereInput | OtherExpenseWhereInput[]
    id?: StringFilter<"OtherExpense"> | string
    main_id?: StringNullableFilter<"OtherExpense"> | string | null
    description?: StringFilter<"OtherExpense"> | string
    value?: FloatFilter<"OtherExpense"> | number
    familyMember_id?: StringNullableFilter<"OtherExpense"> | string | null
    candidate_id?: StringNullableFilter<"OtherExpense"> | string | null
    legalResponsibleId?: StringNullableFilter<"OtherExpense"> | string | null
    application_id?: StringFilter<"OtherExpense"> | string
    candidate?: XOR<CandidateNullableRelationFilter, CandidateWhereInput> | null
    familyMember?: XOR<FamilyMemberNullableRelationFilter, FamilyMemberWhereInput> | null
    LegalResponsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
  }

  export type OtherExpenseOrderByWithRelationInput = {
    id?: SortOrder
    main_id?: SortOrderInput | SortOrder
    description?: SortOrder
    value?: SortOrder
    familyMember_id?: SortOrderInput | SortOrder
    candidate_id?: SortOrderInput | SortOrder
    legalResponsibleId?: SortOrderInput | SortOrder
    application_id?: SortOrder
    candidate?: CandidateOrderByWithRelationInput
    familyMember?: FamilyMemberOrderByWithRelationInput
    LegalResponsible?: LegalResponsibleOrderByWithRelationInput
  }

  export type OtherExpenseWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    application_id_main_id?: OtherExpenseApplication_idMain_idCompoundUniqueInput
    AND?: OtherExpenseWhereInput | OtherExpenseWhereInput[]
    OR?: OtherExpenseWhereInput[]
    NOT?: OtherExpenseWhereInput | OtherExpenseWhereInput[]
    main_id?: StringNullableFilter<"OtherExpense"> | string | null
    description?: StringFilter<"OtherExpense"> | string
    value?: FloatFilter<"OtherExpense"> | number
    familyMember_id?: StringNullableFilter<"OtherExpense"> | string | null
    candidate_id?: StringNullableFilter<"OtherExpense"> | string | null
    legalResponsibleId?: StringNullableFilter<"OtherExpense"> | string | null
    application_id?: StringFilter<"OtherExpense"> | string
    candidate?: XOR<CandidateNullableRelationFilter, CandidateWhereInput> | null
    familyMember?: XOR<FamilyMemberNullableRelationFilter, FamilyMemberWhereInput> | null
    LegalResponsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
  }, "id" | "application_id_main_id">

  export type OtherExpenseOrderByWithAggregationInput = {
    id?: SortOrder
    main_id?: SortOrderInput | SortOrder
    description?: SortOrder
    value?: SortOrder
    familyMember_id?: SortOrderInput | SortOrder
    candidate_id?: SortOrderInput | SortOrder
    legalResponsibleId?: SortOrderInput | SortOrder
    application_id?: SortOrder
    _count?: OtherExpenseCountOrderByAggregateInput
    _avg?: OtherExpenseAvgOrderByAggregateInput
    _max?: OtherExpenseMaxOrderByAggregateInput
    _min?: OtherExpenseMinOrderByAggregateInput
    _sum?: OtherExpenseSumOrderByAggregateInput
  }

  export type OtherExpenseScalarWhereWithAggregatesInput = {
    AND?: OtherExpenseScalarWhereWithAggregatesInput | OtherExpenseScalarWhereWithAggregatesInput[]
    OR?: OtherExpenseScalarWhereWithAggregatesInput[]
    NOT?: OtherExpenseScalarWhereWithAggregatesInput | OtherExpenseScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"OtherExpense"> | string
    main_id?: StringNullableWithAggregatesFilter<"OtherExpense"> | string | null
    description?: StringWithAggregatesFilter<"OtherExpense"> | string
    value?: FloatWithAggregatesFilter<"OtherExpense"> | number
    familyMember_id?: StringNullableWithAggregatesFilter<"OtherExpense"> | string | null
    candidate_id?: StringNullableWithAggregatesFilter<"OtherExpense"> | string | null
    legalResponsibleId?: StringNullableWithAggregatesFilter<"OtherExpense"> | string | null
    application_id?: StringWithAggregatesFilter<"OtherExpense"> | string
  }

  export type FamilyMemberDiseaseWhereInput = {
    AND?: FamilyMemberDiseaseWhereInput | FamilyMemberDiseaseWhereInput[]
    OR?: FamilyMemberDiseaseWhereInput[]
    NOT?: FamilyMemberDiseaseWhereInput | FamilyMemberDiseaseWhereInput[]
    id?: StringFilter<"FamilyMemberDisease"> | string
    main_id?: StringNullableFilter<"FamilyMemberDisease"> | string | null
    disease?: EnumDiseaseNullableFilter<"FamilyMemberDisease"> | $Enums.Disease | null
    diseases?: EnumDiseaseNullableListFilter<"FamilyMemberDisease">
    specificDisease?: StringNullableFilter<"FamilyMemberDisease"> | string | null
    hasMedicalReport?: BoolFilter<"FamilyMemberDisease"> | boolean
    familyMember_id?: StringNullableFilter<"FamilyMemberDisease"> | string | null
    candidate_id?: StringNullableFilter<"FamilyMemberDisease"> | string | null
    legalResponsibleId?: StringNullableFilter<"FamilyMemberDisease"> | string | null
    application_id?: StringFilter<"FamilyMemberDisease"> | string
    familyMember?: XOR<FamilyMemberNullableRelationFilter, FamilyMemberWhereInput> | null
    candidate?: XOR<CandidateNullableRelationFilter, CandidateWhereInput> | null
    legalResponsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
    Medication?: MedicationListRelationFilter
  }

  export type FamilyMemberDiseaseOrderByWithRelationInput = {
    id?: SortOrder
    main_id?: SortOrderInput | SortOrder
    disease?: SortOrderInput | SortOrder
    diseases?: SortOrder
    specificDisease?: SortOrderInput | SortOrder
    hasMedicalReport?: SortOrder
    familyMember_id?: SortOrderInput | SortOrder
    candidate_id?: SortOrderInput | SortOrder
    legalResponsibleId?: SortOrderInput | SortOrder
    application_id?: SortOrder
    familyMember?: FamilyMemberOrderByWithRelationInput
    candidate?: CandidateOrderByWithRelationInput
    legalResponsible?: LegalResponsibleOrderByWithRelationInput
    Medication?: MedicationOrderByRelationAggregateInput
  }

  export type FamilyMemberDiseaseWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    application_id_main_id?: FamilyMemberDiseaseApplication_idMain_idCompoundUniqueInput
    AND?: FamilyMemberDiseaseWhereInput | FamilyMemberDiseaseWhereInput[]
    OR?: FamilyMemberDiseaseWhereInput[]
    NOT?: FamilyMemberDiseaseWhereInput | FamilyMemberDiseaseWhereInput[]
    main_id?: StringNullableFilter<"FamilyMemberDisease"> | string | null
    disease?: EnumDiseaseNullableFilter<"FamilyMemberDisease"> | $Enums.Disease | null
    diseases?: EnumDiseaseNullableListFilter<"FamilyMemberDisease">
    specificDisease?: StringNullableFilter<"FamilyMemberDisease"> | string | null
    hasMedicalReport?: BoolFilter<"FamilyMemberDisease"> | boolean
    familyMember_id?: StringNullableFilter<"FamilyMemberDisease"> | string | null
    candidate_id?: StringNullableFilter<"FamilyMemberDisease"> | string | null
    legalResponsibleId?: StringNullableFilter<"FamilyMemberDisease"> | string | null
    application_id?: StringFilter<"FamilyMemberDisease"> | string
    familyMember?: XOR<FamilyMemberNullableRelationFilter, FamilyMemberWhereInput> | null
    candidate?: XOR<CandidateNullableRelationFilter, CandidateWhereInput> | null
    legalResponsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
    Medication?: MedicationListRelationFilter
  }, "id" | "application_id_main_id">

  export type FamilyMemberDiseaseOrderByWithAggregationInput = {
    id?: SortOrder
    main_id?: SortOrderInput | SortOrder
    disease?: SortOrderInput | SortOrder
    diseases?: SortOrder
    specificDisease?: SortOrderInput | SortOrder
    hasMedicalReport?: SortOrder
    familyMember_id?: SortOrderInput | SortOrder
    candidate_id?: SortOrderInput | SortOrder
    legalResponsibleId?: SortOrderInput | SortOrder
    application_id?: SortOrder
    _count?: FamilyMemberDiseaseCountOrderByAggregateInput
    _max?: FamilyMemberDiseaseMaxOrderByAggregateInput
    _min?: FamilyMemberDiseaseMinOrderByAggregateInput
  }

  export type FamilyMemberDiseaseScalarWhereWithAggregatesInput = {
    AND?: FamilyMemberDiseaseScalarWhereWithAggregatesInput | FamilyMemberDiseaseScalarWhereWithAggregatesInput[]
    OR?: FamilyMemberDiseaseScalarWhereWithAggregatesInput[]
    NOT?: FamilyMemberDiseaseScalarWhereWithAggregatesInput | FamilyMemberDiseaseScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"FamilyMemberDisease"> | string
    main_id?: StringNullableWithAggregatesFilter<"FamilyMemberDisease"> | string | null
    disease?: EnumDiseaseNullableWithAggregatesFilter<"FamilyMemberDisease"> | $Enums.Disease | null
    diseases?: EnumDiseaseNullableListFilter<"FamilyMemberDisease">
    specificDisease?: StringNullableWithAggregatesFilter<"FamilyMemberDisease"> | string | null
    hasMedicalReport?: BoolWithAggregatesFilter<"FamilyMemberDisease"> | boolean
    familyMember_id?: StringNullableWithAggregatesFilter<"FamilyMemberDisease"> | string | null
    candidate_id?: StringNullableWithAggregatesFilter<"FamilyMemberDisease"> | string | null
    legalResponsibleId?: StringNullableWithAggregatesFilter<"FamilyMemberDisease"> | string | null
    application_id?: StringWithAggregatesFilter<"FamilyMemberDisease"> | string
  }

  export type MedicationWhereInput = {
    AND?: MedicationWhereInput | MedicationWhereInput[]
    OR?: MedicationWhereInput[]
    NOT?: MedicationWhereInput | MedicationWhereInput[]
    id?: StringFilter<"Medication"> | string
    main_id?: StringNullableFilter<"Medication"> | string | null
    medicationName?: StringFilter<"Medication"> | string
    obtainedPublicly?: BoolFilter<"Medication"> | boolean
    specificMedicationPublicly?: StringNullableFilter<"Medication"> | string | null
    familyMember_id?: StringNullableFilter<"Medication"> | string | null
    candidate_id?: StringNullableFilter<"Medication"> | string | null
    legalResponsibleId?: StringNullableFilter<"Medication"> | string | null
    application_id?: StringFilter<"Medication"> | string
    familyMemberDiseaseId?: StringNullableFilter<"Medication"> | string | null
    familyMember?: XOR<FamilyMemberNullableRelationFilter, FamilyMemberWhereInput> | null
    candidate?: XOR<CandidateNullableRelationFilter, CandidateWhereInput> | null
    legalResponsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
    FamilyMemberDisease?: XOR<FamilyMemberDiseaseNullableRelationFilter, FamilyMemberDiseaseWhereInput> | null
  }

  export type MedicationOrderByWithRelationInput = {
    id?: SortOrder
    main_id?: SortOrderInput | SortOrder
    medicationName?: SortOrder
    obtainedPublicly?: SortOrder
    specificMedicationPublicly?: SortOrderInput | SortOrder
    familyMember_id?: SortOrderInput | SortOrder
    candidate_id?: SortOrderInput | SortOrder
    legalResponsibleId?: SortOrderInput | SortOrder
    application_id?: SortOrder
    familyMemberDiseaseId?: SortOrderInput | SortOrder
    familyMember?: FamilyMemberOrderByWithRelationInput
    candidate?: CandidateOrderByWithRelationInput
    legalResponsible?: LegalResponsibleOrderByWithRelationInput
    FamilyMemberDisease?: FamilyMemberDiseaseOrderByWithRelationInput
  }

  export type MedicationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    application_id_main_id?: MedicationApplication_idMain_idCompoundUniqueInput
    AND?: MedicationWhereInput | MedicationWhereInput[]
    OR?: MedicationWhereInput[]
    NOT?: MedicationWhereInput | MedicationWhereInput[]
    main_id?: StringNullableFilter<"Medication"> | string | null
    medicationName?: StringFilter<"Medication"> | string
    obtainedPublicly?: BoolFilter<"Medication"> | boolean
    specificMedicationPublicly?: StringNullableFilter<"Medication"> | string | null
    familyMember_id?: StringNullableFilter<"Medication"> | string | null
    candidate_id?: StringNullableFilter<"Medication"> | string | null
    legalResponsibleId?: StringNullableFilter<"Medication"> | string | null
    application_id?: StringFilter<"Medication"> | string
    familyMemberDiseaseId?: StringNullableFilter<"Medication"> | string | null
    familyMember?: XOR<FamilyMemberNullableRelationFilter, FamilyMemberWhereInput> | null
    candidate?: XOR<CandidateNullableRelationFilter, CandidateWhereInput> | null
    legalResponsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
    FamilyMemberDisease?: XOR<FamilyMemberDiseaseNullableRelationFilter, FamilyMemberDiseaseWhereInput> | null
  }, "id" | "application_id_main_id">

  export type MedicationOrderByWithAggregationInput = {
    id?: SortOrder
    main_id?: SortOrderInput | SortOrder
    medicationName?: SortOrder
    obtainedPublicly?: SortOrder
    specificMedicationPublicly?: SortOrderInput | SortOrder
    familyMember_id?: SortOrderInput | SortOrder
    candidate_id?: SortOrderInput | SortOrder
    legalResponsibleId?: SortOrderInput | SortOrder
    application_id?: SortOrder
    familyMemberDiseaseId?: SortOrderInput | SortOrder
    _count?: MedicationCountOrderByAggregateInput
    _max?: MedicationMaxOrderByAggregateInput
    _min?: MedicationMinOrderByAggregateInput
  }

  export type MedicationScalarWhereWithAggregatesInput = {
    AND?: MedicationScalarWhereWithAggregatesInput | MedicationScalarWhereWithAggregatesInput[]
    OR?: MedicationScalarWhereWithAggregatesInput[]
    NOT?: MedicationScalarWhereWithAggregatesInput | MedicationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Medication"> | string
    main_id?: StringNullableWithAggregatesFilter<"Medication"> | string | null
    medicationName?: StringWithAggregatesFilter<"Medication"> | string
    obtainedPublicly?: BoolWithAggregatesFilter<"Medication"> | boolean
    specificMedicationPublicly?: StringNullableWithAggregatesFilter<"Medication"> | string | null
    familyMember_id?: StringNullableWithAggregatesFilter<"Medication"> | string | null
    candidate_id?: StringNullableWithAggregatesFilter<"Medication"> | string | null
    legalResponsibleId?: StringNullableWithAggregatesFilter<"Medication"> | string | null
    application_id?: StringWithAggregatesFilter<"Medication"> | string
    familyMemberDiseaseId?: StringNullableWithAggregatesFilter<"Medication"> | string | null
  }

  export type DeclarationsWhereInput = {
    AND?: DeclarationsWhereInput | DeclarationsWhereInput[]
    OR?: DeclarationsWhereInput[]
    NOT?: DeclarationsWhereInput | DeclarationsWhereInput[]
    id?: StringFilter<"Declarations"> | string
    declarationType?: EnumDeclaration_TypeFilter<"Declarations"> | $Enums.Declaration_Type
    text?: StringFilter<"Declarations"> | string
    familyMember_id?: StringNullableFilter<"Declarations"> | string | null
    candidate_id?: StringNullableFilter<"Declarations"> | string | null
    legalResponsibleId?: StringNullableFilter<"Declarations"> | string | null
    application_id?: StringFilter<"Declarations"> | string
    candidate?: XOR<CandidateNullableRelationFilter, CandidateWhereInput> | null
    familyMember?: XOR<FamilyMemberNullableRelationFilter, FamilyMemberWhereInput> | null
    LegalResponsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
  }

  export type DeclarationsOrderByWithRelationInput = {
    id?: SortOrder
    declarationType?: SortOrder
    text?: SortOrder
    familyMember_id?: SortOrderInput | SortOrder
    candidate_id?: SortOrderInput | SortOrder
    legalResponsibleId?: SortOrderInput | SortOrder
    application_id?: SortOrder
    candidate?: CandidateOrderByWithRelationInput
    familyMember?: FamilyMemberOrderByWithRelationInput
    LegalResponsible?: LegalResponsibleOrderByWithRelationInput
  }

  export type DeclarationsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: DeclarationsWhereInput | DeclarationsWhereInput[]
    OR?: DeclarationsWhereInput[]
    NOT?: DeclarationsWhereInput | DeclarationsWhereInput[]
    declarationType?: EnumDeclaration_TypeFilter<"Declarations"> | $Enums.Declaration_Type
    text?: StringFilter<"Declarations"> | string
    familyMember_id?: StringNullableFilter<"Declarations"> | string | null
    candidate_id?: StringNullableFilter<"Declarations"> | string | null
    legalResponsibleId?: StringNullableFilter<"Declarations"> | string | null
    application_id?: StringFilter<"Declarations"> | string
    candidate?: XOR<CandidateNullableRelationFilter, CandidateWhereInput> | null
    familyMember?: XOR<FamilyMemberNullableRelationFilter, FamilyMemberWhereInput> | null
    LegalResponsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
  }, "id">

  export type DeclarationsOrderByWithAggregationInput = {
    id?: SortOrder
    declarationType?: SortOrder
    text?: SortOrder
    familyMember_id?: SortOrderInput | SortOrder
    candidate_id?: SortOrderInput | SortOrder
    legalResponsibleId?: SortOrderInput | SortOrder
    application_id?: SortOrder
    _count?: DeclarationsCountOrderByAggregateInput
    _max?: DeclarationsMaxOrderByAggregateInput
    _min?: DeclarationsMinOrderByAggregateInput
  }

  export type DeclarationsScalarWhereWithAggregatesInput = {
    AND?: DeclarationsScalarWhereWithAggregatesInput | DeclarationsScalarWhereWithAggregatesInput[]
    OR?: DeclarationsScalarWhereWithAggregatesInput[]
    NOT?: DeclarationsScalarWhereWithAggregatesInput | DeclarationsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Declarations"> | string
    declarationType?: EnumDeclaration_TypeWithAggregatesFilter<"Declarations"> | $Enums.Declaration_Type
    text?: StringWithAggregatesFilter<"Declarations"> | string
    familyMember_id?: StringNullableWithAggregatesFilter<"Declarations"> | string | null
    candidate_id?: StringNullableWithAggregatesFilter<"Declarations"> | string | null
    legalResponsibleId?: StringNullableWithAggregatesFilter<"Declarations"> | string | null
    application_id?: StringWithAggregatesFilter<"Declarations"> | string
  }

  export type AnnouncementInterviewWhereInput = {
    AND?: AnnouncementInterviewWhereInput | AnnouncementInterviewWhereInput[]
    OR?: AnnouncementInterviewWhereInput[]
    NOT?: AnnouncementInterviewWhereInput | AnnouncementInterviewWhereInput[]
    startDate?: DateTimeFilter<"AnnouncementInterview"> | Date | string
    endDate?: DateTimeFilter<"AnnouncementInterview"> | Date | string
    beginHour?: DateTimeFilter<"AnnouncementInterview"> | Date | string
    interval?: IntFilter<"AnnouncementInterview"> | number
    endHour?: DateTimeFilter<"AnnouncementInterview"> | Date | string
    duration?: IntFilter<"AnnouncementInterview"> | number
    announcement_id?: StringFilter<"AnnouncementInterview"> | string
    announcement?: XOR<AnnouncementRelationFilter, AnnouncementWhereInput>
  }

  export type AnnouncementInterviewOrderByWithRelationInput = {
    startDate?: SortOrder
    endDate?: SortOrder
    beginHour?: SortOrder
    interval?: SortOrder
    endHour?: SortOrder
    duration?: SortOrder
    announcement_id?: SortOrder
    announcement?: AnnouncementOrderByWithRelationInput
  }

  export type AnnouncementInterviewWhereUniqueInput = Prisma.AtLeast<{
    announcement_id?: string
    AND?: AnnouncementInterviewWhereInput | AnnouncementInterviewWhereInput[]
    OR?: AnnouncementInterviewWhereInput[]
    NOT?: AnnouncementInterviewWhereInput | AnnouncementInterviewWhereInput[]
    startDate?: DateTimeFilter<"AnnouncementInterview"> | Date | string
    endDate?: DateTimeFilter<"AnnouncementInterview"> | Date | string
    beginHour?: DateTimeFilter<"AnnouncementInterview"> | Date | string
    interval?: IntFilter<"AnnouncementInterview"> | number
    endHour?: DateTimeFilter<"AnnouncementInterview"> | Date | string
    duration?: IntFilter<"AnnouncementInterview"> | number
    announcement?: XOR<AnnouncementRelationFilter, AnnouncementWhereInput>
  }, "announcement_id">

  export type AnnouncementInterviewOrderByWithAggregationInput = {
    startDate?: SortOrder
    endDate?: SortOrder
    beginHour?: SortOrder
    interval?: SortOrder
    endHour?: SortOrder
    duration?: SortOrder
    announcement_id?: SortOrder
    _count?: AnnouncementInterviewCountOrderByAggregateInput
    _avg?: AnnouncementInterviewAvgOrderByAggregateInput
    _max?: AnnouncementInterviewMaxOrderByAggregateInput
    _min?: AnnouncementInterviewMinOrderByAggregateInput
    _sum?: AnnouncementInterviewSumOrderByAggregateInput
  }

  export type AnnouncementInterviewScalarWhereWithAggregatesInput = {
    AND?: AnnouncementInterviewScalarWhereWithAggregatesInput | AnnouncementInterviewScalarWhereWithAggregatesInput[]
    OR?: AnnouncementInterviewScalarWhereWithAggregatesInput[]
    NOT?: AnnouncementInterviewScalarWhereWithAggregatesInput | AnnouncementInterviewScalarWhereWithAggregatesInput[]
    startDate?: DateTimeWithAggregatesFilter<"AnnouncementInterview"> | Date | string
    endDate?: DateTimeWithAggregatesFilter<"AnnouncementInterview"> | Date | string
    beginHour?: DateTimeWithAggregatesFilter<"AnnouncementInterview"> | Date | string
    interval?: IntWithAggregatesFilter<"AnnouncementInterview"> | number
    endHour?: DateTimeWithAggregatesFilter<"AnnouncementInterview"> | Date | string
    duration?: IntWithAggregatesFilter<"AnnouncementInterview"> | number
    announcement_id?: StringWithAggregatesFilter<"AnnouncementInterview"> | string
  }

  export type AnnouncementWhereInput = {
    AND?: AnnouncementWhereInput | AnnouncementWhereInput[]
    OR?: AnnouncementWhereInput[]
    NOT?: AnnouncementWhereInput | AnnouncementWhereInput[]
    id?: StringFilter<"Announcement"> | string
    entityChanged?: BoolNullableFilter<"Announcement"> | boolean | null
    branchChanged?: BoolNullableFilter<"Announcement"> | boolean | null
    announcementType?: EnumAnnouncementTypeFilter<"Announcement"> | $Enums.AnnouncementType
    announcementNumber?: StringNullableFilter<"Announcement"> | string | null
    announcementDate?: DateTimeNullableFilter<"Announcement"> | Date | string | null
    announcementBegin?: DateTimeNullableFilter<"Announcement"> | Date | string | null
    openDate?: DateTimeNullableFilter<"Announcement"> | Date | string | null
    closeDate?: DateTimeNullableFilter<"Announcement"> | Date | string | null
    waitingList?: BoolNullableFilter<"Announcement"> | boolean | null
    offeredVacancies?: IntNullableFilter<"Announcement"> | number | null
    verifiedScholarships?: IntNullableFilter<"Announcement"> | number | null
    description?: StringNullableFilter<"Announcement"> | string | null
    entity_id?: StringFilter<"Announcement"> | string
    announcementName?: StringNullableFilter<"Announcement"> | string | null
    announcementLogo?: StringNullableFilter<"Announcement"> | string | null
    type2?: StringNullableFilter<"Announcement"> | string | null
    criteria?: EnumTiebreakerCriteriasNullableListFilter<"Announcement">
    types1?: EnumscholarshipGrantedTypeNullableListFilter<"Announcement">
    interview?: XOR<AnnouncementInterviewNullableRelationFilter, AnnouncementInterviewWhereInput> | null
    entity?: XOR<EntityRelationFilter, EntityWhereInput>
    entity_subsidiary?: EntitySubsidiaryListRelationFilter
    Application?: ApplicationListRelationFilter
    educationLevels?: EducationLevelListRelationFilter
    ScholarshipGranted?: ScholarshipGrantedListRelationFilter
    timelines?: TimelineListRelationFilter
    socialAssistant?: SocialAssistantListRelationFilter
  }

  export type AnnouncementOrderByWithRelationInput = {
    id?: SortOrder
    entityChanged?: SortOrderInput | SortOrder
    branchChanged?: SortOrderInput | SortOrder
    announcementType?: SortOrder
    announcementNumber?: SortOrderInput | SortOrder
    announcementDate?: SortOrderInput | SortOrder
    announcementBegin?: SortOrderInput | SortOrder
    openDate?: SortOrderInput | SortOrder
    closeDate?: SortOrderInput | SortOrder
    waitingList?: SortOrderInput | SortOrder
    offeredVacancies?: SortOrderInput | SortOrder
    verifiedScholarships?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    entity_id?: SortOrder
    announcementName?: SortOrderInput | SortOrder
    announcementLogo?: SortOrderInput | SortOrder
    type2?: SortOrderInput | SortOrder
    criteria?: SortOrder
    types1?: SortOrder
    interview?: AnnouncementInterviewOrderByWithRelationInput
    entity?: EntityOrderByWithRelationInput
    entity_subsidiary?: EntitySubsidiaryOrderByRelationAggregateInput
    Application?: ApplicationOrderByRelationAggregateInput
    educationLevels?: EducationLevelOrderByRelationAggregateInput
    ScholarshipGranted?: ScholarshipGrantedOrderByRelationAggregateInput
    timelines?: TimelineOrderByRelationAggregateInput
    socialAssistant?: SocialAssistantOrderByRelationAggregateInput
  }

  export type AnnouncementWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AnnouncementWhereInput | AnnouncementWhereInput[]
    OR?: AnnouncementWhereInput[]
    NOT?: AnnouncementWhereInput | AnnouncementWhereInput[]
    entityChanged?: BoolNullableFilter<"Announcement"> | boolean | null
    branchChanged?: BoolNullableFilter<"Announcement"> | boolean | null
    announcementType?: EnumAnnouncementTypeFilter<"Announcement"> | $Enums.AnnouncementType
    announcementNumber?: StringNullableFilter<"Announcement"> | string | null
    announcementDate?: DateTimeNullableFilter<"Announcement"> | Date | string | null
    announcementBegin?: DateTimeNullableFilter<"Announcement"> | Date | string | null
    openDate?: DateTimeNullableFilter<"Announcement"> | Date | string | null
    closeDate?: DateTimeNullableFilter<"Announcement"> | Date | string | null
    waitingList?: BoolNullableFilter<"Announcement"> | boolean | null
    offeredVacancies?: IntNullableFilter<"Announcement"> | number | null
    verifiedScholarships?: IntNullableFilter<"Announcement"> | number | null
    description?: StringNullableFilter<"Announcement"> | string | null
    entity_id?: StringFilter<"Announcement"> | string
    announcementName?: StringNullableFilter<"Announcement"> | string | null
    announcementLogo?: StringNullableFilter<"Announcement"> | string | null
    type2?: StringNullableFilter<"Announcement"> | string | null
    criteria?: EnumTiebreakerCriteriasNullableListFilter<"Announcement">
    types1?: EnumscholarshipGrantedTypeNullableListFilter<"Announcement">
    interview?: XOR<AnnouncementInterviewNullableRelationFilter, AnnouncementInterviewWhereInput> | null
    entity?: XOR<EntityRelationFilter, EntityWhereInput>
    entity_subsidiary?: EntitySubsidiaryListRelationFilter
    Application?: ApplicationListRelationFilter
    educationLevels?: EducationLevelListRelationFilter
    ScholarshipGranted?: ScholarshipGrantedListRelationFilter
    timelines?: TimelineListRelationFilter
    socialAssistant?: SocialAssistantListRelationFilter
  }, "id">

  export type AnnouncementOrderByWithAggregationInput = {
    id?: SortOrder
    entityChanged?: SortOrderInput | SortOrder
    branchChanged?: SortOrderInput | SortOrder
    announcementType?: SortOrder
    announcementNumber?: SortOrderInput | SortOrder
    announcementDate?: SortOrderInput | SortOrder
    announcementBegin?: SortOrderInput | SortOrder
    openDate?: SortOrderInput | SortOrder
    closeDate?: SortOrderInput | SortOrder
    waitingList?: SortOrderInput | SortOrder
    offeredVacancies?: SortOrderInput | SortOrder
    verifiedScholarships?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    entity_id?: SortOrder
    announcementName?: SortOrderInput | SortOrder
    announcementLogo?: SortOrderInput | SortOrder
    type2?: SortOrderInput | SortOrder
    criteria?: SortOrder
    types1?: SortOrder
    _count?: AnnouncementCountOrderByAggregateInput
    _avg?: AnnouncementAvgOrderByAggregateInput
    _max?: AnnouncementMaxOrderByAggregateInput
    _min?: AnnouncementMinOrderByAggregateInput
    _sum?: AnnouncementSumOrderByAggregateInput
  }

  export type AnnouncementScalarWhereWithAggregatesInput = {
    AND?: AnnouncementScalarWhereWithAggregatesInput | AnnouncementScalarWhereWithAggregatesInput[]
    OR?: AnnouncementScalarWhereWithAggregatesInput[]
    NOT?: AnnouncementScalarWhereWithAggregatesInput | AnnouncementScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Announcement"> | string
    entityChanged?: BoolNullableWithAggregatesFilter<"Announcement"> | boolean | null
    branchChanged?: BoolNullableWithAggregatesFilter<"Announcement"> | boolean | null
    announcementType?: EnumAnnouncementTypeWithAggregatesFilter<"Announcement"> | $Enums.AnnouncementType
    announcementNumber?: StringNullableWithAggregatesFilter<"Announcement"> | string | null
    announcementDate?: DateTimeNullableWithAggregatesFilter<"Announcement"> | Date | string | null
    announcementBegin?: DateTimeNullableWithAggregatesFilter<"Announcement"> | Date | string | null
    openDate?: DateTimeNullableWithAggregatesFilter<"Announcement"> | Date | string | null
    closeDate?: DateTimeNullableWithAggregatesFilter<"Announcement"> | Date | string | null
    waitingList?: BoolNullableWithAggregatesFilter<"Announcement"> | boolean | null
    offeredVacancies?: IntNullableWithAggregatesFilter<"Announcement"> | number | null
    verifiedScholarships?: IntNullableWithAggregatesFilter<"Announcement"> | number | null
    description?: StringNullableWithAggregatesFilter<"Announcement"> | string | null
    entity_id?: StringWithAggregatesFilter<"Announcement"> | string
    announcementName?: StringNullableWithAggregatesFilter<"Announcement"> | string | null
    announcementLogo?: StringNullableWithAggregatesFilter<"Announcement"> | string | null
    type2?: StringNullableWithAggregatesFilter<"Announcement"> | string | null
    criteria?: EnumTiebreakerCriteriasNullableListFilter<"Announcement">
    types1?: EnumscholarshipGrantedTypeNullableListFilter<"Announcement">
  }

  export type TimelineWhereInput = {
    AND?: TimelineWhereInput | TimelineWhereInput[]
    OR?: TimelineWhereInput[]
    NOT?: TimelineWhereInput | TimelineWhereInput[]
    id?: StringFilter<"Timeline"> | string
    controlLine?: IntFilter<"Timeline"> | number
    stage?: StringFilter<"Timeline"> | string
    deadline?: DateTimeFilter<"Timeline"> | Date | string
    announcementId?: StringFilter<"Timeline"> | string
    announcement?: XOR<AnnouncementRelationFilter, AnnouncementWhereInput>
  }

  export type TimelineOrderByWithRelationInput = {
    id?: SortOrder
    controlLine?: SortOrder
    stage?: SortOrder
    deadline?: SortOrder
    announcementId?: SortOrder
    announcement?: AnnouncementOrderByWithRelationInput
  }

  export type TimelineWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: TimelineWhereInput | TimelineWhereInput[]
    OR?: TimelineWhereInput[]
    NOT?: TimelineWhereInput | TimelineWhereInput[]
    controlLine?: IntFilter<"Timeline"> | number
    stage?: StringFilter<"Timeline"> | string
    deadline?: DateTimeFilter<"Timeline"> | Date | string
    announcementId?: StringFilter<"Timeline"> | string
    announcement?: XOR<AnnouncementRelationFilter, AnnouncementWhereInput>
  }, "id">

  export type TimelineOrderByWithAggregationInput = {
    id?: SortOrder
    controlLine?: SortOrder
    stage?: SortOrder
    deadline?: SortOrder
    announcementId?: SortOrder
    _count?: TimelineCountOrderByAggregateInput
    _avg?: TimelineAvgOrderByAggregateInput
    _max?: TimelineMaxOrderByAggregateInput
    _min?: TimelineMinOrderByAggregateInput
    _sum?: TimelineSumOrderByAggregateInput
  }

  export type TimelineScalarWhereWithAggregatesInput = {
    AND?: TimelineScalarWhereWithAggregatesInput | TimelineScalarWhereWithAggregatesInput[]
    OR?: TimelineScalarWhereWithAggregatesInput[]
    NOT?: TimelineScalarWhereWithAggregatesInput | TimelineScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Timeline"> | string
    controlLine?: IntWithAggregatesFilter<"Timeline"> | number
    stage?: StringWithAggregatesFilter<"Timeline"> | string
    deadline?: DateTimeWithAggregatesFilter<"Timeline"> | Date | string
    announcementId?: StringWithAggregatesFilter<"Timeline"> | string
  }

  export type EducationLevelWhereInput = {
    AND?: EducationLevelWhereInput | EducationLevelWhereInput[]
    OR?: EducationLevelWhereInput[]
    NOT?: EducationLevelWhereInput | EducationLevelWhereInput[]
    id?: StringFilter<"EducationLevel"> | string
    level?: EnumLevelTypeFilter<"EducationLevel"> | $Enums.LevelType
    basicEduType?: EnumBasicEducationTypeNullableFilter<"EducationLevel"> | $Enums.BasicEducationType | null
    scholarshipType?: EnumScholarshipOfferTypeNullableFilter<"EducationLevel"> | $Enums.ScholarshipOfferType | null
    higherEduScholarshipType?: EnumHigherEducationScholarshipTypeNullableFilter<"EducationLevel"> | $Enums.HigherEducationScholarshipType | null
    offeredCourseType?: EnumOfferedCourseTypeNullableFilter<"EducationLevel"> | $Enums.OfferedCourseType | null
    availableCourses?: StringNullableFilter<"EducationLevel"> | string | null
    offeredVacancies?: IntNullableFilter<"EducationLevel"> | number | null
    verifiedScholarships?: IntNullableFilter<"EducationLevel"> | number | null
    shift?: EnumSHIFTNullableFilter<"EducationLevel"> | $Enums.SHIFT | null
    semester?: IntNullableFilter<"EducationLevel"> | number | null
    grade?: StringNullableFilter<"EducationLevel"> | string | null
    announcementId?: StringFilter<"EducationLevel"> | string
    entitySubsidiaryId?: StringNullableFilter<"EducationLevel"> | string | null
    Application?: ApplicationListRelationFilter
    announcement?: XOR<AnnouncementRelationFilter, AnnouncementWhereInput>
    entitySubsidiary?: XOR<EntitySubsidiaryNullableRelationFilter, EntitySubsidiaryWhereInput> | null
  }

  export type EducationLevelOrderByWithRelationInput = {
    id?: SortOrder
    level?: SortOrder
    basicEduType?: SortOrderInput | SortOrder
    scholarshipType?: SortOrderInput | SortOrder
    higherEduScholarshipType?: SortOrderInput | SortOrder
    offeredCourseType?: SortOrderInput | SortOrder
    availableCourses?: SortOrderInput | SortOrder
    offeredVacancies?: SortOrderInput | SortOrder
    verifiedScholarships?: SortOrderInput | SortOrder
    shift?: SortOrderInput | SortOrder
    semester?: SortOrderInput | SortOrder
    grade?: SortOrderInput | SortOrder
    announcementId?: SortOrder
    entitySubsidiaryId?: SortOrderInput | SortOrder
    Application?: ApplicationOrderByRelationAggregateInput
    announcement?: AnnouncementOrderByWithRelationInput
    entitySubsidiary?: EntitySubsidiaryOrderByWithRelationInput
  }

  export type EducationLevelWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: EducationLevelWhereInput | EducationLevelWhereInput[]
    OR?: EducationLevelWhereInput[]
    NOT?: EducationLevelWhereInput | EducationLevelWhereInput[]
    level?: EnumLevelTypeFilter<"EducationLevel"> | $Enums.LevelType
    basicEduType?: EnumBasicEducationTypeNullableFilter<"EducationLevel"> | $Enums.BasicEducationType | null
    scholarshipType?: EnumScholarshipOfferTypeNullableFilter<"EducationLevel"> | $Enums.ScholarshipOfferType | null
    higherEduScholarshipType?: EnumHigherEducationScholarshipTypeNullableFilter<"EducationLevel"> | $Enums.HigherEducationScholarshipType | null
    offeredCourseType?: EnumOfferedCourseTypeNullableFilter<"EducationLevel"> | $Enums.OfferedCourseType | null
    availableCourses?: StringNullableFilter<"EducationLevel"> | string | null
    offeredVacancies?: IntNullableFilter<"EducationLevel"> | number | null
    verifiedScholarships?: IntNullableFilter<"EducationLevel"> | number | null
    shift?: EnumSHIFTNullableFilter<"EducationLevel"> | $Enums.SHIFT | null
    semester?: IntNullableFilter<"EducationLevel"> | number | null
    grade?: StringNullableFilter<"EducationLevel"> | string | null
    announcementId?: StringFilter<"EducationLevel"> | string
    entitySubsidiaryId?: StringNullableFilter<"EducationLevel"> | string | null
    Application?: ApplicationListRelationFilter
    announcement?: XOR<AnnouncementRelationFilter, AnnouncementWhereInput>
    entitySubsidiary?: XOR<EntitySubsidiaryNullableRelationFilter, EntitySubsidiaryWhereInput> | null
  }, "id">

  export type EducationLevelOrderByWithAggregationInput = {
    id?: SortOrder
    level?: SortOrder
    basicEduType?: SortOrderInput | SortOrder
    scholarshipType?: SortOrderInput | SortOrder
    higherEduScholarshipType?: SortOrderInput | SortOrder
    offeredCourseType?: SortOrderInput | SortOrder
    availableCourses?: SortOrderInput | SortOrder
    offeredVacancies?: SortOrderInput | SortOrder
    verifiedScholarships?: SortOrderInput | SortOrder
    shift?: SortOrderInput | SortOrder
    semester?: SortOrderInput | SortOrder
    grade?: SortOrderInput | SortOrder
    announcementId?: SortOrder
    entitySubsidiaryId?: SortOrderInput | SortOrder
    _count?: EducationLevelCountOrderByAggregateInput
    _avg?: EducationLevelAvgOrderByAggregateInput
    _max?: EducationLevelMaxOrderByAggregateInput
    _min?: EducationLevelMinOrderByAggregateInput
    _sum?: EducationLevelSumOrderByAggregateInput
  }

  export type EducationLevelScalarWhereWithAggregatesInput = {
    AND?: EducationLevelScalarWhereWithAggregatesInput | EducationLevelScalarWhereWithAggregatesInput[]
    OR?: EducationLevelScalarWhereWithAggregatesInput[]
    NOT?: EducationLevelScalarWhereWithAggregatesInput | EducationLevelScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"EducationLevel"> | string
    level?: EnumLevelTypeWithAggregatesFilter<"EducationLevel"> | $Enums.LevelType
    basicEduType?: EnumBasicEducationTypeNullableWithAggregatesFilter<"EducationLevel"> | $Enums.BasicEducationType | null
    scholarshipType?: EnumScholarshipOfferTypeNullableWithAggregatesFilter<"EducationLevel"> | $Enums.ScholarshipOfferType | null
    higherEduScholarshipType?: EnumHigherEducationScholarshipTypeNullableWithAggregatesFilter<"EducationLevel"> | $Enums.HigherEducationScholarshipType | null
    offeredCourseType?: EnumOfferedCourseTypeNullableWithAggregatesFilter<"EducationLevel"> | $Enums.OfferedCourseType | null
    availableCourses?: StringNullableWithAggregatesFilter<"EducationLevel"> | string | null
    offeredVacancies?: IntNullableWithAggregatesFilter<"EducationLevel"> | number | null
    verifiedScholarships?: IntNullableWithAggregatesFilter<"EducationLevel"> | number | null
    shift?: EnumSHIFTNullableWithAggregatesFilter<"EducationLevel"> | $Enums.SHIFT | null
    semester?: IntNullableWithAggregatesFilter<"EducationLevel"> | number | null
    grade?: StringNullableWithAggregatesFilter<"EducationLevel"> | string | null
    announcementId?: StringWithAggregatesFilter<"EducationLevel"> | string
    entitySubsidiaryId?: StringNullableWithAggregatesFilter<"EducationLevel"> | string | null
  }

  export type ApplicationWhereInput = {
    AND?: ApplicationWhereInput | ApplicationWhereInput[]
    OR?: ApplicationWhereInput[]
    NOT?: ApplicationWhereInput | ApplicationWhereInput[]
    id?: StringFilter<"Application"> | string
    candidate_id?: StringFilter<"Application"> | string
    announcement_id?: StringFilter<"Application"> | string
    status?: EnumApplicationStatusFilter<"Application"> | $Enums.ApplicationStatus
    socialAssistant_id?: StringNullableFilter<"Application"> | string | null
    educationLevel_id?: StringFilter<"Application"> | string
    candidateName?: StringNullableFilter<"Application"> | string | null
    SocialAssistantName?: StringNullableFilter<"Application"> | string | null
    CadUnico?: BoolNullableFilter<"Application"> | boolean | null
    hasSevereDesease?: BoolNullableFilter<"Application"> | boolean | null
    averageIncome?: FloatNullableFilter<"Application"> | number | null
    perCapita?: FloatNullableFilter<"Application"> | number | null
    position?: IntNullableFilter<"Application"> | number | null
    number?: IntFilter<"Application"> | number
    reponsible_id?: StringNullableFilter<"Application"> | string | null
    announcement?: XOR<AnnouncementRelationFilter, AnnouncementWhereInput>
    candidate?: XOR<CandidateRelationFilter, CandidateWhereInput>
    EducationLevel?: XOR<EducationLevelRelationFilter, EducationLevelWhereInput>
    SocialAssistant?: XOR<SocialAssistantNullableRelationFilter, SocialAssistantWhereInput> | null
    applicationHistories?: ApplicationHistoryListRelationFilter
    ScholarshipGranted?: XOR<ScholarshipGrantedNullableRelationFilter, ScholarshipGrantedWhereInput> | null
    responsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
  }

  export type ApplicationOrderByWithRelationInput = {
    id?: SortOrder
    candidate_id?: SortOrder
    announcement_id?: SortOrder
    status?: SortOrder
    socialAssistant_id?: SortOrderInput | SortOrder
    educationLevel_id?: SortOrder
    candidateName?: SortOrderInput | SortOrder
    SocialAssistantName?: SortOrderInput | SortOrder
    CadUnico?: SortOrderInput | SortOrder
    hasSevereDesease?: SortOrderInput | SortOrder
    averageIncome?: SortOrderInput | SortOrder
    perCapita?: SortOrderInput | SortOrder
    position?: SortOrderInput | SortOrder
    number?: SortOrder
    reponsible_id?: SortOrderInput | SortOrder
    announcement?: AnnouncementOrderByWithRelationInput
    candidate?: CandidateOrderByWithRelationInput
    EducationLevel?: EducationLevelOrderByWithRelationInput
    SocialAssistant?: SocialAssistantOrderByWithRelationInput
    applicationHistories?: ApplicationHistoryOrderByRelationAggregateInput
    ScholarshipGranted?: ScholarshipGrantedOrderByWithRelationInput
    responsible?: LegalResponsibleOrderByWithRelationInput
  }

  export type ApplicationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    candidate_id_announcement_id?: ApplicationCandidate_idAnnouncement_idCompoundUniqueInput
    AND?: ApplicationWhereInput | ApplicationWhereInput[]
    OR?: ApplicationWhereInput[]
    NOT?: ApplicationWhereInput | ApplicationWhereInput[]
    candidate_id?: StringFilter<"Application"> | string
    announcement_id?: StringFilter<"Application"> | string
    status?: EnumApplicationStatusFilter<"Application"> | $Enums.ApplicationStatus
    socialAssistant_id?: StringNullableFilter<"Application"> | string | null
    educationLevel_id?: StringFilter<"Application"> | string
    candidateName?: StringNullableFilter<"Application"> | string | null
    SocialAssistantName?: StringNullableFilter<"Application"> | string | null
    CadUnico?: BoolNullableFilter<"Application"> | boolean | null
    hasSevereDesease?: BoolNullableFilter<"Application"> | boolean | null
    averageIncome?: FloatNullableFilter<"Application"> | number | null
    perCapita?: FloatNullableFilter<"Application"> | number | null
    position?: IntNullableFilter<"Application"> | number | null
    number?: IntFilter<"Application"> | number
    reponsible_id?: StringNullableFilter<"Application"> | string | null
    announcement?: XOR<AnnouncementRelationFilter, AnnouncementWhereInput>
    candidate?: XOR<CandidateRelationFilter, CandidateWhereInput>
    EducationLevel?: XOR<EducationLevelRelationFilter, EducationLevelWhereInput>
    SocialAssistant?: XOR<SocialAssistantNullableRelationFilter, SocialAssistantWhereInput> | null
    applicationHistories?: ApplicationHistoryListRelationFilter
    ScholarshipGranted?: XOR<ScholarshipGrantedNullableRelationFilter, ScholarshipGrantedWhereInput> | null
    responsible?: XOR<LegalResponsibleNullableRelationFilter, LegalResponsibleWhereInput> | null
  }, "id" | "candidate_id_announcement_id">

  export type ApplicationOrderByWithAggregationInput = {
    id?: SortOrder
    candidate_id?: SortOrder
    announcement_id?: SortOrder
    status?: SortOrder
    socialAssistant_id?: SortOrderInput | SortOrder
    educationLevel_id?: SortOrder
    candidateName?: SortOrderInput | SortOrder
    SocialAssistantName?: SortOrderInput | SortOrder
    CadUnico?: SortOrderInput | SortOrder
    hasSevereDesease?: SortOrderInput | SortOrder
    averageIncome?: SortOrderInput | SortOrder
    perCapita?: SortOrderInput | SortOrder
    position?: SortOrderInput | SortOrder
    number?: SortOrder
    reponsible_id?: SortOrderInput | SortOrder
    _count?: ApplicationCountOrderByAggregateInput
    _avg?: ApplicationAvgOrderByAggregateInput
    _max?: ApplicationMaxOrderByAggregateInput
    _min?: ApplicationMinOrderByAggregateInput
    _sum?: ApplicationSumOrderByAggregateInput
  }

  export type ApplicationScalarWhereWithAggregatesInput = {
    AND?: ApplicationScalarWhereWithAggregatesInput | ApplicationScalarWhereWithAggregatesInput[]
    OR?: ApplicationScalarWhereWithAggregatesInput[]
    NOT?: ApplicationScalarWhereWithAggregatesInput | ApplicationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Application"> | string
    candidate_id?: StringWithAggregatesFilter<"Application"> | string
    announcement_id?: StringWithAggregatesFilter<"Application"> | string
    status?: EnumApplicationStatusWithAggregatesFilter<"Application"> | $Enums.ApplicationStatus
    socialAssistant_id?: StringNullableWithAggregatesFilter<"Application"> | string | null
    educationLevel_id?: StringWithAggregatesFilter<"Application"> | string
    candidateName?: StringNullableWithAggregatesFilter<"Application"> | string | null
    SocialAssistantName?: StringNullableWithAggregatesFilter<"Application"> | string | null
    CadUnico?: BoolNullableWithAggregatesFilter<"Application"> | boolean | null
    hasSevereDesease?: BoolNullableWithAggregatesFilter<"Application"> | boolean | null
    averageIncome?: FloatNullableWithAggregatesFilter<"Application"> | number | null
    perCapita?: FloatNullableWithAggregatesFilter<"Application"> | number | null
    position?: IntNullableWithAggregatesFilter<"Application"> | number | null
    number?: IntWithAggregatesFilter<"Application"> | number
    reponsible_id?: StringNullableWithAggregatesFilter<"Application"> | string | null
  }

  export type ApplicationHistoryWhereInput = {
    AND?: ApplicationHistoryWhereInput | ApplicationHistoryWhereInput[]
    OR?: ApplicationHistoryWhereInput[]
    NOT?: ApplicationHistoryWhereInput | ApplicationHistoryWhereInput[]
    id?: StringFilter<"ApplicationHistory"> | string
    application_id?: StringFilter<"ApplicationHistory"> | string
    description?: StringFilter<"ApplicationHistory"> | string
    solicitation?: EnumSolicitationTypeNullableFilter<"ApplicationHistory"> | $Enums.SolicitationType | null
    report?: StringNullableFilter<"ApplicationHistory"> | string | null
    answered?: BoolNullableFilter<"ApplicationHistory"> | boolean | null
    deadLine?: DateTimeNullableFilter<"ApplicationHistory"> | Date | string | null
    date?: DateTimeFilter<"ApplicationHistory"> | Date | string
    application?: XOR<ApplicationRelationFilter, ApplicationWhereInput>
  }

  export type ApplicationHistoryOrderByWithRelationInput = {
    id?: SortOrder
    application_id?: SortOrder
    description?: SortOrder
    solicitation?: SortOrderInput | SortOrder
    report?: SortOrderInput | SortOrder
    answered?: SortOrderInput | SortOrder
    deadLine?: SortOrderInput | SortOrder
    date?: SortOrder
    application?: ApplicationOrderByWithRelationInput
  }

  export type ApplicationHistoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ApplicationHistoryWhereInput | ApplicationHistoryWhereInput[]
    OR?: ApplicationHistoryWhereInput[]
    NOT?: ApplicationHistoryWhereInput | ApplicationHistoryWhereInput[]
    application_id?: StringFilter<"ApplicationHistory"> | string
    description?: StringFilter<"ApplicationHistory"> | string
    solicitation?: EnumSolicitationTypeNullableFilter<"ApplicationHistory"> | $Enums.SolicitationType | null
    report?: StringNullableFilter<"ApplicationHistory"> | string | null
    answered?: BoolNullableFilter<"ApplicationHistory"> | boolean | null
    deadLine?: DateTimeNullableFilter<"ApplicationHistory"> | Date | string | null
    date?: DateTimeFilter<"ApplicationHistory"> | Date | string
    application?: XOR<ApplicationRelationFilter, ApplicationWhereInput>
  }, "id">

  export type ApplicationHistoryOrderByWithAggregationInput = {
    id?: SortOrder
    application_id?: SortOrder
    description?: SortOrder
    solicitation?: SortOrderInput | SortOrder
    report?: SortOrderInput | SortOrder
    answered?: SortOrderInput | SortOrder
    deadLine?: SortOrderInput | SortOrder
    date?: SortOrder
    _count?: ApplicationHistoryCountOrderByAggregateInput
    _max?: ApplicationHistoryMaxOrderByAggregateInput
    _min?: ApplicationHistoryMinOrderByAggregateInput
  }

  export type ApplicationHistoryScalarWhereWithAggregatesInput = {
    AND?: ApplicationHistoryScalarWhereWithAggregatesInput | ApplicationHistoryScalarWhereWithAggregatesInput[]
    OR?: ApplicationHistoryScalarWhereWithAggregatesInput[]
    NOT?: ApplicationHistoryScalarWhereWithAggregatesInput | ApplicationHistoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ApplicationHistory"> | string
    application_id?: StringWithAggregatesFilter<"ApplicationHistory"> | string
    description?: StringWithAggregatesFilter<"ApplicationHistory"> | string
    solicitation?: EnumSolicitationTypeNullableWithAggregatesFilter<"ApplicationHistory"> | $Enums.SolicitationType | null
    report?: StringNullableWithAggregatesFilter<"ApplicationHistory"> | string | null
    answered?: BoolNullableWithAggregatesFilter<"ApplicationHistory"> | boolean | null
    deadLine?: DateTimeNullableWithAggregatesFilter<"ApplicationHistory"> | Date | string | null
    date?: DateTimeWithAggregatesFilter<"ApplicationHistory"> | Date | string
  }

  export type ScholarshipGrantedWhereInput = {
    AND?: ScholarshipGrantedWhereInput | ScholarshipGrantedWhereInput[]
    OR?: ScholarshipGrantedWhereInput[]
    NOT?: ScholarshipGrantedWhereInput | ScholarshipGrantedWhereInput[]
    id?: StringFilter<"ScholarshipGranted"> | string
    gaveUp?: BoolFilter<"ScholarshipGranted"> | boolean
    ScholarshipCode?: StringNullableFilter<"ScholarshipGranted"> | string | null
    types?: EnumscholarshipGrantedTypeNullableListFilter<"ScholarshipGranted">
    application_id?: StringFilter<"ScholarshipGranted"> | string
    announcement_id?: StringFilter<"ScholarshipGranted"> | string
    announmentent?: XOR<AnnouncementRelationFilter, AnnouncementWhereInput>
    application?: XOR<ApplicationRelationFilter, ApplicationWhereInput>
  }

  export type ScholarshipGrantedOrderByWithRelationInput = {
    id?: SortOrder
    gaveUp?: SortOrder
    ScholarshipCode?: SortOrderInput | SortOrder
    types?: SortOrder
    application_id?: SortOrder
    announcement_id?: SortOrder
    announmentent?: AnnouncementOrderByWithRelationInput
    application?: ApplicationOrderByWithRelationInput
  }

  export type ScholarshipGrantedWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    application_id?: string
    AND?: ScholarshipGrantedWhereInput | ScholarshipGrantedWhereInput[]
    OR?: ScholarshipGrantedWhereInput[]
    NOT?: ScholarshipGrantedWhereInput | ScholarshipGrantedWhereInput[]
    gaveUp?: BoolFilter<"ScholarshipGranted"> | boolean
    ScholarshipCode?: StringNullableFilter<"ScholarshipGranted"> | string | null
    types?: EnumscholarshipGrantedTypeNullableListFilter<"ScholarshipGranted">
    announcement_id?: StringFilter<"ScholarshipGranted"> | string
    announmentent?: XOR<AnnouncementRelationFilter, AnnouncementWhereInput>
    application?: XOR<ApplicationRelationFilter, ApplicationWhereInput>
  }, "id" | "application_id">

  export type ScholarshipGrantedOrderByWithAggregationInput = {
    id?: SortOrder
    gaveUp?: SortOrder
    ScholarshipCode?: SortOrderInput | SortOrder
    types?: SortOrder
    application_id?: SortOrder
    announcement_id?: SortOrder
    _count?: ScholarshipGrantedCountOrderByAggregateInput
    _max?: ScholarshipGrantedMaxOrderByAggregateInput
    _min?: ScholarshipGrantedMinOrderByAggregateInput
  }

  export type ScholarshipGrantedScalarWhereWithAggregatesInput = {
    AND?: ScholarshipGrantedScalarWhereWithAggregatesInput | ScholarshipGrantedScalarWhereWithAggregatesInput[]
    OR?: ScholarshipGrantedScalarWhereWithAggregatesInput[]
    NOT?: ScholarshipGrantedScalarWhereWithAggregatesInput | ScholarshipGrantedScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ScholarshipGranted"> | string
    gaveUp?: BoolWithAggregatesFilter<"ScholarshipGranted"> | boolean
    ScholarshipCode?: StringNullableWithAggregatesFilter<"ScholarshipGranted"> | string | null
    types?: EnumscholarshipGrantedTypeNullableListFilter<"ScholarshipGranted">
    application_id?: StringWithAggregatesFilter<"ScholarshipGranted"> | string
    announcement_id?: StringWithAggregatesFilter<"ScholarshipGranted"> | string
  }

  export type FamilyMemberToVehicleWhereInput = {
    AND?: FamilyMemberToVehicleWhereInput | FamilyMemberToVehicleWhereInput[]
    OR?: FamilyMemberToVehicleWhereInput[]
    NOT?: FamilyMemberToVehicleWhereInput | FamilyMemberToVehicleWhereInput[]
    A?: StringFilter<"FamilyMemberToVehicle"> | string
    B?: StringFilter<"FamilyMemberToVehicle"> | string
    application_id?: StringFilter<"FamilyMemberToVehicle"> | string
    main_id?: StringNullableFilter<"FamilyMemberToVehicle"> | string | null
    familyMembers?: XOR<FamilyMemberRelationFilter, FamilyMemberWhereInput>
    Vehicle?: XOR<VehicleRelationFilter, VehicleWhereInput>
  }

  export type FamilyMemberToVehicleOrderByWithRelationInput = {
    A?: SortOrder
    B?: SortOrder
    application_id?: SortOrder
    main_id?: SortOrderInput | SortOrder
    familyMembers?: FamilyMemberOrderByWithRelationInput
    Vehicle?: VehicleOrderByWithRelationInput
  }

  export type FamilyMemberToVehicleWhereUniqueInput = Prisma.AtLeast<{
    application_id?: string
    A_B?: FamilyMemberToVehicleABCompoundUniqueInput
    AND?: FamilyMemberToVehicleWhereInput | FamilyMemberToVehicleWhereInput[]
    OR?: FamilyMemberToVehicleWhereInput[]
    NOT?: FamilyMemberToVehicleWhereInput | FamilyMemberToVehicleWhereInput[]
    A?: StringFilter<"FamilyMemberToVehicle"> | string
    B?: StringFilter<"FamilyMemberToVehicle"> | string
    main_id?: StringNullableFilter<"FamilyMemberToVehicle"> | string | null
    familyMembers?: XOR<FamilyMemberRelationFilter, FamilyMemberWhereInput>
    Vehicle?: XOR<VehicleRelationFilter, VehicleWhereInput>
  }, "application_id" | "A_B">

  export type FamilyMemberToVehicleOrderByWithAggregationInput = {
    A?: SortOrder
    B?: SortOrder
    application_id?: SortOrder
    main_id?: SortOrderInput | SortOrder
    _count?: FamilyMemberToVehicleCountOrderByAggregateInput
    _max?: FamilyMemberToVehicleMaxOrderByAggregateInput
    _min?: FamilyMemberToVehicleMinOrderByAggregateInput
  }

  export type FamilyMemberToVehicleScalarWhereWithAggregatesInput = {
    AND?: FamilyMemberToVehicleScalarWhereWithAggregatesInput | FamilyMemberToVehicleScalarWhereWithAggregatesInput[]
    OR?: FamilyMemberToVehicleScalarWhereWithAggregatesInput[]
    NOT?: FamilyMemberToVehicleScalarWhereWithAggregatesInput | FamilyMemberToVehicleScalarWhereWithAggregatesInput[]
    A?: StringWithAggregatesFilter<"FamilyMemberToVehicle"> | string
    B?: StringWithAggregatesFilter<"FamilyMemberToVehicle"> | string
    application_id?: StringWithAggregatesFilter<"FamilyMemberToVehicle"> | string
    main_id?: StringNullableWithAggregatesFilter<"FamilyMemberToVehicle"> | string | null
  }

  export type IdMappingCreateInput = {
    id?: string
    mainId?: string
    newId?: string
    application_id?: string
  }

  export type IdMappingUncheckedCreateInput = {
    id?: string
    mainId?: string
    newId?: string
    application_id?: string
  }

  export type IdMappingUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    mainId?: StringFieldUpdateOperationsInput | string
    newId?: StringFieldUpdateOperationsInput | string
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type IdMappingUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    mainId?: StringFieldUpdateOperationsInput | string
    newId?: StringFieldUpdateOperationsInput | string
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type IdMappingCreateManyInput = {
    id?: string
    mainId?: string
    newId?: string
    application_id?: string
  }

  export type IdMappingUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    mainId?: StringFieldUpdateOperationsInput | string
    newId?: StringFieldUpdateOperationsInput | string
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type IdMappingUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    mainId?: StringFieldUpdateOperationsInput | string
    newId?: StringFieldUpdateOperationsInput | string
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type CandidateCreateInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseCreateNestedManyWithoutCandidateInput
    Financing?: FinancingCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutCandidateInput
    Loan?: LoanCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleCreateNestedManyWithoutCandidateInput
    responsible?: LegalResponsibleCreateNestedOneWithoutCandidateInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutCandidateInput
    Housing?: HousingCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutCandidateInput
    Medication?: MedicationCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsCreateNestedManyWithoutCandidateInput
  }

  export type CandidateUncheckedCreateInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    responsible_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationUncheckedCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutCandidateInput
    Loan?: LoanUncheckedCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutCandidateInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutCandidateInput
    Housing?: HousingUncheckedCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutCandidateInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type CandidateUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUpdateManyWithoutCandidateNestedInput
    responsible?: LegalResponsibleUpdateOneWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    responsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUncheckedUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateCreateManyInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    responsible_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
  }

  export type CandidateUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CandidateUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    responsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserCreateInput = {
    id?: string
    email: string
    password: string
    role?: $Enums.ROLE
    createdAt?: Date | string
    profilePicture?: string | null
    EntityDirector?: EntityDirectorCreateNestedOneWithoutUserInput
    EntitySubsidiary?: EntitySubsidiaryCreateNestedOneWithoutUserInput
    SocialAssistant?: SocialAssistantCreateNestedOneWithoutUserInput
    Entity?: EntityCreateNestedOneWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    email: string
    password: string
    role?: $Enums.ROLE
    createdAt?: Date | string
    profilePicture?: string | null
    EntityDirector?: EntityDirectorUncheckedCreateNestedOneWithoutUserInput
    EntitySubsidiary?: EntitySubsidiaryUncheckedCreateNestedOneWithoutUserInput
    SocialAssistant?: SocialAssistantUncheckedCreateNestedOneWithoutUserInput
    Entity?: EntityUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    EntityDirector?: EntityDirectorUpdateOneWithoutUserNestedInput
    EntitySubsidiary?: EntitySubsidiaryUpdateOneWithoutUserNestedInput
    SocialAssistant?: SocialAssistantUpdateOneWithoutUserNestedInput
    Entity?: EntityUpdateOneWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    EntityDirector?: EntityDirectorUncheckedUpdateOneWithoutUserNestedInput
    EntitySubsidiary?: EntitySubsidiaryUncheckedUpdateOneWithoutUserNestedInput
    SocialAssistant?: SocialAssistantUncheckedUpdateOneWithoutUserNestedInput
    Entity?: EntityUncheckedUpdateOneWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    email: string
    password: string
    role?: $Enums.ROLE
    createdAt?: Date | string
    profilePicture?: string | null
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LegalResponsibleCreateInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateCreateNestedManyWithoutResponsibleInput
    Housing?: HousingCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleUncheckedCreateInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateUncheckedCreateNestedManyWithoutResponsibleInput
    Housing?: HousingUncheckedCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanUncheckedCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type LegalResponsibleUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUncheckedUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type LegalResponsibleCreateManyInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
  }

  export type LegalResponsibleUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LegalResponsibleUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SocialAssistantCreateInput = {
    id?: string
    name: string
    CPF: string
    RG: string
    CRESS: string
    phone: string
    Application?: ApplicationCreateNestedManyWithoutSocialAssistantInput
    entity: EntityCreateNestedOneWithoutSocialAssistantInput
    user: UserCreateNestedOneWithoutSocialAssistantInput
    Announcement?: AnnouncementCreateNestedManyWithoutSocialAssistantInput
    entity_subsidiary?: EntitySubsidiaryCreateNestedManyWithoutSocialAssistantInput
  }

  export type SocialAssistantUncheckedCreateInput = {
    id?: string
    name: string
    CPF: string
    RG: string
    CRESS: string
    phone: string
    user_id: string
    entity_id: string
    Application?: ApplicationUncheckedCreateNestedManyWithoutSocialAssistantInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutSocialAssistantInput
    entity_subsidiary?: EntitySubsidiaryUncheckedCreateNestedManyWithoutSocialAssistantInput
  }

  export type SocialAssistantUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    CRESS?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    Application?: ApplicationUpdateManyWithoutSocialAssistantNestedInput
    entity?: EntityUpdateOneRequiredWithoutSocialAssistantNestedInput
    user?: UserUpdateOneRequiredWithoutSocialAssistantNestedInput
    Announcement?: AnnouncementUpdateManyWithoutSocialAssistantNestedInput
    entity_subsidiary?: EntitySubsidiaryUpdateManyWithoutSocialAssistantNestedInput
  }

  export type SocialAssistantUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    CRESS?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    entity_id?: StringFieldUpdateOperationsInput | string
    Application?: ApplicationUncheckedUpdateManyWithoutSocialAssistantNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutSocialAssistantNestedInput
    entity_subsidiary?: EntitySubsidiaryUncheckedUpdateManyWithoutSocialAssistantNestedInput
  }

  export type SocialAssistantCreateManyInput = {
    id?: string
    name: string
    CPF: string
    RG: string
    CRESS: string
    phone: string
    user_id: string
    entity_id: string
  }

  export type SocialAssistantUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    CRESS?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
  }

  export type SocialAssistantUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    CRESS?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    entity_id?: StringFieldUpdateOperationsInput | string
  }

  export type EntityCreateInput = {
    id?: string
    name?: string | null
    socialReason: string
    logo?: string | null
    CNPJ: string
    CEP: string
    address?: string
    addressNumber?: number | null
    neighborhood?: string
    UF?: $Enums.COUNTRY | null
    city?: string
    educationalInstitutionCode?: string | null
    Announcement?: AnnouncementCreateNestedManyWithoutEntityInput
    EntityDirector?: EntityDirectorCreateNestedManyWithoutEntityInput
    EntitySubsidiary?: EntitySubsidiaryCreateNestedManyWithoutEntityInput
    SocialAssistant?: SocialAssistantCreateNestedManyWithoutEntityInput
    user: UserCreateNestedOneWithoutEntityInput
  }

  export type EntityUncheckedCreateInput = {
    id?: string
    name?: string | null
    socialReason: string
    logo?: string | null
    CNPJ: string
    CEP: string
    address?: string
    addressNumber?: number | null
    neighborhood?: string
    UF?: $Enums.COUNTRY | null
    city?: string
    educationalInstitutionCode?: string | null
    user_id: string
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutEntityInput
    EntityDirector?: EntityDirectorUncheckedCreateNestedManyWithoutEntityInput
    EntitySubsidiary?: EntitySubsidiaryUncheckedCreateNestedManyWithoutEntityInput
    SocialAssistant?: SocialAssistantUncheckedCreateNestedManyWithoutEntityInput
  }

  export type EntityUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    socialReason?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    CNPJ?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    neighborhood?: StringFieldUpdateOperationsInput | string
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    city?: StringFieldUpdateOperationsInput | string
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
    Announcement?: AnnouncementUpdateManyWithoutEntityNestedInput
    EntityDirector?: EntityDirectorUpdateManyWithoutEntityNestedInput
    EntitySubsidiary?: EntitySubsidiaryUpdateManyWithoutEntityNestedInput
    SocialAssistant?: SocialAssistantUpdateManyWithoutEntityNestedInput
    user?: UserUpdateOneRequiredWithoutEntityNestedInput
  }

  export type EntityUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    socialReason?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    CNPJ?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    neighborhood?: StringFieldUpdateOperationsInput | string
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    city?: StringFieldUpdateOperationsInput | string
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: StringFieldUpdateOperationsInput | string
    Announcement?: AnnouncementUncheckedUpdateManyWithoutEntityNestedInput
    EntityDirector?: EntityDirectorUncheckedUpdateManyWithoutEntityNestedInput
    EntitySubsidiary?: EntitySubsidiaryUncheckedUpdateManyWithoutEntityNestedInput
    SocialAssistant?: SocialAssistantUncheckedUpdateManyWithoutEntityNestedInput
  }

  export type EntityCreateManyInput = {
    id?: string
    name?: string | null
    socialReason: string
    logo?: string | null
    CNPJ: string
    CEP: string
    address?: string
    addressNumber?: number | null
    neighborhood?: string
    UF?: $Enums.COUNTRY | null
    city?: string
    educationalInstitutionCode?: string | null
    user_id: string
  }

  export type EntityUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    socialReason?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    CNPJ?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    neighborhood?: StringFieldUpdateOperationsInput | string
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    city?: StringFieldUpdateOperationsInput | string
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EntityUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    socialReason?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    CNPJ?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    neighborhood?: StringFieldUpdateOperationsInput | string
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    city?: StringFieldUpdateOperationsInput | string
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: StringFieldUpdateOperationsInput | string
  }

  export type EntitySubsidiaryCreateInput = {
    id?: string
    CNPJ: string
    name: string
    socialReason: string
    CEP: string
    address: string
    addressNumber?: number | null
    city?: string | null
    neighborhood?: string | null
    UF?: $Enums.COUNTRY | null
    educationalInstitutionCode?: string | null
    Announcement?: AnnouncementCreateNestedManyWithoutEntity_subsidiaryInput
    EntityDirector?: EntityDirectorCreateNestedManyWithoutEntity_subsidiaryInput
    entity: EntityCreateNestedOneWithoutEntitySubsidiaryInput
    user: UserCreateNestedOneWithoutEntitySubsidiaryInput
    SocialAssistant?: SocialAssistantCreateNestedManyWithoutEntity_subsidiaryInput
    EducationLevel?: EducationLevelCreateNestedManyWithoutEntitySubsidiaryInput
  }

  export type EntitySubsidiaryUncheckedCreateInput = {
    id?: string
    CNPJ: string
    name: string
    socialReason: string
    CEP: string
    address: string
    addressNumber?: number | null
    city?: string | null
    neighborhood?: string | null
    UF?: $Enums.COUNTRY | null
    educationalInstitutionCode?: string | null
    entity_id: string
    user_id: string
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutEntity_subsidiaryInput
    EntityDirector?: EntityDirectorUncheckedCreateNestedManyWithoutEntity_subsidiaryInput
    SocialAssistant?: SocialAssistantUncheckedCreateNestedManyWithoutEntity_subsidiaryInput
    EducationLevel?: EducationLevelUncheckedCreateNestedManyWithoutEntitySubsidiaryInput
  }

  export type EntitySubsidiaryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    CNPJ?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    socialReason?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
    Announcement?: AnnouncementUpdateManyWithoutEntity_subsidiaryNestedInput
    EntityDirector?: EntityDirectorUpdateManyWithoutEntity_subsidiaryNestedInput
    entity?: EntityUpdateOneRequiredWithoutEntitySubsidiaryNestedInput
    user?: UserUpdateOneRequiredWithoutEntitySubsidiaryNestedInput
    SocialAssistant?: SocialAssistantUpdateManyWithoutEntity_subsidiaryNestedInput
    EducationLevel?: EducationLevelUpdateManyWithoutEntitySubsidiaryNestedInput
  }

  export type EntitySubsidiaryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    CNPJ?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    socialReason?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
    entity_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    Announcement?: AnnouncementUncheckedUpdateManyWithoutEntity_subsidiaryNestedInput
    EntityDirector?: EntityDirectorUncheckedUpdateManyWithoutEntity_subsidiaryNestedInput
    SocialAssistant?: SocialAssistantUncheckedUpdateManyWithoutEntity_subsidiaryNestedInput
    EducationLevel?: EducationLevelUncheckedUpdateManyWithoutEntitySubsidiaryNestedInput
  }

  export type EntitySubsidiaryCreateManyInput = {
    id?: string
    CNPJ: string
    name: string
    socialReason: string
    CEP: string
    address: string
    addressNumber?: number | null
    city?: string | null
    neighborhood?: string | null
    UF?: $Enums.COUNTRY | null
    educationalInstitutionCode?: string | null
    entity_id: string
    user_id: string
  }

  export type EntitySubsidiaryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    CNPJ?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    socialReason?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EntitySubsidiaryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    CNPJ?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    socialReason?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
    entity_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
  }

  export type EntityDirectorCreateInput = {
    id?: string
    name: string
    CPF: string
    phone: string
    entity?: EntityCreateNestedOneWithoutEntityDirectorInput
    entity_subsidiary?: EntitySubsidiaryCreateNestedOneWithoutEntityDirectorInput
    user: UserCreateNestedOneWithoutEntityDirectorInput
  }

  export type EntityDirectorUncheckedCreateInput = {
    id?: string
    name: string
    CPF: string
    phone: string
    user_id: string
    entity_subsidiary_id?: string | null
    entity_id?: string | null
  }

  export type EntityDirectorUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    entity?: EntityUpdateOneWithoutEntityDirectorNestedInput
    entity_subsidiary?: EntitySubsidiaryUpdateOneWithoutEntityDirectorNestedInput
    user?: UserUpdateOneRequiredWithoutEntityDirectorNestedInput
  }

  export type EntityDirectorUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    entity_subsidiary_id?: NullableStringFieldUpdateOperationsInput | string | null
    entity_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EntityDirectorCreateManyInput = {
    id?: string
    name: string
    CPF: string
    phone: string
    user_id: string
    entity_subsidiary_id?: string | null
    entity_id?: string | null
  }

  export type EntityDirectorUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
  }

  export type EntityDirectorUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    entity_subsidiary_id?: NullableStringFieldUpdateOperationsInput | string | null
    entity_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type IdentityDetailsCreateInput = {
    id?: string
    fullName: string
    socialName?: string | null
    main_id?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF?: string | null
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    CadUnico?: boolean
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    address?: string | null
    addressNumber?: string | null
    complement?: string | null
    neighborhood?: string | null
    city?: string | null
    UF?: $Enums.COUNTRY | null
    CEP?: string | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    email?: string | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    incomeSource?: IdentityDetailsCreateincomeSourceInput | $Enums.IncomeSource[]
    livesAlone: boolean
    intendsToGetScholarship: boolean
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    yearsBenefitedFromCebas_basic?: IdentityDetailsCreateyearsBenefitedFromCebas_basicInput | string[]
    scholarshipType_basic?: $Enums.ScholarshipType | null
    institutionName_basic?: string | null
    institutionCNPJ_basic?: string | null
    benefitedFromCebasScholarship_professional?: boolean | null
    lastYearBenefitedFromCebas_professional?: string | null
    scholarshipType_professional?: $Enums.ScholarshipType | null
    institutionName_professional?: string | null
    institutionCNPJ_professional?: string | null
    nameOfScholarshipCourse_professional?: string | null
    application_id: string
    candidate?: CandidateCreateNestedOneWithoutIdentityDetailsInput
    responsible?: LegalResponsibleCreateNestedOneWithoutIdentityDetailsInput
  }

  export type IdentityDetailsUncheckedCreateInput = {
    id?: string
    fullName: string
    socialName?: string | null
    main_id?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF?: string | null
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    CadUnico?: boolean
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    address?: string | null
    addressNumber?: string | null
    complement?: string | null
    neighborhood?: string | null
    city?: string | null
    UF?: $Enums.COUNTRY | null
    CEP?: string | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    email?: string | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    incomeSource?: IdentityDetailsCreateincomeSourceInput | $Enums.IncomeSource[]
    livesAlone: boolean
    intendsToGetScholarship: boolean
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    yearsBenefitedFromCebas_basic?: IdentityDetailsCreateyearsBenefitedFromCebas_basicInput | string[]
    scholarshipType_basic?: $Enums.ScholarshipType | null
    institutionName_basic?: string | null
    institutionCNPJ_basic?: string | null
    benefitedFromCebasScholarship_professional?: boolean | null
    lastYearBenefitedFromCebas_professional?: string | null
    scholarshipType_professional?: $Enums.ScholarshipType | null
    institutionName_professional?: string | null
    institutionCNPJ_professional?: string | null
    nameOfScholarshipCourse_professional?: string | null
    candidate_id?: string | null
    responsible_id?: string | null
    application_id: string
  }

  export type IdentityDetailsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: NullableStringFieldUpdateOperationsInput | string | null
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    CadUnico?: BoolFieldUpdateOperationsInput | boolean
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    addressNumber?: NullableStringFieldUpdateOperationsInput | string | null
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    CEP?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: IdentityDetailsUpdateincomeSourceInput | $Enums.IncomeSource[]
    livesAlone?: BoolFieldUpdateOperationsInput | boolean
    intendsToGetScholarship?: BoolFieldUpdateOperationsInput | boolean
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    yearsBenefitedFromCebas_basic?: IdentityDetailsUpdateyearsBenefitedFromCebas_basicInput | string[]
    scholarshipType_basic?: NullableEnumScholarshipTypeFieldUpdateOperationsInput | $Enums.ScholarshipType | null
    institutionName_basic?: NullableStringFieldUpdateOperationsInput | string | null
    institutionCNPJ_basic?: NullableStringFieldUpdateOperationsInput | string | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    lastYearBenefitedFromCebas_professional?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipType_professional?: NullableEnumScholarshipTypeFieldUpdateOperationsInput | $Enums.ScholarshipType | null
    institutionName_professional?: NullableStringFieldUpdateOperationsInput | string | null
    institutionCNPJ_professional?: NullableStringFieldUpdateOperationsInput | string | null
    nameOfScholarshipCourse_professional?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    candidate?: CandidateUpdateOneWithoutIdentityDetailsNestedInput
    responsible?: LegalResponsibleUpdateOneWithoutIdentityDetailsNestedInput
  }

  export type IdentityDetailsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: NullableStringFieldUpdateOperationsInput | string | null
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    CadUnico?: BoolFieldUpdateOperationsInput | boolean
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    addressNumber?: NullableStringFieldUpdateOperationsInput | string | null
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    CEP?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: IdentityDetailsUpdateincomeSourceInput | $Enums.IncomeSource[]
    livesAlone?: BoolFieldUpdateOperationsInput | boolean
    intendsToGetScholarship?: BoolFieldUpdateOperationsInput | boolean
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    yearsBenefitedFromCebas_basic?: IdentityDetailsUpdateyearsBenefitedFromCebas_basicInput | string[]
    scholarshipType_basic?: NullableEnumScholarshipTypeFieldUpdateOperationsInput | $Enums.ScholarshipType | null
    institutionName_basic?: NullableStringFieldUpdateOperationsInput | string | null
    institutionCNPJ_basic?: NullableStringFieldUpdateOperationsInput | string | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    lastYearBenefitedFromCebas_professional?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipType_professional?: NullableEnumScholarshipTypeFieldUpdateOperationsInput | $Enums.ScholarshipType | null
    institutionName_professional?: NullableStringFieldUpdateOperationsInput | string | null
    institutionCNPJ_professional?: NullableStringFieldUpdateOperationsInput | string | null
    nameOfScholarshipCourse_professional?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    responsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type IdentityDetailsCreateManyInput = {
    id?: string
    fullName: string
    socialName?: string | null
    main_id?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF?: string | null
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    CadUnico?: boolean
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    address?: string | null
    addressNumber?: string | null
    complement?: string | null
    neighborhood?: string | null
    city?: string | null
    UF?: $Enums.COUNTRY | null
    CEP?: string | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    email?: string | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    incomeSource?: IdentityDetailsCreateincomeSourceInput | $Enums.IncomeSource[]
    livesAlone: boolean
    intendsToGetScholarship: boolean
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    yearsBenefitedFromCebas_basic?: IdentityDetailsCreateyearsBenefitedFromCebas_basicInput | string[]
    scholarshipType_basic?: $Enums.ScholarshipType | null
    institutionName_basic?: string | null
    institutionCNPJ_basic?: string | null
    benefitedFromCebasScholarship_professional?: boolean | null
    lastYearBenefitedFromCebas_professional?: string | null
    scholarshipType_professional?: $Enums.ScholarshipType | null
    institutionName_professional?: string | null
    institutionCNPJ_professional?: string | null
    nameOfScholarshipCourse_professional?: string | null
    candidate_id?: string | null
    responsible_id?: string | null
    application_id: string
  }

  export type IdentityDetailsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: NullableStringFieldUpdateOperationsInput | string | null
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    CadUnico?: BoolFieldUpdateOperationsInput | boolean
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    addressNumber?: NullableStringFieldUpdateOperationsInput | string | null
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    CEP?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: IdentityDetailsUpdateincomeSourceInput | $Enums.IncomeSource[]
    livesAlone?: BoolFieldUpdateOperationsInput | boolean
    intendsToGetScholarship?: BoolFieldUpdateOperationsInput | boolean
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    yearsBenefitedFromCebas_basic?: IdentityDetailsUpdateyearsBenefitedFromCebas_basicInput | string[]
    scholarshipType_basic?: NullableEnumScholarshipTypeFieldUpdateOperationsInput | $Enums.ScholarshipType | null
    institutionName_basic?: NullableStringFieldUpdateOperationsInput | string | null
    institutionCNPJ_basic?: NullableStringFieldUpdateOperationsInput | string | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    lastYearBenefitedFromCebas_professional?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipType_professional?: NullableEnumScholarshipTypeFieldUpdateOperationsInput | $Enums.ScholarshipType | null
    institutionName_professional?: NullableStringFieldUpdateOperationsInput | string | null
    institutionCNPJ_professional?: NullableStringFieldUpdateOperationsInput | string | null
    nameOfScholarshipCourse_professional?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type IdentityDetailsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: NullableStringFieldUpdateOperationsInput | string | null
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    CadUnico?: BoolFieldUpdateOperationsInput | boolean
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    addressNumber?: NullableStringFieldUpdateOperationsInput | string | null
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    CEP?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: IdentityDetailsUpdateincomeSourceInput | $Enums.IncomeSource[]
    livesAlone?: BoolFieldUpdateOperationsInput | boolean
    intendsToGetScholarship?: BoolFieldUpdateOperationsInput | boolean
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    yearsBenefitedFromCebas_basic?: IdentityDetailsUpdateyearsBenefitedFromCebas_basicInput | string[]
    scholarshipType_basic?: NullableEnumScholarshipTypeFieldUpdateOperationsInput | $Enums.ScholarshipType | null
    institutionName_basic?: NullableStringFieldUpdateOperationsInput | string | null
    institutionCNPJ_basic?: NullableStringFieldUpdateOperationsInput | string | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    lastYearBenefitedFromCebas_professional?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipType_professional?: NullableEnumScholarshipTypeFieldUpdateOperationsInput | $Enums.ScholarshipType | null
    institutionName_professional?: NullableStringFieldUpdateOperationsInput | string | null
    institutionCNPJ_professional?: NullableStringFieldUpdateOperationsInput | string | null
    nameOfScholarshipCourse_professional?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    responsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type FamilyMemberCreateInput = {
    id?: string
    relationship: $Enums.Relationship
    otherRelationship?: string | null
    main_id?: string | null
    fullName: string
    socialName?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    numberOfBirthRegister?: string | null
    bookOfBirthRegister?: string | null
    pageOfBirthRegister?: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    email?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    educationPlace?: $Enums.INSTITUTION_TYPE | null
    institutionName?: string | null
    coursingEducationLevel?: $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: string | null
    turnOfEducation?: $Enums.SHIFT | null
    hasScholarship?: boolean | null
    percentageOfScholarship?: string | null
    monthlyAmount?: string | null
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    benefitedFromCebasScholarship_professional?: boolean | null
    CadUnico?: boolean | null
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    incomeSource?: FamilyMemberCreateincomeSourceInput | $Enums.IncomeSource[]
    application_id: string
    CreditCard?: CreditCardCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutFamilyMemberInput
    Financing?: FinancingCreateNestedManyWithoutFamilyMemberInput
    Loan?: LoanCreateNestedManyWithoutFamilyMemberInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutFamilyMemberInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleCreateNestedManyWithoutFamilyMembersInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutFamilyMemberInput
    candidate?: CandidateCreateNestedOneWithoutFamillyMemberInput
    Medication?: MedicationCreateNestedManyWithoutFamilyMemberInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutFamillyMemberInput
    BankAccount?: BankAccountCreateNestedManyWithoutFamilyMemberInput
    Declarations?: DeclarationsCreateNestedManyWithoutFamilyMemberInput
  }

  export type FamilyMemberUncheckedCreateInput = {
    id?: string
    relationship: $Enums.Relationship
    otherRelationship?: string | null
    main_id?: string | null
    fullName: string
    socialName?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    numberOfBirthRegister?: string | null
    bookOfBirthRegister?: string | null
    pageOfBirthRegister?: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    email?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    educationPlace?: $Enums.INSTITUTION_TYPE | null
    institutionName?: string | null
    coursingEducationLevel?: $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: string | null
    turnOfEducation?: $Enums.SHIFT | null
    hasScholarship?: boolean | null
    percentageOfScholarship?: string | null
    monthlyAmount?: string | null
    candidate_id?: string | null
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    benefitedFromCebasScholarship_professional?: boolean | null
    CadUnico?: boolean | null
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    incomeSource?: FamilyMemberCreateincomeSourceInput | $Enums.IncomeSource[]
    legalResponsibleId?: string | null
    application_id: string
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutFamilyMemberInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutFamilyMemberInput
    Loan?: LoanUncheckedCreateNestedManyWithoutFamilyMemberInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutFamilyMemberInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedCreateNestedManyWithoutFamilyMembersInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutFamilyMemberInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutFamilyMemberInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutFamilyMemberInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutFamilyMemberInput
  }

  export type FamilyMemberUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    application_id?: StringFieldUpdateOperationsInput | string
    CreditCard?: CreditCardUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutFamilyMemberNestedInput
    Financing?: FinancingUpdateManyWithoutFamilyMemberNestedInput
    Loan?: LoanUpdateManyWithoutFamilyMemberNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutFamilyMemberNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUpdateManyWithoutFamilyMembersNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutFamilyMemberNestedInput
    candidate?: CandidateUpdateOneWithoutFamillyMemberNestedInput
    Medication?: MedicationUpdateManyWithoutFamilyMemberNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutFamillyMemberNestedInput
    BankAccount?: BankAccountUpdateManyWithoutFamilyMemberNestedInput
    Declarations?: DeclarationsUpdateManyWithoutFamilyMemberNestedInput
  }

  export type FamilyMemberUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    CreditCard?: CreditCardUncheckedUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutFamilyMemberNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutFamilyMemberNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedUpdateManyWithoutFamilyMembersNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutFamilyMemberNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutFamilyMemberNestedInput
  }

  export type FamilyMemberCreateManyInput = {
    id?: string
    relationship: $Enums.Relationship
    otherRelationship?: string | null
    main_id?: string | null
    fullName: string
    socialName?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    numberOfBirthRegister?: string | null
    bookOfBirthRegister?: string | null
    pageOfBirthRegister?: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    email?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    educationPlace?: $Enums.INSTITUTION_TYPE | null
    institutionName?: string | null
    coursingEducationLevel?: $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: string | null
    turnOfEducation?: $Enums.SHIFT | null
    hasScholarship?: boolean | null
    percentageOfScholarship?: string | null
    monthlyAmount?: string | null
    candidate_id?: string | null
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    benefitedFromCebasScholarship_professional?: boolean | null
    CadUnico?: boolean | null
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    incomeSource?: FamilyMemberCreateincomeSourceInput | $Enums.IncomeSource[]
    legalResponsibleId?: string | null
    application_id: string
  }

  export type FamilyMemberUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type FamilyMemberUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type HousingCreateInput = {
    id?: string
    propertyStatus: $Enums.PropertyStatus
    contractType?: $Enums.ContractType | null
    main_id?: string | null
    grantorName?: string | null
    timeLivingInProperty: $Enums.TimeLivingInProperty
    domicileType: $Enums.DomicileType
    numberOfRooms: $Enums.NumberOfRooms
    numberOfBedrooms: number
    application_id: string
    candidate?: CandidateCreateNestedOneWithoutHousingInput
    responsible?: LegalResponsibleCreateNestedOneWithoutHousingInput
  }

  export type HousingUncheckedCreateInput = {
    id?: string
    propertyStatus: $Enums.PropertyStatus
    contractType?: $Enums.ContractType | null
    main_id?: string | null
    grantorName?: string | null
    timeLivingInProperty: $Enums.TimeLivingInProperty
    domicileType: $Enums.DomicileType
    numberOfRooms: $Enums.NumberOfRooms
    numberOfBedrooms: number
    candidate_id?: string | null
    responsible_id?: string | null
    application_id: string
  }

  export type HousingUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    propertyStatus?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    contractType?: NullableEnumContractTypeFieldUpdateOperationsInput | $Enums.ContractType | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    grantorName?: NullableStringFieldUpdateOperationsInput | string | null
    timeLivingInProperty?: EnumTimeLivingInPropertyFieldUpdateOperationsInput | $Enums.TimeLivingInProperty
    domicileType?: EnumDomicileTypeFieldUpdateOperationsInput | $Enums.DomicileType
    numberOfRooms?: EnumNumberOfRoomsFieldUpdateOperationsInput | $Enums.NumberOfRooms
    numberOfBedrooms?: IntFieldUpdateOperationsInput | number
    application_id?: StringFieldUpdateOperationsInput | string
    candidate?: CandidateUpdateOneWithoutHousingNestedInput
    responsible?: LegalResponsibleUpdateOneWithoutHousingNestedInput
  }

  export type HousingUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    propertyStatus?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    contractType?: NullableEnumContractTypeFieldUpdateOperationsInput | $Enums.ContractType | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    grantorName?: NullableStringFieldUpdateOperationsInput | string | null
    timeLivingInProperty?: EnumTimeLivingInPropertyFieldUpdateOperationsInput | $Enums.TimeLivingInProperty
    domicileType?: EnumDomicileTypeFieldUpdateOperationsInput | $Enums.DomicileType
    numberOfRooms?: EnumNumberOfRoomsFieldUpdateOperationsInput | $Enums.NumberOfRooms
    numberOfBedrooms?: IntFieldUpdateOperationsInput | number
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    responsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type HousingCreateManyInput = {
    id?: string
    propertyStatus: $Enums.PropertyStatus
    contractType?: $Enums.ContractType | null
    main_id?: string | null
    grantorName?: string | null
    timeLivingInProperty: $Enums.TimeLivingInProperty
    domicileType: $Enums.DomicileType
    numberOfRooms: $Enums.NumberOfRooms
    numberOfBedrooms: number
    candidate_id?: string | null
    responsible_id?: string | null
    application_id: string
  }

  export type HousingUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    propertyStatus?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    contractType?: NullableEnumContractTypeFieldUpdateOperationsInput | $Enums.ContractType | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    grantorName?: NullableStringFieldUpdateOperationsInput | string | null
    timeLivingInProperty?: EnumTimeLivingInPropertyFieldUpdateOperationsInput | $Enums.TimeLivingInProperty
    domicileType?: EnumDomicileTypeFieldUpdateOperationsInput | $Enums.DomicileType
    numberOfRooms?: EnumNumberOfRoomsFieldUpdateOperationsInput | $Enums.NumberOfRooms
    numberOfBedrooms?: IntFieldUpdateOperationsInput | number
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type HousingUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    propertyStatus?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    contractType?: NullableEnumContractTypeFieldUpdateOperationsInput | $Enums.ContractType | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    grantorName?: NullableStringFieldUpdateOperationsInput | string | null
    timeLivingInProperty?: EnumTimeLivingInPropertyFieldUpdateOperationsInput | $Enums.TimeLivingInProperty
    domicileType?: EnumDomicileTypeFieldUpdateOperationsInput | $Enums.DomicileType
    numberOfRooms?: EnumNumberOfRoomsFieldUpdateOperationsInput | $Enums.NumberOfRooms
    numberOfBedrooms?: IntFieldUpdateOperationsInput | number
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    responsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type VehicleCreateInput = {
    id?: string
    vehicleType: $Enums.VehicleType
    modelAndBrand: string
    main_id?: string | null
    manufacturingYear: number
    situation: $Enums.VehicleSituation
    financedMonths?: number | null
    monthsToPayOff?: number | null
    hasInsurance?: boolean
    insuranceValue?: number | null
    usage: $Enums.VehicleUsage
    owners_id?: VehicleCreateowners_idInput | string[]
    application_id: string
    candidate?: CandidateCreateNestedOneWithoutVehicleInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleCreateNestedManyWithoutVehicleInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutVehicleInput
  }

  export type VehicleUncheckedCreateInput = {
    id?: string
    vehicleType: $Enums.VehicleType
    modelAndBrand: string
    main_id?: string | null
    manufacturingYear: number
    situation: $Enums.VehicleSituation
    financedMonths?: number | null
    monthsToPayOff?: number | null
    hasInsurance?: boolean
    insuranceValue?: number | null
    usage: $Enums.VehicleUsage
    candidate_id?: string | null
    owners_id?: VehicleCreateowners_idInput | string[]
    legalResponsibleId?: string | null
    application_id: string
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedCreateNestedManyWithoutVehicleInput
  }

  export type VehicleUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    vehicleType?: EnumVehicleTypeFieldUpdateOperationsInput | $Enums.VehicleType
    modelAndBrand?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturingYear?: IntFieldUpdateOperationsInput | number
    situation?: EnumVehicleSituationFieldUpdateOperationsInput | $Enums.VehicleSituation
    financedMonths?: NullableIntFieldUpdateOperationsInput | number | null
    monthsToPayOff?: NullableIntFieldUpdateOperationsInput | number | null
    hasInsurance?: BoolFieldUpdateOperationsInput | boolean
    insuranceValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usage?: EnumVehicleUsageFieldUpdateOperationsInput | $Enums.VehicleUsage
    owners_id?: VehicleUpdateowners_idInput | string[]
    application_id?: StringFieldUpdateOperationsInput | string
    candidate?: CandidateUpdateOneWithoutVehicleNestedInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUpdateManyWithoutVehicleNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutVehicleNestedInput
  }

  export type VehicleUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    vehicleType?: EnumVehicleTypeFieldUpdateOperationsInput | $Enums.VehicleType
    modelAndBrand?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturingYear?: IntFieldUpdateOperationsInput | number
    situation?: EnumVehicleSituationFieldUpdateOperationsInput | $Enums.VehicleSituation
    financedMonths?: NullableIntFieldUpdateOperationsInput | number | null
    monthsToPayOff?: NullableIntFieldUpdateOperationsInput | number | null
    hasInsurance?: BoolFieldUpdateOperationsInput | boolean
    insuranceValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usage?: EnumVehicleUsageFieldUpdateOperationsInput | $Enums.VehicleUsage
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    owners_id?: VehicleUpdateowners_idInput | string[]
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedUpdateManyWithoutVehicleNestedInput
  }

  export type VehicleCreateManyInput = {
    id?: string
    vehicleType: $Enums.VehicleType
    modelAndBrand: string
    main_id?: string | null
    manufacturingYear: number
    situation: $Enums.VehicleSituation
    financedMonths?: number | null
    monthsToPayOff?: number | null
    hasInsurance?: boolean
    insuranceValue?: number | null
    usage: $Enums.VehicleUsage
    candidate_id?: string | null
    owners_id?: VehicleCreateowners_idInput | string[]
    legalResponsibleId?: string | null
    application_id: string
  }

  export type VehicleUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    vehicleType?: EnumVehicleTypeFieldUpdateOperationsInput | $Enums.VehicleType
    modelAndBrand?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturingYear?: IntFieldUpdateOperationsInput | number
    situation?: EnumVehicleSituationFieldUpdateOperationsInput | $Enums.VehicleSituation
    financedMonths?: NullableIntFieldUpdateOperationsInput | number | null
    monthsToPayOff?: NullableIntFieldUpdateOperationsInput | number | null
    hasInsurance?: BoolFieldUpdateOperationsInput | boolean
    insuranceValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usage?: EnumVehicleUsageFieldUpdateOperationsInput | $Enums.VehicleUsage
    owners_id?: VehicleUpdateowners_idInput | string[]
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type VehicleUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    vehicleType?: EnumVehicleTypeFieldUpdateOperationsInput | $Enums.VehicleType
    modelAndBrand?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturingYear?: IntFieldUpdateOperationsInput | number
    situation?: EnumVehicleSituationFieldUpdateOperationsInput | $Enums.VehicleSituation
    financedMonths?: NullableIntFieldUpdateOperationsInput | number | null
    monthsToPayOff?: NullableIntFieldUpdateOperationsInput | number | null
    hasInsurance?: BoolFieldUpdateOperationsInput | boolean
    insuranceValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usage?: EnumVehicleUsageFieldUpdateOperationsInput | $Enums.VehicleUsage
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    owners_id?: VehicleUpdateowners_idInput | string[]
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type FamilyMemberIncomeCreateInput = {
    id?: string
    employmentType: $Enums.EmploymentType
    averageIncome: string
    main_id?: string | null
    admissionDate?: Date | string | null
    position?: string | null
    payingSource?: string | null
    payingSourcePhone?: string | null
    startDate?: Date | string | null
    CNPJ?: string | null
    financialAssistantCPF?: string | null
    socialReason?: string | null
    fantasyName?: string | null
    CPNJ?: string | null
    receivesUnemployment?: boolean | null
    parcels?: number | null
    firstParcelDate?: Date | string | null
    parcelValue?: number | null
    quantity?: number
    application_id: string
    familyMember?: FamilyMemberCreateNestedOneWithoutFamilyMemberIncomeInput
    candidate?: CandidateCreateNestedOneWithoutFamilyMemberIncomeInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutFamilyMemberIncomeInput
  }

  export type FamilyMemberIncomeUncheckedCreateInput = {
    id?: string
    employmentType: $Enums.EmploymentType
    averageIncome: string
    main_id?: string | null
    admissionDate?: Date | string | null
    position?: string | null
    payingSource?: string | null
    payingSourcePhone?: string | null
    startDate?: Date | string | null
    CNPJ?: string | null
    financialAssistantCPF?: string | null
    socialReason?: string | null
    fantasyName?: string | null
    CPNJ?: string | null
    receivesUnemployment?: boolean | null
    parcels?: number | null
    firstParcelDate?: Date | string | null
    parcelValue?: number | null
    familyMember_id?: string | null
    quantity?: number
    candidate_id?: string | null
    application_id: string
    legalResponsibleId?: string | null
  }

  export type FamilyMemberIncomeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    employmentType?: EnumEmploymentTypeFieldUpdateOperationsInput | $Enums.EmploymentType
    averageIncome?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    payingSource?: NullableStringFieldUpdateOperationsInput | string | null
    payingSourcePhone?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CNPJ?: NullableStringFieldUpdateOperationsInput | string | null
    financialAssistantCPF?: NullableStringFieldUpdateOperationsInput | string | null
    socialReason?: NullableStringFieldUpdateOperationsInput | string | null
    fantasyName?: NullableStringFieldUpdateOperationsInput | string | null
    CPNJ?: NullableStringFieldUpdateOperationsInput | string | null
    receivesUnemployment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parcels?: NullableIntFieldUpdateOperationsInput | number | null
    firstParcelDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parcelValue?: NullableFloatFieldUpdateOperationsInput | number | null
    quantity?: IntFieldUpdateOperationsInput | number
    application_id?: StringFieldUpdateOperationsInput | string
    familyMember?: FamilyMemberUpdateOneWithoutFamilyMemberIncomeNestedInput
    candidate?: CandidateUpdateOneWithoutFamilyMemberIncomeNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutFamilyMemberIncomeNestedInput
  }

  export type FamilyMemberIncomeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    employmentType?: EnumEmploymentTypeFieldUpdateOperationsInput | $Enums.EmploymentType
    averageIncome?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    payingSource?: NullableStringFieldUpdateOperationsInput | string | null
    payingSourcePhone?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CNPJ?: NullableStringFieldUpdateOperationsInput | string | null
    financialAssistantCPF?: NullableStringFieldUpdateOperationsInput | string | null
    socialReason?: NullableStringFieldUpdateOperationsInput | string | null
    fantasyName?: NullableStringFieldUpdateOperationsInput | string | null
    CPNJ?: NullableStringFieldUpdateOperationsInput | string | null
    receivesUnemployment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parcels?: NullableIntFieldUpdateOperationsInput | number | null
    firstParcelDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parcelValue?: NullableFloatFieldUpdateOperationsInput | number | null
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FamilyMemberIncomeCreateManyInput = {
    id?: string
    employmentType: $Enums.EmploymentType
    averageIncome: string
    main_id?: string | null
    admissionDate?: Date | string | null
    position?: string | null
    payingSource?: string | null
    payingSourcePhone?: string | null
    startDate?: Date | string | null
    CNPJ?: string | null
    financialAssistantCPF?: string | null
    socialReason?: string | null
    fantasyName?: string | null
    CPNJ?: string | null
    receivesUnemployment?: boolean | null
    parcels?: number | null
    firstParcelDate?: Date | string | null
    parcelValue?: number | null
    familyMember_id?: string | null
    quantity?: number
    candidate_id?: string | null
    application_id: string
    legalResponsibleId?: string | null
  }

  export type FamilyMemberIncomeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    employmentType?: EnumEmploymentTypeFieldUpdateOperationsInput | $Enums.EmploymentType
    averageIncome?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    payingSource?: NullableStringFieldUpdateOperationsInput | string | null
    payingSourcePhone?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CNPJ?: NullableStringFieldUpdateOperationsInput | string | null
    financialAssistantCPF?: NullableStringFieldUpdateOperationsInput | string | null
    socialReason?: NullableStringFieldUpdateOperationsInput | string | null
    fantasyName?: NullableStringFieldUpdateOperationsInput | string | null
    CPNJ?: NullableStringFieldUpdateOperationsInput | string | null
    receivesUnemployment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parcels?: NullableIntFieldUpdateOperationsInput | number | null
    firstParcelDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parcelValue?: NullableFloatFieldUpdateOperationsInput | number | null
    quantity?: IntFieldUpdateOperationsInput | number
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type FamilyMemberIncomeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    employmentType?: EnumEmploymentTypeFieldUpdateOperationsInput | $Enums.EmploymentType
    averageIncome?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    payingSource?: NullableStringFieldUpdateOperationsInput | string | null
    payingSourcePhone?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CNPJ?: NullableStringFieldUpdateOperationsInput | string | null
    financialAssistantCPF?: NullableStringFieldUpdateOperationsInput | string | null
    socialReason?: NullableStringFieldUpdateOperationsInput | string | null
    fantasyName?: NullableStringFieldUpdateOperationsInput | string | null
    CPNJ?: NullableStringFieldUpdateOperationsInput | string | null
    receivesUnemployment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parcels?: NullableIntFieldUpdateOperationsInput | number | null
    firstParcelDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parcelValue?: NullableFloatFieldUpdateOperationsInput | number | null
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MonthlyIncomeCreateInput = {
    id?: string
    date?: Date | string | null
    main_id?: string | null
    grossAmount?: number | null
    liquidAmount?: number | null
    proLabore?: number | null
    dividends?: number | null
    total?: number | null
    deductionValue?: Decimal | DecimalJsLike | number | string | null
    publicPension?: Decimal | DecimalJsLike | number | string | null
    incomeTax?: Decimal | DecimalJsLike | number | string | null
    otherDeductions?: Decimal | DecimalJsLike | number | string | null
    foodAllowanceValue?: Decimal | DecimalJsLike | number | string | null
    transportAllowanceValue?: Decimal | DecimalJsLike | number | string | null
    expenseReimbursementValue?: Decimal | DecimalJsLike | number | string | null
    advancePaymentValue?: Decimal | DecimalJsLike | number | string | null
    reversalValue?: Decimal | DecimalJsLike | number | string | null
    compensationValue?: Decimal | DecimalJsLike | number | string | null
    judicialPensionValue?: Decimal | DecimalJsLike | number | string | null
    incomeSource?: $Enums.IncomeSource | null
    application_id: string
    familyMember?: FamilyMemberCreateNestedOneWithoutMonthlyIncomeInput
    candidate?: CandidateCreateNestedOneWithoutMonthlyIncomeInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutMonthlyIncomeInput
  }

  export type MonthlyIncomeUncheckedCreateInput = {
    id?: string
    date?: Date | string | null
    main_id?: string | null
    grossAmount?: number | null
    liquidAmount?: number | null
    proLabore?: number | null
    dividends?: number | null
    total?: number | null
    deductionValue?: Decimal | DecimalJsLike | number | string | null
    publicPension?: Decimal | DecimalJsLike | number | string | null
    incomeTax?: Decimal | DecimalJsLike | number | string | null
    otherDeductions?: Decimal | DecimalJsLike | number | string | null
    foodAllowanceValue?: Decimal | DecimalJsLike | number | string | null
    transportAllowanceValue?: Decimal | DecimalJsLike | number | string | null
    expenseReimbursementValue?: Decimal | DecimalJsLike | number | string | null
    advancePaymentValue?: Decimal | DecimalJsLike | number | string | null
    reversalValue?: Decimal | DecimalJsLike | number | string | null
    compensationValue?: Decimal | DecimalJsLike | number | string | null
    judicialPensionValue?: Decimal | DecimalJsLike | number | string | null
    familyMember_id?: string | null
    candidate_id?: string | null
    incomeSource?: $Enums.IncomeSource | null
    application_id: string
    legalResponsibleId?: string | null
  }

  export type MonthlyIncomeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    grossAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    liquidAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    proLabore?: NullableFloatFieldUpdateOperationsInput | number | null
    dividends?: NullableFloatFieldUpdateOperationsInput | number | null
    total?: NullableFloatFieldUpdateOperationsInput | number | null
    deductionValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    publicPension?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    incomeTax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    otherDeductions?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    foodAllowanceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transportAllowanceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    expenseReimbursementValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    advancePaymentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reversalValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compensationValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    judicialPensionValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    incomeSource?: NullableEnumIncomeSourceFieldUpdateOperationsInput | $Enums.IncomeSource | null
    application_id?: StringFieldUpdateOperationsInput | string
    familyMember?: FamilyMemberUpdateOneWithoutMonthlyIncomeNestedInput
    candidate?: CandidateUpdateOneWithoutMonthlyIncomeNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutMonthlyIncomeNestedInput
  }

  export type MonthlyIncomeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    grossAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    liquidAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    proLabore?: NullableFloatFieldUpdateOperationsInput | number | null
    dividends?: NullableFloatFieldUpdateOperationsInput | number | null
    total?: NullableFloatFieldUpdateOperationsInput | number | null
    deductionValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    publicPension?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    incomeTax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    otherDeductions?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    foodAllowanceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transportAllowanceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    expenseReimbursementValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    advancePaymentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reversalValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compensationValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    judicialPensionValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: NullableEnumIncomeSourceFieldUpdateOperationsInput | $Enums.IncomeSource | null
    application_id?: StringFieldUpdateOperationsInput | string
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MonthlyIncomeCreateManyInput = {
    id?: string
    date?: Date | string | null
    main_id?: string | null
    grossAmount?: number | null
    liquidAmount?: number | null
    proLabore?: number | null
    dividends?: number | null
    total?: number | null
    deductionValue?: Decimal | DecimalJsLike | number | string | null
    publicPension?: Decimal | DecimalJsLike | number | string | null
    incomeTax?: Decimal | DecimalJsLike | number | string | null
    otherDeductions?: Decimal | DecimalJsLike | number | string | null
    foodAllowanceValue?: Decimal | DecimalJsLike | number | string | null
    transportAllowanceValue?: Decimal | DecimalJsLike | number | string | null
    expenseReimbursementValue?: Decimal | DecimalJsLike | number | string | null
    advancePaymentValue?: Decimal | DecimalJsLike | number | string | null
    reversalValue?: Decimal | DecimalJsLike | number | string | null
    compensationValue?: Decimal | DecimalJsLike | number | string | null
    judicialPensionValue?: Decimal | DecimalJsLike | number | string | null
    familyMember_id?: string | null
    candidate_id?: string | null
    incomeSource?: $Enums.IncomeSource | null
    application_id: string
    legalResponsibleId?: string | null
  }

  export type MonthlyIncomeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    grossAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    liquidAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    proLabore?: NullableFloatFieldUpdateOperationsInput | number | null
    dividends?: NullableFloatFieldUpdateOperationsInput | number | null
    total?: NullableFloatFieldUpdateOperationsInput | number | null
    deductionValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    publicPension?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    incomeTax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    otherDeductions?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    foodAllowanceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transportAllowanceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    expenseReimbursementValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    advancePaymentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reversalValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compensationValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    judicialPensionValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    incomeSource?: NullableEnumIncomeSourceFieldUpdateOperationsInput | $Enums.IncomeSource | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type MonthlyIncomeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    grossAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    liquidAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    proLabore?: NullableFloatFieldUpdateOperationsInput | number | null
    dividends?: NullableFloatFieldUpdateOperationsInput | number | null
    total?: NullableFloatFieldUpdateOperationsInput | number | null
    deductionValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    publicPension?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    incomeTax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    otherDeductions?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    foodAllowanceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transportAllowanceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    expenseReimbursementValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    advancePaymentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reversalValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compensationValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    judicialPensionValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: NullableEnumIncomeSourceFieldUpdateOperationsInput | $Enums.IncomeSource | null
    application_id?: StringFieldUpdateOperationsInput | string
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BankAccountCreateInput = {
    id?: string
    main_id?: string | null
    bankName: string
    agencyNumber: string
    accountNumber: string
    accountType: $Enums.AccountType
    application_id: string
    familyMember?: FamilyMemberCreateNestedOneWithoutBankAccountInput
    candidate?: CandidateCreateNestedOneWithoutBankAccountInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutBankAccountInput
  }

  export type BankAccountUncheckedCreateInput = {
    id?: string
    main_id?: string | null
    bankName: string
    agencyNumber: string
    accountNumber: string
    accountType: $Enums.AccountType
    familyMember_id?: string | null
    candidate_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type BankAccountUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: StringFieldUpdateOperationsInput | string
    agencyNumber?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    accountType?: EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType
    application_id?: StringFieldUpdateOperationsInput | string
    familyMember?: FamilyMemberUpdateOneWithoutBankAccountNestedInput
    candidate?: CandidateUpdateOneWithoutBankAccountNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutBankAccountNestedInput
  }

  export type BankAccountUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: StringFieldUpdateOperationsInput | string
    agencyNumber?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    accountType?: EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type BankAccountCreateManyInput = {
    id?: string
    main_id?: string | null
    bankName: string
    agencyNumber: string
    accountNumber: string
    accountType: $Enums.AccountType
    familyMember_id?: string | null
    candidate_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type BankAccountUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: StringFieldUpdateOperationsInput | string
    agencyNumber?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    accountType?: EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type BankAccountUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: StringFieldUpdateOperationsInput | string
    agencyNumber?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    accountType?: EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type ExpenseCreateInput = {
    id?: string
    main_id?: string | null
    date: Date | string
    waterSewage?: number | null
    electricity?: number | null
    landlinePhone?: number | null
    mobilePhone?: number | null
    food?: number | null
    rent?: number | null
    garageRent?: number | null
    condominium?: number | null
    cableTV?: number | null
    streamingServices?: number | null
    fuel?: number | null
    annualIPVA?: number | null
    annualIPTU?: number | null
    annualITR?: number | null
    annualIR?: number | null
    INSS?: number | null
    publicTransport?: number | null
    schoolTransport?: number | null
    internet?: number | null
    courses?: number | null
    healthPlan?: number | null
    dentalPlan?: number | null
    medicationExpenses?: number | null
    totalExpense?: number | null
    installmentCountIPTU?: number | null
    installmentCountIPVA?: number | null
    installmentCountIR?: number | null
    installmentCountITR?: number | null
    installmentValueIPTU?: number | null
    installmentValueIPVA?: number | null
    installmentValueIR?: number | null
    installmentValueITR?: number | null
    financing?: number | null
    creditCard?: number | null
    optedForInstallmentIPTU?: boolean | null
    optedForInstallmentIPVA?: boolean | null
    optedForInstallmentIR?: boolean | null
    optedForInstallmentITR?: boolean | null
    otherExpensesDescription?: ExpenseCreateotherExpensesDescriptionInput | string[]
    otherExpensesValue?: ExpenseCreateotherExpensesValueInput | number[]
    application_id: string
    candidate?: CandidateCreateNestedOneWithoutExpenseInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutExpenseInput
  }

  export type ExpenseUncheckedCreateInput = {
    id?: string
    main_id?: string | null
    date: Date | string
    waterSewage?: number | null
    electricity?: number | null
    landlinePhone?: number | null
    mobilePhone?: number | null
    food?: number | null
    rent?: number | null
    garageRent?: number | null
    condominium?: number | null
    cableTV?: number | null
    streamingServices?: number | null
    fuel?: number | null
    annualIPVA?: number | null
    annualIPTU?: number | null
    annualITR?: number | null
    annualIR?: number | null
    INSS?: number | null
    publicTransport?: number | null
    schoolTransport?: number | null
    internet?: number | null
    courses?: number | null
    healthPlan?: number | null
    dentalPlan?: number | null
    medicationExpenses?: number | null
    totalExpense?: number | null
    candidate_id?: string | null
    installmentCountIPTU?: number | null
    installmentCountIPVA?: number | null
    installmentCountIR?: number | null
    installmentCountITR?: number | null
    installmentValueIPTU?: number | null
    installmentValueIPVA?: number | null
    installmentValueIR?: number | null
    installmentValueITR?: number | null
    financing?: number | null
    creditCard?: number | null
    optedForInstallmentIPTU?: boolean | null
    optedForInstallmentIPVA?: boolean | null
    optedForInstallmentIR?: boolean | null
    optedForInstallmentITR?: boolean | null
    otherExpensesDescription?: ExpenseCreateotherExpensesDescriptionInput | string[]
    otherExpensesValue?: ExpenseCreateotherExpensesValueInput | number[]
    legalResponsibleId?: string | null
    application_id: string
  }

  export type ExpenseUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    waterSewage?: NullableFloatFieldUpdateOperationsInput | number | null
    electricity?: NullableFloatFieldUpdateOperationsInput | number | null
    landlinePhone?: NullableFloatFieldUpdateOperationsInput | number | null
    mobilePhone?: NullableFloatFieldUpdateOperationsInput | number | null
    food?: NullableFloatFieldUpdateOperationsInput | number | null
    rent?: NullableFloatFieldUpdateOperationsInput | number | null
    garageRent?: NullableFloatFieldUpdateOperationsInput | number | null
    condominium?: NullableFloatFieldUpdateOperationsInput | number | null
    cableTV?: NullableFloatFieldUpdateOperationsInput | number | null
    streamingServices?: NullableFloatFieldUpdateOperationsInput | number | null
    fuel?: NullableFloatFieldUpdateOperationsInput | number | null
    annualIPVA?: NullableFloatFieldUpdateOperationsInput | number | null
    annualIPTU?: NullableFloatFieldUpdateOperationsInput | number | null
    annualITR?: NullableFloatFieldUpdateOperationsInput | number | null
    annualIR?: NullableFloatFieldUpdateOperationsInput | number | null
    INSS?: NullableFloatFieldUpdateOperationsInput | number | null
    publicTransport?: NullableFloatFieldUpdateOperationsInput | number | null
    schoolTransport?: NullableFloatFieldUpdateOperationsInput | number | null
    internet?: NullableFloatFieldUpdateOperationsInput | number | null
    courses?: NullableFloatFieldUpdateOperationsInput | number | null
    healthPlan?: NullableFloatFieldUpdateOperationsInput | number | null
    dentalPlan?: NullableFloatFieldUpdateOperationsInput | number | null
    medicationExpenses?: NullableFloatFieldUpdateOperationsInput | number | null
    totalExpense?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentCountIPTU?: NullableIntFieldUpdateOperationsInput | number | null
    installmentCountIPVA?: NullableIntFieldUpdateOperationsInput | number | null
    installmentCountIR?: NullableIntFieldUpdateOperationsInput | number | null
    installmentCountITR?: NullableIntFieldUpdateOperationsInput | number | null
    installmentValueIPTU?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentValueIPVA?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentValueIR?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentValueITR?: NullableFloatFieldUpdateOperationsInput | number | null
    financing?: NullableFloatFieldUpdateOperationsInput | number | null
    creditCard?: NullableFloatFieldUpdateOperationsInput | number | null
    optedForInstallmentIPTU?: NullableBoolFieldUpdateOperationsInput | boolean | null
    optedForInstallmentIPVA?: NullableBoolFieldUpdateOperationsInput | boolean | null
    optedForInstallmentIR?: NullableBoolFieldUpdateOperationsInput | boolean | null
    optedForInstallmentITR?: NullableBoolFieldUpdateOperationsInput | boolean | null
    otherExpensesDescription?: ExpenseUpdateotherExpensesDescriptionInput | string[]
    otherExpensesValue?: ExpenseUpdateotherExpensesValueInput | number[]
    application_id?: StringFieldUpdateOperationsInput | string
    candidate?: CandidateUpdateOneWithoutExpenseNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutExpenseNestedInput
  }

  export type ExpenseUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    waterSewage?: NullableFloatFieldUpdateOperationsInput | number | null
    electricity?: NullableFloatFieldUpdateOperationsInput | number | null
    landlinePhone?: NullableFloatFieldUpdateOperationsInput | number | null
    mobilePhone?: NullableFloatFieldUpdateOperationsInput | number | null
    food?: NullableFloatFieldUpdateOperationsInput | number | null
    rent?: NullableFloatFieldUpdateOperationsInput | number | null
    garageRent?: NullableFloatFieldUpdateOperationsInput | number | null
    condominium?: NullableFloatFieldUpdateOperationsInput | number | null
    cableTV?: NullableFloatFieldUpdateOperationsInput | number | null
    streamingServices?: NullableFloatFieldUpdateOperationsInput | number | null
    fuel?: NullableFloatFieldUpdateOperationsInput | number | null
    annualIPVA?: NullableFloatFieldUpdateOperationsInput | number | null
    annualIPTU?: NullableFloatFieldUpdateOperationsInput | number | null
    annualITR?: NullableFloatFieldUpdateOperationsInput | number | null
    annualIR?: NullableFloatFieldUpdateOperationsInput | number | null
    INSS?: NullableFloatFieldUpdateOperationsInput | number | null
    publicTransport?: NullableFloatFieldUpdateOperationsInput | number | null
    schoolTransport?: NullableFloatFieldUpdateOperationsInput | number | null
    internet?: NullableFloatFieldUpdateOperationsInput | number | null
    courses?: NullableFloatFieldUpdateOperationsInput | number | null
    healthPlan?: NullableFloatFieldUpdateOperationsInput | number | null
    dentalPlan?: NullableFloatFieldUpdateOperationsInput | number | null
    medicationExpenses?: NullableFloatFieldUpdateOperationsInput | number | null
    totalExpense?: NullableFloatFieldUpdateOperationsInput | number | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    installmentCountIPTU?: NullableIntFieldUpdateOperationsInput | number | null
    installmentCountIPVA?: NullableIntFieldUpdateOperationsInput | number | null
    installmentCountIR?: NullableIntFieldUpdateOperationsInput | number | null
    installmentCountITR?: NullableIntFieldUpdateOperationsInput | number | null
    installmentValueIPTU?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentValueIPVA?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentValueIR?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentValueITR?: NullableFloatFieldUpdateOperationsInput | number | null
    financing?: NullableFloatFieldUpdateOperationsInput | number | null
    creditCard?: NullableFloatFieldUpdateOperationsInput | number | null
    optedForInstallmentIPTU?: NullableBoolFieldUpdateOperationsInput | boolean | null
    optedForInstallmentIPVA?: NullableBoolFieldUpdateOperationsInput | boolean | null
    optedForInstallmentIR?: NullableBoolFieldUpdateOperationsInput | boolean | null
    optedForInstallmentITR?: NullableBoolFieldUpdateOperationsInput | boolean | null
    otherExpensesDescription?: ExpenseUpdateotherExpensesDescriptionInput | string[]
    otherExpensesValue?: ExpenseUpdateotherExpensesValueInput | number[]
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type ExpenseCreateManyInput = {
    id?: string
    main_id?: string | null
    date: Date | string
    waterSewage?: number | null
    electricity?: number | null
    landlinePhone?: number | null
    mobilePhone?: number | null
    food?: number | null
    rent?: number | null
    garageRent?: number | null
    condominium?: number | null
    cableTV?: number | null
    streamingServices?: number | null
    fuel?: number | null
    annualIPVA?: number | null
    annualIPTU?: number | null
    annualITR?: number | null
    annualIR?: number | null
    INSS?: number | null
    publicTransport?: number | null
    schoolTransport?: number | null
    internet?: number | null
    courses?: number | null
    healthPlan?: number | null
    dentalPlan?: number | null
    medicationExpenses?: number | null
    totalExpense?: number | null
    candidate_id?: string | null
    installmentCountIPTU?: number | null
    installmentCountIPVA?: number | null
    installmentCountIR?: number | null
    installmentCountITR?: number | null
    installmentValueIPTU?: number | null
    installmentValueIPVA?: number | null
    installmentValueIR?: number | null
    installmentValueITR?: number | null
    financing?: number | null
    creditCard?: number | null
    optedForInstallmentIPTU?: boolean | null
    optedForInstallmentIPVA?: boolean | null
    optedForInstallmentIR?: boolean | null
    optedForInstallmentITR?: boolean | null
    otherExpensesDescription?: ExpenseCreateotherExpensesDescriptionInput | string[]
    otherExpensesValue?: ExpenseCreateotherExpensesValueInput | number[]
    legalResponsibleId?: string | null
    application_id: string
  }

  export type ExpenseUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    waterSewage?: NullableFloatFieldUpdateOperationsInput | number | null
    electricity?: NullableFloatFieldUpdateOperationsInput | number | null
    landlinePhone?: NullableFloatFieldUpdateOperationsInput | number | null
    mobilePhone?: NullableFloatFieldUpdateOperationsInput | number | null
    food?: NullableFloatFieldUpdateOperationsInput | number | null
    rent?: NullableFloatFieldUpdateOperationsInput | number | null
    garageRent?: NullableFloatFieldUpdateOperationsInput | number | null
    condominium?: NullableFloatFieldUpdateOperationsInput | number | null
    cableTV?: NullableFloatFieldUpdateOperationsInput | number | null
    streamingServices?: NullableFloatFieldUpdateOperationsInput | number | null
    fuel?: NullableFloatFieldUpdateOperationsInput | number | null
    annualIPVA?: NullableFloatFieldUpdateOperationsInput | number | null
    annualIPTU?: NullableFloatFieldUpdateOperationsInput | number | null
    annualITR?: NullableFloatFieldUpdateOperationsInput | number | null
    annualIR?: NullableFloatFieldUpdateOperationsInput | number | null
    INSS?: NullableFloatFieldUpdateOperationsInput | number | null
    publicTransport?: NullableFloatFieldUpdateOperationsInput | number | null
    schoolTransport?: NullableFloatFieldUpdateOperationsInput | number | null
    internet?: NullableFloatFieldUpdateOperationsInput | number | null
    courses?: NullableFloatFieldUpdateOperationsInput | number | null
    healthPlan?: NullableFloatFieldUpdateOperationsInput | number | null
    dentalPlan?: NullableFloatFieldUpdateOperationsInput | number | null
    medicationExpenses?: NullableFloatFieldUpdateOperationsInput | number | null
    totalExpense?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentCountIPTU?: NullableIntFieldUpdateOperationsInput | number | null
    installmentCountIPVA?: NullableIntFieldUpdateOperationsInput | number | null
    installmentCountIR?: NullableIntFieldUpdateOperationsInput | number | null
    installmentCountITR?: NullableIntFieldUpdateOperationsInput | number | null
    installmentValueIPTU?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentValueIPVA?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentValueIR?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentValueITR?: NullableFloatFieldUpdateOperationsInput | number | null
    financing?: NullableFloatFieldUpdateOperationsInput | number | null
    creditCard?: NullableFloatFieldUpdateOperationsInput | number | null
    optedForInstallmentIPTU?: NullableBoolFieldUpdateOperationsInput | boolean | null
    optedForInstallmentIPVA?: NullableBoolFieldUpdateOperationsInput | boolean | null
    optedForInstallmentIR?: NullableBoolFieldUpdateOperationsInput | boolean | null
    optedForInstallmentITR?: NullableBoolFieldUpdateOperationsInput | boolean | null
    otherExpensesDescription?: ExpenseUpdateotherExpensesDescriptionInput | string[]
    otherExpensesValue?: ExpenseUpdateotherExpensesValueInput | number[]
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type ExpenseUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    waterSewage?: NullableFloatFieldUpdateOperationsInput | number | null
    electricity?: NullableFloatFieldUpdateOperationsInput | number | null
    landlinePhone?: NullableFloatFieldUpdateOperationsInput | number | null
    mobilePhone?: NullableFloatFieldUpdateOperationsInput | number | null
    food?: NullableFloatFieldUpdateOperationsInput | number | null
    rent?: NullableFloatFieldUpdateOperationsInput | number | null
    garageRent?: NullableFloatFieldUpdateOperationsInput | number | null
    condominium?: NullableFloatFieldUpdateOperationsInput | number | null
    cableTV?: NullableFloatFieldUpdateOperationsInput | number | null
    streamingServices?: NullableFloatFieldUpdateOperationsInput | number | null
    fuel?: NullableFloatFieldUpdateOperationsInput | number | null
    annualIPVA?: NullableFloatFieldUpdateOperationsInput | number | null
    annualIPTU?: NullableFloatFieldUpdateOperationsInput | number | null
    annualITR?: NullableFloatFieldUpdateOperationsInput | number | null
    annualIR?: NullableFloatFieldUpdateOperationsInput | number | null
    INSS?: NullableFloatFieldUpdateOperationsInput | number | null
    publicTransport?: NullableFloatFieldUpdateOperationsInput | number | null
    schoolTransport?: NullableFloatFieldUpdateOperationsInput | number | null
    internet?: NullableFloatFieldUpdateOperationsInput | number | null
    courses?: NullableFloatFieldUpdateOperationsInput | number | null
    healthPlan?: NullableFloatFieldUpdateOperationsInput | number | null
    dentalPlan?: NullableFloatFieldUpdateOperationsInput | number | null
    medicationExpenses?: NullableFloatFieldUpdateOperationsInput | number | null
    totalExpense?: NullableFloatFieldUpdateOperationsInput | number | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    installmentCountIPTU?: NullableIntFieldUpdateOperationsInput | number | null
    installmentCountIPVA?: NullableIntFieldUpdateOperationsInput | number | null
    installmentCountIR?: NullableIntFieldUpdateOperationsInput | number | null
    installmentCountITR?: NullableIntFieldUpdateOperationsInput | number | null
    installmentValueIPTU?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentValueIPVA?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentValueIR?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentValueITR?: NullableFloatFieldUpdateOperationsInput | number | null
    financing?: NullableFloatFieldUpdateOperationsInput | number | null
    creditCard?: NullableFloatFieldUpdateOperationsInput | number | null
    optedForInstallmentIPTU?: NullableBoolFieldUpdateOperationsInput | boolean | null
    optedForInstallmentIPVA?: NullableBoolFieldUpdateOperationsInput | boolean | null
    optedForInstallmentIR?: NullableBoolFieldUpdateOperationsInput | boolean | null
    optedForInstallmentITR?: NullableBoolFieldUpdateOperationsInput | boolean | null
    otherExpensesDescription?: ExpenseUpdateotherExpensesDescriptionInput | string[]
    otherExpensesValue?: ExpenseUpdateotherExpensesValueInput | number[]
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type LoanCreateInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    installmentValue: number
    totalInstallments: number
    paidInstallments: number
    bankName: string
    application_id: string
    candidate?: CandidateCreateNestedOneWithoutLoanInput
    familyMember?: FamilyMemberCreateNestedOneWithoutLoanInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutLoanInput
  }

  export type LoanUncheckedCreateInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    installmentValue: number
    totalInstallments: number
    paidInstallments: number
    bankName: string
    familyMember_id?: string | null
    candidate_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type LoanUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    installmentValue?: FloatFieldUpdateOperationsInput | number
    totalInstallments?: IntFieldUpdateOperationsInput | number
    paidInstallments?: IntFieldUpdateOperationsInput | number
    bankName?: StringFieldUpdateOperationsInput | string
    application_id?: StringFieldUpdateOperationsInput | string
    candidate?: CandidateUpdateOneWithoutLoanNestedInput
    familyMember?: FamilyMemberUpdateOneWithoutLoanNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutLoanNestedInput
  }

  export type LoanUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    installmentValue?: FloatFieldUpdateOperationsInput | number
    totalInstallments?: IntFieldUpdateOperationsInput | number
    paidInstallments?: IntFieldUpdateOperationsInput | number
    bankName?: StringFieldUpdateOperationsInput | string
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type LoanCreateManyInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    installmentValue: number
    totalInstallments: number
    paidInstallments: number
    bankName: string
    familyMember_id?: string | null
    candidate_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type LoanUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    installmentValue?: FloatFieldUpdateOperationsInput | number
    totalInstallments?: IntFieldUpdateOperationsInput | number
    paidInstallments?: IntFieldUpdateOperationsInput | number
    bankName?: StringFieldUpdateOperationsInput | string
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type LoanUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    installmentValue?: FloatFieldUpdateOperationsInput | number
    totalInstallments?: IntFieldUpdateOperationsInput | number
    paidInstallments?: IntFieldUpdateOperationsInput | number
    bankName?: StringFieldUpdateOperationsInput | string
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type FinancingCreateInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    installmentValue: number
    totalInstallments: number
    paidInstallments: number
    bankName: string
    otherFinancing?: string | null
    financingType: $Enums.FinancingType
    application_id: string
    candidate?: CandidateCreateNestedOneWithoutFinancingInput
    familyMember?: FamilyMemberCreateNestedOneWithoutFinancingInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutFinancingInput
  }

  export type FinancingUncheckedCreateInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    installmentValue: number
    totalInstallments: number
    paidInstallments: number
    bankName: string
    familyMember_id?: string | null
    candidate_id?: string | null
    otherFinancing?: string | null
    financingType: $Enums.FinancingType
    legalResponsibleId?: string | null
    application_id: string
  }

  export type FinancingUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    installmentValue?: FloatFieldUpdateOperationsInput | number
    totalInstallments?: IntFieldUpdateOperationsInput | number
    paidInstallments?: IntFieldUpdateOperationsInput | number
    bankName?: StringFieldUpdateOperationsInput | string
    otherFinancing?: NullableStringFieldUpdateOperationsInput | string | null
    financingType?: EnumFinancingTypeFieldUpdateOperationsInput | $Enums.FinancingType
    application_id?: StringFieldUpdateOperationsInput | string
    candidate?: CandidateUpdateOneWithoutFinancingNestedInput
    familyMember?: FamilyMemberUpdateOneWithoutFinancingNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutFinancingNestedInput
  }

  export type FinancingUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    installmentValue?: FloatFieldUpdateOperationsInput | number
    totalInstallments?: IntFieldUpdateOperationsInput | number
    paidInstallments?: IntFieldUpdateOperationsInput | number
    bankName?: StringFieldUpdateOperationsInput | string
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    otherFinancing?: NullableStringFieldUpdateOperationsInput | string | null
    financingType?: EnumFinancingTypeFieldUpdateOperationsInput | $Enums.FinancingType
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type FinancingCreateManyInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    installmentValue: number
    totalInstallments: number
    paidInstallments: number
    bankName: string
    familyMember_id?: string | null
    candidate_id?: string | null
    otherFinancing?: string | null
    financingType: $Enums.FinancingType
    legalResponsibleId?: string | null
    application_id: string
  }

  export type FinancingUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    installmentValue?: FloatFieldUpdateOperationsInput | number
    totalInstallments?: IntFieldUpdateOperationsInput | number
    paidInstallments?: IntFieldUpdateOperationsInput | number
    bankName?: StringFieldUpdateOperationsInput | string
    otherFinancing?: NullableStringFieldUpdateOperationsInput | string | null
    financingType?: EnumFinancingTypeFieldUpdateOperationsInput | $Enums.FinancingType
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type FinancingUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    installmentValue?: FloatFieldUpdateOperationsInput | number
    totalInstallments?: IntFieldUpdateOperationsInput | number
    paidInstallments?: IntFieldUpdateOperationsInput | number
    bankName?: StringFieldUpdateOperationsInput | string
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    otherFinancing?: NullableStringFieldUpdateOperationsInput | string | null
    financingType?: EnumFinancingTypeFieldUpdateOperationsInput | $Enums.FinancingType
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type CreditCardCreateInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    usersCount: number
    cardType: string
    bankName: string
    cardFlag: string
    invoiceValue: number
    application_id: string
    candidate?: CandidateCreateNestedOneWithoutCreditCardInput
    familyMember?: FamilyMemberCreateNestedOneWithoutCreditCardInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutCreditCardInput
  }

  export type CreditCardUncheckedCreateInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    usersCount: number
    cardType: string
    bankName: string
    cardFlag: string
    invoiceValue: number
    familyMember_id?: string | null
    candidate_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type CreditCardUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    usersCount?: IntFieldUpdateOperationsInput | number
    cardType?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    cardFlag?: StringFieldUpdateOperationsInput | string
    invoiceValue?: FloatFieldUpdateOperationsInput | number
    application_id?: StringFieldUpdateOperationsInput | string
    candidate?: CandidateUpdateOneWithoutCreditCardNestedInput
    familyMember?: FamilyMemberUpdateOneWithoutCreditCardNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutCreditCardNestedInput
  }

  export type CreditCardUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    usersCount?: IntFieldUpdateOperationsInput | number
    cardType?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    cardFlag?: StringFieldUpdateOperationsInput | string
    invoiceValue?: FloatFieldUpdateOperationsInput | number
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type CreditCardCreateManyInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    usersCount: number
    cardType: string
    bankName: string
    cardFlag: string
    invoiceValue: number
    familyMember_id?: string | null
    candidate_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type CreditCardUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    usersCount?: IntFieldUpdateOperationsInput | number
    cardType?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    cardFlag?: StringFieldUpdateOperationsInput | string
    invoiceValue?: FloatFieldUpdateOperationsInput | number
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type CreditCardUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    usersCount?: IntFieldUpdateOperationsInput | number
    cardType?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    cardFlag?: StringFieldUpdateOperationsInput | string
    invoiceValue?: FloatFieldUpdateOperationsInput | number
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type OtherExpenseCreateInput = {
    id?: string
    main_id?: string | null
    description: string
    value: number
    application_id: string
    candidate?: CandidateCreateNestedOneWithoutOtherExpenseInput
    familyMember?: FamilyMemberCreateNestedOneWithoutOtherExpenseInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutOtherExpenseInput
  }

  export type OtherExpenseUncheckedCreateInput = {
    id?: string
    main_id?: string | null
    description: string
    value: number
    familyMember_id?: string | null
    candidate_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type OtherExpenseUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    value?: FloatFieldUpdateOperationsInput | number
    application_id?: StringFieldUpdateOperationsInput | string
    candidate?: CandidateUpdateOneWithoutOtherExpenseNestedInput
    familyMember?: FamilyMemberUpdateOneWithoutOtherExpenseNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutOtherExpenseNestedInput
  }

  export type OtherExpenseUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    value?: FloatFieldUpdateOperationsInput | number
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type OtherExpenseCreateManyInput = {
    id?: string
    main_id?: string | null
    description: string
    value: number
    familyMember_id?: string | null
    candidate_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type OtherExpenseUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    value?: FloatFieldUpdateOperationsInput | number
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type OtherExpenseUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    value?: FloatFieldUpdateOperationsInput | number
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type FamilyMemberDiseaseCreateInput = {
    id?: string
    main_id?: string | null
    disease?: $Enums.Disease | null
    diseases?: FamilyMemberDiseaseCreatediseasesInput | $Enums.Disease[]
    specificDisease?: string | null
    hasMedicalReport: boolean
    application_id: string
    familyMember?: FamilyMemberCreateNestedOneWithoutFamilyMemberDiseaseInput
    candidate?: CandidateCreateNestedOneWithoutFamilyMemberDiseaseInput
    legalResponsible?: LegalResponsibleCreateNestedOneWithoutFamilyMemberDiseaseInput
    Medication?: MedicationCreateNestedManyWithoutFamilyMemberDiseaseInput
  }

  export type FamilyMemberDiseaseUncheckedCreateInput = {
    id?: string
    main_id?: string | null
    disease?: $Enums.Disease | null
    diseases?: FamilyMemberDiseaseCreatediseasesInput | $Enums.Disease[]
    specificDisease?: string | null
    hasMedicalReport: boolean
    familyMember_id?: string | null
    candidate_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
    Medication?: MedicationUncheckedCreateNestedManyWithoutFamilyMemberDiseaseInput
  }

  export type FamilyMemberDiseaseUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    disease?: NullableEnumDiseaseFieldUpdateOperationsInput | $Enums.Disease | null
    diseases?: FamilyMemberDiseaseUpdatediseasesInput | $Enums.Disease[]
    specificDisease?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: BoolFieldUpdateOperationsInput | boolean
    application_id?: StringFieldUpdateOperationsInput | string
    familyMember?: FamilyMemberUpdateOneWithoutFamilyMemberDiseaseNestedInput
    candidate?: CandidateUpdateOneWithoutFamilyMemberDiseaseNestedInput
    legalResponsible?: LegalResponsibleUpdateOneWithoutFamilyMemberDiseaseNestedInput
    Medication?: MedicationUpdateManyWithoutFamilyMemberDiseaseNestedInput
  }

  export type FamilyMemberDiseaseUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    disease?: NullableEnumDiseaseFieldUpdateOperationsInput | $Enums.Disease | null
    diseases?: FamilyMemberDiseaseUpdatediseasesInput | $Enums.Disease[]
    specificDisease?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: BoolFieldUpdateOperationsInput | boolean
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    Medication?: MedicationUncheckedUpdateManyWithoutFamilyMemberDiseaseNestedInput
  }

  export type FamilyMemberDiseaseCreateManyInput = {
    id?: string
    main_id?: string | null
    disease?: $Enums.Disease | null
    diseases?: FamilyMemberDiseaseCreatediseasesInput | $Enums.Disease[]
    specificDisease?: string | null
    hasMedicalReport: boolean
    familyMember_id?: string | null
    candidate_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type FamilyMemberDiseaseUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    disease?: NullableEnumDiseaseFieldUpdateOperationsInput | $Enums.Disease | null
    diseases?: FamilyMemberDiseaseUpdatediseasesInput | $Enums.Disease[]
    specificDisease?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: BoolFieldUpdateOperationsInput | boolean
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type FamilyMemberDiseaseUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    disease?: NullableEnumDiseaseFieldUpdateOperationsInput | $Enums.Disease | null
    diseases?: FamilyMemberDiseaseUpdatediseasesInput | $Enums.Disease[]
    specificDisease?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: BoolFieldUpdateOperationsInput | boolean
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type MedicationCreateInput = {
    id?: string
    main_id?: string | null
    medicationName: string
    obtainedPublicly: boolean
    specificMedicationPublicly?: string | null
    application_id: string
    familyMember?: FamilyMemberCreateNestedOneWithoutMedicationInput
    candidate?: CandidateCreateNestedOneWithoutMedicationInput
    legalResponsible?: LegalResponsibleCreateNestedOneWithoutMedicationInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedOneWithoutMedicationInput
  }

  export type MedicationUncheckedCreateInput = {
    id?: string
    main_id?: string | null
    medicationName: string
    obtainedPublicly: boolean
    specificMedicationPublicly?: string | null
    familyMember_id?: string | null
    candidate_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
    familyMemberDiseaseId?: string | null
  }

  export type MedicationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    medicationName?: StringFieldUpdateOperationsInput | string
    obtainedPublicly?: BoolFieldUpdateOperationsInput | boolean
    specificMedicationPublicly?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    familyMember?: FamilyMemberUpdateOneWithoutMedicationNestedInput
    candidate?: CandidateUpdateOneWithoutMedicationNestedInput
    legalResponsible?: LegalResponsibleUpdateOneWithoutMedicationNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateOneWithoutMedicationNestedInput
  }

  export type MedicationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    medicationName?: StringFieldUpdateOperationsInput | string
    obtainedPublicly?: BoolFieldUpdateOperationsInput | boolean
    specificMedicationPublicly?: NullableStringFieldUpdateOperationsInput | string | null
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    familyMemberDiseaseId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MedicationCreateManyInput = {
    id?: string
    main_id?: string | null
    medicationName: string
    obtainedPublicly: boolean
    specificMedicationPublicly?: string | null
    familyMember_id?: string | null
    candidate_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
    familyMemberDiseaseId?: string | null
  }

  export type MedicationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    medicationName?: StringFieldUpdateOperationsInput | string
    obtainedPublicly?: BoolFieldUpdateOperationsInput | boolean
    specificMedicationPublicly?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type MedicationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    medicationName?: StringFieldUpdateOperationsInput | string
    obtainedPublicly?: BoolFieldUpdateOperationsInput | boolean
    specificMedicationPublicly?: NullableStringFieldUpdateOperationsInput | string | null
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    familyMemberDiseaseId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DeclarationsCreateInput = {
    id?: string
    declarationType: $Enums.Declaration_Type
    text: string
    application_id: string
    candidate?: CandidateCreateNestedOneWithoutDeclarationsInput
    familyMember?: FamilyMemberCreateNestedOneWithoutDeclarationsInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutDeclarationsInput
  }

  export type DeclarationsUncheckedCreateInput = {
    id?: string
    declarationType: $Enums.Declaration_Type
    text: string
    familyMember_id?: string | null
    candidate_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type DeclarationsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    declarationType?: EnumDeclaration_TypeFieldUpdateOperationsInput | $Enums.Declaration_Type
    text?: StringFieldUpdateOperationsInput | string
    application_id?: StringFieldUpdateOperationsInput | string
    candidate?: CandidateUpdateOneWithoutDeclarationsNestedInput
    familyMember?: FamilyMemberUpdateOneWithoutDeclarationsNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutDeclarationsNestedInput
  }

  export type DeclarationsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    declarationType?: EnumDeclaration_TypeFieldUpdateOperationsInput | $Enums.Declaration_Type
    text?: StringFieldUpdateOperationsInput | string
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type DeclarationsCreateManyInput = {
    id?: string
    declarationType: $Enums.Declaration_Type
    text: string
    familyMember_id?: string | null
    candidate_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type DeclarationsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    declarationType?: EnumDeclaration_TypeFieldUpdateOperationsInput | $Enums.Declaration_Type
    text?: StringFieldUpdateOperationsInput | string
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type DeclarationsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    declarationType?: EnumDeclaration_TypeFieldUpdateOperationsInput | $Enums.Declaration_Type
    text?: StringFieldUpdateOperationsInput | string
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type AnnouncementInterviewCreateInput = {
    startDate: Date | string
    endDate: Date | string
    beginHour: Date | string
    interval?: number
    endHour: Date | string
    duration?: number
    announcement: AnnouncementCreateNestedOneWithoutInterviewInput
  }

  export type AnnouncementInterviewUncheckedCreateInput = {
    startDate: Date | string
    endDate: Date | string
    beginHour: Date | string
    interval?: number
    endHour: Date | string
    duration?: number
    announcement_id: string
  }

  export type AnnouncementInterviewUpdateInput = {
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    beginHour?: DateTimeFieldUpdateOperationsInput | Date | string
    interval?: IntFieldUpdateOperationsInput | number
    endHour?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    announcement?: AnnouncementUpdateOneRequiredWithoutInterviewNestedInput
  }

  export type AnnouncementInterviewUncheckedUpdateInput = {
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    beginHour?: DateTimeFieldUpdateOperationsInput | Date | string
    interval?: IntFieldUpdateOperationsInput | number
    endHour?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    announcement_id?: StringFieldUpdateOperationsInput | string
  }

  export type AnnouncementInterviewCreateManyInput = {
    startDate: Date | string
    endDate: Date | string
    beginHour: Date | string
    interval?: number
    endHour: Date | string
    duration?: number
    announcement_id: string
  }

  export type AnnouncementInterviewUpdateManyMutationInput = {
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    beginHour?: DateTimeFieldUpdateOperationsInput | Date | string
    interval?: IntFieldUpdateOperationsInput | number
    endHour?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
  }

  export type AnnouncementInterviewUncheckedUpdateManyInput = {
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    beginHour?: DateTimeFieldUpdateOperationsInput | Date | string
    interval?: IntFieldUpdateOperationsInput | number
    endHour?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    announcement_id?: StringFieldUpdateOperationsInput | string
  }

  export type AnnouncementCreateInput = {
    id?: string
    entityChanged?: boolean | null
    branchChanged?: boolean | null
    announcementType: $Enums.AnnouncementType
    announcementNumber?: string | null
    announcementDate?: Date | string | null
    announcementBegin?: Date | string | null
    openDate?: Date | string | null
    closeDate?: Date | string | null
    waitingList?: boolean | null
    offeredVacancies?: number | null
    verifiedScholarships?: number | null
    description?: string | null
    announcementName?: string | null
    announcementLogo?: string | null
    type2?: string | null
    criteria?: AnnouncementCreatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementCreatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewCreateNestedOneWithoutAnnouncementInput
    entity: EntityCreateNestedOneWithoutAnnouncementInput
    entity_subsidiary?: EntitySubsidiaryCreateNestedManyWithoutAnnouncementInput
    Application?: ApplicationCreateNestedManyWithoutAnnouncementInput
    educationLevels?: EducationLevelCreateNestedManyWithoutAnnouncementInput
    ScholarshipGranted?: ScholarshipGrantedCreateNestedManyWithoutAnnounmententInput
    timelines?: TimelineCreateNestedManyWithoutAnnouncementInput
    socialAssistant?: SocialAssistantCreateNestedManyWithoutAnnouncementInput
  }

  export type AnnouncementUncheckedCreateInput = {
    id?: string
    entityChanged?: boolean | null
    branchChanged?: boolean | null
    announcementType: $Enums.AnnouncementType
    announcementNumber?: string | null
    announcementDate?: Date | string | null
    announcementBegin?: Date | string | null
    openDate?: Date | string | null
    closeDate?: Date | string | null
    waitingList?: boolean | null
    offeredVacancies?: number | null
    verifiedScholarships?: number | null
    description?: string | null
    entity_id: string
    announcementName?: string | null
    announcementLogo?: string | null
    type2?: string | null
    criteria?: AnnouncementCreatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementCreatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewUncheckedCreateNestedOneWithoutAnnouncementInput
    entity_subsidiary?: EntitySubsidiaryUncheckedCreateNestedManyWithoutAnnouncementInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutAnnouncementInput
    educationLevels?: EducationLevelUncheckedCreateNestedManyWithoutAnnouncementInput
    ScholarshipGranted?: ScholarshipGrantedUncheckedCreateNestedManyWithoutAnnounmententInput
    timelines?: TimelineUncheckedCreateNestedManyWithoutAnnouncementInput
    socialAssistant?: SocialAssistantUncheckedCreateNestedManyWithoutAnnouncementInput
  }

  export type AnnouncementUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    branchChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    announcementType?: EnumAnnouncementTypeFieldUpdateOperationsInput | $Enums.AnnouncementType
    announcementNumber?: NullableStringFieldUpdateOperationsInput | string | null
    announcementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    announcementBegin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closeDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waitingList?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    announcementName?: NullableStringFieldUpdateOperationsInput | string | null
    announcementLogo?: NullableStringFieldUpdateOperationsInput | string | null
    type2?: NullableStringFieldUpdateOperationsInput | string | null
    criteria?: AnnouncementUpdatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementUpdatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewUpdateOneWithoutAnnouncementNestedInput
    entity?: EntityUpdateOneRequiredWithoutAnnouncementNestedInput
    entity_subsidiary?: EntitySubsidiaryUpdateManyWithoutAnnouncementNestedInput
    Application?: ApplicationUpdateManyWithoutAnnouncementNestedInput
    educationLevels?: EducationLevelUpdateManyWithoutAnnouncementNestedInput
    ScholarshipGranted?: ScholarshipGrantedUpdateManyWithoutAnnounmententNestedInput
    timelines?: TimelineUpdateManyWithoutAnnouncementNestedInput
    socialAssistant?: SocialAssistantUpdateManyWithoutAnnouncementNestedInput
  }

  export type AnnouncementUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    branchChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    announcementType?: EnumAnnouncementTypeFieldUpdateOperationsInput | $Enums.AnnouncementType
    announcementNumber?: NullableStringFieldUpdateOperationsInput | string | null
    announcementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    announcementBegin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closeDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waitingList?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    entity_id?: StringFieldUpdateOperationsInput | string
    announcementName?: NullableStringFieldUpdateOperationsInput | string | null
    announcementLogo?: NullableStringFieldUpdateOperationsInput | string | null
    type2?: NullableStringFieldUpdateOperationsInput | string | null
    criteria?: AnnouncementUpdatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementUpdatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewUncheckedUpdateOneWithoutAnnouncementNestedInput
    entity_subsidiary?: EntitySubsidiaryUncheckedUpdateManyWithoutAnnouncementNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutAnnouncementNestedInput
    educationLevels?: EducationLevelUncheckedUpdateManyWithoutAnnouncementNestedInput
    ScholarshipGranted?: ScholarshipGrantedUncheckedUpdateManyWithoutAnnounmententNestedInput
    timelines?: TimelineUncheckedUpdateManyWithoutAnnouncementNestedInput
    socialAssistant?: SocialAssistantUncheckedUpdateManyWithoutAnnouncementNestedInput
  }

  export type AnnouncementCreateManyInput = {
    id?: string
    entityChanged?: boolean | null
    branchChanged?: boolean | null
    announcementType: $Enums.AnnouncementType
    announcementNumber?: string | null
    announcementDate?: Date | string | null
    announcementBegin?: Date | string | null
    openDate?: Date | string | null
    closeDate?: Date | string | null
    waitingList?: boolean | null
    offeredVacancies?: number | null
    verifiedScholarships?: number | null
    description?: string | null
    entity_id: string
    announcementName?: string | null
    announcementLogo?: string | null
    type2?: string | null
    criteria?: AnnouncementCreatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementCreatetypes1Input | $Enums.scholarshipGrantedType[]
  }

  export type AnnouncementUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    branchChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    announcementType?: EnumAnnouncementTypeFieldUpdateOperationsInput | $Enums.AnnouncementType
    announcementNumber?: NullableStringFieldUpdateOperationsInput | string | null
    announcementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    announcementBegin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closeDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waitingList?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    announcementName?: NullableStringFieldUpdateOperationsInput | string | null
    announcementLogo?: NullableStringFieldUpdateOperationsInput | string | null
    type2?: NullableStringFieldUpdateOperationsInput | string | null
    criteria?: AnnouncementUpdatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementUpdatetypes1Input | $Enums.scholarshipGrantedType[]
  }

  export type AnnouncementUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    branchChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    announcementType?: EnumAnnouncementTypeFieldUpdateOperationsInput | $Enums.AnnouncementType
    announcementNumber?: NullableStringFieldUpdateOperationsInput | string | null
    announcementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    announcementBegin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closeDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waitingList?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    entity_id?: StringFieldUpdateOperationsInput | string
    announcementName?: NullableStringFieldUpdateOperationsInput | string | null
    announcementLogo?: NullableStringFieldUpdateOperationsInput | string | null
    type2?: NullableStringFieldUpdateOperationsInput | string | null
    criteria?: AnnouncementUpdatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementUpdatetypes1Input | $Enums.scholarshipGrantedType[]
  }

  export type TimelineCreateInput = {
    id?: string
    controlLine: number
    stage: string
    deadline: Date | string
    announcement: AnnouncementCreateNestedOneWithoutTimelinesInput
  }

  export type TimelineUncheckedCreateInput = {
    id?: string
    controlLine: number
    stage: string
    deadline: Date | string
    announcementId: string
  }

  export type TimelineUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    controlLine?: IntFieldUpdateOperationsInput | number
    stage?: StringFieldUpdateOperationsInput | string
    deadline?: DateTimeFieldUpdateOperationsInput | Date | string
    announcement?: AnnouncementUpdateOneRequiredWithoutTimelinesNestedInput
  }

  export type TimelineUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    controlLine?: IntFieldUpdateOperationsInput | number
    stage?: StringFieldUpdateOperationsInput | string
    deadline?: DateTimeFieldUpdateOperationsInput | Date | string
    announcementId?: StringFieldUpdateOperationsInput | string
  }

  export type TimelineCreateManyInput = {
    id?: string
    controlLine: number
    stage: string
    deadline: Date | string
    announcementId: string
  }

  export type TimelineUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    controlLine?: IntFieldUpdateOperationsInput | number
    stage?: StringFieldUpdateOperationsInput | string
    deadline?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TimelineUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    controlLine?: IntFieldUpdateOperationsInput | number
    stage?: StringFieldUpdateOperationsInput | string
    deadline?: DateTimeFieldUpdateOperationsInput | Date | string
    announcementId?: StringFieldUpdateOperationsInput | string
  }

  export type EducationLevelCreateInput = {
    id?: string
    level: $Enums.LevelType
    basicEduType?: $Enums.BasicEducationType | null
    scholarshipType?: $Enums.ScholarshipOfferType | null
    higherEduScholarshipType?: $Enums.HigherEducationScholarshipType | null
    offeredCourseType?: $Enums.OfferedCourseType | null
    availableCourses?: string | null
    offeredVacancies?: number | null
    verifiedScholarships?: number | null
    shift?: $Enums.SHIFT | null
    semester?: number | null
    grade?: string | null
    Application?: ApplicationCreateNestedManyWithoutEducationLevelInput
    announcement: AnnouncementCreateNestedOneWithoutEducationLevelsInput
    entitySubsidiary?: EntitySubsidiaryCreateNestedOneWithoutEducationLevelInput
  }

  export type EducationLevelUncheckedCreateInput = {
    id?: string
    level: $Enums.LevelType
    basicEduType?: $Enums.BasicEducationType | null
    scholarshipType?: $Enums.ScholarshipOfferType | null
    higherEduScholarshipType?: $Enums.HigherEducationScholarshipType | null
    offeredCourseType?: $Enums.OfferedCourseType | null
    availableCourses?: string | null
    offeredVacancies?: number | null
    verifiedScholarships?: number | null
    shift?: $Enums.SHIFT | null
    semester?: number | null
    grade?: string | null
    announcementId: string
    entitySubsidiaryId?: string | null
    Application?: ApplicationUncheckedCreateNestedManyWithoutEducationLevelInput
  }

  export type EducationLevelUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    level?: EnumLevelTypeFieldUpdateOperationsInput | $Enums.LevelType
    basicEduType?: NullableEnumBasicEducationTypeFieldUpdateOperationsInput | $Enums.BasicEducationType | null
    scholarshipType?: NullableEnumScholarshipOfferTypeFieldUpdateOperationsInput | $Enums.ScholarshipOfferType | null
    higherEduScholarshipType?: NullableEnumHigherEducationScholarshipTypeFieldUpdateOperationsInput | $Enums.HigherEducationScholarshipType | null
    offeredCourseType?: NullableEnumOfferedCourseTypeFieldUpdateOperationsInput | $Enums.OfferedCourseType | null
    availableCourses?: NullableStringFieldUpdateOperationsInput | string | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    shift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    semester?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUpdateManyWithoutEducationLevelNestedInput
    announcement?: AnnouncementUpdateOneRequiredWithoutEducationLevelsNestedInput
    entitySubsidiary?: EntitySubsidiaryUpdateOneWithoutEducationLevelNestedInput
  }

  export type EducationLevelUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    level?: EnumLevelTypeFieldUpdateOperationsInput | $Enums.LevelType
    basicEduType?: NullableEnumBasicEducationTypeFieldUpdateOperationsInput | $Enums.BasicEducationType | null
    scholarshipType?: NullableEnumScholarshipOfferTypeFieldUpdateOperationsInput | $Enums.ScholarshipOfferType | null
    higherEduScholarshipType?: NullableEnumHigherEducationScholarshipTypeFieldUpdateOperationsInput | $Enums.HigherEducationScholarshipType | null
    offeredCourseType?: NullableEnumOfferedCourseTypeFieldUpdateOperationsInput | $Enums.OfferedCourseType | null
    availableCourses?: NullableStringFieldUpdateOperationsInput | string | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    shift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    semester?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    announcementId?: StringFieldUpdateOperationsInput | string
    entitySubsidiaryId?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUncheckedUpdateManyWithoutEducationLevelNestedInput
  }

  export type EducationLevelCreateManyInput = {
    id?: string
    level: $Enums.LevelType
    basicEduType?: $Enums.BasicEducationType | null
    scholarshipType?: $Enums.ScholarshipOfferType | null
    higherEduScholarshipType?: $Enums.HigherEducationScholarshipType | null
    offeredCourseType?: $Enums.OfferedCourseType | null
    availableCourses?: string | null
    offeredVacancies?: number | null
    verifiedScholarships?: number | null
    shift?: $Enums.SHIFT | null
    semester?: number | null
    grade?: string | null
    announcementId: string
    entitySubsidiaryId?: string | null
  }

  export type EducationLevelUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    level?: EnumLevelTypeFieldUpdateOperationsInput | $Enums.LevelType
    basicEduType?: NullableEnumBasicEducationTypeFieldUpdateOperationsInput | $Enums.BasicEducationType | null
    scholarshipType?: NullableEnumScholarshipOfferTypeFieldUpdateOperationsInput | $Enums.ScholarshipOfferType | null
    higherEduScholarshipType?: NullableEnumHigherEducationScholarshipTypeFieldUpdateOperationsInput | $Enums.HigherEducationScholarshipType | null
    offeredCourseType?: NullableEnumOfferedCourseTypeFieldUpdateOperationsInput | $Enums.OfferedCourseType | null
    availableCourses?: NullableStringFieldUpdateOperationsInput | string | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    shift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    semester?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EducationLevelUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    level?: EnumLevelTypeFieldUpdateOperationsInput | $Enums.LevelType
    basicEduType?: NullableEnumBasicEducationTypeFieldUpdateOperationsInput | $Enums.BasicEducationType | null
    scholarshipType?: NullableEnumScholarshipOfferTypeFieldUpdateOperationsInput | $Enums.ScholarshipOfferType | null
    higherEduScholarshipType?: NullableEnumHigherEducationScholarshipTypeFieldUpdateOperationsInput | $Enums.HigherEducationScholarshipType | null
    offeredCourseType?: NullableEnumOfferedCourseTypeFieldUpdateOperationsInput | $Enums.OfferedCourseType | null
    availableCourses?: NullableStringFieldUpdateOperationsInput | string | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    shift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    semester?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    announcementId?: StringFieldUpdateOperationsInput | string
    entitySubsidiaryId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ApplicationCreateInput = {
    id?: string
    status: $Enums.ApplicationStatus
    candidateName?: string | null
    SocialAssistantName?: string | null
    CadUnico?: boolean | null
    hasSevereDesease?: boolean | null
    averageIncome?: number | null
    perCapita?: number | null
    position?: number | null
    number?: number
    announcement: AnnouncementCreateNestedOneWithoutApplicationInput
    candidate: CandidateCreateNestedOneWithoutApplicationInput
    EducationLevel: EducationLevelCreateNestedOneWithoutApplicationInput
    SocialAssistant?: SocialAssistantCreateNestedOneWithoutApplicationInput
    applicationHistories?: ApplicationHistoryCreateNestedManyWithoutApplicationInput
    ScholarshipGranted?: ScholarshipGrantedCreateNestedOneWithoutApplicationInput
    responsible?: LegalResponsibleCreateNestedOneWithoutApplicationInput
  }

  export type ApplicationUncheckedCreateInput = {
    id?: string
    candidate_id: string
    announcement_id: string
    status: $Enums.ApplicationStatus
    socialAssistant_id?: string | null
    educationLevel_id: string
    candidateName?: string | null
    SocialAssistantName?: string | null
    CadUnico?: boolean | null
    hasSevereDesease?: boolean | null
    averageIncome?: number | null
    perCapita?: number | null
    position?: number | null
    number?: number
    reponsible_id?: string | null
    applicationHistories?: ApplicationHistoryUncheckedCreateNestedManyWithoutApplicationInput
    ScholarshipGranted?: ScholarshipGrantedUncheckedCreateNestedOneWithoutApplicationInput
  }

  export type ApplicationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    candidateName?: NullableStringFieldUpdateOperationsInput | string | null
    SocialAssistantName?: NullableStringFieldUpdateOperationsInput | string | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDesease?: NullableBoolFieldUpdateOperationsInput | boolean | null
    averageIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    perCapita?: NullableFloatFieldUpdateOperationsInput | number | null
    position?: NullableIntFieldUpdateOperationsInput | number | null
    number?: IntFieldUpdateOperationsInput | number
    announcement?: AnnouncementUpdateOneRequiredWithoutApplicationNestedInput
    candidate?: CandidateUpdateOneRequiredWithoutApplicationNestedInput
    EducationLevel?: EducationLevelUpdateOneRequiredWithoutApplicationNestedInput
    SocialAssistant?: SocialAssistantUpdateOneWithoutApplicationNestedInput
    applicationHistories?: ApplicationHistoryUpdateManyWithoutApplicationNestedInput
    ScholarshipGranted?: ScholarshipGrantedUpdateOneWithoutApplicationNestedInput
    responsible?: LegalResponsibleUpdateOneWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    candidate_id?: StringFieldUpdateOperationsInput | string
    announcement_id?: StringFieldUpdateOperationsInput | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    socialAssistant_id?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel_id?: StringFieldUpdateOperationsInput | string
    candidateName?: NullableStringFieldUpdateOperationsInput | string | null
    SocialAssistantName?: NullableStringFieldUpdateOperationsInput | string | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDesease?: NullableBoolFieldUpdateOperationsInput | boolean | null
    averageIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    perCapita?: NullableFloatFieldUpdateOperationsInput | number | null
    position?: NullableIntFieldUpdateOperationsInput | number | null
    number?: IntFieldUpdateOperationsInput | number
    reponsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    applicationHistories?: ApplicationHistoryUncheckedUpdateManyWithoutApplicationNestedInput
    ScholarshipGranted?: ScholarshipGrantedUncheckedUpdateOneWithoutApplicationNestedInput
  }

  export type ApplicationCreateManyInput = {
    id?: string
    candidate_id: string
    announcement_id: string
    status: $Enums.ApplicationStatus
    socialAssistant_id?: string | null
    educationLevel_id: string
    candidateName?: string | null
    SocialAssistantName?: string | null
    CadUnico?: boolean | null
    hasSevereDesease?: boolean | null
    averageIncome?: number | null
    perCapita?: number | null
    position?: number | null
    number?: number
    reponsible_id?: string | null
  }

  export type ApplicationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    candidateName?: NullableStringFieldUpdateOperationsInput | string | null
    SocialAssistantName?: NullableStringFieldUpdateOperationsInput | string | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDesease?: NullableBoolFieldUpdateOperationsInput | boolean | null
    averageIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    perCapita?: NullableFloatFieldUpdateOperationsInput | number | null
    position?: NullableIntFieldUpdateOperationsInput | number | null
    number?: IntFieldUpdateOperationsInput | number
  }

  export type ApplicationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    candidate_id?: StringFieldUpdateOperationsInput | string
    announcement_id?: StringFieldUpdateOperationsInput | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    socialAssistant_id?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel_id?: StringFieldUpdateOperationsInput | string
    candidateName?: NullableStringFieldUpdateOperationsInput | string | null
    SocialAssistantName?: NullableStringFieldUpdateOperationsInput | string | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDesease?: NullableBoolFieldUpdateOperationsInput | boolean | null
    averageIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    perCapita?: NullableFloatFieldUpdateOperationsInput | number | null
    position?: NullableIntFieldUpdateOperationsInput | number | null
    number?: IntFieldUpdateOperationsInput | number
    reponsible_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ApplicationHistoryCreateInput = {
    id?: string
    description: string
    solicitation?: $Enums.SolicitationType | null
    report?: string | null
    answered?: boolean | null
    deadLine?: Date | string | null
    date?: Date | string
    application: ApplicationCreateNestedOneWithoutApplicationHistoriesInput
  }

  export type ApplicationHistoryUncheckedCreateInput = {
    id?: string
    application_id: string
    description: string
    solicitation?: $Enums.SolicitationType | null
    report?: string | null
    answered?: boolean | null
    deadLine?: Date | string | null
    date?: Date | string
  }

  export type ApplicationHistoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    solicitation?: NullableEnumSolicitationTypeFieldUpdateOperationsInput | $Enums.SolicitationType | null
    report?: NullableStringFieldUpdateOperationsInput | string | null
    answered?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deadLine?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    application?: ApplicationUpdateOneRequiredWithoutApplicationHistoriesNestedInput
  }

  export type ApplicationHistoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    application_id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    solicitation?: NullableEnumSolicitationTypeFieldUpdateOperationsInput | $Enums.SolicitationType | null
    report?: NullableStringFieldUpdateOperationsInput | string | null
    answered?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deadLine?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationHistoryCreateManyInput = {
    id?: string
    application_id: string
    description: string
    solicitation?: $Enums.SolicitationType | null
    report?: string | null
    answered?: boolean | null
    deadLine?: Date | string | null
    date?: Date | string
  }

  export type ApplicationHistoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    solicitation?: NullableEnumSolicitationTypeFieldUpdateOperationsInput | $Enums.SolicitationType | null
    report?: NullableStringFieldUpdateOperationsInput | string | null
    answered?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deadLine?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationHistoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    application_id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    solicitation?: NullableEnumSolicitationTypeFieldUpdateOperationsInput | $Enums.SolicitationType | null
    report?: NullableStringFieldUpdateOperationsInput | string | null
    answered?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deadLine?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScholarshipGrantedCreateInput = {
    id?: string
    gaveUp: boolean
    ScholarshipCode?: string | null
    types?: ScholarshipGrantedCreatetypesInput | $Enums.scholarshipGrantedType[]
    announmentent: AnnouncementCreateNestedOneWithoutScholarshipGrantedInput
    application: ApplicationCreateNestedOneWithoutScholarshipGrantedInput
  }

  export type ScholarshipGrantedUncheckedCreateInput = {
    id?: string
    gaveUp: boolean
    ScholarshipCode?: string | null
    types?: ScholarshipGrantedCreatetypesInput | $Enums.scholarshipGrantedType[]
    application_id: string
    announcement_id: string
  }

  export type ScholarshipGrantedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    gaveUp?: BoolFieldUpdateOperationsInput | boolean
    ScholarshipCode?: NullableStringFieldUpdateOperationsInput | string | null
    types?: ScholarshipGrantedUpdatetypesInput | $Enums.scholarshipGrantedType[]
    announmentent?: AnnouncementUpdateOneRequiredWithoutScholarshipGrantedNestedInput
    application?: ApplicationUpdateOneRequiredWithoutScholarshipGrantedNestedInput
  }

  export type ScholarshipGrantedUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    gaveUp?: BoolFieldUpdateOperationsInput | boolean
    ScholarshipCode?: NullableStringFieldUpdateOperationsInput | string | null
    types?: ScholarshipGrantedUpdatetypesInput | $Enums.scholarshipGrantedType[]
    application_id?: StringFieldUpdateOperationsInput | string
    announcement_id?: StringFieldUpdateOperationsInput | string
  }

  export type ScholarshipGrantedCreateManyInput = {
    id?: string
    gaveUp: boolean
    ScholarshipCode?: string | null
    types?: ScholarshipGrantedCreatetypesInput | $Enums.scholarshipGrantedType[]
    application_id: string
    announcement_id: string
  }

  export type ScholarshipGrantedUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    gaveUp?: BoolFieldUpdateOperationsInput | boolean
    ScholarshipCode?: NullableStringFieldUpdateOperationsInput | string | null
    types?: ScholarshipGrantedUpdatetypesInput | $Enums.scholarshipGrantedType[]
  }

  export type ScholarshipGrantedUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    gaveUp?: BoolFieldUpdateOperationsInput | boolean
    ScholarshipCode?: NullableStringFieldUpdateOperationsInput | string | null
    types?: ScholarshipGrantedUpdatetypesInput | $Enums.scholarshipGrantedType[]
    application_id?: StringFieldUpdateOperationsInput | string
    announcement_id?: StringFieldUpdateOperationsInput | string
  }

  export type FamilyMemberToVehicleCreateInput = {
    application_id: string
    main_id?: string | null
    familyMembers: FamilyMemberCreateNestedOneWithoutFamilyMemberToVehicleInput
    Vehicle: VehicleCreateNestedOneWithoutFamilyMemberToVehicleInput
  }

  export type FamilyMemberToVehicleUncheckedCreateInput = {
    A: string
    B: string
    application_id: string
    main_id?: string | null
  }

  export type FamilyMemberToVehicleUpdateInput = {
    application_id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMembers?: FamilyMemberUpdateOneRequiredWithoutFamilyMemberToVehicleNestedInput
    Vehicle?: VehicleUpdateOneRequiredWithoutFamilyMemberToVehicleNestedInput
  }

  export type FamilyMemberToVehicleUncheckedUpdateInput = {
    A?: StringFieldUpdateOperationsInput | string
    B?: StringFieldUpdateOperationsInput | string
    application_id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FamilyMemberToVehicleCreateManyInput = {
    A: string
    B: string
    application_id: string
    main_id?: string | null
  }

  export type FamilyMemberToVehicleUpdateManyMutationInput = {
    application_id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FamilyMemberToVehicleUncheckedUpdateManyInput = {
    A?: StringFieldUpdateOperationsInput | string
    B?: StringFieldUpdateOperationsInput | string
    application_id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type IdMappingCountOrderByAggregateInput = {
    id?: SortOrder
    mainId?: SortOrder
    newId?: SortOrder
    application_id?: SortOrder
  }

  export type IdMappingMaxOrderByAggregateInput = {
    id?: SortOrder
    mainId?: SortOrder
    newId?: SortOrder
    application_id?: SortOrder
  }

  export type IdMappingMinOrderByAggregateInput = {
    id?: SortOrder
    mainId?: SortOrder
    newId?: SortOrder
    application_id?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type EnumROLEFilter<$PrismaModel = never> = {
    equals?: $Enums.ROLE | EnumROLEFieldRefInput<$PrismaModel>
    in?: $Enums.ROLE[] | ListEnumROLEFieldRefInput<$PrismaModel>
    notIn?: $Enums.ROLE[] | ListEnumROLEFieldRefInput<$PrismaModel>
    not?: NestedEnumROLEFilter<$PrismaModel> | $Enums.ROLE
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type ApplicationListRelationFilter = {
    every?: ApplicationWhereInput
    some?: ApplicationWhereInput
    none?: ApplicationWhereInput
  }

  export type CreditCardListRelationFilter = {
    every?: CreditCardWhereInput
    some?: CreditCardWhereInput
    none?: CreditCardWhereInput
  }

  export type ExpenseListRelationFilter = {
    every?: ExpenseWhereInput
    some?: ExpenseWhereInput
    none?: ExpenseWhereInput
  }

  export type FinancingListRelationFilter = {
    every?: FinancingWhereInput
    some?: FinancingWhereInput
    none?: FinancingWhereInput
  }

  export type IdentityDetailsListRelationFilter = {
    every?: IdentityDetailsWhereInput
    some?: IdentityDetailsWhereInput
    none?: IdentityDetailsWhereInput
  }

  export type FamilyMemberIncomeListRelationFilter = {
    every?: FamilyMemberIncomeWhereInput
    some?: FamilyMemberIncomeWhereInput
    none?: FamilyMemberIncomeWhereInput
  }

  export type LoanListRelationFilter = {
    every?: LoanWhereInput
    some?: LoanWhereInput
    none?: LoanWhereInput
  }

  export type OtherExpenseListRelationFilter = {
    every?: OtherExpenseWhereInput
    some?: OtherExpenseWhereInput
    none?: OtherExpenseWhereInput
  }

  export type VehicleListRelationFilter = {
    every?: VehicleWhereInput
    some?: VehicleWhereInput
    none?: VehicleWhereInput
  }

  export type LegalResponsibleNullableRelationFilter = {
    is?: LegalResponsibleWhereInput | null
    isNot?: LegalResponsibleWhereInput | null
  }

  export type FamilyMemberListRelationFilter = {
    every?: FamilyMemberWhereInput
    some?: FamilyMemberWhereInput
    none?: FamilyMemberWhereInput
  }

  export type HousingListRelationFilter = {
    every?: HousingWhereInput
    some?: HousingWhereInput
    none?: HousingWhereInput
  }

  export type MonthlyIncomeListRelationFilter = {
    every?: MonthlyIncomeWhereInput
    some?: MonthlyIncomeWhereInput
    none?: MonthlyIncomeWhereInput
  }

  export type FamilyMemberDiseaseListRelationFilter = {
    every?: FamilyMemberDiseaseWhereInput
    some?: FamilyMemberDiseaseWhereInput
    none?: FamilyMemberDiseaseWhereInput
  }

  export type MedicationListRelationFilter = {
    every?: MedicationWhereInput
    some?: MedicationWhereInput
    none?: MedicationWhereInput
  }

  export type BankAccountListRelationFilter = {
    every?: BankAccountWhereInput
    some?: BankAccountWhereInput
    none?: BankAccountWhereInput
  }

  export type DeclarationsListRelationFilter = {
    every?: DeclarationsWhereInput
    some?: DeclarationsWhereInput
    none?: DeclarationsWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type ApplicationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CreditCardOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ExpenseOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FinancingOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type IdentityDetailsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FamilyMemberIncomeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LoanOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OtherExpenseOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type VehicleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FamilyMemberOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type HousingOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MonthlyIncomeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FamilyMemberDiseaseOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MedicationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BankAccountOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DeclarationsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CandidateIdResponsible_idCompoundUniqueInput = {
    id: string
    responsible_id: string
  }

  export type CandidateCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    CPF?: SortOrder
    main_id?: SortOrder
    birthDate?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    user_id?: SortOrder
    responsible_id?: SortOrder
    profilePicture?: SortOrder
    email?: SortOrder
    finishedapplication?: SortOrder
    application_id?: SortOrder
  }

  export type CandidateMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    CPF?: SortOrder
    main_id?: SortOrder
    birthDate?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    user_id?: SortOrder
    responsible_id?: SortOrder
    profilePicture?: SortOrder
    email?: SortOrder
    finishedapplication?: SortOrder
    application_id?: SortOrder
  }

  export type CandidateMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    CPF?: SortOrder
    main_id?: SortOrder
    birthDate?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    user_id?: SortOrder
    responsible_id?: SortOrder
    profilePicture?: SortOrder
    email?: SortOrder
    finishedapplication?: SortOrder
    application_id?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type EnumROLEWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ROLE | EnumROLEFieldRefInput<$PrismaModel>
    in?: $Enums.ROLE[] | ListEnumROLEFieldRefInput<$PrismaModel>
    notIn?: $Enums.ROLE[] | ListEnumROLEFieldRefInput<$PrismaModel>
    not?: NestedEnumROLEWithAggregatesFilter<$PrismaModel> | $Enums.ROLE
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumROLEFilter<$PrismaModel>
    _max?: NestedEnumROLEFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type EntityDirectorNullableRelationFilter = {
    is?: EntityDirectorWhereInput | null
    isNot?: EntityDirectorWhereInput | null
  }

  export type EntitySubsidiaryNullableRelationFilter = {
    is?: EntitySubsidiaryWhereInput | null
    isNot?: EntitySubsidiaryWhereInput | null
  }

  export type SocialAssistantNullableRelationFilter = {
    is?: SocialAssistantWhereInput | null
    isNot?: SocialAssistantWhereInput | null
  }

  export type EntityNullableRelationFilter = {
    is?: EntityWhereInput | null
    isNot?: EntityWhereInput | null
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    profilePicture?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    profilePicture?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    profilePicture?: SortOrder
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type EnumINSTITUTION_TYPENullableFilter<$PrismaModel = never> = {
    equals?: $Enums.INSTITUTION_TYPE | EnumINSTITUTION_TYPEFieldRefInput<$PrismaModel> | null
    in?: $Enums.INSTITUTION_TYPE[] | ListEnumINSTITUTION_TYPEFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.INSTITUTION_TYPE[] | ListEnumINSTITUTION_TYPEFieldRefInput<$PrismaModel> | null
    not?: NestedEnumINSTITUTION_TYPENullableFilter<$PrismaModel> | $Enums.INSTITUTION_TYPE | null
  }

  export type EnumEDUCATION_TYPENullableFilter<$PrismaModel = never> = {
    equals?: $Enums.EDUCATION_TYPE | EnumEDUCATION_TYPEFieldRefInput<$PrismaModel> | null
    in?: $Enums.EDUCATION_TYPE[] | ListEnumEDUCATION_TYPEFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.EDUCATION_TYPE[] | ListEnumEDUCATION_TYPEFieldRefInput<$PrismaModel> | null
    not?: NestedEnumEDUCATION_TYPENullableFilter<$PrismaModel> | $Enums.EDUCATION_TYPE | null
  }

  export type EnumSHIFTNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.SHIFT | EnumSHIFTFieldRefInput<$PrismaModel> | null
    in?: $Enums.SHIFT[] | ListEnumSHIFTFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.SHIFT[] | ListEnumSHIFTFieldRefInput<$PrismaModel> | null
    not?: NestedEnumSHIFTNullableFilter<$PrismaModel> | $Enums.SHIFT | null
  }

  export type CandidateListRelationFilter = {
    every?: CandidateWhereInput
    some?: CandidateWhereInput
    none?: CandidateWhereInput
  }

  export type CandidateOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LegalResponsibleIdUser_idCompoundUniqueInput = {
    id: string
    user_id: string
  }

  export type LegalResponsibleCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    main_id?: SortOrder
    CPF?: SortOrder
    birthDate?: SortOrder
    livesAtSameAddress?: SortOrder
    institutionType?: SortOrder
    responsibleEducationLevel?: SortOrder
    responsibleGradeOrSemester?: SortOrder
    responsibleShift?: SortOrder
    ResponsibleEducationInstitution?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    user_id?: SortOrder
    hasScholarship?: SortOrder
    monthlyAmount?: SortOrder
    percentageOfScholarship?: SortOrder
    application_id?: SortOrder
  }

  export type LegalResponsibleMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    main_id?: SortOrder
    CPF?: SortOrder
    birthDate?: SortOrder
    livesAtSameAddress?: SortOrder
    institutionType?: SortOrder
    responsibleEducationLevel?: SortOrder
    responsibleGradeOrSemester?: SortOrder
    responsibleShift?: SortOrder
    ResponsibleEducationInstitution?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    user_id?: SortOrder
    hasScholarship?: SortOrder
    monthlyAmount?: SortOrder
    percentageOfScholarship?: SortOrder
    application_id?: SortOrder
  }

  export type LegalResponsibleMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    main_id?: SortOrder
    CPF?: SortOrder
    birthDate?: SortOrder
    livesAtSameAddress?: SortOrder
    institutionType?: SortOrder
    responsibleEducationLevel?: SortOrder
    responsibleGradeOrSemester?: SortOrder
    responsibleShift?: SortOrder
    ResponsibleEducationInstitution?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    user_id?: SortOrder
    hasScholarship?: SortOrder
    monthlyAmount?: SortOrder
    percentageOfScholarship?: SortOrder
    application_id?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type EnumINSTITUTION_TYPENullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.INSTITUTION_TYPE | EnumINSTITUTION_TYPEFieldRefInput<$PrismaModel> | null
    in?: $Enums.INSTITUTION_TYPE[] | ListEnumINSTITUTION_TYPEFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.INSTITUTION_TYPE[] | ListEnumINSTITUTION_TYPEFieldRefInput<$PrismaModel> | null
    not?: NestedEnumINSTITUTION_TYPENullableWithAggregatesFilter<$PrismaModel> | $Enums.INSTITUTION_TYPE | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumINSTITUTION_TYPENullableFilter<$PrismaModel>
    _max?: NestedEnumINSTITUTION_TYPENullableFilter<$PrismaModel>
  }

  export type EnumEDUCATION_TYPENullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EDUCATION_TYPE | EnumEDUCATION_TYPEFieldRefInput<$PrismaModel> | null
    in?: $Enums.EDUCATION_TYPE[] | ListEnumEDUCATION_TYPEFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.EDUCATION_TYPE[] | ListEnumEDUCATION_TYPEFieldRefInput<$PrismaModel> | null
    not?: NestedEnumEDUCATION_TYPENullableWithAggregatesFilter<$PrismaModel> | $Enums.EDUCATION_TYPE | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumEDUCATION_TYPENullableFilter<$PrismaModel>
    _max?: NestedEnumEDUCATION_TYPENullableFilter<$PrismaModel>
  }

  export type EnumSHIFTNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SHIFT | EnumSHIFTFieldRefInput<$PrismaModel> | null
    in?: $Enums.SHIFT[] | ListEnumSHIFTFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.SHIFT[] | ListEnumSHIFTFieldRefInput<$PrismaModel> | null
    not?: NestedEnumSHIFTNullableWithAggregatesFilter<$PrismaModel> | $Enums.SHIFT | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumSHIFTNullableFilter<$PrismaModel>
    _max?: NestedEnumSHIFTNullableFilter<$PrismaModel>
  }

  export type EntityRelationFilter = {
    is?: EntityWhereInput
    isNot?: EntityWhereInput
  }

  export type UserRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type AnnouncementListRelationFilter = {
    every?: AnnouncementWhereInput
    some?: AnnouncementWhereInput
    none?: AnnouncementWhereInput
  }

  export type EntitySubsidiaryListRelationFilter = {
    every?: EntitySubsidiaryWhereInput
    some?: EntitySubsidiaryWhereInput
    none?: EntitySubsidiaryWhereInput
  }

  export type AnnouncementOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EntitySubsidiaryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SocialAssistantCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    CPF?: SortOrder
    RG?: SortOrder
    CRESS?: SortOrder
    phone?: SortOrder
    user_id?: SortOrder
    entity_id?: SortOrder
  }

  export type SocialAssistantMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    CPF?: SortOrder
    RG?: SortOrder
    CRESS?: SortOrder
    phone?: SortOrder
    user_id?: SortOrder
    entity_id?: SortOrder
  }

  export type SocialAssistantMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    CPF?: SortOrder
    RG?: SortOrder
    CRESS?: SortOrder
    phone?: SortOrder
    user_id?: SortOrder
    entity_id?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type EnumCOUNTRYNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.COUNTRY | EnumCOUNTRYFieldRefInput<$PrismaModel> | null
    in?: $Enums.COUNTRY[] | ListEnumCOUNTRYFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.COUNTRY[] | ListEnumCOUNTRYFieldRefInput<$PrismaModel> | null
    not?: NestedEnumCOUNTRYNullableFilter<$PrismaModel> | $Enums.COUNTRY | null
  }

  export type EntityDirectorListRelationFilter = {
    every?: EntityDirectorWhereInput
    some?: EntityDirectorWhereInput
    none?: EntityDirectorWhereInput
  }

  export type SocialAssistantListRelationFilter = {
    every?: SocialAssistantWhereInput
    some?: SocialAssistantWhereInput
    none?: SocialAssistantWhereInput
  }

  export type EntityDirectorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SocialAssistantOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EntityCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    socialReason?: SortOrder
    logo?: SortOrder
    CNPJ?: SortOrder
    CEP?: SortOrder
    address?: SortOrder
    addressNumber?: SortOrder
    neighborhood?: SortOrder
    UF?: SortOrder
    city?: SortOrder
    educationalInstitutionCode?: SortOrder
    user_id?: SortOrder
  }

  export type EntityAvgOrderByAggregateInput = {
    addressNumber?: SortOrder
  }

  export type EntityMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    socialReason?: SortOrder
    logo?: SortOrder
    CNPJ?: SortOrder
    CEP?: SortOrder
    address?: SortOrder
    addressNumber?: SortOrder
    neighborhood?: SortOrder
    UF?: SortOrder
    city?: SortOrder
    educationalInstitutionCode?: SortOrder
    user_id?: SortOrder
  }

  export type EntityMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    socialReason?: SortOrder
    logo?: SortOrder
    CNPJ?: SortOrder
    CEP?: SortOrder
    address?: SortOrder
    addressNumber?: SortOrder
    neighborhood?: SortOrder
    UF?: SortOrder
    city?: SortOrder
    educationalInstitutionCode?: SortOrder
    user_id?: SortOrder
  }

  export type EntitySumOrderByAggregateInput = {
    addressNumber?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type EnumCOUNTRYNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.COUNTRY | EnumCOUNTRYFieldRefInput<$PrismaModel> | null
    in?: $Enums.COUNTRY[] | ListEnumCOUNTRYFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.COUNTRY[] | ListEnumCOUNTRYFieldRefInput<$PrismaModel> | null
    not?: NestedEnumCOUNTRYNullableWithAggregatesFilter<$PrismaModel> | $Enums.COUNTRY | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumCOUNTRYNullableFilter<$PrismaModel>
    _max?: NestedEnumCOUNTRYNullableFilter<$PrismaModel>
  }

  export type EducationLevelListRelationFilter = {
    every?: EducationLevelWhereInput
    some?: EducationLevelWhereInput
    none?: EducationLevelWhereInput
  }

  export type EducationLevelOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EntitySubsidiaryCountOrderByAggregateInput = {
    id?: SortOrder
    CNPJ?: SortOrder
    name?: SortOrder
    socialReason?: SortOrder
    CEP?: SortOrder
    address?: SortOrder
    addressNumber?: SortOrder
    city?: SortOrder
    neighborhood?: SortOrder
    UF?: SortOrder
    educationalInstitutionCode?: SortOrder
    entity_id?: SortOrder
    user_id?: SortOrder
  }

  export type EntitySubsidiaryAvgOrderByAggregateInput = {
    addressNumber?: SortOrder
  }

  export type EntitySubsidiaryMaxOrderByAggregateInput = {
    id?: SortOrder
    CNPJ?: SortOrder
    name?: SortOrder
    socialReason?: SortOrder
    CEP?: SortOrder
    address?: SortOrder
    addressNumber?: SortOrder
    city?: SortOrder
    neighborhood?: SortOrder
    UF?: SortOrder
    educationalInstitutionCode?: SortOrder
    entity_id?: SortOrder
    user_id?: SortOrder
  }

  export type EntitySubsidiaryMinOrderByAggregateInput = {
    id?: SortOrder
    CNPJ?: SortOrder
    name?: SortOrder
    socialReason?: SortOrder
    CEP?: SortOrder
    address?: SortOrder
    addressNumber?: SortOrder
    city?: SortOrder
    neighborhood?: SortOrder
    UF?: SortOrder
    educationalInstitutionCode?: SortOrder
    entity_id?: SortOrder
    user_id?: SortOrder
  }

  export type EntitySubsidiarySumOrderByAggregateInput = {
    addressNumber?: SortOrder
  }

  export type EntityDirectorCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    CPF?: SortOrder
    phone?: SortOrder
    user_id?: SortOrder
    entity_subsidiary_id?: SortOrder
    entity_id?: SortOrder
  }

  export type EntityDirectorMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    CPF?: SortOrder
    phone?: SortOrder
    user_id?: SortOrder
    entity_subsidiary_id?: SortOrder
    entity_id?: SortOrder
  }

  export type EntityDirectorMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    CPF?: SortOrder
    phone?: SortOrder
    user_id?: SortOrder
    entity_subsidiary_id?: SortOrder
    entity_id?: SortOrder
  }

  export type EnumGENDERFilter<$PrismaModel = never> = {
    equals?: $Enums.GENDER | EnumGENDERFieldRefInput<$PrismaModel>
    in?: $Enums.GENDER[] | ListEnumGENDERFieldRefInput<$PrismaModel>
    notIn?: $Enums.GENDER[] | ListEnumGENDERFieldRefInput<$PrismaModel>
    not?: NestedEnumGENDERFilter<$PrismaModel> | $Enums.GENDER
  }

  export type EnumCOUNTRYFilter<$PrismaModel = never> = {
    equals?: $Enums.COUNTRY | EnumCOUNTRYFieldRefInput<$PrismaModel>
    in?: $Enums.COUNTRY[] | ListEnumCOUNTRYFieldRefInput<$PrismaModel>
    notIn?: $Enums.COUNTRY[] | ListEnumCOUNTRYFieldRefInput<$PrismaModel>
    not?: NestedEnumCOUNTRYFilter<$PrismaModel> | $Enums.COUNTRY
  }

  export type EnumDOCUMENT_TYPENullableFilter<$PrismaModel = never> = {
    equals?: $Enums.DOCUMENT_TYPE | EnumDOCUMENT_TYPEFieldRefInput<$PrismaModel> | null
    in?: $Enums.DOCUMENT_TYPE[] | ListEnumDOCUMENT_TYPEFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.DOCUMENT_TYPE[] | ListEnumDOCUMENT_TYPEFieldRefInput<$PrismaModel> | null
    not?: NestedEnumDOCUMENT_TYPENullableFilter<$PrismaModel> | $Enums.DOCUMENT_TYPE | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type EnumMARITAL_STATUSFilter<$PrismaModel = never> = {
    equals?: $Enums.MARITAL_STATUS | EnumMARITAL_STATUSFieldRefInput<$PrismaModel>
    in?: $Enums.MARITAL_STATUS[] | ListEnumMARITAL_STATUSFieldRefInput<$PrismaModel>
    notIn?: $Enums.MARITAL_STATUS[] | ListEnumMARITAL_STATUSFieldRefInput<$PrismaModel>
    not?: NestedEnumMARITAL_STATUSFilter<$PrismaModel> | $Enums.MARITAL_STATUS
  }

  export type EnumSkinColorFilter<$PrismaModel = never> = {
    equals?: $Enums.SkinColor | EnumSkinColorFieldRefInput<$PrismaModel>
    in?: $Enums.SkinColor[] | ListEnumSkinColorFieldRefInput<$PrismaModel>
    notIn?: $Enums.SkinColor[] | ListEnumSkinColorFieldRefInput<$PrismaModel>
    not?: NestedEnumSkinColorFilter<$PrismaModel> | $Enums.SkinColor
  }

  export type EnumRELIGIONFilter<$PrismaModel = never> = {
    equals?: $Enums.RELIGION | EnumRELIGIONFieldRefInput<$PrismaModel>
    in?: $Enums.RELIGION[] | ListEnumRELIGIONFieldRefInput<$PrismaModel>
    notIn?: $Enums.RELIGION[] | ListEnumRELIGIONFieldRefInput<$PrismaModel>
    not?: NestedEnumRELIGIONFilter<$PrismaModel> | $Enums.RELIGION
  }

  export type EnumSCHOLARSHIPFilter<$PrismaModel = never> = {
    equals?: $Enums.SCHOLARSHIP | EnumSCHOLARSHIPFieldRefInput<$PrismaModel>
    in?: $Enums.SCHOLARSHIP[] | ListEnumSCHOLARSHIPFieldRefInput<$PrismaModel>
    notIn?: $Enums.SCHOLARSHIP[] | ListEnumSCHOLARSHIPFieldRefInput<$PrismaModel>
    not?: NestedEnumSCHOLARSHIPFilter<$PrismaModel> | $Enums.SCHOLARSHIP
  }

  export type EnumIncomeSourceNullableListFilter<$PrismaModel = never> = {
    equals?: $Enums.IncomeSource[] | ListEnumIncomeSourceFieldRefInput<$PrismaModel> | null
    has?: $Enums.IncomeSource | EnumIncomeSourceFieldRefInput<$PrismaModel> | null
    hasEvery?: $Enums.IncomeSource[] | ListEnumIncomeSourceFieldRefInput<$PrismaModel>
    hasSome?: $Enums.IncomeSource[] | ListEnumIncomeSourceFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type EnumScholarshipTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.ScholarshipType | EnumScholarshipTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.ScholarshipType[] | ListEnumScholarshipTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.ScholarshipType[] | ListEnumScholarshipTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumScholarshipTypeNullableFilter<$PrismaModel> | $Enums.ScholarshipType | null
  }

  export type CandidateNullableRelationFilter = {
    is?: CandidateWhereInput | null
    isNot?: CandidateWhereInput | null
  }

  export type IdentityDetailsCountOrderByAggregateInput = {
    id?: SortOrder
    fullName?: SortOrder
    socialName?: SortOrder
    main_id?: SortOrder
    birthDate?: SortOrder
    gender?: SortOrder
    nationality?: SortOrder
    natural_city?: SortOrder
    natural_UF?: SortOrder
    CPF?: SortOrder
    RG?: SortOrder
    rgIssuingAuthority?: SortOrder
    rgIssuingState?: SortOrder
    documentType?: SortOrder
    CadUnico?: SortOrder
    hasSevereDeseaseOrUsesMedication?: SortOrder
    hasBankAccount?: SortOrder
    documentNumber?: SortOrder
    documentValidity?: SortOrder
    maritalStatus?: SortOrder
    skinColor?: SortOrder
    religion?: SortOrder
    educationLevel?: SortOrder
    specialNeeds?: SortOrder
    address?: SortOrder
    addressNumber?: SortOrder
    complement?: SortOrder
    neighborhood?: SortOrder
    city?: SortOrder
    UF?: SortOrder
    CEP?: SortOrder
    specialNeedsDescription?: SortOrder
    specialNeedsType?: SortOrder
    hasMedicalReport?: SortOrder
    email?: SortOrder
    landlinePhone?: SortOrder
    workPhone?: SortOrder
    contactNameForMessage?: SortOrder
    profession?: SortOrder
    enrolledGovernmentProgram?: SortOrder
    NIS?: SortOrder
    incomeSource?: SortOrder
    livesAlone?: SortOrder
    intendsToGetScholarship?: SortOrder
    attendedPublicHighSchool?: SortOrder
    benefitedFromCebasScholarship_basic?: SortOrder
    yearsBenefitedFromCebas_basic?: SortOrder
    scholarshipType_basic?: SortOrder
    institutionName_basic?: SortOrder
    institutionCNPJ_basic?: SortOrder
    benefitedFromCebasScholarship_professional?: SortOrder
    lastYearBenefitedFromCebas_professional?: SortOrder
    scholarshipType_professional?: SortOrder
    institutionName_professional?: SortOrder
    institutionCNPJ_professional?: SortOrder
    nameOfScholarshipCourse_professional?: SortOrder
    candidate_id?: SortOrder
    responsible_id?: SortOrder
    application_id?: SortOrder
  }

  export type IdentityDetailsMaxOrderByAggregateInput = {
    id?: SortOrder
    fullName?: SortOrder
    socialName?: SortOrder
    main_id?: SortOrder
    birthDate?: SortOrder
    gender?: SortOrder
    nationality?: SortOrder
    natural_city?: SortOrder
    natural_UF?: SortOrder
    CPF?: SortOrder
    RG?: SortOrder
    rgIssuingAuthority?: SortOrder
    rgIssuingState?: SortOrder
    documentType?: SortOrder
    CadUnico?: SortOrder
    hasSevereDeseaseOrUsesMedication?: SortOrder
    hasBankAccount?: SortOrder
    documentNumber?: SortOrder
    documentValidity?: SortOrder
    maritalStatus?: SortOrder
    skinColor?: SortOrder
    religion?: SortOrder
    educationLevel?: SortOrder
    specialNeeds?: SortOrder
    address?: SortOrder
    addressNumber?: SortOrder
    complement?: SortOrder
    neighborhood?: SortOrder
    city?: SortOrder
    UF?: SortOrder
    CEP?: SortOrder
    specialNeedsDescription?: SortOrder
    specialNeedsType?: SortOrder
    hasMedicalReport?: SortOrder
    email?: SortOrder
    landlinePhone?: SortOrder
    workPhone?: SortOrder
    contactNameForMessage?: SortOrder
    profession?: SortOrder
    enrolledGovernmentProgram?: SortOrder
    NIS?: SortOrder
    livesAlone?: SortOrder
    intendsToGetScholarship?: SortOrder
    attendedPublicHighSchool?: SortOrder
    benefitedFromCebasScholarship_basic?: SortOrder
    scholarshipType_basic?: SortOrder
    institutionName_basic?: SortOrder
    institutionCNPJ_basic?: SortOrder
    benefitedFromCebasScholarship_professional?: SortOrder
    lastYearBenefitedFromCebas_professional?: SortOrder
    scholarshipType_professional?: SortOrder
    institutionName_professional?: SortOrder
    institutionCNPJ_professional?: SortOrder
    nameOfScholarshipCourse_professional?: SortOrder
    candidate_id?: SortOrder
    responsible_id?: SortOrder
    application_id?: SortOrder
  }

  export type IdentityDetailsMinOrderByAggregateInput = {
    id?: SortOrder
    fullName?: SortOrder
    socialName?: SortOrder
    main_id?: SortOrder
    birthDate?: SortOrder
    gender?: SortOrder
    nationality?: SortOrder
    natural_city?: SortOrder
    natural_UF?: SortOrder
    CPF?: SortOrder
    RG?: SortOrder
    rgIssuingAuthority?: SortOrder
    rgIssuingState?: SortOrder
    documentType?: SortOrder
    CadUnico?: SortOrder
    hasSevereDeseaseOrUsesMedication?: SortOrder
    hasBankAccount?: SortOrder
    documentNumber?: SortOrder
    documentValidity?: SortOrder
    maritalStatus?: SortOrder
    skinColor?: SortOrder
    religion?: SortOrder
    educationLevel?: SortOrder
    specialNeeds?: SortOrder
    address?: SortOrder
    addressNumber?: SortOrder
    complement?: SortOrder
    neighborhood?: SortOrder
    city?: SortOrder
    UF?: SortOrder
    CEP?: SortOrder
    specialNeedsDescription?: SortOrder
    specialNeedsType?: SortOrder
    hasMedicalReport?: SortOrder
    email?: SortOrder
    landlinePhone?: SortOrder
    workPhone?: SortOrder
    contactNameForMessage?: SortOrder
    profession?: SortOrder
    enrolledGovernmentProgram?: SortOrder
    NIS?: SortOrder
    livesAlone?: SortOrder
    intendsToGetScholarship?: SortOrder
    attendedPublicHighSchool?: SortOrder
    benefitedFromCebasScholarship_basic?: SortOrder
    scholarshipType_basic?: SortOrder
    institutionName_basic?: SortOrder
    institutionCNPJ_basic?: SortOrder
    benefitedFromCebasScholarship_professional?: SortOrder
    lastYearBenefitedFromCebas_professional?: SortOrder
    scholarshipType_professional?: SortOrder
    institutionName_professional?: SortOrder
    institutionCNPJ_professional?: SortOrder
    nameOfScholarshipCourse_professional?: SortOrder
    candidate_id?: SortOrder
    responsible_id?: SortOrder
    application_id?: SortOrder
  }

  export type EnumGENDERWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.GENDER | EnumGENDERFieldRefInput<$PrismaModel>
    in?: $Enums.GENDER[] | ListEnumGENDERFieldRefInput<$PrismaModel>
    notIn?: $Enums.GENDER[] | ListEnumGENDERFieldRefInput<$PrismaModel>
    not?: NestedEnumGENDERWithAggregatesFilter<$PrismaModel> | $Enums.GENDER
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumGENDERFilter<$PrismaModel>
    _max?: NestedEnumGENDERFilter<$PrismaModel>
  }

  export type EnumCOUNTRYWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.COUNTRY | EnumCOUNTRYFieldRefInput<$PrismaModel>
    in?: $Enums.COUNTRY[] | ListEnumCOUNTRYFieldRefInput<$PrismaModel>
    notIn?: $Enums.COUNTRY[] | ListEnumCOUNTRYFieldRefInput<$PrismaModel>
    not?: NestedEnumCOUNTRYWithAggregatesFilter<$PrismaModel> | $Enums.COUNTRY
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCOUNTRYFilter<$PrismaModel>
    _max?: NestedEnumCOUNTRYFilter<$PrismaModel>
  }

  export type EnumDOCUMENT_TYPENullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DOCUMENT_TYPE | EnumDOCUMENT_TYPEFieldRefInput<$PrismaModel> | null
    in?: $Enums.DOCUMENT_TYPE[] | ListEnumDOCUMENT_TYPEFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.DOCUMENT_TYPE[] | ListEnumDOCUMENT_TYPEFieldRefInput<$PrismaModel> | null
    not?: NestedEnumDOCUMENT_TYPENullableWithAggregatesFilter<$PrismaModel> | $Enums.DOCUMENT_TYPE | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumDOCUMENT_TYPENullableFilter<$PrismaModel>
    _max?: NestedEnumDOCUMENT_TYPENullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type EnumMARITAL_STATUSWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MARITAL_STATUS | EnumMARITAL_STATUSFieldRefInput<$PrismaModel>
    in?: $Enums.MARITAL_STATUS[] | ListEnumMARITAL_STATUSFieldRefInput<$PrismaModel>
    notIn?: $Enums.MARITAL_STATUS[] | ListEnumMARITAL_STATUSFieldRefInput<$PrismaModel>
    not?: NestedEnumMARITAL_STATUSWithAggregatesFilter<$PrismaModel> | $Enums.MARITAL_STATUS
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMARITAL_STATUSFilter<$PrismaModel>
    _max?: NestedEnumMARITAL_STATUSFilter<$PrismaModel>
  }

  export type EnumSkinColorWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SkinColor | EnumSkinColorFieldRefInput<$PrismaModel>
    in?: $Enums.SkinColor[] | ListEnumSkinColorFieldRefInput<$PrismaModel>
    notIn?: $Enums.SkinColor[] | ListEnumSkinColorFieldRefInput<$PrismaModel>
    not?: NestedEnumSkinColorWithAggregatesFilter<$PrismaModel> | $Enums.SkinColor
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSkinColorFilter<$PrismaModel>
    _max?: NestedEnumSkinColorFilter<$PrismaModel>
  }

  export type EnumRELIGIONWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RELIGION | EnumRELIGIONFieldRefInput<$PrismaModel>
    in?: $Enums.RELIGION[] | ListEnumRELIGIONFieldRefInput<$PrismaModel>
    notIn?: $Enums.RELIGION[] | ListEnumRELIGIONFieldRefInput<$PrismaModel>
    not?: NestedEnumRELIGIONWithAggregatesFilter<$PrismaModel> | $Enums.RELIGION
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRELIGIONFilter<$PrismaModel>
    _max?: NestedEnumRELIGIONFilter<$PrismaModel>
  }

  export type EnumSCHOLARSHIPWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SCHOLARSHIP | EnumSCHOLARSHIPFieldRefInput<$PrismaModel>
    in?: $Enums.SCHOLARSHIP[] | ListEnumSCHOLARSHIPFieldRefInput<$PrismaModel>
    notIn?: $Enums.SCHOLARSHIP[] | ListEnumSCHOLARSHIPFieldRefInput<$PrismaModel>
    not?: NestedEnumSCHOLARSHIPWithAggregatesFilter<$PrismaModel> | $Enums.SCHOLARSHIP
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSCHOLARSHIPFilter<$PrismaModel>
    _max?: NestedEnumSCHOLARSHIPFilter<$PrismaModel>
  }

  export type EnumScholarshipTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ScholarshipType | EnumScholarshipTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.ScholarshipType[] | ListEnumScholarshipTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.ScholarshipType[] | ListEnumScholarshipTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumScholarshipTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.ScholarshipType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumScholarshipTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumScholarshipTypeNullableFilter<$PrismaModel>
  }

  export type EnumRelationshipFilter<$PrismaModel = never> = {
    equals?: $Enums.Relationship | EnumRelationshipFieldRefInput<$PrismaModel>
    in?: $Enums.Relationship[] | ListEnumRelationshipFieldRefInput<$PrismaModel>
    notIn?: $Enums.Relationship[] | ListEnumRelationshipFieldRefInput<$PrismaModel>
    not?: NestedEnumRelationshipFilter<$PrismaModel> | $Enums.Relationship
  }

  export type FamilyMemberToVehicleListRelationFilter = {
    every?: FamilyMemberToVehicleWhereInput
    some?: FamilyMemberToVehicleWhereInput
    none?: FamilyMemberToVehicleWhereInput
  }

  export type FamilyMemberToVehicleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FamilyMemberApplication_idMain_idCompoundUniqueInput = {
    application_id: string
    main_id: string
  }

  export type FamilyMemberCountOrderByAggregateInput = {
    id?: SortOrder
    relationship?: SortOrder
    otherRelationship?: SortOrder
    main_id?: SortOrder
    fullName?: SortOrder
    socialName?: SortOrder
    birthDate?: SortOrder
    gender?: SortOrder
    nationality?: SortOrder
    natural_city?: SortOrder
    natural_UF?: SortOrder
    CPF?: SortOrder
    RG?: SortOrder
    rgIssuingAuthority?: SortOrder
    rgIssuingState?: SortOrder
    documentType?: SortOrder
    documentNumber?: SortOrder
    documentValidity?: SortOrder
    numberOfBirthRegister?: SortOrder
    bookOfBirthRegister?: SortOrder
    pageOfBirthRegister?: SortOrder
    maritalStatus?: SortOrder
    skinColor?: SortOrder
    religion?: SortOrder
    educationLevel?: SortOrder
    specialNeeds?: SortOrder
    specialNeedsDescription?: SortOrder
    specialNeedsType?: SortOrder
    hasMedicalReport?: SortOrder
    landlinePhone?: SortOrder
    workPhone?: SortOrder
    contactNameForMessage?: SortOrder
    email?: SortOrder
    profession?: SortOrder
    enrolledGovernmentProgram?: SortOrder
    NIS?: SortOrder
    educationPlace?: SortOrder
    institutionName?: SortOrder
    coursingEducationLevel?: SortOrder
    cycleOfEducation?: SortOrder
    turnOfEducation?: SortOrder
    hasScholarship?: SortOrder
    percentageOfScholarship?: SortOrder
    monthlyAmount?: SortOrder
    candidate_id?: SortOrder
    attendedPublicHighSchool?: SortOrder
    benefitedFromCebasScholarship_basic?: SortOrder
    benefitedFromCebasScholarship_professional?: SortOrder
    CadUnico?: SortOrder
    hasSevereDeseaseOrUsesMedication?: SortOrder
    hasBankAccount?: SortOrder
    incomeSource?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
  }

  export type FamilyMemberMaxOrderByAggregateInput = {
    id?: SortOrder
    relationship?: SortOrder
    otherRelationship?: SortOrder
    main_id?: SortOrder
    fullName?: SortOrder
    socialName?: SortOrder
    birthDate?: SortOrder
    gender?: SortOrder
    nationality?: SortOrder
    natural_city?: SortOrder
    natural_UF?: SortOrder
    CPF?: SortOrder
    RG?: SortOrder
    rgIssuingAuthority?: SortOrder
    rgIssuingState?: SortOrder
    documentType?: SortOrder
    documentNumber?: SortOrder
    documentValidity?: SortOrder
    numberOfBirthRegister?: SortOrder
    bookOfBirthRegister?: SortOrder
    pageOfBirthRegister?: SortOrder
    maritalStatus?: SortOrder
    skinColor?: SortOrder
    religion?: SortOrder
    educationLevel?: SortOrder
    specialNeeds?: SortOrder
    specialNeedsDescription?: SortOrder
    specialNeedsType?: SortOrder
    hasMedicalReport?: SortOrder
    landlinePhone?: SortOrder
    workPhone?: SortOrder
    contactNameForMessage?: SortOrder
    email?: SortOrder
    profession?: SortOrder
    enrolledGovernmentProgram?: SortOrder
    NIS?: SortOrder
    educationPlace?: SortOrder
    institutionName?: SortOrder
    coursingEducationLevel?: SortOrder
    cycleOfEducation?: SortOrder
    turnOfEducation?: SortOrder
    hasScholarship?: SortOrder
    percentageOfScholarship?: SortOrder
    monthlyAmount?: SortOrder
    candidate_id?: SortOrder
    attendedPublicHighSchool?: SortOrder
    benefitedFromCebasScholarship_basic?: SortOrder
    benefitedFromCebasScholarship_professional?: SortOrder
    CadUnico?: SortOrder
    hasSevereDeseaseOrUsesMedication?: SortOrder
    hasBankAccount?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
  }

  export type FamilyMemberMinOrderByAggregateInput = {
    id?: SortOrder
    relationship?: SortOrder
    otherRelationship?: SortOrder
    main_id?: SortOrder
    fullName?: SortOrder
    socialName?: SortOrder
    birthDate?: SortOrder
    gender?: SortOrder
    nationality?: SortOrder
    natural_city?: SortOrder
    natural_UF?: SortOrder
    CPF?: SortOrder
    RG?: SortOrder
    rgIssuingAuthority?: SortOrder
    rgIssuingState?: SortOrder
    documentType?: SortOrder
    documentNumber?: SortOrder
    documentValidity?: SortOrder
    numberOfBirthRegister?: SortOrder
    bookOfBirthRegister?: SortOrder
    pageOfBirthRegister?: SortOrder
    maritalStatus?: SortOrder
    skinColor?: SortOrder
    religion?: SortOrder
    educationLevel?: SortOrder
    specialNeeds?: SortOrder
    specialNeedsDescription?: SortOrder
    specialNeedsType?: SortOrder
    hasMedicalReport?: SortOrder
    landlinePhone?: SortOrder
    workPhone?: SortOrder
    contactNameForMessage?: SortOrder
    email?: SortOrder
    profession?: SortOrder
    enrolledGovernmentProgram?: SortOrder
    NIS?: SortOrder
    educationPlace?: SortOrder
    institutionName?: SortOrder
    coursingEducationLevel?: SortOrder
    cycleOfEducation?: SortOrder
    turnOfEducation?: SortOrder
    hasScholarship?: SortOrder
    percentageOfScholarship?: SortOrder
    monthlyAmount?: SortOrder
    candidate_id?: SortOrder
    attendedPublicHighSchool?: SortOrder
    benefitedFromCebasScholarship_basic?: SortOrder
    benefitedFromCebasScholarship_professional?: SortOrder
    CadUnico?: SortOrder
    hasSevereDeseaseOrUsesMedication?: SortOrder
    hasBankAccount?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
  }

  export type EnumRelationshipWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Relationship | EnumRelationshipFieldRefInput<$PrismaModel>
    in?: $Enums.Relationship[] | ListEnumRelationshipFieldRefInput<$PrismaModel>
    notIn?: $Enums.Relationship[] | ListEnumRelationshipFieldRefInput<$PrismaModel>
    not?: NestedEnumRelationshipWithAggregatesFilter<$PrismaModel> | $Enums.Relationship
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRelationshipFilter<$PrismaModel>
    _max?: NestedEnumRelationshipFilter<$PrismaModel>
  }

  export type EnumPropertyStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PropertyStatus | EnumPropertyStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PropertyStatus[] | ListEnumPropertyStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PropertyStatus[] | ListEnumPropertyStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPropertyStatusFilter<$PrismaModel> | $Enums.PropertyStatus
  }

  export type EnumContractTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.ContractType | EnumContractTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.ContractType[] | ListEnumContractTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.ContractType[] | ListEnumContractTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumContractTypeNullableFilter<$PrismaModel> | $Enums.ContractType | null
  }

  export type EnumTimeLivingInPropertyFilter<$PrismaModel = never> = {
    equals?: $Enums.TimeLivingInProperty | EnumTimeLivingInPropertyFieldRefInput<$PrismaModel>
    in?: $Enums.TimeLivingInProperty[] | ListEnumTimeLivingInPropertyFieldRefInput<$PrismaModel>
    notIn?: $Enums.TimeLivingInProperty[] | ListEnumTimeLivingInPropertyFieldRefInput<$PrismaModel>
    not?: NestedEnumTimeLivingInPropertyFilter<$PrismaModel> | $Enums.TimeLivingInProperty
  }

  export type EnumDomicileTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.DomicileType | EnumDomicileTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DomicileType[] | ListEnumDomicileTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DomicileType[] | ListEnumDomicileTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDomicileTypeFilter<$PrismaModel> | $Enums.DomicileType
  }

  export type EnumNumberOfRoomsFilter<$PrismaModel = never> = {
    equals?: $Enums.NumberOfRooms | EnumNumberOfRoomsFieldRefInput<$PrismaModel>
    in?: $Enums.NumberOfRooms[] | ListEnumNumberOfRoomsFieldRefInput<$PrismaModel>
    notIn?: $Enums.NumberOfRooms[] | ListEnumNumberOfRoomsFieldRefInput<$PrismaModel>
    not?: NestedEnumNumberOfRoomsFilter<$PrismaModel> | $Enums.NumberOfRooms
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type HousingApplication_idMain_idCompoundUniqueInput = {
    application_id: string
    main_id: string
  }

  export type HousingCountOrderByAggregateInput = {
    id?: SortOrder
    propertyStatus?: SortOrder
    contractType?: SortOrder
    main_id?: SortOrder
    grantorName?: SortOrder
    timeLivingInProperty?: SortOrder
    domicileType?: SortOrder
    numberOfRooms?: SortOrder
    numberOfBedrooms?: SortOrder
    candidate_id?: SortOrder
    responsible_id?: SortOrder
    application_id?: SortOrder
  }

  export type HousingAvgOrderByAggregateInput = {
    numberOfBedrooms?: SortOrder
  }

  export type HousingMaxOrderByAggregateInput = {
    id?: SortOrder
    propertyStatus?: SortOrder
    contractType?: SortOrder
    main_id?: SortOrder
    grantorName?: SortOrder
    timeLivingInProperty?: SortOrder
    domicileType?: SortOrder
    numberOfRooms?: SortOrder
    numberOfBedrooms?: SortOrder
    candidate_id?: SortOrder
    responsible_id?: SortOrder
    application_id?: SortOrder
  }

  export type HousingMinOrderByAggregateInput = {
    id?: SortOrder
    propertyStatus?: SortOrder
    contractType?: SortOrder
    main_id?: SortOrder
    grantorName?: SortOrder
    timeLivingInProperty?: SortOrder
    domicileType?: SortOrder
    numberOfRooms?: SortOrder
    numberOfBedrooms?: SortOrder
    candidate_id?: SortOrder
    responsible_id?: SortOrder
    application_id?: SortOrder
  }

  export type HousingSumOrderByAggregateInput = {
    numberOfBedrooms?: SortOrder
  }

  export type EnumPropertyStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PropertyStatus | EnumPropertyStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PropertyStatus[] | ListEnumPropertyStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PropertyStatus[] | ListEnumPropertyStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPropertyStatusWithAggregatesFilter<$PrismaModel> | $Enums.PropertyStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPropertyStatusFilter<$PrismaModel>
    _max?: NestedEnumPropertyStatusFilter<$PrismaModel>
  }

  export type EnumContractTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ContractType | EnumContractTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.ContractType[] | ListEnumContractTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.ContractType[] | ListEnumContractTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumContractTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.ContractType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumContractTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumContractTypeNullableFilter<$PrismaModel>
  }

  export type EnumTimeLivingInPropertyWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TimeLivingInProperty | EnumTimeLivingInPropertyFieldRefInput<$PrismaModel>
    in?: $Enums.TimeLivingInProperty[] | ListEnumTimeLivingInPropertyFieldRefInput<$PrismaModel>
    notIn?: $Enums.TimeLivingInProperty[] | ListEnumTimeLivingInPropertyFieldRefInput<$PrismaModel>
    not?: NestedEnumTimeLivingInPropertyWithAggregatesFilter<$PrismaModel> | $Enums.TimeLivingInProperty
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTimeLivingInPropertyFilter<$PrismaModel>
    _max?: NestedEnumTimeLivingInPropertyFilter<$PrismaModel>
  }

  export type EnumDomicileTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DomicileType | EnumDomicileTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DomicileType[] | ListEnumDomicileTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DomicileType[] | ListEnumDomicileTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDomicileTypeWithAggregatesFilter<$PrismaModel> | $Enums.DomicileType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDomicileTypeFilter<$PrismaModel>
    _max?: NestedEnumDomicileTypeFilter<$PrismaModel>
  }

  export type EnumNumberOfRoomsWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NumberOfRooms | EnumNumberOfRoomsFieldRefInput<$PrismaModel>
    in?: $Enums.NumberOfRooms[] | ListEnumNumberOfRoomsFieldRefInput<$PrismaModel>
    notIn?: $Enums.NumberOfRooms[] | ListEnumNumberOfRoomsFieldRefInput<$PrismaModel>
    not?: NestedEnumNumberOfRoomsWithAggregatesFilter<$PrismaModel> | $Enums.NumberOfRooms
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNumberOfRoomsFilter<$PrismaModel>
    _max?: NestedEnumNumberOfRoomsFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type EnumVehicleTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.VehicleType | EnumVehicleTypeFieldRefInput<$PrismaModel>
    in?: $Enums.VehicleType[] | ListEnumVehicleTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.VehicleType[] | ListEnumVehicleTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumVehicleTypeFilter<$PrismaModel> | $Enums.VehicleType
  }

  export type EnumVehicleSituationFilter<$PrismaModel = never> = {
    equals?: $Enums.VehicleSituation | EnumVehicleSituationFieldRefInput<$PrismaModel>
    in?: $Enums.VehicleSituation[] | ListEnumVehicleSituationFieldRefInput<$PrismaModel>
    notIn?: $Enums.VehicleSituation[] | ListEnumVehicleSituationFieldRefInput<$PrismaModel>
    not?: NestedEnumVehicleSituationFilter<$PrismaModel> | $Enums.VehicleSituation
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type EnumVehicleUsageFilter<$PrismaModel = never> = {
    equals?: $Enums.VehicleUsage | EnumVehicleUsageFieldRefInput<$PrismaModel>
    in?: $Enums.VehicleUsage[] | ListEnumVehicleUsageFieldRefInput<$PrismaModel>
    notIn?: $Enums.VehicleUsage[] | ListEnumVehicleUsageFieldRefInput<$PrismaModel>
    not?: NestedEnumVehicleUsageFilter<$PrismaModel> | $Enums.VehicleUsage
  }

  export type VehicleApplication_idMain_idCompoundUniqueInput = {
    application_id: string
    main_id: string
  }

  export type VehicleCountOrderByAggregateInput = {
    id?: SortOrder
    vehicleType?: SortOrder
    modelAndBrand?: SortOrder
    main_id?: SortOrder
    manufacturingYear?: SortOrder
    situation?: SortOrder
    financedMonths?: SortOrder
    monthsToPayOff?: SortOrder
    hasInsurance?: SortOrder
    insuranceValue?: SortOrder
    usage?: SortOrder
    candidate_id?: SortOrder
    owners_id?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
  }

  export type VehicleAvgOrderByAggregateInput = {
    manufacturingYear?: SortOrder
    financedMonths?: SortOrder
    monthsToPayOff?: SortOrder
    insuranceValue?: SortOrder
  }

  export type VehicleMaxOrderByAggregateInput = {
    id?: SortOrder
    vehicleType?: SortOrder
    modelAndBrand?: SortOrder
    main_id?: SortOrder
    manufacturingYear?: SortOrder
    situation?: SortOrder
    financedMonths?: SortOrder
    monthsToPayOff?: SortOrder
    hasInsurance?: SortOrder
    insuranceValue?: SortOrder
    usage?: SortOrder
    candidate_id?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
  }

  export type VehicleMinOrderByAggregateInput = {
    id?: SortOrder
    vehicleType?: SortOrder
    modelAndBrand?: SortOrder
    main_id?: SortOrder
    manufacturingYear?: SortOrder
    situation?: SortOrder
    financedMonths?: SortOrder
    monthsToPayOff?: SortOrder
    hasInsurance?: SortOrder
    insuranceValue?: SortOrder
    usage?: SortOrder
    candidate_id?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
  }

  export type VehicleSumOrderByAggregateInput = {
    manufacturingYear?: SortOrder
    financedMonths?: SortOrder
    monthsToPayOff?: SortOrder
    insuranceValue?: SortOrder
  }

  export type EnumVehicleTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.VehicleType | EnumVehicleTypeFieldRefInput<$PrismaModel>
    in?: $Enums.VehicleType[] | ListEnumVehicleTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.VehicleType[] | ListEnumVehicleTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumVehicleTypeWithAggregatesFilter<$PrismaModel> | $Enums.VehicleType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumVehicleTypeFilter<$PrismaModel>
    _max?: NestedEnumVehicleTypeFilter<$PrismaModel>
  }

  export type EnumVehicleSituationWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.VehicleSituation | EnumVehicleSituationFieldRefInput<$PrismaModel>
    in?: $Enums.VehicleSituation[] | ListEnumVehicleSituationFieldRefInput<$PrismaModel>
    notIn?: $Enums.VehicleSituation[] | ListEnumVehicleSituationFieldRefInput<$PrismaModel>
    not?: NestedEnumVehicleSituationWithAggregatesFilter<$PrismaModel> | $Enums.VehicleSituation
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumVehicleSituationFilter<$PrismaModel>
    _max?: NestedEnumVehicleSituationFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type EnumVehicleUsageWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.VehicleUsage | EnumVehicleUsageFieldRefInput<$PrismaModel>
    in?: $Enums.VehicleUsage[] | ListEnumVehicleUsageFieldRefInput<$PrismaModel>
    notIn?: $Enums.VehicleUsage[] | ListEnumVehicleUsageFieldRefInput<$PrismaModel>
    not?: NestedEnumVehicleUsageWithAggregatesFilter<$PrismaModel> | $Enums.VehicleUsage
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumVehicleUsageFilter<$PrismaModel>
    _max?: NestedEnumVehicleUsageFilter<$PrismaModel>
  }

  export type EnumEmploymentTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.EmploymentType | EnumEmploymentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.EmploymentType[] | ListEnumEmploymentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.EmploymentType[] | ListEnumEmploymentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumEmploymentTypeFilter<$PrismaModel> | $Enums.EmploymentType
  }

  export type FamilyMemberNullableRelationFilter = {
    is?: FamilyMemberWhereInput | null
    isNot?: FamilyMemberWhereInput | null
  }

  export type FamilyMemberIncomeApplication_idMain_idCompoundUniqueInput = {
    application_id: string
    main_id: string
  }

  export type FamilyMemberIncomeCountOrderByAggregateInput = {
    id?: SortOrder
    employmentType?: SortOrder
    averageIncome?: SortOrder
    main_id?: SortOrder
    admissionDate?: SortOrder
    position?: SortOrder
    payingSource?: SortOrder
    payingSourcePhone?: SortOrder
    startDate?: SortOrder
    CNPJ?: SortOrder
    financialAssistantCPF?: SortOrder
    socialReason?: SortOrder
    fantasyName?: SortOrder
    CPNJ?: SortOrder
    receivesUnemployment?: SortOrder
    parcels?: SortOrder
    firstParcelDate?: SortOrder
    parcelValue?: SortOrder
    familyMember_id?: SortOrder
    quantity?: SortOrder
    candidate_id?: SortOrder
    application_id?: SortOrder
    legalResponsibleId?: SortOrder
  }

  export type FamilyMemberIncomeAvgOrderByAggregateInput = {
    parcels?: SortOrder
    parcelValue?: SortOrder
    quantity?: SortOrder
  }

  export type FamilyMemberIncomeMaxOrderByAggregateInput = {
    id?: SortOrder
    employmentType?: SortOrder
    averageIncome?: SortOrder
    main_id?: SortOrder
    admissionDate?: SortOrder
    position?: SortOrder
    payingSource?: SortOrder
    payingSourcePhone?: SortOrder
    startDate?: SortOrder
    CNPJ?: SortOrder
    financialAssistantCPF?: SortOrder
    socialReason?: SortOrder
    fantasyName?: SortOrder
    CPNJ?: SortOrder
    receivesUnemployment?: SortOrder
    parcels?: SortOrder
    firstParcelDate?: SortOrder
    parcelValue?: SortOrder
    familyMember_id?: SortOrder
    quantity?: SortOrder
    candidate_id?: SortOrder
    application_id?: SortOrder
    legalResponsibleId?: SortOrder
  }

  export type FamilyMemberIncomeMinOrderByAggregateInput = {
    id?: SortOrder
    employmentType?: SortOrder
    averageIncome?: SortOrder
    main_id?: SortOrder
    admissionDate?: SortOrder
    position?: SortOrder
    payingSource?: SortOrder
    payingSourcePhone?: SortOrder
    startDate?: SortOrder
    CNPJ?: SortOrder
    financialAssistantCPF?: SortOrder
    socialReason?: SortOrder
    fantasyName?: SortOrder
    CPNJ?: SortOrder
    receivesUnemployment?: SortOrder
    parcels?: SortOrder
    firstParcelDate?: SortOrder
    parcelValue?: SortOrder
    familyMember_id?: SortOrder
    quantity?: SortOrder
    candidate_id?: SortOrder
    application_id?: SortOrder
    legalResponsibleId?: SortOrder
  }

  export type FamilyMemberIncomeSumOrderByAggregateInput = {
    parcels?: SortOrder
    parcelValue?: SortOrder
    quantity?: SortOrder
  }

  export type EnumEmploymentTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EmploymentType | EnumEmploymentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.EmploymentType[] | ListEnumEmploymentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.EmploymentType[] | ListEnumEmploymentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumEmploymentTypeWithAggregatesFilter<$PrismaModel> | $Enums.EmploymentType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEmploymentTypeFilter<$PrismaModel>
    _max?: NestedEnumEmploymentTypeFilter<$PrismaModel>
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type EnumIncomeSourceNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.IncomeSource | EnumIncomeSourceFieldRefInput<$PrismaModel> | null
    in?: $Enums.IncomeSource[] | ListEnumIncomeSourceFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.IncomeSource[] | ListEnumIncomeSourceFieldRefInput<$PrismaModel> | null
    not?: NestedEnumIncomeSourceNullableFilter<$PrismaModel> | $Enums.IncomeSource | null
  }

  export type MonthlyIncomeApplication_idMain_idCompoundUniqueInput = {
    application_id: string
    main_id: string
  }

  export type MonthlyIncomeCountOrderByAggregateInput = {
    id?: SortOrder
    date?: SortOrder
    main_id?: SortOrder
    grossAmount?: SortOrder
    liquidAmount?: SortOrder
    proLabore?: SortOrder
    dividends?: SortOrder
    total?: SortOrder
    deductionValue?: SortOrder
    publicPension?: SortOrder
    incomeTax?: SortOrder
    otherDeductions?: SortOrder
    foodAllowanceValue?: SortOrder
    transportAllowanceValue?: SortOrder
    expenseReimbursementValue?: SortOrder
    advancePaymentValue?: SortOrder
    reversalValue?: SortOrder
    compensationValue?: SortOrder
    judicialPensionValue?: SortOrder
    familyMember_id?: SortOrder
    candidate_id?: SortOrder
    incomeSource?: SortOrder
    application_id?: SortOrder
    legalResponsibleId?: SortOrder
  }

  export type MonthlyIncomeAvgOrderByAggregateInput = {
    grossAmount?: SortOrder
    liquidAmount?: SortOrder
    proLabore?: SortOrder
    dividends?: SortOrder
    total?: SortOrder
    deductionValue?: SortOrder
    publicPension?: SortOrder
    incomeTax?: SortOrder
    otherDeductions?: SortOrder
    foodAllowanceValue?: SortOrder
    transportAllowanceValue?: SortOrder
    expenseReimbursementValue?: SortOrder
    advancePaymentValue?: SortOrder
    reversalValue?: SortOrder
    compensationValue?: SortOrder
    judicialPensionValue?: SortOrder
  }

  export type MonthlyIncomeMaxOrderByAggregateInput = {
    id?: SortOrder
    date?: SortOrder
    main_id?: SortOrder
    grossAmount?: SortOrder
    liquidAmount?: SortOrder
    proLabore?: SortOrder
    dividends?: SortOrder
    total?: SortOrder
    deductionValue?: SortOrder
    publicPension?: SortOrder
    incomeTax?: SortOrder
    otherDeductions?: SortOrder
    foodAllowanceValue?: SortOrder
    transportAllowanceValue?: SortOrder
    expenseReimbursementValue?: SortOrder
    advancePaymentValue?: SortOrder
    reversalValue?: SortOrder
    compensationValue?: SortOrder
    judicialPensionValue?: SortOrder
    familyMember_id?: SortOrder
    candidate_id?: SortOrder
    incomeSource?: SortOrder
    application_id?: SortOrder
    legalResponsibleId?: SortOrder
  }

  export type MonthlyIncomeMinOrderByAggregateInput = {
    id?: SortOrder
    date?: SortOrder
    main_id?: SortOrder
    grossAmount?: SortOrder
    liquidAmount?: SortOrder
    proLabore?: SortOrder
    dividends?: SortOrder
    total?: SortOrder
    deductionValue?: SortOrder
    publicPension?: SortOrder
    incomeTax?: SortOrder
    otherDeductions?: SortOrder
    foodAllowanceValue?: SortOrder
    transportAllowanceValue?: SortOrder
    expenseReimbursementValue?: SortOrder
    advancePaymentValue?: SortOrder
    reversalValue?: SortOrder
    compensationValue?: SortOrder
    judicialPensionValue?: SortOrder
    familyMember_id?: SortOrder
    candidate_id?: SortOrder
    incomeSource?: SortOrder
    application_id?: SortOrder
    legalResponsibleId?: SortOrder
  }

  export type MonthlyIncomeSumOrderByAggregateInput = {
    grossAmount?: SortOrder
    liquidAmount?: SortOrder
    proLabore?: SortOrder
    dividends?: SortOrder
    total?: SortOrder
    deductionValue?: SortOrder
    publicPension?: SortOrder
    incomeTax?: SortOrder
    otherDeductions?: SortOrder
    foodAllowanceValue?: SortOrder
    transportAllowanceValue?: SortOrder
    expenseReimbursementValue?: SortOrder
    advancePaymentValue?: SortOrder
    reversalValue?: SortOrder
    compensationValue?: SortOrder
    judicialPensionValue?: SortOrder
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type EnumIncomeSourceNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.IncomeSource | EnumIncomeSourceFieldRefInput<$PrismaModel> | null
    in?: $Enums.IncomeSource[] | ListEnumIncomeSourceFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.IncomeSource[] | ListEnumIncomeSourceFieldRefInput<$PrismaModel> | null
    not?: NestedEnumIncomeSourceNullableWithAggregatesFilter<$PrismaModel> | $Enums.IncomeSource | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumIncomeSourceNullableFilter<$PrismaModel>
    _max?: NestedEnumIncomeSourceNullableFilter<$PrismaModel>
  }

  export type EnumAccountTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.AccountType | EnumAccountTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AccountType[] | ListEnumAccountTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AccountType[] | ListEnumAccountTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAccountTypeFilter<$PrismaModel> | $Enums.AccountType
  }

  export type BankAccountCountOrderByAggregateInput = {
    id?: SortOrder
    main_id?: SortOrder
    bankName?: SortOrder
    agencyNumber?: SortOrder
    accountNumber?: SortOrder
    accountType?: SortOrder
    familyMember_id?: SortOrder
    candidate_id?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
  }

  export type BankAccountMaxOrderByAggregateInput = {
    id?: SortOrder
    main_id?: SortOrder
    bankName?: SortOrder
    agencyNumber?: SortOrder
    accountNumber?: SortOrder
    accountType?: SortOrder
    familyMember_id?: SortOrder
    candidate_id?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
  }

  export type BankAccountMinOrderByAggregateInput = {
    id?: SortOrder
    main_id?: SortOrder
    bankName?: SortOrder
    agencyNumber?: SortOrder
    accountNumber?: SortOrder
    accountType?: SortOrder
    familyMember_id?: SortOrder
    candidate_id?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
  }

  export type EnumAccountTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AccountType | EnumAccountTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AccountType[] | ListEnumAccountTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AccountType[] | ListEnumAccountTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAccountTypeWithAggregatesFilter<$PrismaModel> | $Enums.AccountType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAccountTypeFilter<$PrismaModel>
    _max?: NestedEnumAccountTypeFilter<$PrismaModel>
  }

  export type FloatNullableListFilter<$PrismaModel = never> = {
    equals?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    has?: number | FloatFieldRefInput<$PrismaModel> | null
    hasEvery?: number[] | ListFloatFieldRefInput<$PrismaModel>
    hasSome?: number[] | ListFloatFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type ExpenseApplication_idMain_idCompoundUniqueInput = {
    application_id: string
    main_id: string
  }

  export type ExpenseCountOrderByAggregateInput = {
    id?: SortOrder
    main_id?: SortOrder
    date?: SortOrder
    waterSewage?: SortOrder
    electricity?: SortOrder
    landlinePhone?: SortOrder
    mobilePhone?: SortOrder
    food?: SortOrder
    rent?: SortOrder
    garageRent?: SortOrder
    condominium?: SortOrder
    cableTV?: SortOrder
    streamingServices?: SortOrder
    fuel?: SortOrder
    annualIPVA?: SortOrder
    annualIPTU?: SortOrder
    annualITR?: SortOrder
    annualIR?: SortOrder
    INSS?: SortOrder
    publicTransport?: SortOrder
    schoolTransport?: SortOrder
    internet?: SortOrder
    courses?: SortOrder
    healthPlan?: SortOrder
    dentalPlan?: SortOrder
    medicationExpenses?: SortOrder
    totalExpense?: SortOrder
    candidate_id?: SortOrder
    installmentCountIPTU?: SortOrder
    installmentCountIPVA?: SortOrder
    installmentCountIR?: SortOrder
    installmentCountITR?: SortOrder
    installmentValueIPTU?: SortOrder
    installmentValueIPVA?: SortOrder
    installmentValueIR?: SortOrder
    installmentValueITR?: SortOrder
    financing?: SortOrder
    creditCard?: SortOrder
    optedForInstallmentIPTU?: SortOrder
    optedForInstallmentIPVA?: SortOrder
    optedForInstallmentIR?: SortOrder
    optedForInstallmentITR?: SortOrder
    otherExpensesDescription?: SortOrder
    otherExpensesValue?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
  }

  export type ExpenseAvgOrderByAggregateInput = {
    waterSewage?: SortOrder
    electricity?: SortOrder
    landlinePhone?: SortOrder
    mobilePhone?: SortOrder
    food?: SortOrder
    rent?: SortOrder
    garageRent?: SortOrder
    condominium?: SortOrder
    cableTV?: SortOrder
    streamingServices?: SortOrder
    fuel?: SortOrder
    annualIPVA?: SortOrder
    annualIPTU?: SortOrder
    annualITR?: SortOrder
    annualIR?: SortOrder
    INSS?: SortOrder
    publicTransport?: SortOrder
    schoolTransport?: SortOrder
    internet?: SortOrder
    courses?: SortOrder
    healthPlan?: SortOrder
    dentalPlan?: SortOrder
    medicationExpenses?: SortOrder
    totalExpense?: SortOrder
    installmentCountIPTU?: SortOrder
    installmentCountIPVA?: SortOrder
    installmentCountIR?: SortOrder
    installmentCountITR?: SortOrder
    installmentValueIPTU?: SortOrder
    installmentValueIPVA?: SortOrder
    installmentValueIR?: SortOrder
    installmentValueITR?: SortOrder
    financing?: SortOrder
    creditCard?: SortOrder
    otherExpensesValue?: SortOrder
  }

  export type ExpenseMaxOrderByAggregateInput = {
    id?: SortOrder
    main_id?: SortOrder
    date?: SortOrder
    waterSewage?: SortOrder
    electricity?: SortOrder
    landlinePhone?: SortOrder
    mobilePhone?: SortOrder
    food?: SortOrder
    rent?: SortOrder
    garageRent?: SortOrder
    condominium?: SortOrder
    cableTV?: SortOrder
    streamingServices?: SortOrder
    fuel?: SortOrder
    annualIPVA?: SortOrder
    annualIPTU?: SortOrder
    annualITR?: SortOrder
    annualIR?: SortOrder
    INSS?: SortOrder
    publicTransport?: SortOrder
    schoolTransport?: SortOrder
    internet?: SortOrder
    courses?: SortOrder
    healthPlan?: SortOrder
    dentalPlan?: SortOrder
    medicationExpenses?: SortOrder
    totalExpense?: SortOrder
    candidate_id?: SortOrder
    installmentCountIPTU?: SortOrder
    installmentCountIPVA?: SortOrder
    installmentCountIR?: SortOrder
    installmentCountITR?: SortOrder
    installmentValueIPTU?: SortOrder
    installmentValueIPVA?: SortOrder
    installmentValueIR?: SortOrder
    installmentValueITR?: SortOrder
    financing?: SortOrder
    creditCard?: SortOrder
    optedForInstallmentIPTU?: SortOrder
    optedForInstallmentIPVA?: SortOrder
    optedForInstallmentIR?: SortOrder
    optedForInstallmentITR?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
  }

  export type ExpenseMinOrderByAggregateInput = {
    id?: SortOrder
    main_id?: SortOrder
    date?: SortOrder
    waterSewage?: SortOrder
    electricity?: SortOrder
    landlinePhone?: SortOrder
    mobilePhone?: SortOrder
    food?: SortOrder
    rent?: SortOrder
    garageRent?: SortOrder
    condominium?: SortOrder
    cableTV?: SortOrder
    streamingServices?: SortOrder
    fuel?: SortOrder
    annualIPVA?: SortOrder
    annualIPTU?: SortOrder
    annualITR?: SortOrder
    annualIR?: SortOrder
    INSS?: SortOrder
    publicTransport?: SortOrder
    schoolTransport?: SortOrder
    internet?: SortOrder
    courses?: SortOrder
    healthPlan?: SortOrder
    dentalPlan?: SortOrder
    medicationExpenses?: SortOrder
    totalExpense?: SortOrder
    candidate_id?: SortOrder
    installmentCountIPTU?: SortOrder
    installmentCountIPVA?: SortOrder
    installmentCountIR?: SortOrder
    installmentCountITR?: SortOrder
    installmentValueIPTU?: SortOrder
    installmentValueIPVA?: SortOrder
    installmentValueIR?: SortOrder
    installmentValueITR?: SortOrder
    financing?: SortOrder
    creditCard?: SortOrder
    optedForInstallmentIPTU?: SortOrder
    optedForInstallmentIPVA?: SortOrder
    optedForInstallmentIR?: SortOrder
    optedForInstallmentITR?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
  }

  export type ExpenseSumOrderByAggregateInput = {
    waterSewage?: SortOrder
    electricity?: SortOrder
    landlinePhone?: SortOrder
    mobilePhone?: SortOrder
    food?: SortOrder
    rent?: SortOrder
    garageRent?: SortOrder
    condominium?: SortOrder
    cableTV?: SortOrder
    streamingServices?: SortOrder
    fuel?: SortOrder
    annualIPVA?: SortOrder
    annualIPTU?: SortOrder
    annualITR?: SortOrder
    annualIR?: SortOrder
    INSS?: SortOrder
    publicTransport?: SortOrder
    schoolTransport?: SortOrder
    internet?: SortOrder
    courses?: SortOrder
    healthPlan?: SortOrder
    dentalPlan?: SortOrder
    medicationExpenses?: SortOrder
    totalExpense?: SortOrder
    installmentCountIPTU?: SortOrder
    installmentCountIPVA?: SortOrder
    installmentCountIR?: SortOrder
    installmentCountITR?: SortOrder
    installmentValueIPTU?: SortOrder
    installmentValueIPVA?: SortOrder
    installmentValueIR?: SortOrder
    installmentValueITR?: SortOrder
    financing?: SortOrder
    creditCard?: SortOrder
    otherExpensesValue?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type LoanApplication_idMain_idCompoundUniqueInput = {
    application_id: string
    main_id: string
  }

  export type LoanCountOrderByAggregateInput = {
    id?: SortOrder
    main_id?: SortOrder
    familyMemberName?: SortOrder
    installmentValue?: SortOrder
    totalInstallments?: SortOrder
    paidInstallments?: SortOrder
    bankName?: SortOrder
    familyMember_id?: SortOrder
    candidate_id?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
  }

  export type LoanAvgOrderByAggregateInput = {
    installmentValue?: SortOrder
    totalInstallments?: SortOrder
    paidInstallments?: SortOrder
  }

  export type LoanMaxOrderByAggregateInput = {
    id?: SortOrder
    main_id?: SortOrder
    familyMemberName?: SortOrder
    installmentValue?: SortOrder
    totalInstallments?: SortOrder
    paidInstallments?: SortOrder
    bankName?: SortOrder
    familyMember_id?: SortOrder
    candidate_id?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
  }

  export type LoanMinOrderByAggregateInput = {
    id?: SortOrder
    main_id?: SortOrder
    familyMemberName?: SortOrder
    installmentValue?: SortOrder
    totalInstallments?: SortOrder
    paidInstallments?: SortOrder
    bankName?: SortOrder
    familyMember_id?: SortOrder
    candidate_id?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
  }

  export type LoanSumOrderByAggregateInput = {
    installmentValue?: SortOrder
    totalInstallments?: SortOrder
    paidInstallments?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type EnumFinancingTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.FinancingType | EnumFinancingTypeFieldRefInput<$PrismaModel>
    in?: $Enums.FinancingType[] | ListEnumFinancingTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.FinancingType[] | ListEnumFinancingTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumFinancingTypeFilter<$PrismaModel> | $Enums.FinancingType
  }

  export type FinancingApplication_idMain_idCompoundUniqueInput = {
    application_id: string
    main_id: string
  }

  export type FinancingCountOrderByAggregateInput = {
    id?: SortOrder
    main_id?: SortOrder
    familyMemberName?: SortOrder
    installmentValue?: SortOrder
    totalInstallments?: SortOrder
    paidInstallments?: SortOrder
    bankName?: SortOrder
    familyMember_id?: SortOrder
    candidate_id?: SortOrder
    otherFinancing?: SortOrder
    financingType?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
  }

  export type FinancingAvgOrderByAggregateInput = {
    installmentValue?: SortOrder
    totalInstallments?: SortOrder
    paidInstallments?: SortOrder
  }

  export type FinancingMaxOrderByAggregateInput = {
    id?: SortOrder
    main_id?: SortOrder
    familyMemberName?: SortOrder
    installmentValue?: SortOrder
    totalInstallments?: SortOrder
    paidInstallments?: SortOrder
    bankName?: SortOrder
    familyMember_id?: SortOrder
    candidate_id?: SortOrder
    otherFinancing?: SortOrder
    financingType?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
  }

  export type FinancingMinOrderByAggregateInput = {
    id?: SortOrder
    main_id?: SortOrder
    familyMemberName?: SortOrder
    installmentValue?: SortOrder
    totalInstallments?: SortOrder
    paidInstallments?: SortOrder
    bankName?: SortOrder
    familyMember_id?: SortOrder
    candidate_id?: SortOrder
    otherFinancing?: SortOrder
    financingType?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
  }

  export type FinancingSumOrderByAggregateInput = {
    installmentValue?: SortOrder
    totalInstallments?: SortOrder
    paidInstallments?: SortOrder
  }

  export type EnumFinancingTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FinancingType | EnumFinancingTypeFieldRefInput<$PrismaModel>
    in?: $Enums.FinancingType[] | ListEnumFinancingTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.FinancingType[] | ListEnumFinancingTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumFinancingTypeWithAggregatesFilter<$PrismaModel> | $Enums.FinancingType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumFinancingTypeFilter<$PrismaModel>
    _max?: NestedEnumFinancingTypeFilter<$PrismaModel>
  }

  export type CreditCardApplication_idMain_idCompoundUniqueInput = {
    application_id: string
    main_id: string
  }

  export type CreditCardCountOrderByAggregateInput = {
    id?: SortOrder
    main_id?: SortOrder
    familyMemberName?: SortOrder
    usersCount?: SortOrder
    cardType?: SortOrder
    bankName?: SortOrder
    cardFlag?: SortOrder
    invoiceValue?: SortOrder
    familyMember_id?: SortOrder
    candidate_id?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
  }

  export type CreditCardAvgOrderByAggregateInput = {
    usersCount?: SortOrder
    invoiceValue?: SortOrder
  }

  export type CreditCardMaxOrderByAggregateInput = {
    id?: SortOrder
    main_id?: SortOrder
    familyMemberName?: SortOrder
    usersCount?: SortOrder
    cardType?: SortOrder
    bankName?: SortOrder
    cardFlag?: SortOrder
    invoiceValue?: SortOrder
    familyMember_id?: SortOrder
    candidate_id?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
  }

  export type CreditCardMinOrderByAggregateInput = {
    id?: SortOrder
    main_id?: SortOrder
    familyMemberName?: SortOrder
    usersCount?: SortOrder
    cardType?: SortOrder
    bankName?: SortOrder
    cardFlag?: SortOrder
    invoiceValue?: SortOrder
    familyMember_id?: SortOrder
    candidate_id?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
  }

  export type CreditCardSumOrderByAggregateInput = {
    usersCount?: SortOrder
    invoiceValue?: SortOrder
  }

  export type OtherExpenseApplication_idMain_idCompoundUniqueInput = {
    application_id: string
    main_id: string
  }

  export type OtherExpenseCountOrderByAggregateInput = {
    id?: SortOrder
    main_id?: SortOrder
    description?: SortOrder
    value?: SortOrder
    familyMember_id?: SortOrder
    candidate_id?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
  }

  export type OtherExpenseAvgOrderByAggregateInput = {
    value?: SortOrder
  }

  export type OtherExpenseMaxOrderByAggregateInput = {
    id?: SortOrder
    main_id?: SortOrder
    description?: SortOrder
    value?: SortOrder
    familyMember_id?: SortOrder
    candidate_id?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
  }

  export type OtherExpenseMinOrderByAggregateInput = {
    id?: SortOrder
    main_id?: SortOrder
    description?: SortOrder
    value?: SortOrder
    familyMember_id?: SortOrder
    candidate_id?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
  }

  export type OtherExpenseSumOrderByAggregateInput = {
    value?: SortOrder
  }

  export type EnumDiseaseNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.Disease | EnumDiseaseFieldRefInput<$PrismaModel> | null
    in?: $Enums.Disease[] | ListEnumDiseaseFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.Disease[] | ListEnumDiseaseFieldRefInput<$PrismaModel> | null
    not?: NestedEnumDiseaseNullableFilter<$PrismaModel> | $Enums.Disease | null
  }

  export type EnumDiseaseNullableListFilter<$PrismaModel = never> = {
    equals?: $Enums.Disease[] | ListEnumDiseaseFieldRefInput<$PrismaModel> | null
    has?: $Enums.Disease | EnumDiseaseFieldRefInput<$PrismaModel> | null
    hasEvery?: $Enums.Disease[] | ListEnumDiseaseFieldRefInput<$PrismaModel>
    hasSome?: $Enums.Disease[] | ListEnumDiseaseFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type FamilyMemberDiseaseApplication_idMain_idCompoundUniqueInput = {
    application_id: string
    main_id: string
  }

  export type FamilyMemberDiseaseCountOrderByAggregateInput = {
    id?: SortOrder
    main_id?: SortOrder
    disease?: SortOrder
    diseases?: SortOrder
    specificDisease?: SortOrder
    hasMedicalReport?: SortOrder
    familyMember_id?: SortOrder
    candidate_id?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
  }

  export type FamilyMemberDiseaseMaxOrderByAggregateInput = {
    id?: SortOrder
    main_id?: SortOrder
    disease?: SortOrder
    specificDisease?: SortOrder
    hasMedicalReport?: SortOrder
    familyMember_id?: SortOrder
    candidate_id?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
  }

  export type FamilyMemberDiseaseMinOrderByAggregateInput = {
    id?: SortOrder
    main_id?: SortOrder
    disease?: SortOrder
    specificDisease?: SortOrder
    hasMedicalReport?: SortOrder
    familyMember_id?: SortOrder
    candidate_id?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
  }

  export type EnumDiseaseNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Disease | EnumDiseaseFieldRefInput<$PrismaModel> | null
    in?: $Enums.Disease[] | ListEnumDiseaseFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.Disease[] | ListEnumDiseaseFieldRefInput<$PrismaModel> | null
    not?: NestedEnumDiseaseNullableWithAggregatesFilter<$PrismaModel> | $Enums.Disease | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumDiseaseNullableFilter<$PrismaModel>
    _max?: NestedEnumDiseaseNullableFilter<$PrismaModel>
  }

  export type FamilyMemberDiseaseNullableRelationFilter = {
    is?: FamilyMemberDiseaseWhereInput | null
    isNot?: FamilyMemberDiseaseWhereInput | null
  }

  export type MedicationApplication_idMain_idCompoundUniqueInput = {
    application_id: string
    main_id: string
  }

  export type MedicationCountOrderByAggregateInput = {
    id?: SortOrder
    main_id?: SortOrder
    medicationName?: SortOrder
    obtainedPublicly?: SortOrder
    specificMedicationPublicly?: SortOrder
    familyMember_id?: SortOrder
    candidate_id?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
    familyMemberDiseaseId?: SortOrder
  }

  export type MedicationMaxOrderByAggregateInput = {
    id?: SortOrder
    main_id?: SortOrder
    medicationName?: SortOrder
    obtainedPublicly?: SortOrder
    specificMedicationPublicly?: SortOrder
    familyMember_id?: SortOrder
    candidate_id?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
    familyMemberDiseaseId?: SortOrder
  }

  export type MedicationMinOrderByAggregateInput = {
    id?: SortOrder
    main_id?: SortOrder
    medicationName?: SortOrder
    obtainedPublicly?: SortOrder
    specificMedicationPublicly?: SortOrder
    familyMember_id?: SortOrder
    candidate_id?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
    familyMemberDiseaseId?: SortOrder
  }

  export type EnumDeclaration_TypeFilter<$PrismaModel = never> = {
    equals?: $Enums.Declaration_Type | EnumDeclaration_TypeFieldRefInput<$PrismaModel>
    in?: $Enums.Declaration_Type[] | ListEnumDeclaration_TypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.Declaration_Type[] | ListEnumDeclaration_TypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDeclaration_TypeFilter<$PrismaModel> | $Enums.Declaration_Type
  }

  export type DeclarationsCountOrderByAggregateInput = {
    id?: SortOrder
    declarationType?: SortOrder
    text?: SortOrder
    familyMember_id?: SortOrder
    candidate_id?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
  }

  export type DeclarationsMaxOrderByAggregateInput = {
    id?: SortOrder
    declarationType?: SortOrder
    text?: SortOrder
    familyMember_id?: SortOrder
    candidate_id?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
  }

  export type DeclarationsMinOrderByAggregateInput = {
    id?: SortOrder
    declarationType?: SortOrder
    text?: SortOrder
    familyMember_id?: SortOrder
    candidate_id?: SortOrder
    legalResponsibleId?: SortOrder
    application_id?: SortOrder
  }

  export type EnumDeclaration_TypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Declaration_Type | EnumDeclaration_TypeFieldRefInput<$PrismaModel>
    in?: $Enums.Declaration_Type[] | ListEnumDeclaration_TypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.Declaration_Type[] | ListEnumDeclaration_TypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDeclaration_TypeWithAggregatesFilter<$PrismaModel> | $Enums.Declaration_Type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDeclaration_TypeFilter<$PrismaModel>
    _max?: NestedEnumDeclaration_TypeFilter<$PrismaModel>
  }

  export type AnnouncementRelationFilter = {
    is?: AnnouncementWhereInput
    isNot?: AnnouncementWhereInput
  }

  export type AnnouncementInterviewCountOrderByAggregateInput = {
    startDate?: SortOrder
    endDate?: SortOrder
    beginHour?: SortOrder
    interval?: SortOrder
    endHour?: SortOrder
    duration?: SortOrder
    announcement_id?: SortOrder
  }

  export type AnnouncementInterviewAvgOrderByAggregateInput = {
    interval?: SortOrder
    duration?: SortOrder
  }

  export type AnnouncementInterviewMaxOrderByAggregateInput = {
    startDate?: SortOrder
    endDate?: SortOrder
    beginHour?: SortOrder
    interval?: SortOrder
    endHour?: SortOrder
    duration?: SortOrder
    announcement_id?: SortOrder
  }

  export type AnnouncementInterviewMinOrderByAggregateInput = {
    startDate?: SortOrder
    endDate?: SortOrder
    beginHour?: SortOrder
    interval?: SortOrder
    endHour?: SortOrder
    duration?: SortOrder
    announcement_id?: SortOrder
  }

  export type AnnouncementInterviewSumOrderByAggregateInput = {
    interval?: SortOrder
    duration?: SortOrder
  }

  export type EnumAnnouncementTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.AnnouncementType | EnumAnnouncementTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AnnouncementType[] | ListEnumAnnouncementTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AnnouncementType[] | ListEnumAnnouncementTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAnnouncementTypeFilter<$PrismaModel> | $Enums.AnnouncementType
  }

  export type EnumTiebreakerCriteriasNullableListFilter<$PrismaModel = never> = {
    equals?: $Enums.TiebreakerCriterias[] | ListEnumTiebreakerCriteriasFieldRefInput<$PrismaModel> | null
    has?: $Enums.TiebreakerCriterias | EnumTiebreakerCriteriasFieldRefInput<$PrismaModel> | null
    hasEvery?: $Enums.TiebreakerCriterias[] | ListEnumTiebreakerCriteriasFieldRefInput<$PrismaModel>
    hasSome?: $Enums.TiebreakerCriterias[] | ListEnumTiebreakerCriteriasFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type EnumscholarshipGrantedTypeNullableListFilter<$PrismaModel = never> = {
    equals?: $Enums.scholarshipGrantedType[] | ListEnumscholarshipGrantedTypeFieldRefInput<$PrismaModel> | null
    has?: $Enums.scholarshipGrantedType | EnumscholarshipGrantedTypeFieldRefInput<$PrismaModel> | null
    hasEvery?: $Enums.scholarshipGrantedType[] | ListEnumscholarshipGrantedTypeFieldRefInput<$PrismaModel>
    hasSome?: $Enums.scholarshipGrantedType[] | ListEnumscholarshipGrantedTypeFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type AnnouncementInterviewNullableRelationFilter = {
    is?: AnnouncementInterviewWhereInput | null
    isNot?: AnnouncementInterviewWhereInput | null
  }

  export type ScholarshipGrantedListRelationFilter = {
    every?: ScholarshipGrantedWhereInput
    some?: ScholarshipGrantedWhereInput
    none?: ScholarshipGrantedWhereInput
  }

  export type TimelineListRelationFilter = {
    every?: TimelineWhereInput
    some?: TimelineWhereInput
    none?: TimelineWhereInput
  }

  export type ScholarshipGrantedOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TimelineOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AnnouncementCountOrderByAggregateInput = {
    id?: SortOrder
    entityChanged?: SortOrder
    branchChanged?: SortOrder
    announcementType?: SortOrder
    announcementNumber?: SortOrder
    announcementDate?: SortOrder
    announcementBegin?: SortOrder
    openDate?: SortOrder
    closeDate?: SortOrder
    waitingList?: SortOrder
    offeredVacancies?: SortOrder
    verifiedScholarships?: SortOrder
    description?: SortOrder
    entity_id?: SortOrder
    announcementName?: SortOrder
    announcementLogo?: SortOrder
    type2?: SortOrder
    criteria?: SortOrder
    types1?: SortOrder
  }

  export type AnnouncementAvgOrderByAggregateInput = {
    offeredVacancies?: SortOrder
    verifiedScholarships?: SortOrder
  }

  export type AnnouncementMaxOrderByAggregateInput = {
    id?: SortOrder
    entityChanged?: SortOrder
    branchChanged?: SortOrder
    announcementType?: SortOrder
    announcementNumber?: SortOrder
    announcementDate?: SortOrder
    announcementBegin?: SortOrder
    openDate?: SortOrder
    closeDate?: SortOrder
    waitingList?: SortOrder
    offeredVacancies?: SortOrder
    verifiedScholarships?: SortOrder
    description?: SortOrder
    entity_id?: SortOrder
    announcementName?: SortOrder
    announcementLogo?: SortOrder
    type2?: SortOrder
  }

  export type AnnouncementMinOrderByAggregateInput = {
    id?: SortOrder
    entityChanged?: SortOrder
    branchChanged?: SortOrder
    announcementType?: SortOrder
    announcementNumber?: SortOrder
    announcementDate?: SortOrder
    announcementBegin?: SortOrder
    openDate?: SortOrder
    closeDate?: SortOrder
    waitingList?: SortOrder
    offeredVacancies?: SortOrder
    verifiedScholarships?: SortOrder
    description?: SortOrder
    entity_id?: SortOrder
    announcementName?: SortOrder
    announcementLogo?: SortOrder
    type2?: SortOrder
  }

  export type AnnouncementSumOrderByAggregateInput = {
    offeredVacancies?: SortOrder
    verifiedScholarships?: SortOrder
  }

  export type EnumAnnouncementTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AnnouncementType | EnumAnnouncementTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AnnouncementType[] | ListEnumAnnouncementTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AnnouncementType[] | ListEnumAnnouncementTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAnnouncementTypeWithAggregatesFilter<$PrismaModel> | $Enums.AnnouncementType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAnnouncementTypeFilter<$PrismaModel>
    _max?: NestedEnumAnnouncementTypeFilter<$PrismaModel>
  }

  export type TimelineCountOrderByAggregateInput = {
    id?: SortOrder
    controlLine?: SortOrder
    stage?: SortOrder
    deadline?: SortOrder
    announcementId?: SortOrder
  }

  export type TimelineAvgOrderByAggregateInput = {
    controlLine?: SortOrder
  }

  export type TimelineMaxOrderByAggregateInput = {
    id?: SortOrder
    controlLine?: SortOrder
    stage?: SortOrder
    deadline?: SortOrder
    announcementId?: SortOrder
  }

  export type TimelineMinOrderByAggregateInput = {
    id?: SortOrder
    controlLine?: SortOrder
    stage?: SortOrder
    deadline?: SortOrder
    announcementId?: SortOrder
  }

  export type TimelineSumOrderByAggregateInput = {
    controlLine?: SortOrder
  }

  export type EnumLevelTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.LevelType | EnumLevelTypeFieldRefInput<$PrismaModel>
    in?: $Enums.LevelType[] | ListEnumLevelTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.LevelType[] | ListEnumLevelTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumLevelTypeFilter<$PrismaModel> | $Enums.LevelType
  }

  export type EnumBasicEducationTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.BasicEducationType | EnumBasicEducationTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.BasicEducationType[] | ListEnumBasicEducationTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.BasicEducationType[] | ListEnumBasicEducationTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumBasicEducationTypeNullableFilter<$PrismaModel> | $Enums.BasicEducationType | null
  }

  export type EnumScholarshipOfferTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.ScholarshipOfferType | EnumScholarshipOfferTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.ScholarshipOfferType[] | ListEnumScholarshipOfferTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.ScholarshipOfferType[] | ListEnumScholarshipOfferTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumScholarshipOfferTypeNullableFilter<$PrismaModel> | $Enums.ScholarshipOfferType | null
  }

  export type EnumHigherEducationScholarshipTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.HigherEducationScholarshipType | EnumHigherEducationScholarshipTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.HigherEducationScholarshipType[] | ListEnumHigherEducationScholarshipTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.HigherEducationScholarshipType[] | ListEnumHigherEducationScholarshipTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumHigherEducationScholarshipTypeNullableFilter<$PrismaModel> | $Enums.HigherEducationScholarshipType | null
  }

  export type EnumOfferedCourseTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.OfferedCourseType | EnumOfferedCourseTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.OfferedCourseType[] | ListEnumOfferedCourseTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.OfferedCourseType[] | ListEnumOfferedCourseTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumOfferedCourseTypeNullableFilter<$PrismaModel> | $Enums.OfferedCourseType | null
  }

  export type EducationLevelCountOrderByAggregateInput = {
    id?: SortOrder
    level?: SortOrder
    basicEduType?: SortOrder
    scholarshipType?: SortOrder
    higherEduScholarshipType?: SortOrder
    offeredCourseType?: SortOrder
    availableCourses?: SortOrder
    offeredVacancies?: SortOrder
    verifiedScholarships?: SortOrder
    shift?: SortOrder
    semester?: SortOrder
    grade?: SortOrder
    announcementId?: SortOrder
    entitySubsidiaryId?: SortOrder
  }

  export type EducationLevelAvgOrderByAggregateInput = {
    offeredVacancies?: SortOrder
    verifiedScholarships?: SortOrder
    semester?: SortOrder
  }

  export type EducationLevelMaxOrderByAggregateInput = {
    id?: SortOrder
    level?: SortOrder
    basicEduType?: SortOrder
    scholarshipType?: SortOrder
    higherEduScholarshipType?: SortOrder
    offeredCourseType?: SortOrder
    availableCourses?: SortOrder
    offeredVacancies?: SortOrder
    verifiedScholarships?: SortOrder
    shift?: SortOrder
    semester?: SortOrder
    grade?: SortOrder
    announcementId?: SortOrder
    entitySubsidiaryId?: SortOrder
  }

  export type EducationLevelMinOrderByAggregateInput = {
    id?: SortOrder
    level?: SortOrder
    basicEduType?: SortOrder
    scholarshipType?: SortOrder
    higherEduScholarshipType?: SortOrder
    offeredCourseType?: SortOrder
    availableCourses?: SortOrder
    offeredVacancies?: SortOrder
    verifiedScholarships?: SortOrder
    shift?: SortOrder
    semester?: SortOrder
    grade?: SortOrder
    announcementId?: SortOrder
    entitySubsidiaryId?: SortOrder
  }

  export type EducationLevelSumOrderByAggregateInput = {
    offeredVacancies?: SortOrder
    verifiedScholarships?: SortOrder
    semester?: SortOrder
  }

  export type EnumLevelTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.LevelType | EnumLevelTypeFieldRefInput<$PrismaModel>
    in?: $Enums.LevelType[] | ListEnumLevelTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.LevelType[] | ListEnumLevelTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumLevelTypeWithAggregatesFilter<$PrismaModel> | $Enums.LevelType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumLevelTypeFilter<$PrismaModel>
    _max?: NestedEnumLevelTypeFilter<$PrismaModel>
  }

  export type EnumBasicEducationTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BasicEducationType | EnumBasicEducationTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.BasicEducationType[] | ListEnumBasicEducationTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.BasicEducationType[] | ListEnumBasicEducationTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumBasicEducationTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.BasicEducationType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumBasicEducationTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumBasicEducationTypeNullableFilter<$PrismaModel>
  }

  export type EnumScholarshipOfferTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ScholarshipOfferType | EnumScholarshipOfferTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.ScholarshipOfferType[] | ListEnumScholarshipOfferTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.ScholarshipOfferType[] | ListEnumScholarshipOfferTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumScholarshipOfferTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.ScholarshipOfferType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumScholarshipOfferTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumScholarshipOfferTypeNullableFilter<$PrismaModel>
  }

  export type EnumHigherEducationScholarshipTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.HigherEducationScholarshipType | EnumHigherEducationScholarshipTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.HigherEducationScholarshipType[] | ListEnumHigherEducationScholarshipTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.HigherEducationScholarshipType[] | ListEnumHigherEducationScholarshipTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumHigherEducationScholarshipTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.HigherEducationScholarshipType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumHigherEducationScholarshipTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumHigherEducationScholarshipTypeNullableFilter<$PrismaModel>
  }

  export type EnumOfferedCourseTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OfferedCourseType | EnumOfferedCourseTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.OfferedCourseType[] | ListEnumOfferedCourseTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.OfferedCourseType[] | ListEnumOfferedCourseTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumOfferedCourseTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.OfferedCourseType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumOfferedCourseTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumOfferedCourseTypeNullableFilter<$PrismaModel>
  }

  export type EnumApplicationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ApplicationStatus | EnumApplicationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumApplicationStatusFilter<$PrismaModel> | $Enums.ApplicationStatus
  }

  export type CandidateRelationFilter = {
    is?: CandidateWhereInput
    isNot?: CandidateWhereInput
  }

  export type EducationLevelRelationFilter = {
    is?: EducationLevelWhereInput
    isNot?: EducationLevelWhereInput
  }

  export type ApplicationHistoryListRelationFilter = {
    every?: ApplicationHistoryWhereInput
    some?: ApplicationHistoryWhereInput
    none?: ApplicationHistoryWhereInput
  }

  export type ScholarshipGrantedNullableRelationFilter = {
    is?: ScholarshipGrantedWhereInput | null
    isNot?: ScholarshipGrantedWhereInput | null
  }

  export type ApplicationHistoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ApplicationCandidate_idAnnouncement_idCompoundUniqueInput = {
    candidate_id: string
    announcement_id: string
  }

  export type ApplicationCountOrderByAggregateInput = {
    id?: SortOrder
    candidate_id?: SortOrder
    announcement_id?: SortOrder
    status?: SortOrder
    socialAssistant_id?: SortOrder
    educationLevel_id?: SortOrder
    candidateName?: SortOrder
    SocialAssistantName?: SortOrder
    CadUnico?: SortOrder
    hasSevereDesease?: SortOrder
    averageIncome?: SortOrder
    perCapita?: SortOrder
    position?: SortOrder
    number?: SortOrder
    reponsible_id?: SortOrder
  }

  export type ApplicationAvgOrderByAggregateInput = {
    averageIncome?: SortOrder
    perCapita?: SortOrder
    position?: SortOrder
    number?: SortOrder
  }

  export type ApplicationMaxOrderByAggregateInput = {
    id?: SortOrder
    candidate_id?: SortOrder
    announcement_id?: SortOrder
    status?: SortOrder
    socialAssistant_id?: SortOrder
    educationLevel_id?: SortOrder
    candidateName?: SortOrder
    SocialAssistantName?: SortOrder
    CadUnico?: SortOrder
    hasSevereDesease?: SortOrder
    averageIncome?: SortOrder
    perCapita?: SortOrder
    position?: SortOrder
    number?: SortOrder
    reponsible_id?: SortOrder
  }

  export type ApplicationMinOrderByAggregateInput = {
    id?: SortOrder
    candidate_id?: SortOrder
    announcement_id?: SortOrder
    status?: SortOrder
    socialAssistant_id?: SortOrder
    educationLevel_id?: SortOrder
    candidateName?: SortOrder
    SocialAssistantName?: SortOrder
    CadUnico?: SortOrder
    hasSevereDesease?: SortOrder
    averageIncome?: SortOrder
    perCapita?: SortOrder
    position?: SortOrder
    number?: SortOrder
    reponsible_id?: SortOrder
  }

  export type ApplicationSumOrderByAggregateInput = {
    averageIncome?: SortOrder
    perCapita?: SortOrder
    position?: SortOrder
    number?: SortOrder
  }

  export type EnumApplicationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ApplicationStatus | EnumApplicationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumApplicationStatusWithAggregatesFilter<$PrismaModel> | $Enums.ApplicationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumApplicationStatusFilter<$PrismaModel>
    _max?: NestedEnumApplicationStatusFilter<$PrismaModel>
  }

  export type EnumSolicitationTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.SolicitationType | EnumSolicitationTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.SolicitationType[] | ListEnumSolicitationTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.SolicitationType[] | ListEnumSolicitationTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumSolicitationTypeNullableFilter<$PrismaModel> | $Enums.SolicitationType | null
  }

  export type ApplicationRelationFilter = {
    is?: ApplicationWhereInput
    isNot?: ApplicationWhereInput
  }

  export type ApplicationHistoryCountOrderByAggregateInput = {
    id?: SortOrder
    application_id?: SortOrder
    description?: SortOrder
    solicitation?: SortOrder
    report?: SortOrder
    answered?: SortOrder
    deadLine?: SortOrder
    date?: SortOrder
  }

  export type ApplicationHistoryMaxOrderByAggregateInput = {
    id?: SortOrder
    application_id?: SortOrder
    description?: SortOrder
    solicitation?: SortOrder
    report?: SortOrder
    answered?: SortOrder
    deadLine?: SortOrder
    date?: SortOrder
  }

  export type ApplicationHistoryMinOrderByAggregateInput = {
    id?: SortOrder
    application_id?: SortOrder
    description?: SortOrder
    solicitation?: SortOrder
    report?: SortOrder
    answered?: SortOrder
    deadLine?: SortOrder
    date?: SortOrder
  }

  export type EnumSolicitationTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SolicitationType | EnumSolicitationTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.SolicitationType[] | ListEnumSolicitationTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.SolicitationType[] | ListEnumSolicitationTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumSolicitationTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.SolicitationType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumSolicitationTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumSolicitationTypeNullableFilter<$PrismaModel>
  }

  export type ScholarshipGrantedCountOrderByAggregateInput = {
    id?: SortOrder
    gaveUp?: SortOrder
    ScholarshipCode?: SortOrder
    types?: SortOrder
    application_id?: SortOrder
    announcement_id?: SortOrder
  }

  export type ScholarshipGrantedMaxOrderByAggregateInput = {
    id?: SortOrder
    gaveUp?: SortOrder
    ScholarshipCode?: SortOrder
    application_id?: SortOrder
    announcement_id?: SortOrder
  }

  export type ScholarshipGrantedMinOrderByAggregateInput = {
    id?: SortOrder
    gaveUp?: SortOrder
    ScholarshipCode?: SortOrder
    application_id?: SortOrder
    announcement_id?: SortOrder
  }

  export type FamilyMemberRelationFilter = {
    is?: FamilyMemberWhereInput
    isNot?: FamilyMemberWhereInput
  }

  export type VehicleRelationFilter = {
    is?: VehicleWhereInput
    isNot?: VehicleWhereInput
  }

  export type FamilyMemberToVehicleABCompoundUniqueInput = {
    A: string
    B: string
  }

  export type FamilyMemberToVehicleCountOrderByAggregateInput = {
    A?: SortOrder
    B?: SortOrder
    application_id?: SortOrder
    main_id?: SortOrder
  }

  export type FamilyMemberToVehicleMaxOrderByAggregateInput = {
    A?: SortOrder
    B?: SortOrder
    application_id?: SortOrder
    main_id?: SortOrder
  }

  export type FamilyMemberToVehicleMinOrderByAggregateInput = {
    A?: SortOrder
    B?: SortOrder
    application_id?: SortOrder
    main_id?: SortOrder
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type ApplicationCreateNestedManyWithoutCandidateInput = {
    create?: XOR<ApplicationCreateWithoutCandidateInput, ApplicationUncheckedCreateWithoutCandidateInput> | ApplicationCreateWithoutCandidateInput[] | ApplicationUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutCandidateInput | ApplicationCreateOrConnectWithoutCandidateInput[]
    createMany?: ApplicationCreateManyCandidateInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type CreditCardCreateNestedManyWithoutCandidateInput = {
    create?: XOR<CreditCardCreateWithoutCandidateInput, CreditCardUncheckedCreateWithoutCandidateInput> | CreditCardCreateWithoutCandidateInput[] | CreditCardUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: CreditCardCreateOrConnectWithoutCandidateInput | CreditCardCreateOrConnectWithoutCandidateInput[]
    createMany?: CreditCardCreateManyCandidateInputEnvelope
    connect?: CreditCardWhereUniqueInput | CreditCardWhereUniqueInput[]
  }

  export type ExpenseCreateNestedManyWithoutCandidateInput = {
    create?: XOR<ExpenseCreateWithoutCandidateInput, ExpenseUncheckedCreateWithoutCandidateInput> | ExpenseCreateWithoutCandidateInput[] | ExpenseUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutCandidateInput | ExpenseCreateOrConnectWithoutCandidateInput[]
    createMany?: ExpenseCreateManyCandidateInputEnvelope
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
  }

  export type FinancingCreateNestedManyWithoutCandidateInput = {
    create?: XOR<FinancingCreateWithoutCandidateInput, FinancingUncheckedCreateWithoutCandidateInput> | FinancingCreateWithoutCandidateInput[] | FinancingUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: FinancingCreateOrConnectWithoutCandidateInput | FinancingCreateOrConnectWithoutCandidateInput[]
    createMany?: FinancingCreateManyCandidateInputEnvelope
    connect?: FinancingWhereUniqueInput | FinancingWhereUniqueInput[]
  }

  export type IdentityDetailsCreateNestedManyWithoutCandidateInput = {
    create?: XOR<IdentityDetailsCreateWithoutCandidateInput, IdentityDetailsUncheckedCreateWithoutCandidateInput> | IdentityDetailsCreateWithoutCandidateInput[] | IdentityDetailsUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: IdentityDetailsCreateOrConnectWithoutCandidateInput | IdentityDetailsCreateOrConnectWithoutCandidateInput[]
    createMany?: IdentityDetailsCreateManyCandidateInputEnvelope
    connect?: IdentityDetailsWhereUniqueInput | IdentityDetailsWhereUniqueInput[]
  }

  export type FamilyMemberIncomeCreateNestedManyWithoutCandidateInput = {
    create?: XOR<FamilyMemberIncomeCreateWithoutCandidateInput, FamilyMemberIncomeUncheckedCreateWithoutCandidateInput> | FamilyMemberIncomeCreateWithoutCandidateInput[] | FamilyMemberIncomeUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: FamilyMemberIncomeCreateOrConnectWithoutCandidateInput | FamilyMemberIncomeCreateOrConnectWithoutCandidateInput[]
    createMany?: FamilyMemberIncomeCreateManyCandidateInputEnvelope
    connect?: FamilyMemberIncomeWhereUniqueInput | FamilyMemberIncomeWhereUniqueInput[]
  }

  export type LoanCreateNestedManyWithoutCandidateInput = {
    create?: XOR<LoanCreateWithoutCandidateInput, LoanUncheckedCreateWithoutCandidateInput> | LoanCreateWithoutCandidateInput[] | LoanUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: LoanCreateOrConnectWithoutCandidateInput | LoanCreateOrConnectWithoutCandidateInput[]
    createMany?: LoanCreateManyCandidateInputEnvelope
    connect?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
  }

  export type OtherExpenseCreateNestedManyWithoutCandidateInput = {
    create?: XOR<OtherExpenseCreateWithoutCandidateInput, OtherExpenseUncheckedCreateWithoutCandidateInput> | OtherExpenseCreateWithoutCandidateInput[] | OtherExpenseUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: OtherExpenseCreateOrConnectWithoutCandidateInput | OtherExpenseCreateOrConnectWithoutCandidateInput[]
    createMany?: OtherExpenseCreateManyCandidateInputEnvelope
    connect?: OtherExpenseWhereUniqueInput | OtherExpenseWhereUniqueInput[]
  }

  export type VehicleCreateNestedManyWithoutCandidateInput = {
    create?: XOR<VehicleCreateWithoutCandidateInput, VehicleUncheckedCreateWithoutCandidateInput> | VehicleCreateWithoutCandidateInput[] | VehicleUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: VehicleCreateOrConnectWithoutCandidateInput | VehicleCreateOrConnectWithoutCandidateInput[]
    createMany?: VehicleCreateManyCandidateInputEnvelope
    connect?: VehicleWhereUniqueInput | VehicleWhereUniqueInput[]
  }

  export type LegalResponsibleCreateNestedOneWithoutCandidateInput = {
    create?: XOR<LegalResponsibleCreateWithoutCandidateInput, LegalResponsibleUncheckedCreateWithoutCandidateInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutCandidateInput
    connect?: LegalResponsibleWhereUniqueInput
  }

  export type FamilyMemberCreateNestedManyWithoutCandidateInput = {
    create?: XOR<FamilyMemberCreateWithoutCandidateInput, FamilyMemberUncheckedCreateWithoutCandidateInput> | FamilyMemberCreateWithoutCandidateInput[] | FamilyMemberUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutCandidateInput | FamilyMemberCreateOrConnectWithoutCandidateInput[]
    createMany?: FamilyMemberCreateManyCandidateInputEnvelope
    connect?: FamilyMemberWhereUniqueInput | FamilyMemberWhereUniqueInput[]
  }

  export type HousingCreateNestedManyWithoutCandidateInput = {
    create?: XOR<HousingCreateWithoutCandidateInput, HousingUncheckedCreateWithoutCandidateInput> | HousingCreateWithoutCandidateInput[] | HousingUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: HousingCreateOrConnectWithoutCandidateInput | HousingCreateOrConnectWithoutCandidateInput[]
    createMany?: HousingCreateManyCandidateInputEnvelope
    connect?: HousingWhereUniqueInput | HousingWhereUniqueInput[]
  }

  export type MonthlyIncomeCreateNestedManyWithoutCandidateInput = {
    create?: XOR<MonthlyIncomeCreateWithoutCandidateInput, MonthlyIncomeUncheckedCreateWithoutCandidateInput> | MonthlyIncomeCreateWithoutCandidateInput[] | MonthlyIncomeUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: MonthlyIncomeCreateOrConnectWithoutCandidateInput | MonthlyIncomeCreateOrConnectWithoutCandidateInput[]
    createMany?: MonthlyIncomeCreateManyCandidateInputEnvelope
    connect?: MonthlyIncomeWhereUniqueInput | MonthlyIncomeWhereUniqueInput[]
  }

  export type FamilyMemberDiseaseCreateNestedManyWithoutCandidateInput = {
    create?: XOR<FamilyMemberDiseaseCreateWithoutCandidateInput, FamilyMemberDiseaseUncheckedCreateWithoutCandidateInput> | FamilyMemberDiseaseCreateWithoutCandidateInput[] | FamilyMemberDiseaseUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: FamilyMemberDiseaseCreateOrConnectWithoutCandidateInput | FamilyMemberDiseaseCreateOrConnectWithoutCandidateInput[]
    createMany?: FamilyMemberDiseaseCreateManyCandidateInputEnvelope
    connect?: FamilyMemberDiseaseWhereUniqueInput | FamilyMemberDiseaseWhereUniqueInput[]
  }

  export type MedicationCreateNestedManyWithoutCandidateInput = {
    create?: XOR<MedicationCreateWithoutCandidateInput, MedicationUncheckedCreateWithoutCandidateInput> | MedicationCreateWithoutCandidateInput[] | MedicationUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: MedicationCreateOrConnectWithoutCandidateInput | MedicationCreateOrConnectWithoutCandidateInput[]
    createMany?: MedicationCreateManyCandidateInputEnvelope
    connect?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
  }

  export type BankAccountCreateNestedManyWithoutCandidateInput = {
    create?: XOR<BankAccountCreateWithoutCandidateInput, BankAccountUncheckedCreateWithoutCandidateInput> | BankAccountCreateWithoutCandidateInput[] | BankAccountUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: BankAccountCreateOrConnectWithoutCandidateInput | BankAccountCreateOrConnectWithoutCandidateInput[]
    createMany?: BankAccountCreateManyCandidateInputEnvelope
    connect?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
  }

  export type DeclarationsCreateNestedManyWithoutCandidateInput = {
    create?: XOR<DeclarationsCreateWithoutCandidateInput, DeclarationsUncheckedCreateWithoutCandidateInput> | DeclarationsCreateWithoutCandidateInput[] | DeclarationsUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: DeclarationsCreateOrConnectWithoutCandidateInput | DeclarationsCreateOrConnectWithoutCandidateInput[]
    createMany?: DeclarationsCreateManyCandidateInputEnvelope
    connect?: DeclarationsWhereUniqueInput | DeclarationsWhereUniqueInput[]
  }

  export type ApplicationUncheckedCreateNestedManyWithoutCandidateInput = {
    create?: XOR<ApplicationCreateWithoutCandidateInput, ApplicationUncheckedCreateWithoutCandidateInput> | ApplicationCreateWithoutCandidateInput[] | ApplicationUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutCandidateInput | ApplicationCreateOrConnectWithoutCandidateInput[]
    createMany?: ApplicationCreateManyCandidateInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type CreditCardUncheckedCreateNestedManyWithoutCandidateInput = {
    create?: XOR<CreditCardCreateWithoutCandidateInput, CreditCardUncheckedCreateWithoutCandidateInput> | CreditCardCreateWithoutCandidateInput[] | CreditCardUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: CreditCardCreateOrConnectWithoutCandidateInput | CreditCardCreateOrConnectWithoutCandidateInput[]
    createMany?: CreditCardCreateManyCandidateInputEnvelope
    connect?: CreditCardWhereUniqueInput | CreditCardWhereUniqueInput[]
  }

  export type ExpenseUncheckedCreateNestedManyWithoutCandidateInput = {
    create?: XOR<ExpenseCreateWithoutCandidateInput, ExpenseUncheckedCreateWithoutCandidateInput> | ExpenseCreateWithoutCandidateInput[] | ExpenseUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutCandidateInput | ExpenseCreateOrConnectWithoutCandidateInput[]
    createMany?: ExpenseCreateManyCandidateInputEnvelope
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
  }

  export type FinancingUncheckedCreateNestedManyWithoutCandidateInput = {
    create?: XOR<FinancingCreateWithoutCandidateInput, FinancingUncheckedCreateWithoutCandidateInput> | FinancingCreateWithoutCandidateInput[] | FinancingUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: FinancingCreateOrConnectWithoutCandidateInput | FinancingCreateOrConnectWithoutCandidateInput[]
    createMany?: FinancingCreateManyCandidateInputEnvelope
    connect?: FinancingWhereUniqueInput | FinancingWhereUniqueInput[]
  }

  export type IdentityDetailsUncheckedCreateNestedManyWithoutCandidateInput = {
    create?: XOR<IdentityDetailsCreateWithoutCandidateInput, IdentityDetailsUncheckedCreateWithoutCandidateInput> | IdentityDetailsCreateWithoutCandidateInput[] | IdentityDetailsUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: IdentityDetailsCreateOrConnectWithoutCandidateInput | IdentityDetailsCreateOrConnectWithoutCandidateInput[]
    createMany?: IdentityDetailsCreateManyCandidateInputEnvelope
    connect?: IdentityDetailsWhereUniqueInput | IdentityDetailsWhereUniqueInput[]
  }

  export type FamilyMemberIncomeUncheckedCreateNestedManyWithoutCandidateInput = {
    create?: XOR<FamilyMemberIncomeCreateWithoutCandidateInput, FamilyMemberIncomeUncheckedCreateWithoutCandidateInput> | FamilyMemberIncomeCreateWithoutCandidateInput[] | FamilyMemberIncomeUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: FamilyMemberIncomeCreateOrConnectWithoutCandidateInput | FamilyMemberIncomeCreateOrConnectWithoutCandidateInput[]
    createMany?: FamilyMemberIncomeCreateManyCandidateInputEnvelope
    connect?: FamilyMemberIncomeWhereUniqueInput | FamilyMemberIncomeWhereUniqueInput[]
  }

  export type LoanUncheckedCreateNestedManyWithoutCandidateInput = {
    create?: XOR<LoanCreateWithoutCandidateInput, LoanUncheckedCreateWithoutCandidateInput> | LoanCreateWithoutCandidateInput[] | LoanUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: LoanCreateOrConnectWithoutCandidateInput | LoanCreateOrConnectWithoutCandidateInput[]
    createMany?: LoanCreateManyCandidateInputEnvelope
    connect?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
  }

  export type OtherExpenseUncheckedCreateNestedManyWithoutCandidateInput = {
    create?: XOR<OtherExpenseCreateWithoutCandidateInput, OtherExpenseUncheckedCreateWithoutCandidateInput> | OtherExpenseCreateWithoutCandidateInput[] | OtherExpenseUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: OtherExpenseCreateOrConnectWithoutCandidateInput | OtherExpenseCreateOrConnectWithoutCandidateInput[]
    createMany?: OtherExpenseCreateManyCandidateInputEnvelope
    connect?: OtherExpenseWhereUniqueInput | OtherExpenseWhereUniqueInput[]
  }

  export type VehicleUncheckedCreateNestedManyWithoutCandidateInput = {
    create?: XOR<VehicleCreateWithoutCandidateInput, VehicleUncheckedCreateWithoutCandidateInput> | VehicleCreateWithoutCandidateInput[] | VehicleUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: VehicleCreateOrConnectWithoutCandidateInput | VehicleCreateOrConnectWithoutCandidateInput[]
    createMany?: VehicleCreateManyCandidateInputEnvelope
    connect?: VehicleWhereUniqueInput | VehicleWhereUniqueInput[]
  }

  export type FamilyMemberUncheckedCreateNestedManyWithoutCandidateInput = {
    create?: XOR<FamilyMemberCreateWithoutCandidateInput, FamilyMemberUncheckedCreateWithoutCandidateInput> | FamilyMemberCreateWithoutCandidateInput[] | FamilyMemberUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutCandidateInput | FamilyMemberCreateOrConnectWithoutCandidateInput[]
    createMany?: FamilyMemberCreateManyCandidateInputEnvelope
    connect?: FamilyMemberWhereUniqueInput | FamilyMemberWhereUniqueInput[]
  }

  export type HousingUncheckedCreateNestedManyWithoutCandidateInput = {
    create?: XOR<HousingCreateWithoutCandidateInput, HousingUncheckedCreateWithoutCandidateInput> | HousingCreateWithoutCandidateInput[] | HousingUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: HousingCreateOrConnectWithoutCandidateInput | HousingCreateOrConnectWithoutCandidateInput[]
    createMany?: HousingCreateManyCandidateInputEnvelope
    connect?: HousingWhereUniqueInput | HousingWhereUniqueInput[]
  }

  export type MonthlyIncomeUncheckedCreateNestedManyWithoutCandidateInput = {
    create?: XOR<MonthlyIncomeCreateWithoutCandidateInput, MonthlyIncomeUncheckedCreateWithoutCandidateInput> | MonthlyIncomeCreateWithoutCandidateInput[] | MonthlyIncomeUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: MonthlyIncomeCreateOrConnectWithoutCandidateInput | MonthlyIncomeCreateOrConnectWithoutCandidateInput[]
    createMany?: MonthlyIncomeCreateManyCandidateInputEnvelope
    connect?: MonthlyIncomeWhereUniqueInput | MonthlyIncomeWhereUniqueInput[]
  }

  export type FamilyMemberDiseaseUncheckedCreateNestedManyWithoutCandidateInput = {
    create?: XOR<FamilyMemberDiseaseCreateWithoutCandidateInput, FamilyMemberDiseaseUncheckedCreateWithoutCandidateInput> | FamilyMemberDiseaseCreateWithoutCandidateInput[] | FamilyMemberDiseaseUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: FamilyMemberDiseaseCreateOrConnectWithoutCandidateInput | FamilyMemberDiseaseCreateOrConnectWithoutCandidateInput[]
    createMany?: FamilyMemberDiseaseCreateManyCandidateInputEnvelope
    connect?: FamilyMemberDiseaseWhereUniqueInput | FamilyMemberDiseaseWhereUniqueInput[]
  }

  export type MedicationUncheckedCreateNestedManyWithoutCandidateInput = {
    create?: XOR<MedicationCreateWithoutCandidateInput, MedicationUncheckedCreateWithoutCandidateInput> | MedicationCreateWithoutCandidateInput[] | MedicationUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: MedicationCreateOrConnectWithoutCandidateInput | MedicationCreateOrConnectWithoutCandidateInput[]
    createMany?: MedicationCreateManyCandidateInputEnvelope
    connect?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
  }

  export type BankAccountUncheckedCreateNestedManyWithoutCandidateInput = {
    create?: XOR<BankAccountCreateWithoutCandidateInput, BankAccountUncheckedCreateWithoutCandidateInput> | BankAccountCreateWithoutCandidateInput[] | BankAccountUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: BankAccountCreateOrConnectWithoutCandidateInput | BankAccountCreateOrConnectWithoutCandidateInput[]
    createMany?: BankAccountCreateManyCandidateInputEnvelope
    connect?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
  }

  export type DeclarationsUncheckedCreateNestedManyWithoutCandidateInput = {
    create?: XOR<DeclarationsCreateWithoutCandidateInput, DeclarationsUncheckedCreateWithoutCandidateInput> | DeclarationsCreateWithoutCandidateInput[] | DeclarationsUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: DeclarationsCreateOrConnectWithoutCandidateInput | DeclarationsCreateOrConnectWithoutCandidateInput[]
    createMany?: DeclarationsCreateManyCandidateInputEnvelope
    connect?: DeclarationsWhereUniqueInput | DeclarationsWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type EnumROLEFieldUpdateOperationsInput = {
    set?: $Enums.ROLE
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type ApplicationUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<ApplicationCreateWithoutCandidateInput, ApplicationUncheckedCreateWithoutCandidateInput> | ApplicationCreateWithoutCandidateInput[] | ApplicationUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutCandidateInput | ApplicationCreateOrConnectWithoutCandidateInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutCandidateInput | ApplicationUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: ApplicationCreateManyCandidateInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutCandidateInput | ApplicationUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutCandidateInput | ApplicationUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type CreditCardUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<CreditCardCreateWithoutCandidateInput, CreditCardUncheckedCreateWithoutCandidateInput> | CreditCardCreateWithoutCandidateInput[] | CreditCardUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: CreditCardCreateOrConnectWithoutCandidateInput | CreditCardCreateOrConnectWithoutCandidateInput[]
    upsert?: CreditCardUpsertWithWhereUniqueWithoutCandidateInput | CreditCardUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: CreditCardCreateManyCandidateInputEnvelope
    set?: CreditCardWhereUniqueInput | CreditCardWhereUniqueInput[]
    disconnect?: CreditCardWhereUniqueInput | CreditCardWhereUniqueInput[]
    delete?: CreditCardWhereUniqueInput | CreditCardWhereUniqueInput[]
    connect?: CreditCardWhereUniqueInput | CreditCardWhereUniqueInput[]
    update?: CreditCardUpdateWithWhereUniqueWithoutCandidateInput | CreditCardUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: CreditCardUpdateManyWithWhereWithoutCandidateInput | CreditCardUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: CreditCardScalarWhereInput | CreditCardScalarWhereInput[]
  }

  export type ExpenseUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<ExpenseCreateWithoutCandidateInput, ExpenseUncheckedCreateWithoutCandidateInput> | ExpenseCreateWithoutCandidateInput[] | ExpenseUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutCandidateInput | ExpenseCreateOrConnectWithoutCandidateInput[]
    upsert?: ExpenseUpsertWithWhereUniqueWithoutCandidateInput | ExpenseUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: ExpenseCreateManyCandidateInputEnvelope
    set?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    disconnect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    delete?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    update?: ExpenseUpdateWithWhereUniqueWithoutCandidateInput | ExpenseUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: ExpenseUpdateManyWithWhereWithoutCandidateInput | ExpenseUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: ExpenseScalarWhereInput | ExpenseScalarWhereInput[]
  }

  export type FinancingUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<FinancingCreateWithoutCandidateInput, FinancingUncheckedCreateWithoutCandidateInput> | FinancingCreateWithoutCandidateInput[] | FinancingUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: FinancingCreateOrConnectWithoutCandidateInput | FinancingCreateOrConnectWithoutCandidateInput[]
    upsert?: FinancingUpsertWithWhereUniqueWithoutCandidateInput | FinancingUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: FinancingCreateManyCandidateInputEnvelope
    set?: FinancingWhereUniqueInput | FinancingWhereUniqueInput[]
    disconnect?: FinancingWhereUniqueInput | FinancingWhereUniqueInput[]
    delete?: FinancingWhereUniqueInput | FinancingWhereUniqueInput[]
    connect?: FinancingWhereUniqueInput | FinancingWhereUniqueInput[]
    update?: FinancingUpdateWithWhereUniqueWithoutCandidateInput | FinancingUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: FinancingUpdateManyWithWhereWithoutCandidateInput | FinancingUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: FinancingScalarWhereInput | FinancingScalarWhereInput[]
  }

  export type IdentityDetailsUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<IdentityDetailsCreateWithoutCandidateInput, IdentityDetailsUncheckedCreateWithoutCandidateInput> | IdentityDetailsCreateWithoutCandidateInput[] | IdentityDetailsUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: IdentityDetailsCreateOrConnectWithoutCandidateInput | IdentityDetailsCreateOrConnectWithoutCandidateInput[]
    upsert?: IdentityDetailsUpsertWithWhereUniqueWithoutCandidateInput | IdentityDetailsUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: IdentityDetailsCreateManyCandidateInputEnvelope
    set?: IdentityDetailsWhereUniqueInput | IdentityDetailsWhereUniqueInput[]
    disconnect?: IdentityDetailsWhereUniqueInput | IdentityDetailsWhereUniqueInput[]
    delete?: IdentityDetailsWhereUniqueInput | IdentityDetailsWhereUniqueInput[]
    connect?: IdentityDetailsWhereUniqueInput | IdentityDetailsWhereUniqueInput[]
    update?: IdentityDetailsUpdateWithWhereUniqueWithoutCandidateInput | IdentityDetailsUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: IdentityDetailsUpdateManyWithWhereWithoutCandidateInput | IdentityDetailsUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: IdentityDetailsScalarWhereInput | IdentityDetailsScalarWhereInput[]
  }

  export type FamilyMemberIncomeUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<FamilyMemberIncomeCreateWithoutCandidateInput, FamilyMemberIncomeUncheckedCreateWithoutCandidateInput> | FamilyMemberIncomeCreateWithoutCandidateInput[] | FamilyMemberIncomeUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: FamilyMemberIncomeCreateOrConnectWithoutCandidateInput | FamilyMemberIncomeCreateOrConnectWithoutCandidateInput[]
    upsert?: FamilyMemberIncomeUpsertWithWhereUniqueWithoutCandidateInput | FamilyMemberIncomeUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: FamilyMemberIncomeCreateManyCandidateInputEnvelope
    set?: FamilyMemberIncomeWhereUniqueInput | FamilyMemberIncomeWhereUniqueInput[]
    disconnect?: FamilyMemberIncomeWhereUniqueInput | FamilyMemberIncomeWhereUniqueInput[]
    delete?: FamilyMemberIncomeWhereUniqueInput | FamilyMemberIncomeWhereUniqueInput[]
    connect?: FamilyMemberIncomeWhereUniqueInput | FamilyMemberIncomeWhereUniqueInput[]
    update?: FamilyMemberIncomeUpdateWithWhereUniqueWithoutCandidateInput | FamilyMemberIncomeUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: FamilyMemberIncomeUpdateManyWithWhereWithoutCandidateInput | FamilyMemberIncomeUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: FamilyMemberIncomeScalarWhereInput | FamilyMemberIncomeScalarWhereInput[]
  }

  export type LoanUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<LoanCreateWithoutCandidateInput, LoanUncheckedCreateWithoutCandidateInput> | LoanCreateWithoutCandidateInput[] | LoanUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: LoanCreateOrConnectWithoutCandidateInput | LoanCreateOrConnectWithoutCandidateInput[]
    upsert?: LoanUpsertWithWhereUniqueWithoutCandidateInput | LoanUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: LoanCreateManyCandidateInputEnvelope
    set?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    disconnect?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    delete?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    connect?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    update?: LoanUpdateWithWhereUniqueWithoutCandidateInput | LoanUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: LoanUpdateManyWithWhereWithoutCandidateInput | LoanUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: LoanScalarWhereInput | LoanScalarWhereInput[]
  }

  export type OtherExpenseUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<OtherExpenseCreateWithoutCandidateInput, OtherExpenseUncheckedCreateWithoutCandidateInput> | OtherExpenseCreateWithoutCandidateInput[] | OtherExpenseUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: OtherExpenseCreateOrConnectWithoutCandidateInput | OtherExpenseCreateOrConnectWithoutCandidateInput[]
    upsert?: OtherExpenseUpsertWithWhereUniqueWithoutCandidateInput | OtherExpenseUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: OtherExpenseCreateManyCandidateInputEnvelope
    set?: OtherExpenseWhereUniqueInput | OtherExpenseWhereUniqueInput[]
    disconnect?: OtherExpenseWhereUniqueInput | OtherExpenseWhereUniqueInput[]
    delete?: OtherExpenseWhereUniqueInput | OtherExpenseWhereUniqueInput[]
    connect?: OtherExpenseWhereUniqueInput | OtherExpenseWhereUniqueInput[]
    update?: OtherExpenseUpdateWithWhereUniqueWithoutCandidateInput | OtherExpenseUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: OtherExpenseUpdateManyWithWhereWithoutCandidateInput | OtherExpenseUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: OtherExpenseScalarWhereInput | OtherExpenseScalarWhereInput[]
  }

  export type VehicleUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<VehicleCreateWithoutCandidateInput, VehicleUncheckedCreateWithoutCandidateInput> | VehicleCreateWithoutCandidateInput[] | VehicleUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: VehicleCreateOrConnectWithoutCandidateInput | VehicleCreateOrConnectWithoutCandidateInput[]
    upsert?: VehicleUpsertWithWhereUniqueWithoutCandidateInput | VehicleUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: VehicleCreateManyCandidateInputEnvelope
    set?: VehicleWhereUniqueInput | VehicleWhereUniqueInput[]
    disconnect?: VehicleWhereUniqueInput | VehicleWhereUniqueInput[]
    delete?: VehicleWhereUniqueInput | VehicleWhereUniqueInput[]
    connect?: VehicleWhereUniqueInput | VehicleWhereUniqueInput[]
    update?: VehicleUpdateWithWhereUniqueWithoutCandidateInput | VehicleUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: VehicleUpdateManyWithWhereWithoutCandidateInput | VehicleUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: VehicleScalarWhereInput | VehicleScalarWhereInput[]
  }

  export type LegalResponsibleUpdateOneWithoutCandidateNestedInput = {
    create?: XOR<LegalResponsibleCreateWithoutCandidateInput, LegalResponsibleUncheckedCreateWithoutCandidateInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutCandidateInput
    upsert?: LegalResponsibleUpsertWithoutCandidateInput
    disconnect?: LegalResponsibleWhereInput | boolean
    delete?: LegalResponsibleWhereInput | boolean
    connect?: LegalResponsibleWhereUniqueInput
    update?: XOR<XOR<LegalResponsibleUpdateToOneWithWhereWithoutCandidateInput, LegalResponsibleUpdateWithoutCandidateInput>, LegalResponsibleUncheckedUpdateWithoutCandidateInput>
  }

  export type FamilyMemberUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<FamilyMemberCreateWithoutCandidateInput, FamilyMemberUncheckedCreateWithoutCandidateInput> | FamilyMemberCreateWithoutCandidateInput[] | FamilyMemberUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutCandidateInput | FamilyMemberCreateOrConnectWithoutCandidateInput[]
    upsert?: FamilyMemberUpsertWithWhereUniqueWithoutCandidateInput | FamilyMemberUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: FamilyMemberCreateManyCandidateInputEnvelope
    set?: FamilyMemberWhereUniqueInput | FamilyMemberWhereUniqueInput[]
    disconnect?: FamilyMemberWhereUniqueInput | FamilyMemberWhereUniqueInput[]
    delete?: FamilyMemberWhereUniqueInput | FamilyMemberWhereUniqueInput[]
    connect?: FamilyMemberWhereUniqueInput | FamilyMemberWhereUniqueInput[]
    update?: FamilyMemberUpdateWithWhereUniqueWithoutCandidateInput | FamilyMemberUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: FamilyMemberUpdateManyWithWhereWithoutCandidateInput | FamilyMemberUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: FamilyMemberScalarWhereInput | FamilyMemberScalarWhereInput[]
  }

  export type HousingUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<HousingCreateWithoutCandidateInput, HousingUncheckedCreateWithoutCandidateInput> | HousingCreateWithoutCandidateInput[] | HousingUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: HousingCreateOrConnectWithoutCandidateInput | HousingCreateOrConnectWithoutCandidateInput[]
    upsert?: HousingUpsertWithWhereUniqueWithoutCandidateInput | HousingUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: HousingCreateManyCandidateInputEnvelope
    set?: HousingWhereUniqueInput | HousingWhereUniqueInput[]
    disconnect?: HousingWhereUniqueInput | HousingWhereUniqueInput[]
    delete?: HousingWhereUniqueInput | HousingWhereUniqueInput[]
    connect?: HousingWhereUniqueInput | HousingWhereUniqueInput[]
    update?: HousingUpdateWithWhereUniqueWithoutCandidateInput | HousingUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: HousingUpdateManyWithWhereWithoutCandidateInput | HousingUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: HousingScalarWhereInput | HousingScalarWhereInput[]
  }

  export type MonthlyIncomeUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<MonthlyIncomeCreateWithoutCandidateInput, MonthlyIncomeUncheckedCreateWithoutCandidateInput> | MonthlyIncomeCreateWithoutCandidateInput[] | MonthlyIncomeUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: MonthlyIncomeCreateOrConnectWithoutCandidateInput | MonthlyIncomeCreateOrConnectWithoutCandidateInput[]
    upsert?: MonthlyIncomeUpsertWithWhereUniqueWithoutCandidateInput | MonthlyIncomeUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: MonthlyIncomeCreateManyCandidateInputEnvelope
    set?: MonthlyIncomeWhereUniqueInput | MonthlyIncomeWhereUniqueInput[]
    disconnect?: MonthlyIncomeWhereUniqueInput | MonthlyIncomeWhereUniqueInput[]
    delete?: MonthlyIncomeWhereUniqueInput | MonthlyIncomeWhereUniqueInput[]
    connect?: MonthlyIncomeWhereUniqueInput | MonthlyIncomeWhereUniqueInput[]
    update?: MonthlyIncomeUpdateWithWhereUniqueWithoutCandidateInput | MonthlyIncomeUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: MonthlyIncomeUpdateManyWithWhereWithoutCandidateInput | MonthlyIncomeUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: MonthlyIncomeScalarWhereInput | MonthlyIncomeScalarWhereInput[]
  }

  export type FamilyMemberDiseaseUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<FamilyMemberDiseaseCreateWithoutCandidateInput, FamilyMemberDiseaseUncheckedCreateWithoutCandidateInput> | FamilyMemberDiseaseCreateWithoutCandidateInput[] | FamilyMemberDiseaseUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: FamilyMemberDiseaseCreateOrConnectWithoutCandidateInput | FamilyMemberDiseaseCreateOrConnectWithoutCandidateInput[]
    upsert?: FamilyMemberDiseaseUpsertWithWhereUniqueWithoutCandidateInput | FamilyMemberDiseaseUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: FamilyMemberDiseaseCreateManyCandidateInputEnvelope
    set?: FamilyMemberDiseaseWhereUniqueInput | FamilyMemberDiseaseWhereUniqueInput[]
    disconnect?: FamilyMemberDiseaseWhereUniqueInput | FamilyMemberDiseaseWhereUniqueInput[]
    delete?: FamilyMemberDiseaseWhereUniqueInput | FamilyMemberDiseaseWhereUniqueInput[]
    connect?: FamilyMemberDiseaseWhereUniqueInput | FamilyMemberDiseaseWhereUniqueInput[]
    update?: FamilyMemberDiseaseUpdateWithWhereUniqueWithoutCandidateInput | FamilyMemberDiseaseUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: FamilyMemberDiseaseUpdateManyWithWhereWithoutCandidateInput | FamilyMemberDiseaseUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: FamilyMemberDiseaseScalarWhereInput | FamilyMemberDiseaseScalarWhereInput[]
  }

  export type MedicationUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<MedicationCreateWithoutCandidateInput, MedicationUncheckedCreateWithoutCandidateInput> | MedicationCreateWithoutCandidateInput[] | MedicationUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: MedicationCreateOrConnectWithoutCandidateInput | MedicationCreateOrConnectWithoutCandidateInput[]
    upsert?: MedicationUpsertWithWhereUniqueWithoutCandidateInput | MedicationUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: MedicationCreateManyCandidateInputEnvelope
    set?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    disconnect?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    delete?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    connect?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    update?: MedicationUpdateWithWhereUniqueWithoutCandidateInput | MedicationUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: MedicationUpdateManyWithWhereWithoutCandidateInput | MedicationUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: MedicationScalarWhereInput | MedicationScalarWhereInput[]
  }

  export type BankAccountUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<BankAccountCreateWithoutCandidateInput, BankAccountUncheckedCreateWithoutCandidateInput> | BankAccountCreateWithoutCandidateInput[] | BankAccountUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: BankAccountCreateOrConnectWithoutCandidateInput | BankAccountCreateOrConnectWithoutCandidateInput[]
    upsert?: BankAccountUpsertWithWhereUniqueWithoutCandidateInput | BankAccountUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: BankAccountCreateManyCandidateInputEnvelope
    set?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    disconnect?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    delete?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    connect?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    update?: BankAccountUpdateWithWhereUniqueWithoutCandidateInput | BankAccountUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: BankAccountUpdateManyWithWhereWithoutCandidateInput | BankAccountUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: BankAccountScalarWhereInput | BankAccountScalarWhereInput[]
  }

  export type DeclarationsUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<DeclarationsCreateWithoutCandidateInput, DeclarationsUncheckedCreateWithoutCandidateInput> | DeclarationsCreateWithoutCandidateInput[] | DeclarationsUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: DeclarationsCreateOrConnectWithoutCandidateInput | DeclarationsCreateOrConnectWithoutCandidateInput[]
    upsert?: DeclarationsUpsertWithWhereUniqueWithoutCandidateInput | DeclarationsUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: DeclarationsCreateManyCandidateInputEnvelope
    set?: DeclarationsWhereUniqueInput | DeclarationsWhereUniqueInput[]
    disconnect?: DeclarationsWhereUniqueInput | DeclarationsWhereUniqueInput[]
    delete?: DeclarationsWhereUniqueInput | DeclarationsWhereUniqueInput[]
    connect?: DeclarationsWhereUniqueInput | DeclarationsWhereUniqueInput[]
    update?: DeclarationsUpdateWithWhereUniqueWithoutCandidateInput | DeclarationsUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: DeclarationsUpdateManyWithWhereWithoutCandidateInput | DeclarationsUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: DeclarationsScalarWhereInput | DeclarationsScalarWhereInput[]
  }

  export type ApplicationUncheckedUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<ApplicationCreateWithoutCandidateInput, ApplicationUncheckedCreateWithoutCandidateInput> | ApplicationCreateWithoutCandidateInput[] | ApplicationUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutCandidateInput | ApplicationCreateOrConnectWithoutCandidateInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutCandidateInput | ApplicationUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: ApplicationCreateManyCandidateInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutCandidateInput | ApplicationUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutCandidateInput | ApplicationUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type CreditCardUncheckedUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<CreditCardCreateWithoutCandidateInput, CreditCardUncheckedCreateWithoutCandidateInput> | CreditCardCreateWithoutCandidateInput[] | CreditCardUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: CreditCardCreateOrConnectWithoutCandidateInput | CreditCardCreateOrConnectWithoutCandidateInput[]
    upsert?: CreditCardUpsertWithWhereUniqueWithoutCandidateInput | CreditCardUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: CreditCardCreateManyCandidateInputEnvelope
    set?: CreditCardWhereUniqueInput | CreditCardWhereUniqueInput[]
    disconnect?: CreditCardWhereUniqueInput | CreditCardWhereUniqueInput[]
    delete?: CreditCardWhereUniqueInput | CreditCardWhereUniqueInput[]
    connect?: CreditCardWhereUniqueInput | CreditCardWhereUniqueInput[]
    update?: CreditCardUpdateWithWhereUniqueWithoutCandidateInput | CreditCardUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: CreditCardUpdateManyWithWhereWithoutCandidateInput | CreditCardUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: CreditCardScalarWhereInput | CreditCardScalarWhereInput[]
  }

  export type ExpenseUncheckedUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<ExpenseCreateWithoutCandidateInput, ExpenseUncheckedCreateWithoutCandidateInput> | ExpenseCreateWithoutCandidateInput[] | ExpenseUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutCandidateInput | ExpenseCreateOrConnectWithoutCandidateInput[]
    upsert?: ExpenseUpsertWithWhereUniqueWithoutCandidateInput | ExpenseUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: ExpenseCreateManyCandidateInputEnvelope
    set?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    disconnect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    delete?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    update?: ExpenseUpdateWithWhereUniqueWithoutCandidateInput | ExpenseUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: ExpenseUpdateManyWithWhereWithoutCandidateInput | ExpenseUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: ExpenseScalarWhereInput | ExpenseScalarWhereInput[]
  }

  export type FinancingUncheckedUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<FinancingCreateWithoutCandidateInput, FinancingUncheckedCreateWithoutCandidateInput> | FinancingCreateWithoutCandidateInput[] | FinancingUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: FinancingCreateOrConnectWithoutCandidateInput | FinancingCreateOrConnectWithoutCandidateInput[]
    upsert?: FinancingUpsertWithWhereUniqueWithoutCandidateInput | FinancingUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: FinancingCreateManyCandidateInputEnvelope
    set?: FinancingWhereUniqueInput | FinancingWhereUniqueInput[]
    disconnect?: FinancingWhereUniqueInput | FinancingWhereUniqueInput[]
    delete?: FinancingWhereUniqueInput | FinancingWhereUniqueInput[]
    connect?: FinancingWhereUniqueInput | FinancingWhereUniqueInput[]
    update?: FinancingUpdateWithWhereUniqueWithoutCandidateInput | FinancingUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: FinancingUpdateManyWithWhereWithoutCandidateInput | FinancingUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: FinancingScalarWhereInput | FinancingScalarWhereInput[]
  }

  export type IdentityDetailsUncheckedUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<IdentityDetailsCreateWithoutCandidateInput, IdentityDetailsUncheckedCreateWithoutCandidateInput> | IdentityDetailsCreateWithoutCandidateInput[] | IdentityDetailsUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: IdentityDetailsCreateOrConnectWithoutCandidateInput | IdentityDetailsCreateOrConnectWithoutCandidateInput[]
    upsert?: IdentityDetailsUpsertWithWhereUniqueWithoutCandidateInput | IdentityDetailsUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: IdentityDetailsCreateManyCandidateInputEnvelope
    set?: IdentityDetailsWhereUniqueInput | IdentityDetailsWhereUniqueInput[]
    disconnect?: IdentityDetailsWhereUniqueInput | IdentityDetailsWhereUniqueInput[]
    delete?: IdentityDetailsWhereUniqueInput | IdentityDetailsWhereUniqueInput[]
    connect?: IdentityDetailsWhereUniqueInput | IdentityDetailsWhereUniqueInput[]
    update?: IdentityDetailsUpdateWithWhereUniqueWithoutCandidateInput | IdentityDetailsUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: IdentityDetailsUpdateManyWithWhereWithoutCandidateInput | IdentityDetailsUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: IdentityDetailsScalarWhereInput | IdentityDetailsScalarWhereInput[]
  }

  export type FamilyMemberIncomeUncheckedUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<FamilyMemberIncomeCreateWithoutCandidateInput, FamilyMemberIncomeUncheckedCreateWithoutCandidateInput> | FamilyMemberIncomeCreateWithoutCandidateInput[] | FamilyMemberIncomeUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: FamilyMemberIncomeCreateOrConnectWithoutCandidateInput | FamilyMemberIncomeCreateOrConnectWithoutCandidateInput[]
    upsert?: FamilyMemberIncomeUpsertWithWhereUniqueWithoutCandidateInput | FamilyMemberIncomeUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: FamilyMemberIncomeCreateManyCandidateInputEnvelope
    set?: FamilyMemberIncomeWhereUniqueInput | FamilyMemberIncomeWhereUniqueInput[]
    disconnect?: FamilyMemberIncomeWhereUniqueInput | FamilyMemberIncomeWhereUniqueInput[]
    delete?: FamilyMemberIncomeWhereUniqueInput | FamilyMemberIncomeWhereUniqueInput[]
    connect?: FamilyMemberIncomeWhereUniqueInput | FamilyMemberIncomeWhereUniqueInput[]
    update?: FamilyMemberIncomeUpdateWithWhereUniqueWithoutCandidateInput | FamilyMemberIncomeUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: FamilyMemberIncomeUpdateManyWithWhereWithoutCandidateInput | FamilyMemberIncomeUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: FamilyMemberIncomeScalarWhereInput | FamilyMemberIncomeScalarWhereInput[]
  }

  export type LoanUncheckedUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<LoanCreateWithoutCandidateInput, LoanUncheckedCreateWithoutCandidateInput> | LoanCreateWithoutCandidateInput[] | LoanUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: LoanCreateOrConnectWithoutCandidateInput | LoanCreateOrConnectWithoutCandidateInput[]
    upsert?: LoanUpsertWithWhereUniqueWithoutCandidateInput | LoanUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: LoanCreateManyCandidateInputEnvelope
    set?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    disconnect?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    delete?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    connect?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    update?: LoanUpdateWithWhereUniqueWithoutCandidateInput | LoanUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: LoanUpdateManyWithWhereWithoutCandidateInput | LoanUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: LoanScalarWhereInput | LoanScalarWhereInput[]
  }

  export type OtherExpenseUncheckedUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<OtherExpenseCreateWithoutCandidateInput, OtherExpenseUncheckedCreateWithoutCandidateInput> | OtherExpenseCreateWithoutCandidateInput[] | OtherExpenseUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: OtherExpenseCreateOrConnectWithoutCandidateInput | OtherExpenseCreateOrConnectWithoutCandidateInput[]
    upsert?: OtherExpenseUpsertWithWhereUniqueWithoutCandidateInput | OtherExpenseUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: OtherExpenseCreateManyCandidateInputEnvelope
    set?: OtherExpenseWhereUniqueInput | OtherExpenseWhereUniqueInput[]
    disconnect?: OtherExpenseWhereUniqueInput | OtherExpenseWhereUniqueInput[]
    delete?: OtherExpenseWhereUniqueInput | OtherExpenseWhereUniqueInput[]
    connect?: OtherExpenseWhereUniqueInput | OtherExpenseWhereUniqueInput[]
    update?: OtherExpenseUpdateWithWhereUniqueWithoutCandidateInput | OtherExpenseUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: OtherExpenseUpdateManyWithWhereWithoutCandidateInput | OtherExpenseUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: OtherExpenseScalarWhereInput | OtherExpenseScalarWhereInput[]
  }

  export type VehicleUncheckedUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<VehicleCreateWithoutCandidateInput, VehicleUncheckedCreateWithoutCandidateInput> | VehicleCreateWithoutCandidateInput[] | VehicleUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: VehicleCreateOrConnectWithoutCandidateInput | VehicleCreateOrConnectWithoutCandidateInput[]
    upsert?: VehicleUpsertWithWhereUniqueWithoutCandidateInput | VehicleUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: VehicleCreateManyCandidateInputEnvelope
    set?: VehicleWhereUniqueInput | VehicleWhereUniqueInput[]
    disconnect?: VehicleWhereUniqueInput | VehicleWhereUniqueInput[]
    delete?: VehicleWhereUniqueInput | VehicleWhereUniqueInput[]
    connect?: VehicleWhereUniqueInput | VehicleWhereUniqueInput[]
    update?: VehicleUpdateWithWhereUniqueWithoutCandidateInput | VehicleUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: VehicleUpdateManyWithWhereWithoutCandidateInput | VehicleUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: VehicleScalarWhereInput | VehicleScalarWhereInput[]
  }

  export type FamilyMemberUncheckedUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<FamilyMemberCreateWithoutCandidateInput, FamilyMemberUncheckedCreateWithoutCandidateInput> | FamilyMemberCreateWithoutCandidateInput[] | FamilyMemberUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutCandidateInput | FamilyMemberCreateOrConnectWithoutCandidateInput[]
    upsert?: FamilyMemberUpsertWithWhereUniqueWithoutCandidateInput | FamilyMemberUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: FamilyMemberCreateManyCandidateInputEnvelope
    set?: FamilyMemberWhereUniqueInput | FamilyMemberWhereUniqueInput[]
    disconnect?: FamilyMemberWhereUniqueInput | FamilyMemberWhereUniqueInput[]
    delete?: FamilyMemberWhereUniqueInput | FamilyMemberWhereUniqueInput[]
    connect?: FamilyMemberWhereUniqueInput | FamilyMemberWhereUniqueInput[]
    update?: FamilyMemberUpdateWithWhereUniqueWithoutCandidateInput | FamilyMemberUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: FamilyMemberUpdateManyWithWhereWithoutCandidateInput | FamilyMemberUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: FamilyMemberScalarWhereInput | FamilyMemberScalarWhereInput[]
  }

  export type HousingUncheckedUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<HousingCreateWithoutCandidateInput, HousingUncheckedCreateWithoutCandidateInput> | HousingCreateWithoutCandidateInput[] | HousingUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: HousingCreateOrConnectWithoutCandidateInput | HousingCreateOrConnectWithoutCandidateInput[]
    upsert?: HousingUpsertWithWhereUniqueWithoutCandidateInput | HousingUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: HousingCreateManyCandidateInputEnvelope
    set?: HousingWhereUniqueInput | HousingWhereUniqueInput[]
    disconnect?: HousingWhereUniqueInput | HousingWhereUniqueInput[]
    delete?: HousingWhereUniqueInput | HousingWhereUniqueInput[]
    connect?: HousingWhereUniqueInput | HousingWhereUniqueInput[]
    update?: HousingUpdateWithWhereUniqueWithoutCandidateInput | HousingUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: HousingUpdateManyWithWhereWithoutCandidateInput | HousingUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: HousingScalarWhereInput | HousingScalarWhereInput[]
  }

  export type MonthlyIncomeUncheckedUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<MonthlyIncomeCreateWithoutCandidateInput, MonthlyIncomeUncheckedCreateWithoutCandidateInput> | MonthlyIncomeCreateWithoutCandidateInput[] | MonthlyIncomeUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: MonthlyIncomeCreateOrConnectWithoutCandidateInput | MonthlyIncomeCreateOrConnectWithoutCandidateInput[]
    upsert?: MonthlyIncomeUpsertWithWhereUniqueWithoutCandidateInput | MonthlyIncomeUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: MonthlyIncomeCreateManyCandidateInputEnvelope
    set?: MonthlyIncomeWhereUniqueInput | MonthlyIncomeWhereUniqueInput[]
    disconnect?: MonthlyIncomeWhereUniqueInput | MonthlyIncomeWhereUniqueInput[]
    delete?: MonthlyIncomeWhereUniqueInput | MonthlyIncomeWhereUniqueInput[]
    connect?: MonthlyIncomeWhereUniqueInput | MonthlyIncomeWhereUniqueInput[]
    update?: MonthlyIncomeUpdateWithWhereUniqueWithoutCandidateInput | MonthlyIncomeUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: MonthlyIncomeUpdateManyWithWhereWithoutCandidateInput | MonthlyIncomeUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: MonthlyIncomeScalarWhereInput | MonthlyIncomeScalarWhereInput[]
  }

  export type FamilyMemberDiseaseUncheckedUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<FamilyMemberDiseaseCreateWithoutCandidateInput, FamilyMemberDiseaseUncheckedCreateWithoutCandidateInput> | FamilyMemberDiseaseCreateWithoutCandidateInput[] | FamilyMemberDiseaseUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: FamilyMemberDiseaseCreateOrConnectWithoutCandidateInput | FamilyMemberDiseaseCreateOrConnectWithoutCandidateInput[]
    upsert?: FamilyMemberDiseaseUpsertWithWhereUniqueWithoutCandidateInput | FamilyMemberDiseaseUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: FamilyMemberDiseaseCreateManyCandidateInputEnvelope
    set?: FamilyMemberDiseaseWhereUniqueInput | FamilyMemberDiseaseWhereUniqueInput[]
    disconnect?: FamilyMemberDiseaseWhereUniqueInput | FamilyMemberDiseaseWhereUniqueInput[]
    delete?: FamilyMemberDiseaseWhereUniqueInput | FamilyMemberDiseaseWhereUniqueInput[]
    connect?: FamilyMemberDiseaseWhereUniqueInput | FamilyMemberDiseaseWhereUniqueInput[]
    update?: FamilyMemberDiseaseUpdateWithWhereUniqueWithoutCandidateInput | FamilyMemberDiseaseUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: FamilyMemberDiseaseUpdateManyWithWhereWithoutCandidateInput | FamilyMemberDiseaseUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: FamilyMemberDiseaseScalarWhereInput | FamilyMemberDiseaseScalarWhereInput[]
  }

  export type MedicationUncheckedUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<MedicationCreateWithoutCandidateInput, MedicationUncheckedCreateWithoutCandidateInput> | MedicationCreateWithoutCandidateInput[] | MedicationUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: MedicationCreateOrConnectWithoutCandidateInput | MedicationCreateOrConnectWithoutCandidateInput[]
    upsert?: MedicationUpsertWithWhereUniqueWithoutCandidateInput | MedicationUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: MedicationCreateManyCandidateInputEnvelope
    set?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    disconnect?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    delete?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    connect?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    update?: MedicationUpdateWithWhereUniqueWithoutCandidateInput | MedicationUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: MedicationUpdateManyWithWhereWithoutCandidateInput | MedicationUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: MedicationScalarWhereInput | MedicationScalarWhereInput[]
  }

  export type BankAccountUncheckedUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<BankAccountCreateWithoutCandidateInput, BankAccountUncheckedCreateWithoutCandidateInput> | BankAccountCreateWithoutCandidateInput[] | BankAccountUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: BankAccountCreateOrConnectWithoutCandidateInput | BankAccountCreateOrConnectWithoutCandidateInput[]
    upsert?: BankAccountUpsertWithWhereUniqueWithoutCandidateInput | BankAccountUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: BankAccountCreateManyCandidateInputEnvelope
    set?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    disconnect?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    delete?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    connect?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    update?: BankAccountUpdateWithWhereUniqueWithoutCandidateInput | BankAccountUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: BankAccountUpdateManyWithWhereWithoutCandidateInput | BankAccountUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: BankAccountScalarWhereInput | BankAccountScalarWhereInput[]
  }

  export type DeclarationsUncheckedUpdateManyWithoutCandidateNestedInput = {
    create?: XOR<DeclarationsCreateWithoutCandidateInput, DeclarationsUncheckedCreateWithoutCandidateInput> | DeclarationsCreateWithoutCandidateInput[] | DeclarationsUncheckedCreateWithoutCandidateInput[]
    connectOrCreate?: DeclarationsCreateOrConnectWithoutCandidateInput | DeclarationsCreateOrConnectWithoutCandidateInput[]
    upsert?: DeclarationsUpsertWithWhereUniqueWithoutCandidateInput | DeclarationsUpsertWithWhereUniqueWithoutCandidateInput[]
    createMany?: DeclarationsCreateManyCandidateInputEnvelope
    set?: DeclarationsWhereUniqueInput | DeclarationsWhereUniqueInput[]
    disconnect?: DeclarationsWhereUniqueInput | DeclarationsWhereUniqueInput[]
    delete?: DeclarationsWhereUniqueInput | DeclarationsWhereUniqueInput[]
    connect?: DeclarationsWhereUniqueInput | DeclarationsWhereUniqueInput[]
    update?: DeclarationsUpdateWithWhereUniqueWithoutCandidateInput | DeclarationsUpdateWithWhereUniqueWithoutCandidateInput[]
    updateMany?: DeclarationsUpdateManyWithWhereWithoutCandidateInput | DeclarationsUpdateManyWithWhereWithoutCandidateInput[]
    deleteMany?: DeclarationsScalarWhereInput | DeclarationsScalarWhereInput[]
  }

  export type EntityDirectorCreateNestedOneWithoutUserInput = {
    create?: XOR<EntityDirectorCreateWithoutUserInput, EntityDirectorUncheckedCreateWithoutUserInput>
    connectOrCreate?: EntityDirectorCreateOrConnectWithoutUserInput
    connect?: EntityDirectorWhereUniqueInput
  }

  export type EntitySubsidiaryCreateNestedOneWithoutUserInput = {
    create?: XOR<EntitySubsidiaryCreateWithoutUserInput, EntitySubsidiaryUncheckedCreateWithoutUserInput>
    connectOrCreate?: EntitySubsidiaryCreateOrConnectWithoutUserInput
    connect?: EntitySubsidiaryWhereUniqueInput
  }

  export type SocialAssistantCreateNestedOneWithoutUserInput = {
    create?: XOR<SocialAssistantCreateWithoutUserInput, SocialAssistantUncheckedCreateWithoutUserInput>
    connectOrCreate?: SocialAssistantCreateOrConnectWithoutUserInput
    connect?: SocialAssistantWhereUniqueInput
  }

  export type EntityCreateNestedOneWithoutUserInput = {
    create?: XOR<EntityCreateWithoutUserInput, EntityUncheckedCreateWithoutUserInput>
    connectOrCreate?: EntityCreateOrConnectWithoutUserInput
    connect?: EntityWhereUniqueInput
  }

  export type EntityDirectorUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<EntityDirectorCreateWithoutUserInput, EntityDirectorUncheckedCreateWithoutUserInput>
    connectOrCreate?: EntityDirectorCreateOrConnectWithoutUserInput
    connect?: EntityDirectorWhereUniqueInput
  }

  export type EntitySubsidiaryUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<EntitySubsidiaryCreateWithoutUserInput, EntitySubsidiaryUncheckedCreateWithoutUserInput>
    connectOrCreate?: EntitySubsidiaryCreateOrConnectWithoutUserInput
    connect?: EntitySubsidiaryWhereUniqueInput
  }

  export type SocialAssistantUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<SocialAssistantCreateWithoutUserInput, SocialAssistantUncheckedCreateWithoutUserInput>
    connectOrCreate?: SocialAssistantCreateOrConnectWithoutUserInput
    connect?: SocialAssistantWhereUniqueInput
  }

  export type EntityUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<EntityCreateWithoutUserInput, EntityUncheckedCreateWithoutUserInput>
    connectOrCreate?: EntityCreateOrConnectWithoutUserInput
    connect?: EntityWhereUniqueInput
  }

  export type EntityDirectorUpdateOneWithoutUserNestedInput = {
    create?: XOR<EntityDirectorCreateWithoutUserInput, EntityDirectorUncheckedCreateWithoutUserInput>
    connectOrCreate?: EntityDirectorCreateOrConnectWithoutUserInput
    upsert?: EntityDirectorUpsertWithoutUserInput
    disconnect?: EntityDirectorWhereInput | boolean
    delete?: EntityDirectorWhereInput | boolean
    connect?: EntityDirectorWhereUniqueInput
    update?: XOR<XOR<EntityDirectorUpdateToOneWithWhereWithoutUserInput, EntityDirectorUpdateWithoutUserInput>, EntityDirectorUncheckedUpdateWithoutUserInput>
  }

  export type EntitySubsidiaryUpdateOneWithoutUserNestedInput = {
    create?: XOR<EntitySubsidiaryCreateWithoutUserInput, EntitySubsidiaryUncheckedCreateWithoutUserInput>
    connectOrCreate?: EntitySubsidiaryCreateOrConnectWithoutUserInput
    upsert?: EntitySubsidiaryUpsertWithoutUserInput
    disconnect?: EntitySubsidiaryWhereInput | boolean
    delete?: EntitySubsidiaryWhereInput | boolean
    connect?: EntitySubsidiaryWhereUniqueInput
    update?: XOR<XOR<EntitySubsidiaryUpdateToOneWithWhereWithoutUserInput, EntitySubsidiaryUpdateWithoutUserInput>, EntitySubsidiaryUncheckedUpdateWithoutUserInput>
  }

  export type SocialAssistantUpdateOneWithoutUserNestedInput = {
    create?: XOR<SocialAssistantCreateWithoutUserInput, SocialAssistantUncheckedCreateWithoutUserInput>
    connectOrCreate?: SocialAssistantCreateOrConnectWithoutUserInput
    upsert?: SocialAssistantUpsertWithoutUserInput
    disconnect?: SocialAssistantWhereInput | boolean
    delete?: SocialAssistantWhereInput | boolean
    connect?: SocialAssistantWhereUniqueInput
    update?: XOR<XOR<SocialAssistantUpdateToOneWithWhereWithoutUserInput, SocialAssistantUpdateWithoutUserInput>, SocialAssistantUncheckedUpdateWithoutUserInput>
  }

  export type EntityUpdateOneWithoutUserNestedInput = {
    create?: XOR<EntityCreateWithoutUserInput, EntityUncheckedCreateWithoutUserInput>
    connectOrCreate?: EntityCreateOrConnectWithoutUserInput
    upsert?: EntityUpsertWithoutUserInput
    disconnect?: EntityWhereInput | boolean
    delete?: EntityWhereInput | boolean
    connect?: EntityWhereUniqueInput
    update?: XOR<XOR<EntityUpdateToOneWithWhereWithoutUserInput, EntityUpdateWithoutUserInput>, EntityUncheckedUpdateWithoutUserInput>
  }

  export type EntityDirectorUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<EntityDirectorCreateWithoutUserInput, EntityDirectorUncheckedCreateWithoutUserInput>
    connectOrCreate?: EntityDirectorCreateOrConnectWithoutUserInput
    upsert?: EntityDirectorUpsertWithoutUserInput
    disconnect?: EntityDirectorWhereInput | boolean
    delete?: EntityDirectorWhereInput | boolean
    connect?: EntityDirectorWhereUniqueInput
    update?: XOR<XOR<EntityDirectorUpdateToOneWithWhereWithoutUserInput, EntityDirectorUpdateWithoutUserInput>, EntityDirectorUncheckedUpdateWithoutUserInput>
  }

  export type EntitySubsidiaryUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<EntitySubsidiaryCreateWithoutUserInput, EntitySubsidiaryUncheckedCreateWithoutUserInput>
    connectOrCreate?: EntitySubsidiaryCreateOrConnectWithoutUserInput
    upsert?: EntitySubsidiaryUpsertWithoutUserInput
    disconnect?: EntitySubsidiaryWhereInput | boolean
    delete?: EntitySubsidiaryWhereInput | boolean
    connect?: EntitySubsidiaryWhereUniqueInput
    update?: XOR<XOR<EntitySubsidiaryUpdateToOneWithWhereWithoutUserInput, EntitySubsidiaryUpdateWithoutUserInput>, EntitySubsidiaryUncheckedUpdateWithoutUserInput>
  }

  export type SocialAssistantUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<SocialAssistantCreateWithoutUserInput, SocialAssistantUncheckedCreateWithoutUserInput>
    connectOrCreate?: SocialAssistantCreateOrConnectWithoutUserInput
    upsert?: SocialAssistantUpsertWithoutUserInput
    disconnect?: SocialAssistantWhereInput | boolean
    delete?: SocialAssistantWhereInput | boolean
    connect?: SocialAssistantWhereUniqueInput
    update?: XOR<XOR<SocialAssistantUpdateToOneWithWhereWithoutUserInput, SocialAssistantUpdateWithoutUserInput>, SocialAssistantUncheckedUpdateWithoutUserInput>
  }

  export type EntityUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<EntityCreateWithoutUserInput, EntityUncheckedCreateWithoutUserInput>
    connectOrCreate?: EntityCreateOrConnectWithoutUserInput
    upsert?: EntityUpsertWithoutUserInput
    disconnect?: EntityWhereInput | boolean
    delete?: EntityWhereInput | boolean
    connect?: EntityWhereUniqueInput
    update?: XOR<XOR<EntityUpdateToOneWithWhereWithoutUserInput, EntityUpdateWithoutUserInput>, EntityUncheckedUpdateWithoutUserInput>
  }

  export type IdentityDetailsCreateNestedManyWithoutResponsibleInput = {
    create?: XOR<IdentityDetailsCreateWithoutResponsibleInput, IdentityDetailsUncheckedCreateWithoutResponsibleInput> | IdentityDetailsCreateWithoutResponsibleInput[] | IdentityDetailsUncheckedCreateWithoutResponsibleInput[]
    connectOrCreate?: IdentityDetailsCreateOrConnectWithoutResponsibleInput | IdentityDetailsCreateOrConnectWithoutResponsibleInput[]
    createMany?: IdentityDetailsCreateManyResponsibleInputEnvelope
    connect?: IdentityDetailsWhereUniqueInput | IdentityDetailsWhereUniqueInput[]
  }

  export type CandidateCreateNestedManyWithoutResponsibleInput = {
    create?: XOR<CandidateCreateWithoutResponsibleInput, CandidateUncheckedCreateWithoutResponsibleInput> | CandidateCreateWithoutResponsibleInput[] | CandidateUncheckedCreateWithoutResponsibleInput[]
    connectOrCreate?: CandidateCreateOrConnectWithoutResponsibleInput | CandidateCreateOrConnectWithoutResponsibleInput[]
    createMany?: CandidateCreateManyResponsibleInputEnvelope
    connect?: CandidateWhereUniqueInput | CandidateWhereUniqueInput[]
  }

  export type HousingCreateNestedManyWithoutResponsibleInput = {
    create?: XOR<HousingCreateWithoutResponsibleInput, HousingUncheckedCreateWithoutResponsibleInput> | HousingCreateWithoutResponsibleInput[] | HousingUncheckedCreateWithoutResponsibleInput[]
    connectOrCreate?: HousingCreateOrConnectWithoutResponsibleInput | HousingCreateOrConnectWithoutResponsibleInput[]
    createMany?: HousingCreateManyResponsibleInputEnvelope
    connect?: HousingWhereUniqueInput | HousingWhereUniqueInput[]
  }

  export type FamilyMemberCreateNestedManyWithoutLegalResponsibleInput = {
    create?: XOR<FamilyMemberCreateWithoutLegalResponsibleInput, FamilyMemberUncheckedCreateWithoutLegalResponsibleInput> | FamilyMemberCreateWithoutLegalResponsibleInput[] | FamilyMemberUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutLegalResponsibleInput | FamilyMemberCreateOrConnectWithoutLegalResponsibleInput[]
    createMany?: FamilyMemberCreateManyLegalResponsibleInputEnvelope
    connect?: FamilyMemberWhereUniqueInput | FamilyMemberWhereUniqueInput[]
  }

  export type CreditCardCreateNestedManyWithoutLegalResponsibleInput = {
    create?: XOR<CreditCardCreateWithoutLegalResponsibleInput, CreditCardUncheckedCreateWithoutLegalResponsibleInput> | CreditCardCreateWithoutLegalResponsibleInput[] | CreditCardUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: CreditCardCreateOrConnectWithoutLegalResponsibleInput | CreditCardCreateOrConnectWithoutLegalResponsibleInput[]
    createMany?: CreditCardCreateManyLegalResponsibleInputEnvelope
    connect?: CreditCardWhereUniqueInput | CreditCardWhereUniqueInput[]
  }

  export type ExpenseCreateNestedManyWithoutLegalResponsibleInput = {
    create?: XOR<ExpenseCreateWithoutLegalResponsibleInput, ExpenseUncheckedCreateWithoutLegalResponsibleInput> | ExpenseCreateWithoutLegalResponsibleInput[] | ExpenseUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutLegalResponsibleInput | ExpenseCreateOrConnectWithoutLegalResponsibleInput[]
    createMany?: ExpenseCreateManyLegalResponsibleInputEnvelope
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
  }

  export type FinancingCreateNestedManyWithoutLegalResponsibleInput = {
    create?: XOR<FinancingCreateWithoutLegalResponsibleInput, FinancingUncheckedCreateWithoutLegalResponsibleInput> | FinancingCreateWithoutLegalResponsibleInput[] | FinancingUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: FinancingCreateOrConnectWithoutLegalResponsibleInput | FinancingCreateOrConnectWithoutLegalResponsibleInput[]
    createMany?: FinancingCreateManyLegalResponsibleInputEnvelope
    connect?: FinancingWhereUniqueInput | FinancingWhereUniqueInput[]
  }

  export type LoanCreateNestedManyWithoutLegalResponsibleInput = {
    create?: XOR<LoanCreateWithoutLegalResponsibleInput, LoanUncheckedCreateWithoutLegalResponsibleInput> | LoanCreateWithoutLegalResponsibleInput[] | LoanUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: LoanCreateOrConnectWithoutLegalResponsibleInput | LoanCreateOrConnectWithoutLegalResponsibleInput[]
    createMany?: LoanCreateManyLegalResponsibleInputEnvelope
    connect?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
  }

  export type OtherExpenseCreateNestedManyWithoutLegalResponsibleInput = {
    create?: XOR<OtherExpenseCreateWithoutLegalResponsibleInput, OtherExpenseUncheckedCreateWithoutLegalResponsibleInput> | OtherExpenseCreateWithoutLegalResponsibleInput[] | OtherExpenseUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: OtherExpenseCreateOrConnectWithoutLegalResponsibleInput | OtherExpenseCreateOrConnectWithoutLegalResponsibleInput[]
    createMany?: OtherExpenseCreateManyLegalResponsibleInputEnvelope
    connect?: OtherExpenseWhereUniqueInput | OtherExpenseWhereUniqueInput[]
  }

  export type VehicleCreateNestedManyWithoutLegalResponsibleInput = {
    create?: XOR<VehicleCreateWithoutLegalResponsibleInput, VehicleUncheckedCreateWithoutLegalResponsibleInput> | VehicleCreateWithoutLegalResponsibleInput[] | VehicleUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: VehicleCreateOrConnectWithoutLegalResponsibleInput | VehicleCreateOrConnectWithoutLegalResponsibleInput[]
    createMany?: VehicleCreateManyLegalResponsibleInputEnvelope
    connect?: VehicleWhereUniqueInput | VehicleWhereUniqueInput[]
  }

  export type FamilyMemberDiseaseCreateNestedManyWithoutLegalResponsibleInput = {
    create?: XOR<FamilyMemberDiseaseCreateWithoutLegalResponsibleInput, FamilyMemberDiseaseUncheckedCreateWithoutLegalResponsibleInput> | FamilyMemberDiseaseCreateWithoutLegalResponsibleInput[] | FamilyMemberDiseaseUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: FamilyMemberDiseaseCreateOrConnectWithoutLegalResponsibleInput | FamilyMemberDiseaseCreateOrConnectWithoutLegalResponsibleInput[]
    createMany?: FamilyMemberDiseaseCreateManyLegalResponsibleInputEnvelope
    connect?: FamilyMemberDiseaseWhereUniqueInput | FamilyMemberDiseaseWhereUniqueInput[]
  }

  export type MedicationCreateNestedManyWithoutLegalResponsibleInput = {
    create?: XOR<MedicationCreateWithoutLegalResponsibleInput, MedicationUncheckedCreateWithoutLegalResponsibleInput> | MedicationCreateWithoutLegalResponsibleInput[] | MedicationUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: MedicationCreateOrConnectWithoutLegalResponsibleInput | MedicationCreateOrConnectWithoutLegalResponsibleInput[]
    createMany?: MedicationCreateManyLegalResponsibleInputEnvelope
    connect?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
  }

  export type ApplicationCreateNestedManyWithoutResponsibleInput = {
    create?: XOR<ApplicationCreateWithoutResponsibleInput, ApplicationUncheckedCreateWithoutResponsibleInput> | ApplicationCreateWithoutResponsibleInput[] | ApplicationUncheckedCreateWithoutResponsibleInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutResponsibleInput | ApplicationCreateOrConnectWithoutResponsibleInput[]
    createMany?: ApplicationCreateManyResponsibleInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type FamilyMemberIncomeCreateNestedManyWithoutLegalResponsibleInput = {
    create?: XOR<FamilyMemberIncomeCreateWithoutLegalResponsibleInput, FamilyMemberIncomeUncheckedCreateWithoutLegalResponsibleInput> | FamilyMemberIncomeCreateWithoutLegalResponsibleInput[] | FamilyMemberIncomeUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: FamilyMemberIncomeCreateOrConnectWithoutLegalResponsibleInput | FamilyMemberIncomeCreateOrConnectWithoutLegalResponsibleInput[]
    createMany?: FamilyMemberIncomeCreateManyLegalResponsibleInputEnvelope
    connect?: FamilyMemberIncomeWhereUniqueInput | FamilyMemberIncomeWhereUniqueInput[]
  }

  export type MonthlyIncomeCreateNestedManyWithoutLegalResponsibleInput = {
    create?: XOR<MonthlyIncomeCreateWithoutLegalResponsibleInput, MonthlyIncomeUncheckedCreateWithoutLegalResponsibleInput> | MonthlyIncomeCreateWithoutLegalResponsibleInput[] | MonthlyIncomeUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: MonthlyIncomeCreateOrConnectWithoutLegalResponsibleInput | MonthlyIncomeCreateOrConnectWithoutLegalResponsibleInput[]
    createMany?: MonthlyIncomeCreateManyLegalResponsibleInputEnvelope
    connect?: MonthlyIncomeWhereUniqueInput | MonthlyIncomeWhereUniqueInput[]
  }

  export type BankAccountCreateNestedManyWithoutLegalResponsibleInput = {
    create?: XOR<BankAccountCreateWithoutLegalResponsibleInput, BankAccountUncheckedCreateWithoutLegalResponsibleInput> | BankAccountCreateWithoutLegalResponsibleInput[] | BankAccountUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: BankAccountCreateOrConnectWithoutLegalResponsibleInput | BankAccountCreateOrConnectWithoutLegalResponsibleInput[]
    createMany?: BankAccountCreateManyLegalResponsibleInputEnvelope
    connect?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
  }

  export type DeclarationsCreateNestedManyWithoutLegalResponsibleInput = {
    create?: XOR<DeclarationsCreateWithoutLegalResponsibleInput, DeclarationsUncheckedCreateWithoutLegalResponsibleInput> | DeclarationsCreateWithoutLegalResponsibleInput[] | DeclarationsUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: DeclarationsCreateOrConnectWithoutLegalResponsibleInput | DeclarationsCreateOrConnectWithoutLegalResponsibleInput[]
    createMany?: DeclarationsCreateManyLegalResponsibleInputEnvelope
    connect?: DeclarationsWhereUniqueInput | DeclarationsWhereUniqueInput[]
  }

  export type IdentityDetailsUncheckedCreateNestedManyWithoutResponsibleInput = {
    create?: XOR<IdentityDetailsCreateWithoutResponsibleInput, IdentityDetailsUncheckedCreateWithoutResponsibleInput> | IdentityDetailsCreateWithoutResponsibleInput[] | IdentityDetailsUncheckedCreateWithoutResponsibleInput[]
    connectOrCreate?: IdentityDetailsCreateOrConnectWithoutResponsibleInput | IdentityDetailsCreateOrConnectWithoutResponsibleInput[]
    createMany?: IdentityDetailsCreateManyResponsibleInputEnvelope
    connect?: IdentityDetailsWhereUniqueInput | IdentityDetailsWhereUniqueInput[]
  }

  export type CandidateUncheckedCreateNestedManyWithoutResponsibleInput = {
    create?: XOR<CandidateCreateWithoutResponsibleInput, CandidateUncheckedCreateWithoutResponsibleInput> | CandidateCreateWithoutResponsibleInput[] | CandidateUncheckedCreateWithoutResponsibleInput[]
    connectOrCreate?: CandidateCreateOrConnectWithoutResponsibleInput | CandidateCreateOrConnectWithoutResponsibleInput[]
    createMany?: CandidateCreateManyResponsibleInputEnvelope
    connect?: CandidateWhereUniqueInput | CandidateWhereUniqueInput[]
  }

  export type HousingUncheckedCreateNestedManyWithoutResponsibleInput = {
    create?: XOR<HousingCreateWithoutResponsibleInput, HousingUncheckedCreateWithoutResponsibleInput> | HousingCreateWithoutResponsibleInput[] | HousingUncheckedCreateWithoutResponsibleInput[]
    connectOrCreate?: HousingCreateOrConnectWithoutResponsibleInput | HousingCreateOrConnectWithoutResponsibleInput[]
    createMany?: HousingCreateManyResponsibleInputEnvelope
    connect?: HousingWhereUniqueInput | HousingWhereUniqueInput[]
  }

  export type FamilyMemberUncheckedCreateNestedManyWithoutLegalResponsibleInput = {
    create?: XOR<FamilyMemberCreateWithoutLegalResponsibleInput, FamilyMemberUncheckedCreateWithoutLegalResponsibleInput> | FamilyMemberCreateWithoutLegalResponsibleInput[] | FamilyMemberUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutLegalResponsibleInput | FamilyMemberCreateOrConnectWithoutLegalResponsibleInput[]
    createMany?: FamilyMemberCreateManyLegalResponsibleInputEnvelope
    connect?: FamilyMemberWhereUniqueInput | FamilyMemberWhereUniqueInput[]
  }

  export type CreditCardUncheckedCreateNestedManyWithoutLegalResponsibleInput = {
    create?: XOR<CreditCardCreateWithoutLegalResponsibleInput, CreditCardUncheckedCreateWithoutLegalResponsibleInput> | CreditCardCreateWithoutLegalResponsibleInput[] | CreditCardUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: CreditCardCreateOrConnectWithoutLegalResponsibleInput | CreditCardCreateOrConnectWithoutLegalResponsibleInput[]
    createMany?: CreditCardCreateManyLegalResponsibleInputEnvelope
    connect?: CreditCardWhereUniqueInput | CreditCardWhereUniqueInput[]
  }

  export type ExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput = {
    create?: XOR<ExpenseCreateWithoutLegalResponsibleInput, ExpenseUncheckedCreateWithoutLegalResponsibleInput> | ExpenseCreateWithoutLegalResponsibleInput[] | ExpenseUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutLegalResponsibleInput | ExpenseCreateOrConnectWithoutLegalResponsibleInput[]
    createMany?: ExpenseCreateManyLegalResponsibleInputEnvelope
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
  }

  export type FinancingUncheckedCreateNestedManyWithoutLegalResponsibleInput = {
    create?: XOR<FinancingCreateWithoutLegalResponsibleInput, FinancingUncheckedCreateWithoutLegalResponsibleInput> | FinancingCreateWithoutLegalResponsibleInput[] | FinancingUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: FinancingCreateOrConnectWithoutLegalResponsibleInput | FinancingCreateOrConnectWithoutLegalResponsibleInput[]
    createMany?: FinancingCreateManyLegalResponsibleInputEnvelope
    connect?: FinancingWhereUniqueInput | FinancingWhereUniqueInput[]
  }

  export type LoanUncheckedCreateNestedManyWithoutLegalResponsibleInput = {
    create?: XOR<LoanCreateWithoutLegalResponsibleInput, LoanUncheckedCreateWithoutLegalResponsibleInput> | LoanCreateWithoutLegalResponsibleInput[] | LoanUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: LoanCreateOrConnectWithoutLegalResponsibleInput | LoanCreateOrConnectWithoutLegalResponsibleInput[]
    createMany?: LoanCreateManyLegalResponsibleInputEnvelope
    connect?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
  }

  export type OtherExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput = {
    create?: XOR<OtherExpenseCreateWithoutLegalResponsibleInput, OtherExpenseUncheckedCreateWithoutLegalResponsibleInput> | OtherExpenseCreateWithoutLegalResponsibleInput[] | OtherExpenseUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: OtherExpenseCreateOrConnectWithoutLegalResponsibleInput | OtherExpenseCreateOrConnectWithoutLegalResponsibleInput[]
    createMany?: OtherExpenseCreateManyLegalResponsibleInputEnvelope
    connect?: OtherExpenseWhereUniqueInput | OtherExpenseWhereUniqueInput[]
  }

  export type VehicleUncheckedCreateNestedManyWithoutLegalResponsibleInput = {
    create?: XOR<VehicleCreateWithoutLegalResponsibleInput, VehicleUncheckedCreateWithoutLegalResponsibleInput> | VehicleCreateWithoutLegalResponsibleInput[] | VehicleUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: VehicleCreateOrConnectWithoutLegalResponsibleInput | VehicleCreateOrConnectWithoutLegalResponsibleInput[]
    createMany?: VehicleCreateManyLegalResponsibleInputEnvelope
    connect?: VehicleWhereUniqueInput | VehicleWhereUniqueInput[]
  }

  export type FamilyMemberDiseaseUncheckedCreateNestedManyWithoutLegalResponsibleInput = {
    create?: XOR<FamilyMemberDiseaseCreateWithoutLegalResponsibleInput, FamilyMemberDiseaseUncheckedCreateWithoutLegalResponsibleInput> | FamilyMemberDiseaseCreateWithoutLegalResponsibleInput[] | FamilyMemberDiseaseUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: FamilyMemberDiseaseCreateOrConnectWithoutLegalResponsibleInput | FamilyMemberDiseaseCreateOrConnectWithoutLegalResponsibleInput[]
    createMany?: FamilyMemberDiseaseCreateManyLegalResponsibleInputEnvelope
    connect?: FamilyMemberDiseaseWhereUniqueInput | FamilyMemberDiseaseWhereUniqueInput[]
  }

  export type MedicationUncheckedCreateNestedManyWithoutLegalResponsibleInput = {
    create?: XOR<MedicationCreateWithoutLegalResponsibleInput, MedicationUncheckedCreateWithoutLegalResponsibleInput> | MedicationCreateWithoutLegalResponsibleInput[] | MedicationUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: MedicationCreateOrConnectWithoutLegalResponsibleInput | MedicationCreateOrConnectWithoutLegalResponsibleInput[]
    createMany?: MedicationCreateManyLegalResponsibleInputEnvelope
    connect?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
  }

  export type ApplicationUncheckedCreateNestedManyWithoutResponsibleInput = {
    create?: XOR<ApplicationCreateWithoutResponsibleInput, ApplicationUncheckedCreateWithoutResponsibleInput> | ApplicationCreateWithoutResponsibleInput[] | ApplicationUncheckedCreateWithoutResponsibleInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutResponsibleInput | ApplicationCreateOrConnectWithoutResponsibleInput[]
    createMany?: ApplicationCreateManyResponsibleInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type FamilyMemberIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput = {
    create?: XOR<FamilyMemberIncomeCreateWithoutLegalResponsibleInput, FamilyMemberIncomeUncheckedCreateWithoutLegalResponsibleInput> | FamilyMemberIncomeCreateWithoutLegalResponsibleInput[] | FamilyMemberIncomeUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: FamilyMemberIncomeCreateOrConnectWithoutLegalResponsibleInput | FamilyMemberIncomeCreateOrConnectWithoutLegalResponsibleInput[]
    createMany?: FamilyMemberIncomeCreateManyLegalResponsibleInputEnvelope
    connect?: FamilyMemberIncomeWhereUniqueInput | FamilyMemberIncomeWhereUniqueInput[]
  }

  export type MonthlyIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput = {
    create?: XOR<MonthlyIncomeCreateWithoutLegalResponsibleInput, MonthlyIncomeUncheckedCreateWithoutLegalResponsibleInput> | MonthlyIncomeCreateWithoutLegalResponsibleInput[] | MonthlyIncomeUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: MonthlyIncomeCreateOrConnectWithoutLegalResponsibleInput | MonthlyIncomeCreateOrConnectWithoutLegalResponsibleInput[]
    createMany?: MonthlyIncomeCreateManyLegalResponsibleInputEnvelope
    connect?: MonthlyIncomeWhereUniqueInput | MonthlyIncomeWhereUniqueInput[]
  }

  export type BankAccountUncheckedCreateNestedManyWithoutLegalResponsibleInput = {
    create?: XOR<BankAccountCreateWithoutLegalResponsibleInput, BankAccountUncheckedCreateWithoutLegalResponsibleInput> | BankAccountCreateWithoutLegalResponsibleInput[] | BankAccountUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: BankAccountCreateOrConnectWithoutLegalResponsibleInput | BankAccountCreateOrConnectWithoutLegalResponsibleInput[]
    createMany?: BankAccountCreateManyLegalResponsibleInputEnvelope
    connect?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
  }

  export type DeclarationsUncheckedCreateNestedManyWithoutLegalResponsibleInput = {
    create?: XOR<DeclarationsCreateWithoutLegalResponsibleInput, DeclarationsUncheckedCreateWithoutLegalResponsibleInput> | DeclarationsCreateWithoutLegalResponsibleInput[] | DeclarationsUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: DeclarationsCreateOrConnectWithoutLegalResponsibleInput | DeclarationsCreateOrConnectWithoutLegalResponsibleInput[]
    createMany?: DeclarationsCreateManyLegalResponsibleInputEnvelope
    connect?: DeclarationsWhereUniqueInput | DeclarationsWhereUniqueInput[]
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput = {
    set?: $Enums.INSTITUTION_TYPE | null
  }

  export type NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput = {
    set?: $Enums.EDUCATION_TYPE | null
  }

  export type NullableEnumSHIFTFieldUpdateOperationsInput = {
    set?: $Enums.SHIFT | null
  }

  export type IdentityDetailsUpdateManyWithoutResponsibleNestedInput = {
    create?: XOR<IdentityDetailsCreateWithoutResponsibleInput, IdentityDetailsUncheckedCreateWithoutResponsibleInput> | IdentityDetailsCreateWithoutResponsibleInput[] | IdentityDetailsUncheckedCreateWithoutResponsibleInput[]
    connectOrCreate?: IdentityDetailsCreateOrConnectWithoutResponsibleInput | IdentityDetailsCreateOrConnectWithoutResponsibleInput[]
    upsert?: IdentityDetailsUpsertWithWhereUniqueWithoutResponsibleInput | IdentityDetailsUpsertWithWhereUniqueWithoutResponsibleInput[]
    createMany?: IdentityDetailsCreateManyResponsibleInputEnvelope
    set?: IdentityDetailsWhereUniqueInput | IdentityDetailsWhereUniqueInput[]
    disconnect?: IdentityDetailsWhereUniqueInput | IdentityDetailsWhereUniqueInput[]
    delete?: IdentityDetailsWhereUniqueInput | IdentityDetailsWhereUniqueInput[]
    connect?: IdentityDetailsWhereUniqueInput | IdentityDetailsWhereUniqueInput[]
    update?: IdentityDetailsUpdateWithWhereUniqueWithoutResponsibleInput | IdentityDetailsUpdateWithWhereUniqueWithoutResponsibleInput[]
    updateMany?: IdentityDetailsUpdateManyWithWhereWithoutResponsibleInput | IdentityDetailsUpdateManyWithWhereWithoutResponsibleInput[]
    deleteMany?: IdentityDetailsScalarWhereInput | IdentityDetailsScalarWhereInput[]
  }

  export type CandidateUpdateManyWithoutResponsibleNestedInput = {
    create?: XOR<CandidateCreateWithoutResponsibleInput, CandidateUncheckedCreateWithoutResponsibleInput> | CandidateCreateWithoutResponsibleInput[] | CandidateUncheckedCreateWithoutResponsibleInput[]
    connectOrCreate?: CandidateCreateOrConnectWithoutResponsibleInput | CandidateCreateOrConnectWithoutResponsibleInput[]
    upsert?: CandidateUpsertWithWhereUniqueWithoutResponsibleInput | CandidateUpsertWithWhereUniqueWithoutResponsibleInput[]
    createMany?: CandidateCreateManyResponsibleInputEnvelope
    set?: CandidateWhereUniqueInput | CandidateWhereUniqueInput[]
    disconnect?: CandidateWhereUniqueInput | CandidateWhereUniqueInput[]
    delete?: CandidateWhereUniqueInput | CandidateWhereUniqueInput[]
    connect?: CandidateWhereUniqueInput | CandidateWhereUniqueInput[]
    update?: CandidateUpdateWithWhereUniqueWithoutResponsibleInput | CandidateUpdateWithWhereUniqueWithoutResponsibleInput[]
    updateMany?: CandidateUpdateManyWithWhereWithoutResponsibleInput | CandidateUpdateManyWithWhereWithoutResponsibleInput[]
    deleteMany?: CandidateScalarWhereInput | CandidateScalarWhereInput[]
  }

  export type HousingUpdateManyWithoutResponsibleNestedInput = {
    create?: XOR<HousingCreateWithoutResponsibleInput, HousingUncheckedCreateWithoutResponsibleInput> | HousingCreateWithoutResponsibleInput[] | HousingUncheckedCreateWithoutResponsibleInput[]
    connectOrCreate?: HousingCreateOrConnectWithoutResponsibleInput | HousingCreateOrConnectWithoutResponsibleInput[]
    upsert?: HousingUpsertWithWhereUniqueWithoutResponsibleInput | HousingUpsertWithWhereUniqueWithoutResponsibleInput[]
    createMany?: HousingCreateManyResponsibleInputEnvelope
    set?: HousingWhereUniqueInput | HousingWhereUniqueInput[]
    disconnect?: HousingWhereUniqueInput | HousingWhereUniqueInput[]
    delete?: HousingWhereUniqueInput | HousingWhereUniqueInput[]
    connect?: HousingWhereUniqueInput | HousingWhereUniqueInput[]
    update?: HousingUpdateWithWhereUniqueWithoutResponsibleInput | HousingUpdateWithWhereUniqueWithoutResponsibleInput[]
    updateMany?: HousingUpdateManyWithWhereWithoutResponsibleInput | HousingUpdateManyWithWhereWithoutResponsibleInput[]
    deleteMany?: HousingScalarWhereInput | HousingScalarWhereInput[]
  }

  export type FamilyMemberUpdateManyWithoutLegalResponsibleNestedInput = {
    create?: XOR<FamilyMemberCreateWithoutLegalResponsibleInput, FamilyMemberUncheckedCreateWithoutLegalResponsibleInput> | FamilyMemberCreateWithoutLegalResponsibleInput[] | FamilyMemberUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutLegalResponsibleInput | FamilyMemberCreateOrConnectWithoutLegalResponsibleInput[]
    upsert?: FamilyMemberUpsertWithWhereUniqueWithoutLegalResponsibleInput | FamilyMemberUpsertWithWhereUniqueWithoutLegalResponsibleInput[]
    createMany?: FamilyMemberCreateManyLegalResponsibleInputEnvelope
    set?: FamilyMemberWhereUniqueInput | FamilyMemberWhereUniqueInput[]
    disconnect?: FamilyMemberWhereUniqueInput | FamilyMemberWhereUniqueInput[]
    delete?: FamilyMemberWhereUniqueInput | FamilyMemberWhereUniqueInput[]
    connect?: FamilyMemberWhereUniqueInput | FamilyMemberWhereUniqueInput[]
    update?: FamilyMemberUpdateWithWhereUniqueWithoutLegalResponsibleInput | FamilyMemberUpdateWithWhereUniqueWithoutLegalResponsibleInput[]
    updateMany?: FamilyMemberUpdateManyWithWhereWithoutLegalResponsibleInput | FamilyMemberUpdateManyWithWhereWithoutLegalResponsibleInput[]
    deleteMany?: FamilyMemberScalarWhereInput | FamilyMemberScalarWhereInput[]
  }

  export type CreditCardUpdateManyWithoutLegalResponsibleNestedInput = {
    create?: XOR<CreditCardCreateWithoutLegalResponsibleInput, CreditCardUncheckedCreateWithoutLegalResponsibleInput> | CreditCardCreateWithoutLegalResponsibleInput[] | CreditCardUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: CreditCardCreateOrConnectWithoutLegalResponsibleInput | CreditCardCreateOrConnectWithoutLegalResponsibleInput[]
    upsert?: CreditCardUpsertWithWhereUniqueWithoutLegalResponsibleInput | CreditCardUpsertWithWhereUniqueWithoutLegalResponsibleInput[]
    createMany?: CreditCardCreateManyLegalResponsibleInputEnvelope
    set?: CreditCardWhereUniqueInput | CreditCardWhereUniqueInput[]
    disconnect?: CreditCardWhereUniqueInput | CreditCardWhereUniqueInput[]
    delete?: CreditCardWhereUniqueInput | CreditCardWhereUniqueInput[]
    connect?: CreditCardWhereUniqueInput | CreditCardWhereUniqueInput[]
    update?: CreditCardUpdateWithWhereUniqueWithoutLegalResponsibleInput | CreditCardUpdateWithWhereUniqueWithoutLegalResponsibleInput[]
    updateMany?: CreditCardUpdateManyWithWhereWithoutLegalResponsibleInput | CreditCardUpdateManyWithWhereWithoutLegalResponsibleInput[]
    deleteMany?: CreditCardScalarWhereInput | CreditCardScalarWhereInput[]
  }

  export type ExpenseUpdateManyWithoutLegalResponsibleNestedInput = {
    create?: XOR<ExpenseCreateWithoutLegalResponsibleInput, ExpenseUncheckedCreateWithoutLegalResponsibleInput> | ExpenseCreateWithoutLegalResponsibleInput[] | ExpenseUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutLegalResponsibleInput | ExpenseCreateOrConnectWithoutLegalResponsibleInput[]
    upsert?: ExpenseUpsertWithWhereUniqueWithoutLegalResponsibleInput | ExpenseUpsertWithWhereUniqueWithoutLegalResponsibleInput[]
    createMany?: ExpenseCreateManyLegalResponsibleInputEnvelope
    set?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    disconnect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    delete?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    update?: ExpenseUpdateWithWhereUniqueWithoutLegalResponsibleInput | ExpenseUpdateWithWhereUniqueWithoutLegalResponsibleInput[]
    updateMany?: ExpenseUpdateManyWithWhereWithoutLegalResponsibleInput | ExpenseUpdateManyWithWhereWithoutLegalResponsibleInput[]
    deleteMany?: ExpenseScalarWhereInput | ExpenseScalarWhereInput[]
  }

  export type FinancingUpdateManyWithoutLegalResponsibleNestedInput = {
    create?: XOR<FinancingCreateWithoutLegalResponsibleInput, FinancingUncheckedCreateWithoutLegalResponsibleInput> | FinancingCreateWithoutLegalResponsibleInput[] | FinancingUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: FinancingCreateOrConnectWithoutLegalResponsibleInput | FinancingCreateOrConnectWithoutLegalResponsibleInput[]
    upsert?: FinancingUpsertWithWhereUniqueWithoutLegalResponsibleInput | FinancingUpsertWithWhereUniqueWithoutLegalResponsibleInput[]
    createMany?: FinancingCreateManyLegalResponsibleInputEnvelope
    set?: FinancingWhereUniqueInput | FinancingWhereUniqueInput[]
    disconnect?: FinancingWhereUniqueInput | FinancingWhereUniqueInput[]
    delete?: FinancingWhereUniqueInput | FinancingWhereUniqueInput[]
    connect?: FinancingWhereUniqueInput | FinancingWhereUniqueInput[]
    update?: FinancingUpdateWithWhereUniqueWithoutLegalResponsibleInput | FinancingUpdateWithWhereUniqueWithoutLegalResponsibleInput[]
    updateMany?: FinancingUpdateManyWithWhereWithoutLegalResponsibleInput | FinancingUpdateManyWithWhereWithoutLegalResponsibleInput[]
    deleteMany?: FinancingScalarWhereInput | FinancingScalarWhereInput[]
  }

  export type LoanUpdateManyWithoutLegalResponsibleNestedInput = {
    create?: XOR<LoanCreateWithoutLegalResponsibleInput, LoanUncheckedCreateWithoutLegalResponsibleInput> | LoanCreateWithoutLegalResponsibleInput[] | LoanUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: LoanCreateOrConnectWithoutLegalResponsibleInput | LoanCreateOrConnectWithoutLegalResponsibleInput[]
    upsert?: LoanUpsertWithWhereUniqueWithoutLegalResponsibleInput | LoanUpsertWithWhereUniqueWithoutLegalResponsibleInput[]
    createMany?: LoanCreateManyLegalResponsibleInputEnvelope
    set?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    disconnect?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    delete?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    connect?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    update?: LoanUpdateWithWhereUniqueWithoutLegalResponsibleInput | LoanUpdateWithWhereUniqueWithoutLegalResponsibleInput[]
    updateMany?: LoanUpdateManyWithWhereWithoutLegalResponsibleInput | LoanUpdateManyWithWhereWithoutLegalResponsibleInput[]
    deleteMany?: LoanScalarWhereInput | LoanScalarWhereInput[]
  }

  export type OtherExpenseUpdateManyWithoutLegalResponsibleNestedInput = {
    create?: XOR<OtherExpenseCreateWithoutLegalResponsibleInput, OtherExpenseUncheckedCreateWithoutLegalResponsibleInput> | OtherExpenseCreateWithoutLegalResponsibleInput[] | OtherExpenseUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: OtherExpenseCreateOrConnectWithoutLegalResponsibleInput | OtherExpenseCreateOrConnectWithoutLegalResponsibleInput[]
    upsert?: OtherExpenseUpsertWithWhereUniqueWithoutLegalResponsibleInput | OtherExpenseUpsertWithWhereUniqueWithoutLegalResponsibleInput[]
    createMany?: OtherExpenseCreateManyLegalResponsibleInputEnvelope
    set?: OtherExpenseWhereUniqueInput | OtherExpenseWhereUniqueInput[]
    disconnect?: OtherExpenseWhereUniqueInput | OtherExpenseWhereUniqueInput[]
    delete?: OtherExpenseWhereUniqueInput | OtherExpenseWhereUniqueInput[]
    connect?: OtherExpenseWhereUniqueInput | OtherExpenseWhereUniqueInput[]
    update?: OtherExpenseUpdateWithWhereUniqueWithoutLegalResponsibleInput | OtherExpenseUpdateWithWhereUniqueWithoutLegalResponsibleInput[]
    updateMany?: OtherExpenseUpdateManyWithWhereWithoutLegalResponsibleInput | OtherExpenseUpdateManyWithWhereWithoutLegalResponsibleInput[]
    deleteMany?: OtherExpenseScalarWhereInput | OtherExpenseScalarWhereInput[]
  }

  export type VehicleUpdateManyWithoutLegalResponsibleNestedInput = {
    create?: XOR<VehicleCreateWithoutLegalResponsibleInput, VehicleUncheckedCreateWithoutLegalResponsibleInput> | VehicleCreateWithoutLegalResponsibleInput[] | VehicleUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: VehicleCreateOrConnectWithoutLegalResponsibleInput | VehicleCreateOrConnectWithoutLegalResponsibleInput[]
    upsert?: VehicleUpsertWithWhereUniqueWithoutLegalResponsibleInput | VehicleUpsertWithWhereUniqueWithoutLegalResponsibleInput[]
    createMany?: VehicleCreateManyLegalResponsibleInputEnvelope
    set?: VehicleWhereUniqueInput | VehicleWhereUniqueInput[]
    disconnect?: VehicleWhereUniqueInput | VehicleWhereUniqueInput[]
    delete?: VehicleWhereUniqueInput | VehicleWhereUniqueInput[]
    connect?: VehicleWhereUniqueInput | VehicleWhereUniqueInput[]
    update?: VehicleUpdateWithWhereUniqueWithoutLegalResponsibleInput | VehicleUpdateWithWhereUniqueWithoutLegalResponsibleInput[]
    updateMany?: VehicleUpdateManyWithWhereWithoutLegalResponsibleInput | VehicleUpdateManyWithWhereWithoutLegalResponsibleInput[]
    deleteMany?: VehicleScalarWhereInput | VehicleScalarWhereInput[]
  }

  export type FamilyMemberDiseaseUpdateManyWithoutLegalResponsibleNestedInput = {
    create?: XOR<FamilyMemberDiseaseCreateWithoutLegalResponsibleInput, FamilyMemberDiseaseUncheckedCreateWithoutLegalResponsibleInput> | FamilyMemberDiseaseCreateWithoutLegalResponsibleInput[] | FamilyMemberDiseaseUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: FamilyMemberDiseaseCreateOrConnectWithoutLegalResponsibleInput | FamilyMemberDiseaseCreateOrConnectWithoutLegalResponsibleInput[]
    upsert?: FamilyMemberDiseaseUpsertWithWhereUniqueWithoutLegalResponsibleInput | FamilyMemberDiseaseUpsertWithWhereUniqueWithoutLegalResponsibleInput[]
    createMany?: FamilyMemberDiseaseCreateManyLegalResponsibleInputEnvelope
    set?: FamilyMemberDiseaseWhereUniqueInput | FamilyMemberDiseaseWhereUniqueInput[]
    disconnect?: FamilyMemberDiseaseWhereUniqueInput | FamilyMemberDiseaseWhereUniqueInput[]
    delete?: FamilyMemberDiseaseWhereUniqueInput | FamilyMemberDiseaseWhereUniqueInput[]
    connect?: FamilyMemberDiseaseWhereUniqueInput | FamilyMemberDiseaseWhereUniqueInput[]
    update?: FamilyMemberDiseaseUpdateWithWhereUniqueWithoutLegalResponsibleInput | FamilyMemberDiseaseUpdateWithWhereUniqueWithoutLegalResponsibleInput[]
    updateMany?: FamilyMemberDiseaseUpdateManyWithWhereWithoutLegalResponsibleInput | FamilyMemberDiseaseUpdateManyWithWhereWithoutLegalResponsibleInput[]
    deleteMany?: FamilyMemberDiseaseScalarWhereInput | FamilyMemberDiseaseScalarWhereInput[]
  }

  export type MedicationUpdateManyWithoutLegalResponsibleNestedInput = {
    create?: XOR<MedicationCreateWithoutLegalResponsibleInput, MedicationUncheckedCreateWithoutLegalResponsibleInput> | MedicationCreateWithoutLegalResponsibleInput[] | MedicationUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: MedicationCreateOrConnectWithoutLegalResponsibleInput | MedicationCreateOrConnectWithoutLegalResponsibleInput[]
    upsert?: MedicationUpsertWithWhereUniqueWithoutLegalResponsibleInput | MedicationUpsertWithWhereUniqueWithoutLegalResponsibleInput[]
    createMany?: MedicationCreateManyLegalResponsibleInputEnvelope
    set?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    disconnect?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    delete?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    connect?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    update?: MedicationUpdateWithWhereUniqueWithoutLegalResponsibleInput | MedicationUpdateWithWhereUniqueWithoutLegalResponsibleInput[]
    updateMany?: MedicationUpdateManyWithWhereWithoutLegalResponsibleInput | MedicationUpdateManyWithWhereWithoutLegalResponsibleInput[]
    deleteMany?: MedicationScalarWhereInput | MedicationScalarWhereInput[]
  }

  export type ApplicationUpdateManyWithoutResponsibleNestedInput = {
    create?: XOR<ApplicationCreateWithoutResponsibleInput, ApplicationUncheckedCreateWithoutResponsibleInput> | ApplicationCreateWithoutResponsibleInput[] | ApplicationUncheckedCreateWithoutResponsibleInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutResponsibleInput | ApplicationCreateOrConnectWithoutResponsibleInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutResponsibleInput | ApplicationUpsertWithWhereUniqueWithoutResponsibleInput[]
    createMany?: ApplicationCreateManyResponsibleInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutResponsibleInput | ApplicationUpdateWithWhereUniqueWithoutResponsibleInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutResponsibleInput | ApplicationUpdateManyWithWhereWithoutResponsibleInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type FamilyMemberIncomeUpdateManyWithoutLegalResponsibleNestedInput = {
    create?: XOR<FamilyMemberIncomeCreateWithoutLegalResponsibleInput, FamilyMemberIncomeUncheckedCreateWithoutLegalResponsibleInput> | FamilyMemberIncomeCreateWithoutLegalResponsibleInput[] | FamilyMemberIncomeUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: FamilyMemberIncomeCreateOrConnectWithoutLegalResponsibleInput | FamilyMemberIncomeCreateOrConnectWithoutLegalResponsibleInput[]
    upsert?: FamilyMemberIncomeUpsertWithWhereUniqueWithoutLegalResponsibleInput | FamilyMemberIncomeUpsertWithWhereUniqueWithoutLegalResponsibleInput[]
    createMany?: FamilyMemberIncomeCreateManyLegalResponsibleInputEnvelope
    set?: FamilyMemberIncomeWhereUniqueInput | FamilyMemberIncomeWhereUniqueInput[]
    disconnect?: FamilyMemberIncomeWhereUniqueInput | FamilyMemberIncomeWhereUniqueInput[]
    delete?: FamilyMemberIncomeWhereUniqueInput | FamilyMemberIncomeWhereUniqueInput[]
    connect?: FamilyMemberIncomeWhereUniqueInput | FamilyMemberIncomeWhereUniqueInput[]
    update?: FamilyMemberIncomeUpdateWithWhereUniqueWithoutLegalResponsibleInput | FamilyMemberIncomeUpdateWithWhereUniqueWithoutLegalResponsibleInput[]
    updateMany?: FamilyMemberIncomeUpdateManyWithWhereWithoutLegalResponsibleInput | FamilyMemberIncomeUpdateManyWithWhereWithoutLegalResponsibleInput[]
    deleteMany?: FamilyMemberIncomeScalarWhereInput | FamilyMemberIncomeScalarWhereInput[]
  }

  export type MonthlyIncomeUpdateManyWithoutLegalResponsibleNestedInput = {
    create?: XOR<MonthlyIncomeCreateWithoutLegalResponsibleInput, MonthlyIncomeUncheckedCreateWithoutLegalResponsibleInput> | MonthlyIncomeCreateWithoutLegalResponsibleInput[] | MonthlyIncomeUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: MonthlyIncomeCreateOrConnectWithoutLegalResponsibleInput | MonthlyIncomeCreateOrConnectWithoutLegalResponsibleInput[]
    upsert?: MonthlyIncomeUpsertWithWhereUniqueWithoutLegalResponsibleInput | MonthlyIncomeUpsertWithWhereUniqueWithoutLegalResponsibleInput[]
    createMany?: MonthlyIncomeCreateManyLegalResponsibleInputEnvelope
    set?: MonthlyIncomeWhereUniqueInput | MonthlyIncomeWhereUniqueInput[]
    disconnect?: MonthlyIncomeWhereUniqueInput | MonthlyIncomeWhereUniqueInput[]
    delete?: MonthlyIncomeWhereUniqueInput | MonthlyIncomeWhereUniqueInput[]
    connect?: MonthlyIncomeWhereUniqueInput | MonthlyIncomeWhereUniqueInput[]
    update?: MonthlyIncomeUpdateWithWhereUniqueWithoutLegalResponsibleInput | MonthlyIncomeUpdateWithWhereUniqueWithoutLegalResponsibleInput[]
    updateMany?: MonthlyIncomeUpdateManyWithWhereWithoutLegalResponsibleInput | MonthlyIncomeUpdateManyWithWhereWithoutLegalResponsibleInput[]
    deleteMany?: MonthlyIncomeScalarWhereInput | MonthlyIncomeScalarWhereInput[]
  }

  export type BankAccountUpdateManyWithoutLegalResponsibleNestedInput = {
    create?: XOR<BankAccountCreateWithoutLegalResponsibleInput, BankAccountUncheckedCreateWithoutLegalResponsibleInput> | BankAccountCreateWithoutLegalResponsibleInput[] | BankAccountUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: BankAccountCreateOrConnectWithoutLegalResponsibleInput | BankAccountCreateOrConnectWithoutLegalResponsibleInput[]
    upsert?: BankAccountUpsertWithWhereUniqueWithoutLegalResponsibleInput | BankAccountUpsertWithWhereUniqueWithoutLegalResponsibleInput[]
    createMany?: BankAccountCreateManyLegalResponsibleInputEnvelope
    set?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    disconnect?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    delete?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    connect?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    update?: BankAccountUpdateWithWhereUniqueWithoutLegalResponsibleInput | BankAccountUpdateWithWhereUniqueWithoutLegalResponsibleInput[]
    updateMany?: BankAccountUpdateManyWithWhereWithoutLegalResponsibleInput | BankAccountUpdateManyWithWhereWithoutLegalResponsibleInput[]
    deleteMany?: BankAccountScalarWhereInput | BankAccountScalarWhereInput[]
  }

  export type DeclarationsUpdateManyWithoutLegalResponsibleNestedInput = {
    create?: XOR<DeclarationsCreateWithoutLegalResponsibleInput, DeclarationsUncheckedCreateWithoutLegalResponsibleInput> | DeclarationsCreateWithoutLegalResponsibleInput[] | DeclarationsUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: DeclarationsCreateOrConnectWithoutLegalResponsibleInput | DeclarationsCreateOrConnectWithoutLegalResponsibleInput[]
    upsert?: DeclarationsUpsertWithWhereUniqueWithoutLegalResponsibleInput | DeclarationsUpsertWithWhereUniqueWithoutLegalResponsibleInput[]
    createMany?: DeclarationsCreateManyLegalResponsibleInputEnvelope
    set?: DeclarationsWhereUniqueInput | DeclarationsWhereUniqueInput[]
    disconnect?: DeclarationsWhereUniqueInput | DeclarationsWhereUniqueInput[]
    delete?: DeclarationsWhereUniqueInput | DeclarationsWhereUniqueInput[]
    connect?: DeclarationsWhereUniqueInput | DeclarationsWhereUniqueInput[]
    update?: DeclarationsUpdateWithWhereUniqueWithoutLegalResponsibleInput | DeclarationsUpdateWithWhereUniqueWithoutLegalResponsibleInput[]
    updateMany?: DeclarationsUpdateManyWithWhereWithoutLegalResponsibleInput | DeclarationsUpdateManyWithWhereWithoutLegalResponsibleInput[]
    deleteMany?: DeclarationsScalarWhereInput | DeclarationsScalarWhereInput[]
  }

  export type IdentityDetailsUncheckedUpdateManyWithoutResponsibleNestedInput = {
    create?: XOR<IdentityDetailsCreateWithoutResponsibleInput, IdentityDetailsUncheckedCreateWithoutResponsibleInput> | IdentityDetailsCreateWithoutResponsibleInput[] | IdentityDetailsUncheckedCreateWithoutResponsibleInput[]
    connectOrCreate?: IdentityDetailsCreateOrConnectWithoutResponsibleInput | IdentityDetailsCreateOrConnectWithoutResponsibleInput[]
    upsert?: IdentityDetailsUpsertWithWhereUniqueWithoutResponsibleInput | IdentityDetailsUpsertWithWhereUniqueWithoutResponsibleInput[]
    createMany?: IdentityDetailsCreateManyResponsibleInputEnvelope
    set?: IdentityDetailsWhereUniqueInput | IdentityDetailsWhereUniqueInput[]
    disconnect?: IdentityDetailsWhereUniqueInput | IdentityDetailsWhereUniqueInput[]
    delete?: IdentityDetailsWhereUniqueInput | IdentityDetailsWhereUniqueInput[]
    connect?: IdentityDetailsWhereUniqueInput | IdentityDetailsWhereUniqueInput[]
    update?: IdentityDetailsUpdateWithWhereUniqueWithoutResponsibleInput | IdentityDetailsUpdateWithWhereUniqueWithoutResponsibleInput[]
    updateMany?: IdentityDetailsUpdateManyWithWhereWithoutResponsibleInput | IdentityDetailsUpdateManyWithWhereWithoutResponsibleInput[]
    deleteMany?: IdentityDetailsScalarWhereInput | IdentityDetailsScalarWhereInput[]
  }

  export type CandidateUncheckedUpdateManyWithoutResponsibleNestedInput = {
    create?: XOR<CandidateCreateWithoutResponsibleInput, CandidateUncheckedCreateWithoutResponsibleInput> | CandidateCreateWithoutResponsibleInput[] | CandidateUncheckedCreateWithoutResponsibleInput[]
    connectOrCreate?: CandidateCreateOrConnectWithoutResponsibleInput | CandidateCreateOrConnectWithoutResponsibleInput[]
    upsert?: CandidateUpsertWithWhereUniqueWithoutResponsibleInput | CandidateUpsertWithWhereUniqueWithoutResponsibleInput[]
    createMany?: CandidateCreateManyResponsibleInputEnvelope
    set?: CandidateWhereUniqueInput | CandidateWhereUniqueInput[]
    disconnect?: CandidateWhereUniqueInput | CandidateWhereUniqueInput[]
    delete?: CandidateWhereUniqueInput | CandidateWhereUniqueInput[]
    connect?: CandidateWhereUniqueInput | CandidateWhereUniqueInput[]
    update?: CandidateUpdateWithWhereUniqueWithoutResponsibleInput | CandidateUpdateWithWhereUniqueWithoutResponsibleInput[]
    updateMany?: CandidateUpdateManyWithWhereWithoutResponsibleInput | CandidateUpdateManyWithWhereWithoutResponsibleInput[]
    deleteMany?: CandidateScalarWhereInput | CandidateScalarWhereInput[]
  }

  export type HousingUncheckedUpdateManyWithoutResponsibleNestedInput = {
    create?: XOR<HousingCreateWithoutResponsibleInput, HousingUncheckedCreateWithoutResponsibleInput> | HousingCreateWithoutResponsibleInput[] | HousingUncheckedCreateWithoutResponsibleInput[]
    connectOrCreate?: HousingCreateOrConnectWithoutResponsibleInput | HousingCreateOrConnectWithoutResponsibleInput[]
    upsert?: HousingUpsertWithWhereUniqueWithoutResponsibleInput | HousingUpsertWithWhereUniqueWithoutResponsibleInput[]
    createMany?: HousingCreateManyResponsibleInputEnvelope
    set?: HousingWhereUniqueInput | HousingWhereUniqueInput[]
    disconnect?: HousingWhereUniqueInput | HousingWhereUniqueInput[]
    delete?: HousingWhereUniqueInput | HousingWhereUniqueInput[]
    connect?: HousingWhereUniqueInput | HousingWhereUniqueInput[]
    update?: HousingUpdateWithWhereUniqueWithoutResponsibleInput | HousingUpdateWithWhereUniqueWithoutResponsibleInput[]
    updateMany?: HousingUpdateManyWithWhereWithoutResponsibleInput | HousingUpdateManyWithWhereWithoutResponsibleInput[]
    deleteMany?: HousingScalarWhereInput | HousingScalarWhereInput[]
  }

  export type FamilyMemberUncheckedUpdateManyWithoutLegalResponsibleNestedInput = {
    create?: XOR<FamilyMemberCreateWithoutLegalResponsibleInput, FamilyMemberUncheckedCreateWithoutLegalResponsibleInput> | FamilyMemberCreateWithoutLegalResponsibleInput[] | FamilyMemberUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutLegalResponsibleInput | FamilyMemberCreateOrConnectWithoutLegalResponsibleInput[]
    upsert?: FamilyMemberUpsertWithWhereUniqueWithoutLegalResponsibleInput | FamilyMemberUpsertWithWhereUniqueWithoutLegalResponsibleInput[]
    createMany?: FamilyMemberCreateManyLegalResponsibleInputEnvelope
    set?: FamilyMemberWhereUniqueInput | FamilyMemberWhereUniqueInput[]
    disconnect?: FamilyMemberWhereUniqueInput | FamilyMemberWhereUniqueInput[]
    delete?: FamilyMemberWhereUniqueInput | FamilyMemberWhereUniqueInput[]
    connect?: FamilyMemberWhereUniqueInput | FamilyMemberWhereUniqueInput[]
    update?: FamilyMemberUpdateWithWhereUniqueWithoutLegalResponsibleInput | FamilyMemberUpdateWithWhereUniqueWithoutLegalResponsibleInput[]
    updateMany?: FamilyMemberUpdateManyWithWhereWithoutLegalResponsibleInput | FamilyMemberUpdateManyWithWhereWithoutLegalResponsibleInput[]
    deleteMany?: FamilyMemberScalarWhereInput | FamilyMemberScalarWhereInput[]
  }

  export type CreditCardUncheckedUpdateManyWithoutLegalResponsibleNestedInput = {
    create?: XOR<CreditCardCreateWithoutLegalResponsibleInput, CreditCardUncheckedCreateWithoutLegalResponsibleInput> | CreditCardCreateWithoutLegalResponsibleInput[] | CreditCardUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: CreditCardCreateOrConnectWithoutLegalResponsibleInput | CreditCardCreateOrConnectWithoutLegalResponsibleInput[]
    upsert?: CreditCardUpsertWithWhereUniqueWithoutLegalResponsibleInput | CreditCardUpsertWithWhereUniqueWithoutLegalResponsibleInput[]
    createMany?: CreditCardCreateManyLegalResponsibleInputEnvelope
    set?: CreditCardWhereUniqueInput | CreditCardWhereUniqueInput[]
    disconnect?: CreditCardWhereUniqueInput | CreditCardWhereUniqueInput[]
    delete?: CreditCardWhereUniqueInput | CreditCardWhereUniqueInput[]
    connect?: CreditCardWhereUniqueInput | CreditCardWhereUniqueInput[]
    update?: CreditCardUpdateWithWhereUniqueWithoutLegalResponsibleInput | CreditCardUpdateWithWhereUniqueWithoutLegalResponsibleInput[]
    updateMany?: CreditCardUpdateManyWithWhereWithoutLegalResponsibleInput | CreditCardUpdateManyWithWhereWithoutLegalResponsibleInput[]
    deleteMany?: CreditCardScalarWhereInput | CreditCardScalarWhereInput[]
  }

  export type ExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput = {
    create?: XOR<ExpenseCreateWithoutLegalResponsibleInput, ExpenseUncheckedCreateWithoutLegalResponsibleInput> | ExpenseCreateWithoutLegalResponsibleInput[] | ExpenseUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutLegalResponsibleInput | ExpenseCreateOrConnectWithoutLegalResponsibleInput[]
    upsert?: ExpenseUpsertWithWhereUniqueWithoutLegalResponsibleInput | ExpenseUpsertWithWhereUniqueWithoutLegalResponsibleInput[]
    createMany?: ExpenseCreateManyLegalResponsibleInputEnvelope
    set?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    disconnect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    delete?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    update?: ExpenseUpdateWithWhereUniqueWithoutLegalResponsibleInput | ExpenseUpdateWithWhereUniqueWithoutLegalResponsibleInput[]
    updateMany?: ExpenseUpdateManyWithWhereWithoutLegalResponsibleInput | ExpenseUpdateManyWithWhereWithoutLegalResponsibleInput[]
    deleteMany?: ExpenseScalarWhereInput | ExpenseScalarWhereInput[]
  }

  export type FinancingUncheckedUpdateManyWithoutLegalResponsibleNestedInput = {
    create?: XOR<FinancingCreateWithoutLegalResponsibleInput, FinancingUncheckedCreateWithoutLegalResponsibleInput> | FinancingCreateWithoutLegalResponsibleInput[] | FinancingUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: FinancingCreateOrConnectWithoutLegalResponsibleInput | FinancingCreateOrConnectWithoutLegalResponsibleInput[]
    upsert?: FinancingUpsertWithWhereUniqueWithoutLegalResponsibleInput | FinancingUpsertWithWhereUniqueWithoutLegalResponsibleInput[]
    createMany?: FinancingCreateManyLegalResponsibleInputEnvelope
    set?: FinancingWhereUniqueInput | FinancingWhereUniqueInput[]
    disconnect?: FinancingWhereUniqueInput | FinancingWhereUniqueInput[]
    delete?: FinancingWhereUniqueInput | FinancingWhereUniqueInput[]
    connect?: FinancingWhereUniqueInput | FinancingWhereUniqueInput[]
    update?: FinancingUpdateWithWhereUniqueWithoutLegalResponsibleInput | FinancingUpdateWithWhereUniqueWithoutLegalResponsibleInput[]
    updateMany?: FinancingUpdateManyWithWhereWithoutLegalResponsibleInput | FinancingUpdateManyWithWhereWithoutLegalResponsibleInput[]
    deleteMany?: FinancingScalarWhereInput | FinancingScalarWhereInput[]
  }

  export type LoanUncheckedUpdateManyWithoutLegalResponsibleNestedInput = {
    create?: XOR<LoanCreateWithoutLegalResponsibleInput, LoanUncheckedCreateWithoutLegalResponsibleInput> | LoanCreateWithoutLegalResponsibleInput[] | LoanUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: LoanCreateOrConnectWithoutLegalResponsibleInput | LoanCreateOrConnectWithoutLegalResponsibleInput[]
    upsert?: LoanUpsertWithWhereUniqueWithoutLegalResponsibleInput | LoanUpsertWithWhereUniqueWithoutLegalResponsibleInput[]
    createMany?: LoanCreateManyLegalResponsibleInputEnvelope
    set?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    disconnect?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    delete?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    connect?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    update?: LoanUpdateWithWhereUniqueWithoutLegalResponsibleInput | LoanUpdateWithWhereUniqueWithoutLegalResponsibleInput[]
    updateMany?: LoanUpdateManyWithWhereWithoutLegalResponsibleInput | LoanUpdateManyWithWhereWithoutLegalResponsibleInput[]
    deleteMany?: LoanScalarWhereInput | LoanScalarWhereInput[]
  }

  export type OtherExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput = {
    create?: XOR<OtherExpenseCreateWithoutLegalResponsibleInput, OtherExpenseUncheckedCreateWithoutLegalResponsibleInput> | OtherExpenseCreateWithoutLegalResponsibleInput[] | OtherExpenseUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: OtherExpenseCreateOrConnectWithoutLegalResponsibleInput | OtherExpenseCreateOrConnectWithoutLegalResponsibleInput[]
    upsert?: OtherExpenseUpsertWithWhereUniqueWithoutLegalResponsibleInput | OtherExpenseUpsertWithWhereUniqueWithoutLegalResponsibleInput[]
    createMany?: OtherExpenseCreateManyLegalResponsibleInputEnvelope
    set?: OtherExpenseWhereUniqueInput | OtherExpenseWhereUniqueInput[]
    disconnect?: OtherExpenseWhereUniqueInput | OtherExpenseWhereUniqueInput[]
    delete?: OtherExpenseWhereUniqueInput | OtherExpenseWhereUniqueInput[]
    connect?: OtherExpenseWhereUniqueInput | OtherExpenseWhereUniqueInput[]
    update?: OtherExpenseUpdateWithWhereUniqueWithoutLegalResponsibleInput | OtherExpenseUpdateWithWhereUniqueWithoutLegalResponsibleInput[]
    updateMany?: OtherExpenseUpdateManyWithWhereWithoutLegalResponsibleInput | OtherExpenseUpdateManyWithWhereWithoutLegalResponsibleInput[]
    deleteMany?: OtherExpenseScalarWhereInput | OtherExpenseScalarWhereInput[]
  }

  export type VehicleUncheckedUpdateManyWithoutLegalResponsibleNestedInput = {
    create?: XOR<VehicleCreateWithoutLegalResponsibleInput, VehicleUncheckedCreateWithoutLegalResponsibleInput> | VehicleCreateWithoutLegalResponsibleInput[] | VehicleUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: VehicleCreateOrConnectWithoutLegalResponsibleInput | VehicleCreateOrConnectWithoutLegalResponsibleInput[]
    upsert?: VehicleUpsertWithWhereUniqueWithoutLegalResponsibleInput | VehicleUpsertWithWhereUniqueWithoutLegalResponsibleInput[]
    createMany?: VehicleCreateManyLegalResponsibleInputEnvelope
    set?: VehicleWhereUniqueInput | VehicleWhereUniqueInput[]
    disconnect?: VehicleWhereUniqueInput | VehicleWhereUniqueInput[]
    delete?: VehicleWhereUniqueInput | VehicleWhereUniqueInput[]
    connect?: VehicleWhereUniqueInput | VehicleWhereUniqueInput[]
    update?: VehicleUpdateWithWhereUniqueWithoutLegalResponsibleInput | VehicleUpdateWithWhereUniqueWithoutLegalResponsibleInput[]
    updateMany?: VehicleUpdateManyWithWhereWithoutLegalResponsibleInput | VehicleUpdateManyWithWhereWithoutLegalResponsibleInput[]
    deleteMany?: VehicleScalarWhereInput | VehicleScalarWhereInput[]
  }

  export type FamilyMemberDiseaseUncheckedUpdateManyWithoutLegalResponsibleNestedInput = {
    create?: XOR<FamilyMemberDiseaseCreateWithoutLegalResponsibleInput, FamilyMemberDiseaseUncheckedCreateWithoutLegalResponsibleInput> | FamilyMemberDiseaseCreateWithoutLegalResponsibleInput[] | FamilyMemberDiseaseUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: FamilyMemberDiseaseCreateOrConnectWithoutLegalResponsibleInput | FamilyMemberDiseaseCreateOrConnectWithoutLegalResponsibleInput[]
    upsert?: FamilyMemberDiseaseUpsertWithWhereUniqueWithoutLegalResponsibleInput | FamilyMemberDiseaseUpsertWithWhereUniqueWithoutLegalResponsibleInput[]
    createMany?: FamilyMemberDiseaseCreateManyLegalResponsibleInputEnvelope
    set?: FamilyMemberDiseaseWhereUniqueInput | FamilyMemberDiseaseWhereUniqueInput[]
    disconnect?: FamilyMemberDiseaseWhereUniqueInput | FamilyMemberDiseaseWhereUniqueInput[]
    delete?: FamilyMemberDiseaseWhereUniqueInput | FamilyMemberDiseaseWhereUniqueInput[]
    connect?: FamilyMemberDiseaseWhereUniqueInput | FamilyMemberDiseaseWhereUniqueInput[]
    update?: FamilyMemberDiseaseUpdateWithWhereUniqueWithoutLegalResponsibleInput | FamilyMemberDiseaseUpdateWithWhereUniqueWithoutLegalResponsibleInput[]
    updateMany?: FamilyMemberDiseaseUpdateManyWithWhereWithoutLegalResponsibleInput | FamilyMemberDiseaseUpdateManyWithWhereWithoutLegalResponsibleInput[]
    deleteMany?: FamilyMemberDiseaseScalarWhereInput | FamilyMemberDiseaseScalarWhereInput[]
  }

  export type MedicationUncheckedUpdateManyWithoutLegalResponsibleNestedInput = {
    create?: XOR<MedicationCreateWithoutLegalResponsibleInput, MedicationUncheckedCreateWithoutLegalResponsibleInput> | MedicationCreateWithoutLegalResponsibleInput[] | MedicationUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: MedicationCreateOrConnectWithoutLegalResponsibleInput | MedicationCreateOrConnectWithoutLegalResponsibleInput[]
    upsert?: MedicationUpsertWithWhereUniqueWithoutLegalResponsibleInput | MedicationUpsertWithWhereUniqueWithoutLegalResponsibleInput[]
    createMany?: MedicationCreateManyLegalResponsibleInputEnvelope
    set?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    disconnect?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    delete?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    connect?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    update?: MedicationUpdateWithWhereUniqueWithoutLegalResponsibleInput | MedicationUpdateWithWhereUniqueWithoutLegalResponsibleInput[]
    updateMany?: MedicationUpdateManyWithWhereWithoutLegalResponsibleInput | MedicationUpdateManyWithWhereWithoutLegalResponsibleInput[]
    deleteMany?: MedicationScalarWhereInput | MedicationScalarWhereInput[]
  }

  export type ApplicationUncheckedUpdateManyWithoutResponsibleNestedInput = {
    create?: XOR<ApplicationCreateWithoutResponsibleInput, ApplicationUncheckedCreateWithoutResponsibleInput> | ApplicationCreateWithoutResponsibleInput[] | ApplicationUncheckedCreateWithoutResponsibleInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutResponsibleInput | ApplicationCreateOrConnectWithoutResponsibleInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutResponsibleInput | ApplicationUpsertWithWhereUniqueWithoutResponsibleInput[]
    createMany?: ApplicationCreateManyResponsibleInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutResponsibleInput | ApplicationUpdateWithWhereUniqueWithoutResponsibleInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutResponsibleInput | ApplicationUpdateManyWithWhereWithoutResponsibleInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type FamilyMemberIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput = {
    create?: XOR<FamilyMemberIncomeCreateWithoutLegalResponsibleInput, FamilyMemberIncomeUncheckedCreateWithoutLegalResponsibleInput> | FamilyMemberIncomeCreateWithoutLegalResponsibleInput[] | FamilyMemberIncomeUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: FamilyMemberIncomeCreateOrConnectWithoutLegalResponsibleInput | FamilyMemberIncomeCreateOrConnectWithoutLegalResponsibleInput[]
    upsert?: FamilyMemberIncomeUpsertWithWhereUniqueWithoutLegalResponsibleInput | FamilyMemberIncomeUpsertWithWhereUniqueWithoutLegalResponsibleInput[]
    createMany?: FamilyMemberIncomeCreateManyLegalResponsibleInputEnvelope
    set?: FamilyMemberIncomeWhereUniqueInput | FamilyMemberIncomeWhereUniqueInput[]
    disconnect?: FamilyMemberIncomeWhereUniqueInput | FamilyMemberIncomeWhereUniqueInput[]
    delete?: FamilyMemberIncomeWhereUniqueInput | FamilyMemberIncomeWhereUniqueInput[]
    connect?: FamilyMemberIncomeWhereUniqueInput | FamilyMemberIncomeWhereUniqueInput[]
    update?: FamilyMemberIncomeUpdateWithWhereUniqueWithoutLegalResponsibleInput | FamilyMemberIncomeUpdateWithWhereUniqueWithoutLegalResponsibleInput[]
    updateMany?: FamilyMemberIncomeUpdateManyWithWhereWithoutLegalResponsibleInput | FamilyMemberIncomeUpdateManyWithWhereWithoutLegalResponsibleInput[]
    deleteMany?: FamilyMemberIncomeScalarWhereInput | FamilyMemberIncomeScalarWhereInput[]
  }

  export type MonthlyIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput = {
    create?: XOR<MonthlyIncomeCreateWithoutLegalResponsibleInput, MonthlyIncomeUncheckedCreateWithoutLegalResponsibleInput> | MonthlyIncomeCreateWithoutLegalResponsibleInput[] | MonthlyIncomeUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: MonthlyIncomeCreateOrConnectWithoutLegalResponsibleInput | MonthlyIncomeCreateOrConnectWithoutLegalResponsibleInput[]
    upsert?: MonthlyIncomeUpsertWithWhereUniqueWithoutLegalResponsibleInput | MonthlyIncomeUpsertWithWhereUniqueWithoutLegalResponsibleInput[]
    createMany?: MonthlyIncomeCreateManyLegalResponsibleInputEnvelope
    set?: MonthlyIncomeWhereUniqueInput | MonthlyIncomeWhereUniqueInput[]
    disconnect?: MonthlyIncomeWhereUniqueInput | MonthlyIncomeWhereUniqueInput[]
    delete?: MonthlyIncomeWhereUniqueInput | MonthlyIncomeWhereUniqueInput[]
    connect?: MonthlyIncomeWhereUniqueInput | MonthlyIncomeWhereUniqueInput[]
    update?: MonthlyIncomeUpdateWithWhereUniqueWithoutLegalResponsibleInput | MonthlyIncomeUpdateWithWhereUniqueWithoutLegalResponsibleInput[]
    updateMany?: MonthlyIncomeUpdateManyWithWhereWithoutLegalResponsibleInput | MonthlyIncomeUpdateManyWithWhereWithoutLegalResponsibleInput[]
    deleteMany?: MonthlyIncomeScalarWhereInput | MonthlyIncomeScalarWhereInput[]
  }

  export type BankAccountUncheckedUpdateManyWithoutLegalResponsibleNestedInput = {
    create?: XOR<BankAccountCreateWithoutLegalResponsibleInput, BankAccountUncheckedCreateWithoutLegalResponsibleInput> | BankAccountCreateWithoutLegalResponsibleInput[] | BankAccountUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: BankAccountCreateOrConnectWithoutLegalResponsibleInput | BankAccountCreateOrConnectWithoutLegalResponsibleInput[]
    upsert?: BankAccountUpsertWithWhereUniqueWithoutLegalResponsibleInput | BankAccountUpsertWithWhereUniqueWithoutLegalResponsibleInput[]
    createMany?: BankAccountCreateManyLegalResponsibleInputEnvelope
    set?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    disconnect?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    delete?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    connect?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    update?: BankAccountUpdateWithWhereUniqueWithoutLegalResponsibleInput | BankAccountUpdateWithWhereUniqueWithoutLegalResponsibleInput[]
    updateMany?: BankAccountUpdateManyWithWhereWithoutLegalResponsibleInput | BankAccountUpdateManyWithWhereWithoutLegalResponsibleInput[]
    deleteMany?: BankAccountScalarWhereInput | BankAccountScalarWhereInput[]
  }

  export type DeclarationsUncheckedUpdateManyWithoutLegalResponsibleNestedInput = {
    create?: XOR<DeclarationsCreateWithoutLegalResponsibleInput, DeclarationsUncheckedCreateWithoutLegalResponsibleInput> | DeclarationsCreateWithoutLegalResponsibleInput[] | DeclarationsUncheckedCreateWithoutLegalResponsibleInput[]
    connectOrCreate?: DeclarationsCreateOrConnectWithoutLegalResponsibleInput | DeclarationsCreateOrConnectWithoutLegalResponsibleInput[]
    upsert?: DeclarationsUpsertWithWhereUniqueWithoutLegalResponsibleInput | DeclarationsUpsertWithWhereUniqueWithoutLegalResponsibleInput[]
    createMany?: DeclarationsCreateManyLegalResponsibleInputEnvelope
    set?: DeclarationsWhereUniqueInput | DeclarationsWhereUniqueInput[]
    disconnect?: DeclarationsWhereUniqueInput | DeclarationsWhereUniqueInput[]
    delete?: DeclarationsWhereUniqueInput | DeclarationsWhereUniqueInput[]
    connect?: DeclarationsWhereUniqueInput | DeclarationsWhereUniqueInput[]
    update?: DeclarationsUpdateWithWhereUniqueWithoutLegalResponsibleInput | DeclarationsUpdateWithWhereUniqueWithoutLegalResponsibleInput[]
    updateMany?: DeclarationsUpdateManyWithWhereWithoutLegalResponsibleInput | DeclarationsUpdateManyWithWhereWithoutLegalResponsibleInput[]
    deleteMany?: DeclarationsScalarWhereInput | DeclarationsScalarWhereInput[]
  }

  export type ApplicationCreateNestedManyWithoutSocialAssistantInput = {
    create?: XOR<ApplicationCreateWithoutSocialAssistantInput, ApplicationUncheckedCreateWithoutSocialAssistantInput> | ApplicationCreateWithoutSocialAssistantInput[] | ApplicationUncheckedCreateWithoutSocialAssistantInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutSocialAssistantInput | ApplicationCreateOrConnectWithoutSocialAssistantInput[]
    createMany?: ApplicationCreateManySocialAssistantInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type EntityCreateNestedOneWithoutSocialAssistantInput = {
    create?: XOR<EntityCreateWithoutSocialAssistantInput, EntityUncheckedCreateWithoutSocialAssistantInput>
    connectOrCreate?: EntityCreateOrConnectWithoutSocialAssistantInput
    connect?: EntityWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutSocialAssistantInput = {
    create?: XOR<UserCreateWithoutSocialAssistantInput, UserUncheckedCreateWithoutSocialAssistantInput>
    connectOrCreate?: UserCreateOrConnectWithoutSocialAssistantInput
    connect?: UserWhereUniqueInput
  }

  export type AnnouncementCreateNestedManyWithoutSocialAssistantInput = {
    create?: XOR<AnnouncementCreateWithoutSocialAssistantInput, AnnouncementUncheckedCreateWithoutSocialAssistantInput> | AnnouncementCreateWithoutSocialAssistantInput[] | AnnouncementUncheckedCreateWithoutSocialAssistantInput[]
    connectOrCreate?: AnnouncementCreateOrConnectWithoutSocialAssistantInput | AnnouncementCreateOrConnectWithoutSocialAssistantInput[]
    connect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
  }

  export type EntitySubsidiaryCreateNestedManyWithoutSocialAssistantInput = {
    create?: XOR<EntitySubsidiaryCreateWithoutSocialAssistantInput, EntitySubsidiaryUncheckedCreateWithoutSocialAssistantInput> | EntitySubsidiaryCreateWithoutSocialAssistantInput[] | EntitySubsidiaryUncheckedCreateWithoutSocialAssistantInput[]
    connectOrCreate?: EntitySubsidiaryCreateOrConnectWithoutSocialAssistantInput | EntitySubsidiaryCreateOrConnectWithoutSocialAssistantInput[]
    connect?: EntitySubsidiaryWhereUniqueInput | EntitySubsidiaryWhereUniqueInput[]
  }

  export type ApplicationUncheckedCreateNestedManyWithoutSocialAssistantInput = {
    create?: XOR<ApplicationCreateWithoutSocialAssistantInput, ApplicationUncheckedCreateWithoutSocialAssistantInput> | ApplicationCreateWithoutSocialAssistantInput[] | ApplicationUncheckedCreateWithoutSocialAssistantInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutSocialAssistantInput | ApplicationCreateOrConnectWithoutSocialAssistantInput[]
    createMany?: ApplicationCreateManySocialAssistantInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type AnnouncementUncheckedCreateNestedManyWithoutSocialAssistantInput = {
    create?: XOR<AnnouncementCreateWithoutSocialAssistantInput, AnnouncementUncheckedCreateWithoutSocialAssistantInput> | AnnouncementCreateWithoutSocialAssistantInput[] | AnnouncementUncheckedCreateWithoutSocialAssistantInput[]
    connectOrCreate?: AnnouncementCreateOrConnectWithoutSocialAssistantInput | AnnouncementCreateOrConnectWithoutSocialAssistantInput[]
    connect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
  }

  export type EntitySubsidiaryUncheckedCreateNestedManyWithoutSocialAssistantInput = {
    create?: XOR<EntitySubsidiaryCreateWithoutSocialAssistantInput, EntitySubsidiaryUncheckedCreateWithoutSocialAssistantInput> | EntitySubsidiaryCreateWithoutSocialAssistantInput[] | EntitySubsidiaryUncheckedCreateWithoutSocialAssistantInput[]
    connectOrCreate?: EntitySubsidiaryCreateOrConnectWithoutSocialAssistantInput | EntitySubsidiaryCreateOrConnectWithoutSocialAssistantInput[]
    connect?: EntitySubsidiaryWhereUniqueInput | EntitySubsidiaryWhereUniqueInput[]
  }

  export type ApplicationUpdateManyWithoutSocialAssistantNestedInput = {
    create?: XOR<ApplicationCreateWithoutSocialAssistantInput, ApplicationUncheckedCreateWithoutSocialAssistantInput> | ApplicationCreateWithoutSocialAssistantInput[] | ApplicationUncheckedCreateWithoutSocialAssistantInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutSocialAssistantInput | ApplicationCreateOrConnectWithoutSocialAssistantInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutSocialAssistantInput | ApplicationUpsertWithWhereUniqueWithoutSocialAssistantInput[]
    createMany?: ApplicationCreateManySocialAssistantInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutSocialAssistantInput | ApplicationUpdateWithWhereUniqueWithoutSocialAssistantInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutSocialAssistantInput | ApplicationUpdateManyWithWhereWithoutSocialAssistantInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type EntityUpdateOneRequiredWithoutSocialAssistantNestedInput = {
    create?: XOR<EntityCreateWithoutSocialAssistantInput, EntityUncheckedCreateWithoutSocialAssistantInput>
    connectOrCreate?: EntityCreateOrConnectWithoutSocialAssistantInput
    upsert?: EntityUpsertWithoutSocialAssistantInput
    connect?: EntityWhereUniqueInput
    update?: XOR<XOR<EntityUpdateToOneWithWhereWithoutSocialAssistantInput, EntityUpdateWithoutSocialAssistantInput>, EntityUncheckedUpdateWithoutSocialAssistantInput>
  }

  export type UserUpdateOneRequiredWithoutSocialAssistantNestedInput = {
    create?: XOR<UserCreateWithoutSocialAssistantInput, UserUncheckedCreateWithoutSocialAssistantInput>
    connectOrCreate?: UserCreateOrConnectWithoutSocialAssistantInput
    upsert?: UserUpsertWithoutSocialAssistantInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSocialAssistantInput, UserUpdateWithoutSocialAssistantInput>, UserUncheckedUpdateWithoutSocialAssistantInput>
  }

  export type AnnouncementUpdateManyWithoutSocialAssistantNestedInput = {
    create?: XOR<AnnouncementCreateWithoutSocialAssistantInput, AnnouncementUncheckedCreateWithoutSocialAssistantInput> | AnnouncementCreateWithoutSocialAssistantInput[] | AnnouncementUncheckedCreateWithoutSocialAssistantInput[]
    connectOrCreate?: AnnouncementCreateOrConnectWithoutSocialAssistantInput | AnnouncementCreateOrConnectWithoutSocialAssistantInput[]
    upsert?: AnnouncementUpsertWithWhereUniqueWithoutSocialAssistantInput | AnnouncementUpsertWithWhereUniqueWithoutSocialAssistantInput[]
    set?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    disconnect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    delete?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    connect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    update?: AnnouncementUpdateWithWhereUniqueWithoutSocialAssistantInput | AnnouncementUpdateWithWhereUniqueWithoutSocialAssistantInput[]
    updateMany?: AnnouncementUpdateManyWithWhereWithoutSocialAssistantInput | AnnouncementUpdateManyWithWhereWithoutSocialAssistantInput[]
    deleteMany?: AnnouncementScalarWhereInput | AnnouncementScalarWhereInput[]
  }

  export type EntitySubsidiaryUpdateManyWithoutSocialAssistantNestedInput = {
    create?: XOR<EntitySubsidiaryCreateWithoutSocialAssistantInput, EntitySubsidiaryUncheckedCreateWithoutSocialAssistantInput> | EntitySubsidiaryCreateWithoutSocialAssistantInput[] | EntitySubsidiaryUncheckedCreateWithoutSocialAssistantInput[]
    connectOrCreate?: EntitySubsidiaryCreateOrConnectWithoutSocialAssistantInput | EntitySubsidiaryCreateOrConnectWithoutSocialAssistantInput[]
    upsert?: EntitySubsidiaryUpsertWithWhereUniqueWithoutSocialAssistantInput | EntitySubsidiaryUpsertWithWhereUniqueWithoutSocialAssistantInput[]
    set?: EntitySubsidiaryWhereUniqueInput | EntitySubsidiaryWhereUniqueInput[]
    disconnect?: EntitySubsidiaryWhereUniqueInput | EntitySubsidiaryWhereUniqueInput[]
    delete?: EntitySubsidiaryWhereUniqueInput | EntitySubsidiaryWhereUniqueInput[]
    connect?: EntitySubsidiaryWhereUniqueInput | EntitySubsidiaryWhereUniqueInput[]
    update?: EntitySubsidiaryUpdateWithWhereUniqueWithoutSocialAssistantInput | EntitySubsidiaryUpdateWithWhereUniqueWithoutSocialAssistantInput[]
    updateMany?: EntitySubsidiaryUpdateManyWithWhereWithoutSocialAssistantInput | EntitySubsidiaryUpdateManyWithWhereWithoutSocialAssistantInput[]
    deleteMany?: EntitySubsidiaryScalarWhereInput | EntitySubsidiaryScalarWhereInput[]
  }

  export type ApplicationUncheckedUpdateManyWithoutSocialAssistantNestedInput = {
    create?: XOR<ApplicationCreateWithoutSocialAssistantInput, ApplicationUncheckedCreateWithoutSocialAssistantInput> | ApplicationCreateWithoutSocialAssistantInput[] | ApplicationUncheckedCreateWithoutSocialAssistantInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutSocialAssistantInput | ApplicationCreateOrConnectWithoutSocialAssistantInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutSocialAssistantInput | ApplicationUpsertWithWhereUniqueWithoutSocialAssistantInput[]
    createMany?: ApplicationCreateManySocialAssistantInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutSocialAssistantInput | ApplicationUpdateWithWhereUniqueWithoutSocialAssistantInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutSocialAssistantInput | ApplicationUpdateManyWithWhereWithoutSocialAssistantInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type AnnouncementUncheckedUpdateManyWithoutSocialAssistantNestedInput = {
    create?: XOR<AnnouncementCreateWithoutSocialAssistantInput, AnnouncementUncheckedCreateWithoutSocialAssistantInput> | AnnouncementCreateWithoutSocialAssistantInput[] | AnnouncementUncheckedCreateWithoutSocialAssistantInput[]
    connectOrCreate?: AnnouncementCreateOrConnectWithoutSocialAssistantInput | AnnouncementCreateOrConnectWithoutSocialAssistantInput[]
    upsert?: AnnouncementUpsertWithWhereUniqueWithoutSocialAssistantInput | AnnouncementUpsertWithWhereUniqueWithoutSocialAssistantInput[]
    set?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    disconnect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    delete?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    connect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    update?: AnnouncementUpdateWithWhereUniqueWithoutSocialAssistantInput | AnnouncementUpdateWithWhereUniqueWithoutSocialAssistantInput[]
    updateMany?: AnnouncementUpdateManyWithWhereWithoutSocialAssistantInput | AnnouncementUpdateManyWithWhereWithoutSocialAssistantInput[]
    deleteMany?: AnnouncementScalarWhereInput | AnnouncementScalarWhereInput[]
  }

  export type EntitySubsidiaryUncheckedUpdateManyWithoutSocialAssistantNestedInput = {
    create?: XOR<EntitySubsidiaryCreateWithoutSocialAssistantInput, EntitySubsidiaryUncheckedCreateWithoutSocialAssistantInput> | EntitySubsidiaryCreateWithoutSocialAssistantInput[] | EntitySubsidiaryUncheckedCreateWithoutSocialAssistantInput[]
    connectOrCreate?: EntitySubsidiaryCreateOrConnectWithoutSocialAssistantInput | EntitySubsidiaryCreateOrConnectWithoutSocialAssistantInput[]
    upsert?: EntitySubsidiaryUpsertWithWhereUniqueWithoutSocialAssistantInput | EntitySubsidiaryUpsertWithWhereUniqueWithoutSocialAssistantInput[]
    set?: EntitySubsidiaryWhereUniqueInput | EntitySubsidiaryWhereUniqueInput[]
    disconnect?: EntitySubsidiaryWhereUniqueInput | EntitySubsidiaryWhereUniqueInput[]
    delete?: EntitySubsidiaryWhereUniqueInput | EntitySubsidiaryWhereUniqueInput[]
    connect?: EntitySubsidiaryWhereUniqueInput | EntitySubsidiaryWhereUniqueInput[]
    update?: EntitySubsidiaryUpdateWithWhereUniqueWithoutSocialAssistantInput | EntitySubsidiaryUpdateWithWhereUniqueWithoutSocialAssistantInput[]
    updateMany?: EntitySubsidiaryUpdateManyWithWhereWithoutSocialAssistantInput | EntitySubsidiaryUpdateManyWithWhereWithoutSocialAssistantInput[]
    deleteMany?: EntitySubsidiaryScalarWhereInput | EntitySubsidiaryScalarWhereInput[]
  }

  export type AnnouncementCreateNestedManyWithoutEntityInput = {
    create?: XOR<AnnouncementCreateWithoutEntityInput, AnnouncementUncheckedCreateWithoutEntityInput> | AnnouncementCreateWithoutEntityInput[] | AnnouncementUncheckedCreateWithoutEntityInput[]
    connectOrCreate?: AnnouncementCreateOrConnectWithoutEntityInput | AnnouncementCreateOrConnectWithoutEntityInput[]
    createMany?: AnnouncementCreateManyEntityInputEnvelope
    connect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
  }

  export type EntityDirectorCreateNestedManyWithoutEntityInput = {
    create?: XOR<EntityDirectorCreateWithoutEntityInput, EntityDirectorUncheckedCreateWithoutEntityInput> | EntityDirectorCreateWithoutEntityInput[] | EntityDirectorUncheckedCreateWithoutEntityInput[]
    connectOrCreate?: EntityDirectorCreateOrConnectWithoutEntityInput | EntityDirectorCreateOrConnectWithoutEntityInput[]
    createMany?: EntityDirectorCreateManyEntityInputEnvelope
    connect?: EntityDirectorWhereUniqueInput | EntityDirectorWhereUniqueInput[]
  }

  export type EntitySubsidiaryCreateNestedManyWithoutEntityInput = {
    create?: XOR<EntitySubsidiaryCreateWithoutEntityInput, EntitySubsidiaryUncheckedCreateWithoutEntityInput> | EntitySubsidiaryCreateWithoutEntityInput[] | EntitySubsidiaryUncheckedCreateWithoutEntityInput[]
    connectOrCreate?: EntitySubsidiaryCreateOrConnectWithoutEntityInput | EntitySubsidiaryCreateOrConnectWithoutEntityInput[]
    createMany?: EntitySubsidiaryCreateManyEntityInputEnvelope
    connect?: EntitySubsidiaryWhereUniqueInput | EntitySubsidiaryWhereUniqueInput[]
  }

  export type SocialAssistantCreateNestedManyWithoutEntityInput = {
    create?: XOR<SocialAssistantCreateWithoutEntityInput, SocialAssistantUncheckedCreateWithoutEntityInput> | SocialAssistantCreateWithoutEntityInput[] | SocialAssistantUncheckedCreateWithoutEntityInput[]
    connectOrCreate?: SocialAssistantCreateOrConnectWithoutEntityInput | SocialAssistantCreateOrConnectWithoutEntityInput[]
    createMany?: SocialAssistantCreateManyEntityInputEnvelope
    connect?: SocialAssistantWhereUniqueInput | SocialAssistantWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutEntityInput = {
    create?: XOR<UserCreateWithoutEntityInput, UserUncheckedCreateWithoutEntityInput>
    connectOrCreate?: UserCreateOrConnectWithoutEntityInput
    connect?: UserWhereUniqueInput
  }

  export type AnnouncementUncheckedCreateNestedManyWithoutEntityInput = {
    create?: XOR<AnnouncementCreateWithoutEntityInput, AnnouncementUncheckedCreateWithoutEntityInput> | AnnouncementCreateWithoutEntityInput[] | AnnouncementUncheckedCreateWithoutEntityInput[]
    connectOrCreate?: AnnouncementCreateOrConnectWithoutEntityInput | AnnouncementCreateOrConnectWithoutEntityInput[]
    createMany?: AnnouncementCreateManyEntityInputEnvelope
    connect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
  }

  export type EntityDirectorUncheckedCreateNestedManyWithoutEntityInput = {
    create?: XOR<EntityDirectorCreateWithoutEntityInput, EntityDirectorUncheckedCreateWithoutEntityInput> | EntityDirectorCreateWithoutEntityInput[] | EntityDirectorUncheckedCreateWithoutEntityInput[]
    connectOrCreate?: EntityDirectorCreateOrConnectWithoutEntityInput | EntityDirectorCreateOrConnectWithoutEntityInput[]
    createMany?: EntityDirectorCreateManyEntityInputEnvelope
    connect?: EntityDirectorWhereUniqueInput | EntityDirectorWhereUniqueInput[]
  }

  export type EntitySubsidiaryUncheckedCreateNestedManyWithoutEntityInput = {
    create?: XOR<EntitySubsidiaryCreateWithoutEntityInput, EntitySubsidiaryUncheckedCreateWithoutEntityInput> | EntitySubsidiaryCreateWithoutEntityInput[] | EntitySubsidiaryUncheckedCreateWithoutEntityInput[]
    connectOrCreate?: EntitySubsidiaryCreateOrConnectWithoutEntityInput | EntitySubsidiaryCreateOrConnectWithoutEntityInput[]
    createMany?: EntitySubsidiaryCreateManyEntityInputEnvelope
    connect?: EntitySubsidiaryWhereUniqueInput | EntitySubsidiaryWhereUniqueInput[]
  }

  export type SocialAssistantUncheckedCreateNestedManyWithoutEntityInput = {
    create?: XOR<SocialAssistantCreateWithoutEntityInput, SocialAssistantUncheckedCreateWithoutEntityInput> | SocialAssistantCreateWithoutEntityInput[] | SocialAssistantUncheckedCreateWithoutEntityInput[]
    connectOrCreate?: SocialAssistantCreateOrConnectWithoutEntityInput | SocialAssistantCreateOrConnectWithoutEntityInput[]
    createMany?: SocialAssistantCreateManyEntityInputEnvelope
    connect?: SocialAssistantWhereUniqueInput | SocialAssistantWhereUniqueInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableEnumCOUNTRYFieldUpdateOperationsInput = {
    set?: $Enums.COUNTRY | null
  }

  export type AnnouncementUpdateManyWithoutEntityNestedInput = {
    create?: XOR<AnnouncementCreateWithoutEntityInput, AnnouncementUncheckedCreateWithoutEntityInput> | AnnouncementCreateWithoutEntityInput[] | AnnouncementUncheckedCreateWithoutEntityInput[]
    connectOrCreate?: AnnouncementCreateOrConnectWithoutEntityInput | AnnouncementCreateOrConnectWithoutEntityInput[]
    upsert?: AnnouncementUpsertWithWhereUniqueWithoutEntityInput | AnnouncementUpsertWithWhereUniqueWithoutEntityInput[]
    createMany?: AnnouncementCreateManyEntityInputEnvelope
    set?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    disconnect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    delete?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    connect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    update?: AnnouncementUpdateWithWhereUniqueWithoutEntityInput | AnnouncementUpdateWithWhereUniqueWithoutEntityInput[]
    updateMany?: AnnouncementUpdateManyWithWhereWithoutEntityInput | AnnouncementUpdateManyWithWhereWithoutEntityInput[]
    deleteMany?: AnnouncementScalarWhereInput | AnnouncementScalarWhereInput[]
  }

  export type EntityDirectorUpdateManyWithoutEntityNestedInput = {
    create?: XOR<EntityDirectorCreateWithoutEntityInput, EntityDirectorUncheckedCreateWithoutEntityInput> | EntityDirectorCreateWithoutEntityInput[] | EntityDirectorUncheckedCreateWithoutEntityInput[]
    connectOrCreate?: EntityDirectorCreateOrConnectWithoutEntityInput | EntityDirectorCreateOrConnectWithoutEntityInput[]
    upsert?: EntityDirectorUpsertWithWhereUniqueWithoutEntityInput | EntityDirectorUpsertWithWhereUniqueWithoutEntityInput[]
    createMany?: EntityDirectorCreateManyEntityInputEnvelope
    set?: EntityDirectorWhereUniqueInput | EntityDirectorWhereUniqueInput[]
    disconnect?: EntityDirectorWhereUniqueInput | EntityDirectorWhereUniqueInput[]
    delete?: EntityDirectorWhereUniqueInput | EntityDirectorWhereUniqueInput[]
    connect?: EntityDirectorWhereUniqueInput | EntityDirectorWhereUniqueInput[]
    update?: EntityDirectorUpdateWithWhereUniqueWithoutEntityInput | EntityDirectorUpdateWithWhereUniqueWithoutEntityInput[]
    updateMany?: EntityDirectorUpdateManyWithWhereWithoutEntityInput | EntityDirectorUpdateManyWithWhereWithoutEntityInput[]
    deleteMany?: EntityDirectorScalarWhereInput | EntityDirectorScalarWhereInput[]
  }

  export type EntitySubsidiaryUpdateManyWithoutEntityNestedInput = {
    create?: XOR<EntitySubsidiaryCreateWithoutEntityInput, EntitySubsidiaryUncheckedCreateWithoutEntityInput> | EntitySubsidiaryCreateWithoutEntityInput[] | EntitySubsidiaryUncheckedCreateWithoutEntityInput[]
    connectOrCreate?: EntitySubsidiaryCreateOrConnectWithoutEntityInput | EntitySubsidiaryCreateOrConnectWithoutEntityInput[]
    upsert?: EntitySubsidiaryUpsertWithWhereUniqueWithoutEntityInput | EntitySubsidiaryUpsertWithWhereUniqueWithoutEntityInput[]
    createMany?: EntitySubsidiaryCreateManyEntityInputEnvelope
    set?: EntitySubsidiaryWhereUniqueInput | EntitySubsidiaryWhereUniqueInput[]
    disconnect?: EntitySubsidiaryWhereUniqueInput | EntitySubsidiaryWhereUniqueInput[]
    delete?: EntitySubsidiaryWhereUniqueInput | EntitySubsidiaryWhereUniqueInput[]
    connect?: EntitySubsidiaryWhereUniqueInput | EntitySubsidiaryWhereUniqueInput[]
    update?: EntitySubsidiaryUpdateWithWhereUniqueWithoutEntityInput | EntitySubsidiaryUpdateWithWhereUniqueWithoutEntityInput[]
    updateMany?: EntitySubsidiaryUpdateManyWithWhereWithoutEntityInput | EntitySubsidiaryUpdateManyWithWhereWithoutEntityInput[]
    deleteMany?: EntitySubsidiaryScalarWhereInput | EntitySubsidiaryScalarWhereInput[]
  }

  export type SocialAssistantUpdateManyWithoutEntityNestedInput = {
    create?: XOR<SocialAssistantCreateWithoutEntityInput, SocialAssistantUncheckedCreateWithoutEntityInput> | SocialAssistantCreateWithoutEntityInput[] | SocialAssistantUncheckedCreateWithoutEntityInput[]
    connectOrCreate?: SocialAssistantCreateOrConnectWithoutEntityInput | SocialAssistantCreateOrConnectWithoutEntityInput[]
    upsert?: SocialAssistantUpsertWithWhereUniqueWithoutEntityInput | SocialAssistantUpsertWithWhereUniqueWithoutEntityInput[]
    createMany?: SocialAssistantCreateManyEntityInputEnvelope
    set?: SocialAssistantWhereUniqueInput | SocialAssistantWhereUniqueInput[]
    disconnect?: SocialAssistantWhereUniqueInput | SocialAssistantWhereUniqueInput[]
    delete?: SocialAssistantWhereUniqueInput | SocialAssistantWhereUniqueInput[]
    connect?: SocialAssistantWhereUniqueInput | SocialAssistantWhereUniqueInput[]
    update?: SocialAssistantUpdateWithWhereUniqueWithoutEntityInput | SocialAssistantUpdateWithWhereUniqueWithoutEntityInput[]
    updateMany?: SocialAssistantUpdateManyWithWhereWithoutEntityInput | SocialAssistantUpdateManyWithWhereWithoutEntityInput[]
    deleteMany?: SocialAssistantScalarWhereInput | SocialAssistantScalarWhereInput[]
  }

  export type UserUpdateOneRequiredWithoutEntityNestedInput = {
    create?: XOR<UserCreateWithoutEntityInput, UserUncheckedCreateWithoutEntityInput>
    connectOrCreate?: UserCreateOrConnectWithoutEntityInput
    upsert?: UserUpsertWithoutEntityInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutEntityInput, UserUpdateWithoutEntityInput>, UserUncheckedUpdateWithoutEntityInput>
  }

  export type AnnouncementUncheckedUpdateManyWithoutEntityNestedInput = {
    create?: XOR<AnnouncementCreateWithoutEntityInput, AnnouncementUncheckedCreateWithoutEntityInput> | AnnouncementCreateWithoutEntityInput[] | AnnouncementUncheckedCreateWithoutEntityInput[]
    connectOrCreate?: AnnouncementCreateOrConnectWithoutEntityInput | AnnouncementCreateOrConnectWithoutEntityInput[]
    upsert?: AnnouncementUpsertWithWhereUniqueWithoutEntityInput | AnnouncementUpsertWithWhereUniqueWithoutEntityInput[]
    createMany?: AnnouncementCreateManyEntityInputEnvelope
    set?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    disconnect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    delete?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    connect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    update?: AnnouncementUpdateWithWhereUniqueWithoutEntityInput | AnnouncementUpdateWithWhereUniqueWithoutEntityInput[]
    updateMany?: AnnouncementUpdateManyWithWhereWithoutEntityInput | AnnouncementUpdateManyWithWhereWithoutEntityInput[]
    deleteMany?: AnnouncementScalarWhereInput | AnnouncementScalarWhereInput[]
  }

  export type EntityDirectorUncheckedUpdateManyWithoutEntityNestedInput = {
    create?: XOR<EntityDirectorCreateWithoutEntityInput, EntityDirectorUncheckedCreateWithoutEntityInput> | EntityDirectorCreateWithoutEntityInput[] | EntityDirectorUncheckedCreateWithoutEntityInput[]
    connectOrCreate?: EntityDirectorCreateOrConnectWithoutEntityInput | EntityDirectorCreateOrConnectWithoutEntityInput[]
    upsert?: EntityDirectorUpsertWithWhereUniqueWithoutEntityInput | EntityDirectorUpsertWithWhereUniqueWithoutEntityInput[]
    createMany?: EntityDirectorCreateManyEntityInputEnvelope
    set?: EntityDirectorWhereUniqueInput | EntityDirectorWhereUniqueInput[]
    disconnect?: EntityDirectorWhereUniqueInput | EntityDirectorWhereUniqueInput[]
    delete?: EntityDirectorWhereUniqueInput | EntityDirectorWhereUniqueInput[]
    connect?: EntityDirectorWhereUniqueInput | EntityDirectorWhereUniqueInput[]
    update?: EntityDirectorUpdateWithWhereUniqueWithoutEntityInput | EntityDirectorUpdateWithWhereUniqueWithoutEntityInput[]
    updateMany?: EntityDirectorUpdateManyWithWhereWithoutEntityInput | EntityDirectorUpdateManyWithWhereWithoutEntityInput[]
    deleteMany?: EntityDirectorScalarWhereInput | EntityDirectorScalarWhereInput[]
  }

  export type EntitySubsidiaryUncheckedUpdateManyWithoutEntityNestedInput = {
    create?: XOR<EntitySubsidiaryCreateWithoutEntityInput, EntitySubsidiaryUncheckedCreateWithoutEntityInput> | EntitySubsidiaryCreateWithoutEntityInput[] | EntitySubsidiaryUncheckedCreateWithoutEntityInput[]
    connectOrCreate?: EntitySubsidiaryCreateOrConnectWithoutEntityInput | EntitySubsidiaryCreateOrConnectWithoutEntityInput[]
    upsert?: EntitySubsidiaryUpsertWithWhereUniqueWithoutEntityInput | EntitySubsidiaryUpsertWithWhereUniqueWithoutEntityInput[]
    createMany?: EntitySubsidiaryCreateManyEntityInputEnvelope
    set?: EntitySubsidiaryWhereUniqueInput | EntitySubsidiaryWhereUniqueInput[]
    disconnect?: EntitySubsidiaryWhereUniqueInput | EntitySubsidiaryWhereUniqueInput[]
    delete?: EntitySubsidiaryWhereUniqueInput | EntitySubsidiaryWhereUniqueInput[]
    connect?: EntitySubsidiaryWhereUniqueInput | EntitySubsidiaryWhereUniqueInput[]
    update?: EntitySubsidiaryUpdateWithWhereUniqueWithoutEntityInput | EntitySubsidiaryUpdateWithWhereUniqueWithoutEntityInput[]
    updateMany?: EntitySubsidiaryUpdateManyWithWhereWithoutEntityInput | EntitySubsidiaryUpdateManyWithWhereWithoutEntityInput[]
    deleteMany?: EntitySubsidiaryScalarWhereInput | EntitySubsidiaryScalarWhereInput[]
  }

  export type SocialAssistantUncheckedUpdateManyWithoutEntityNestedInput = {
    create?: XOR<SocialAssistantCreateWithoutEntityInput, SocialAssistantUncheckedCreateWithoutEntityInput> | SocialAssistantCreateWithoutEntityInput[] | SocialAssistantUncheckedCreateWithoutEntityInput[]
    connectOrCreate?: SocialAssistantCreateOrConnectWithoutEntityInput | SocialAssistantCreateOrConnectWithoutEntityInput[]
    upsert?: SocialAssistantUpsertWithWhereUniqueWithoutEntityInput | SocialAssistantUpsertWithWhereUniqueWithoutEntityInput[]
    createMany?: SocialAssistantCreateManyEntityInputEnvelope
    set?: SocialAssistantWhereUniqueInput | SocialAssistantWhereUniqueInput[]
    disconnect?: SocialAssistantWhereUniqueInput | SocialAssistantWhereUniqueInput[]
    delete?: SocialAssistantWhereUniqueInput | SocialAssistantWhereUniqueInput[]
    connect?: SocialAssistantWhereUniqueInput | SocialAssistantWhereUniqueInput[]
    update?: SocialAssistantUpdateWithWhereUniqueWithoutEntityInput | SocialAssistantUpdateWithWhereUniqueWithoutEntityInput[]
    updateMany?: SocialAssistantUpdateManyWithWhereWithoutEntityInput | SocialAssistantUpdateManyWithWhereWithoutEntityInput[]
    deleteMany?: SocialAssistantScalarWhereInput | SocialAssistantScalarWhereInput[]
  }

  export type AnnouncementCreateNestedManyWithoutEntity_subsidiaryInput = {
    create?: XOR<AnnouncementCreateWithoutEntity_subsidiaryInput, AnnouncementUncheckedCreateWithoutEntity_subsidiaryInput> | AnnouncementCreateWithoutEntity_subsidiaryInput[] | AnnouncementUncheckedCreateWithoutEntity_subsidiaryInput[]
    connectOrCreate?: AnnouncementCreateOrConnectWithoutEntity_subsidiaryInput | AnnouncementCreateOrConnectWithoutEntity_subsidiaryInput[]
    connect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
  }

  export type EntityDirectorCreateNestedManyWithoutEntity_subsidiaryInput = {
    create?: XOR<EntityDirectorCreateWithoutEntity_subsidiaryInput, EntityDirectorUncheckedCreateWithoutEntity_subsidiaryInput> | EntityDirectorCreateWithoutEntity_subsidiaryInput[] | EntityDirectorUncheckedCreateWithoutEntity_subsidiaryInput[]
    connectOrCreate?: EntityDirectorCreateOrConnectWithoutEntity_subsidiaryInput | EntityDirectorCreateOrConnectWithoutEntity_subsidiaryInput[]
    createMany?: EntityDirectorCreateManyEntity_subsidiaryInputEnvelope
    connect?: EntityDirectorWhereUniqueInput | EntityDirectorWhereUniqueInput[]
  }

  export type EntityCreateNestedOneWithoutEntitySubsidiaryInput = {
    create?: XOR<EntityCreateWithoutEntitySubsidiaryInput, EntityUncheckedCreateWithoutEntitySubsidiaryInput>
    connectOrCreate?: EntityCreateOrConnectWithoutEntitySubsidiaryInput
    connect?: EntityWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutEntitySubsidiaryInput = {
    create?: XOR<UserCreateWithoutEntitySubsidiaryInput, UserUncheckedCreateWithoutEntitySubsidiaryInput>
    connectOrCreate?: UserCreateOrConnectWithoutEntitySubsidiaryInput
    connect?: UserWhereUniqueInput
  }

  export type SocialAssistantCreateNestedManyWithoutEntity_subsidiaryInput = {
    create?: XOR<SocialAssistantCreateWithoutEntity_subsidiaryInput, SocialAssistantUncheckedCreateWithoutEntity_subsidiaryInput> | SocialAssistantCreateWithoutEntity_subsidiaryInput[] | SocialAssistantUncheckedCreateWithoutEntity_subsidiaryInput[]
    connectOrCreate?: SocialAssistantCreateOrConnectWithoutEntity_subsidiaryInput | SocialAssistantCreateOrConnectWithoutEntity_subsidiaryInput[]
    connect?: SocialAssistantWhereUniqueInput | SocialAssistantWhereUniqueInput[]
  }

  export type EducationLevelCreateNestedManyWithoutEntitySubsidiaryInput = {
    create?: XOR<EducationLevelCreateWithoutEntitySubsidiaryInput, EducationLevelUncheckedCreateWithoutEntitySubsidiaryInput> | EducationLevelCreateWithoutEntitySubsidiaryInput[] | EducationLevelUncheckedCreateWithoutEntitySubsidiaryInput[]
    connectOrCreate?: EducationLevelCreateOrConnectWithoutEntitySubsidiaryInput | EducationLevelCreateOrConnectWithoutEntitySubsidiaryInput[]
    createMany?: EducationLevelCreateManyEntitySubsidiaryInputEnvelope
    connect?: EducationLevelWhereUniqueInput | EducationLevelWhereUniqueInput[]
  }

  export type AnnouncementUncheckedCreateNestedManyWithoutEntity_subsidiaryInput = {
    create?: XOR<AnnouncementCreateWithoutEntity_subsidiaryInput, AnnouncementUncheckedCreateWithoutEntity_subsidiaryInput> | AnnouncementCreateWithoutEntity_subsidiaryInput[] | AnnouncementUncheckedCreateWithoutEntity_subsidiaryInput[]
    connectOrCreate?: AnnouncementCreateOrConnectWithoutEntity_subsidiaryInput | AnnouncementCreateOrConnectWithoutEntity_subsidiaryInput[]
    connect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
  }

  export type EntityDirectorUncheckedCreateNestedManyWithoutEntity_subsidiaryInput = {
    create?: XOR<EntityDirectorCreateWithoutEntity_subsidiaryInput, EntityDirectorUncheckedCreateWithoutEntity_subsidiaryInput> | EntityDirectorCreateWithoutEntity_subsidiaryInput[] | EntityDirectorUncheckedCreateWithoutEntity_subsidiaryInput[]
    connectOrCreate?: EntityDirectorCreateOrConnectWithoutEntity_subsidiaryInput | EntityDirectorCreateOrConnectWithoutEntity_subsidiaryInput[]
    createMany?: EntityDirectorCreateManyEntity_subsidiaryInputEnvelope
    connect?: EntityDirectorWhereUniqueInput | EntityDirectorWhereUniqueInput[]
  }

  export type SocialAssistantUncheckedCreateNestedManyWithoutEntity_subsidiaryInput = {
    create?: XOR<SocialAssistantCreateWithoutEntity_subsidiaryInput, SocialAssistantUncheckedCreateWithoutEntity_subsidiaryInput> | SocialAssistantCreateWithoutEntity_subsidiaryInput[] | SocialAssistantUncheckedCreateWithoutEntity_subsidiaryInput[]
    connectOrCreate?: SocialAssistantCreateOrConnectWithoutEntity_subsidiaryInput | SocialAssistantCreateOrConnectWithoutEntity_subsidiaryInput[]
    connect?: SocialAssistantWhereUniqueInput | SocialAssistantWhereUniqueInput[]
  }

  export type EducationLevelUncheckedCreateNestedManyWithoutEntitySubsidiaryInput = {
    create?: XOR<EducationLevelCreateWithoutEntitySubsidiaryInput, EducationLevelUncheckedCreateWithoutEntitySubsidiaryInput> | EducationLevelCreateWithoutEntitySubsidiaryInput[] | EducationLevelUncheckedCreateWithoutEntitySubsidiaryInput[]
    connectOrCreate?: EducationLevelCreateOrConnectWithoutEntitySubsidiaryInput | EducationLevelCreateOrConnectWithoutEntitySubsidiaryInput[]
    createMany?: EducationLevelCreateManyEntitySubsidiaryInputEnvelope
    connect?: EducationLevelWhereUniqueInput | EducationLevelWhereUniqueInput[]
  }

  export type AnnouncementUpdateManyWithoutEntity_subsidiaryNestedInput = {
    create?: XOR<AnnouncementCreateWithoutEntity_subsidiaryInput, AnnouncementUncheckedCreateWithoutEntity_subsidiaryInput> | AnnouncementCreateWithoutEntity_subsidiaryInput[] | AnnouncementUncheckedCreateWithoutEntity_subsidiaryInput[]
    connectOrCreate?: AnnouncementCreateOrConnectWithoutEntity_subsidiaryInput | AnnouncementCreateOrConnectWithoutEntity_subsidiaryInput[]
    upsert?: AnnouncementUpsertWithWhereUniqueWithoutEntity_subsidiaryInput | AnnouncementUpsertWithWhereUniqueWithoutEntity_subsidiaryInput[]
    set?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    disconnect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    delete?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    connect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    update?: AnnouncementUpdateWithWhereUniqueWithoutEntity_subsidiaryInput | AnnouncementUpdateWithWhereUniqueWithoutEntity_subsidiaryInput[]
    updateMany?: AnnouncementUpdateManyWithWhereWithoutEntity_subsidiaryInput | AnnouncementUpdateManyWithWhereWithoutEntity_subsidiaryInput[]
    deleteMany?: AnnouncementScalarWhereInput | AnnouncementScalarWhereInput[]
  }

  export type EntityDirectorUpdateManyWithoutEntity_subsidiaryNestedInput = {
    create?: XOR<EntityDirectorCreateWithoutEntity_subsidiaryInput, EntityDirectorUncheckedCreateWithoutEntity_subsidiaryInput> | EntityDirectorCreateWithoutEntity_subsidiaryInput[] | EntityDirectorUncheckedCreateWithoutEntity_subsidiaryInput[]
    connectOrCreate?: EntityDirectorCreateOrConnectWithoutEntity_subsidiaryInput | EntityDirectorCreateOrConnectWithoutEntity_subsidiaryInput[]
    upsert?: EntityDirectorUpsertWithWhereUniqueWithoutEntity_subsidiaryInput | EntityDirectorUpsertWithWhereUniqueWithoutEntity_subsidiaryInput[]
    createMany?: EntityDirectorCreateManyEntity_subsidiaryInputEnvelope
    set?: EntityDirectorWhereUniqueInput | EntityDirectorWhereUniqueInput[]
    disconnect?: EntityDirectorWhereUniqueInput | EntityDirectorWhereUniqueInput[]
    delete?: EntityDirectorWhereUniqueInput | EntityDirectorWhereUniqueInput[]
    connect?: EntityDirectorWhereUniqueInput | EntityDirectorWhereUniqueInput[]
    update?: EntityDirectorUpdateWithWhereUniqueWithoutEntity_subsidiaryInput | EntityDirectorUpdateWithWhereUniqueWithoutEntity_subsidiaryInput[]
    updateMany?: EntityDirectorUpdateManyWithWhereWithoutEntity_subsidiaryInput | EntityDirectorUpdateManyWithWhereWithoutEntity_subsidiaryInput[]
    deleteMany?: EntityDirectorScalarWhereInput | EntityDirectorScalarWhereInput[]
  }

  export type EntityUpdateOneRequiredWithoutEntitySubsidiaryNestedInput = {
    create?: XOR<EntityCreateWithoutEntitySubsidiaryInput, EntityUncheckedCreateWithoutEntitySubsidiaryInput>
    connectOrCreate?: EntityCreateOrConnectWithoutEntitySubsidiaryInput
    upsert?: EntityUpsertWithoutEntitySubsidiaryInput
    connect?: EntityWhereUniqueInput
    update?: XOR<XOR<EntityUpdateToOneWithWhereWithoutEntitySubsidiaryInput, EntityUpdateWithoutEntitySubsidiaryInput>, EntityUncheckedUpdateWithoutEntitySubsidiaryInput>
  }

  export type UserUpdateOneRequiredWithoutEntitySubsidiaryNestedInput = {
    create?: XOR<UserCreateWithoutEntitySubsidiaryInput, UserUncheckedCreateWithoutEntitySubsidiaryInput>
    connectOrCreate?: UserCreateOrConnectWithoutEntitySubsidiaryInput
    upsert?: UserUpsertWithoutEntitySubsidiaryInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutEntitySubsidiaryInput, UserUpdateWithoutEntitySubsidiaryInput>, UserUncheckedUpdateWithoutEntitySubsidiaryInput>
  }

  export type SocialAssistantUpdateManyWithoutEntity_subsidiaryNestedInput = {
    create?: XOR<SocialAssistantCreateWithoutEntity_subsidiaryInput, SocialAssistantUncheckedCreateWithoutEntity_subsidiaryInput> | SocialAssistantCreateWithoutEntity_subsidiaryInput[] | SocialAssistantUncheckedCreateWithoutEntity_subsidiaryInput[]
    connectOrCreate?: SocialAssistantCreateOrConnectWithoutEntity_subsidiaryInput | SocialAssistantCreateOrConnectWithoutEntity_subsidiaryInput[]
    upsert?: SocialAssistantUpsertWithWhereUniqueWithoutEntity_subsidiaryInput | SocialAssistantUpsertWithWhereUniqueWithoutEntity_subsidiaryInput[]
    set?: SocialAssistantWhereUniqueInput | SocialAssistantWhereUniqueInput[]
    disconnect?: SocialAssistantWhereUniqueInput | SocialAssistantWhereUniqueInput[]
    delete?: SocialAssistantWhereUniqueInput | SocialAssistantWhereUniqueInput[]
    connect?: SocialAssistantWhereUniqueInput | SocialAssistantWhereUniqueInput[]
    update?: SocialAssistantUpdateWithWhereUniqueWithoutEntity_subsidiaryInput | SocialAssistantUpdateWithWhereUniqueWithoutEntity_subsidiaryInput[]
    updateMany?: SocialAssistantUpdateManyWithWhereWithoutEntity_subsidiaryInput | SocialAssistantUpdateManyWithWhereWithoutEntity_subsidiaryInput[]
    deleteMany?: SocialAssistantScalarWhereInput | SocialAssistantScalarWhereInput[]
  }

  export type EducationLevelUpdateManyWithoutEntitySubsidiaryNestedInput = {
    create?: XOR<EducationLevelCreateWithoutEntitySubsidiaryInput, EducationLevelUncheckedCreateWithoutEntitySubsidiaryInput> | EducationLevelCreateWithoutEntitySubsidiaryInput[] | EducationLevelUncheckedCreateWithoutEntitySubsidiaryInput[]
    connectOrCreate?: EducationLevelCreateOrConnectWithoutEntitySubsidiaryInput | EducationLevelCreateOrConnectWithoutEntitySubsidiaryInput[]
    upsert?: EducationLevelUpsertWithWhereUniqueWithoutEntitySubsidiaryInput | EducationLevelUpsertWithWhereUniqueWithoutEntitySubsidiaryInput[]
    createMany?: EducationLevelCreateManyEntitySubsidiaryInputEnvelope
    set?: EducationLevelWhereUniqueInput | EducationLevelWhereUniqueInput[]
    disconnect?: EducationLevelWhereUniqueInput | EducationLevelWhereUniqueInput[]
    delete?: EducationLevelWhereUniqueInput | EducationLevelWhereUniqueInput[]
    connect?: EducationLevelWhereUniqueInput | EducationLevelWhereUniqueInput[]
    update?: EducationLevelUpdateWithWhereUniqueWithoutEntitySubsidiaryInput | EducationLevelUpdateWithWhereUniqueWithoutEntitySubsidiaryInput[]
    updateMany?: EducationLevelUpdateManyWithWhereWithoutEntitySubsidiaryInput | EducationLevelUpdateManyWithWhereWithoutEntitySubsidiaryInput[]
    deleteMany?: EducationLevelScalarWhereInput | EducationLevelScalarWhereInput[]
  }

  export type AnnouncementUncheckedUpdateManyWithoutEntity_subsidiaryNestedInput = {
    create?: XOR<AnnouncementCreateWithoutEntity_subsidiaryInput, AnnouncementUncheckedCreateWithoutEntity_subsidiaryInput> | AnnouncementCreateWithoutEntity_subsidiaryInput[] | AnnouncementUncheckedCreateWithoutEntity_subsidiaryInput[]
    connectOrCreate?: AnnouncementCreateOrConnectWithoutEntity_subsidiaryInput | AnnouncementCreateOrConnectWithoutEntity_subsidiaryInput[]
    upsert?: AnnouncementUpsertWithWhereUniqueWithoutEntity_subsidiaryInput | AnnouncementUpsertWithWhereUniqueWithoutEntity_subsidiaryInput[]
    set?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    disconnect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    delete?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    connect?: AnnouncementWhereUniqueInput | AnnouncementWhereUniqueInput[]
    update?: AnnouncementUpdateWithWhereUniqueWithoutEntity_subsidiaryInput | AnnouncementUpdateWithWhereUniqueWithoutEntity_subsidiaryInput[]
    updateMany?: AnnouncementUpdateManyWithWhereWithoutEntity_subsidiaryInput | AnnouncementUpdateManyWithWhereWithoutEntity_subsidiaryInput[]
    deleteMany?: AnnouncementScalarWhereInput | AnnouncementScalarWhereInput[]
  }

  export type EntityDirectorUncheckedUpdateManyWithoutEntity_subsidiaryNestedInput = {
    create?: XOR<EntityDirectorCreateWithoutEntity_subsidiaryInput, EntityDirectorUncheckedCreateWithoutEntity_subsidiaryInput> | EntityDirectorCreateWithoutEntity_subsidiaryInput[] | EntityDirectorUncheckedCreateWithoutEntity_subsidiaryInput[]
    connectOrCreate?: EntityDirectorCreateOrConnectWithoutEntity_subsidiaryInput | EntityDirectorCreateOrConnectWithoutEntity_subsidiaryInput[]
    upsert?: EntityDirectorUpsertWithWhereUniqueWithoutEntity_subsidiaryInput | EntityDirectorUpsertWithWhereUniqueWithoutEntity_subsidiaryInput[]
    createMany?: EntityDirectorCreateManyEntity_subsidiaryInputEnvelope
    set?: EntityDirectorWhereUniqueInput | EntityDirectorWhereUniqueInput[]
    disconnect?: EntityDirectorWhereUniqueInput | EntityDirectorWhereUniqueInput[]
    delete?: EntityDirectorWhereUniqueInput | EntityDirectorWhereUniqueInput[]
    connect?: EntityDirectorWhereUniqueInput | EntityDirectorWhereUniqueInput[]
    update?: EntityDirectorUpdateWithWhereUniqueWithoutEntity_subsidiaryInput | EntityDirectorUpdateWithWhereUniqueWithoutEntity_subsidiaryInput[]
    updateMany?: EntityDirectorUpdateManyWithWhereWithoutEntity_subsidiaryInput | EntityDirectorUpdateManyWithWhereWithoutEntity_subsidiaryInput[]
    deleteMany?: EntityDirectorScalarWhereInput | EntityDirectorScalarWhereInput[]
  }

  export type SocialAssistantUncheckedUpdateManyWithoutEntity_subsidiaryNestedInput = {
    create?: XOR<SocialAssistantCreateWithoutEntity_subsidiaryInput, SocialAssistantUncheckedCreateWithoutEntity_subsidiaryInput> | SocialAssistantCreateWithoutEntity_subsidiaryInput[] | SocialAssistantUncheckedCreateWithoutEntity_subsidiaryInput[]
    connectOrCreate?: SocialAssistantCreateOrConnectWithoutEntity_subsidiaryInput | SocialAssistantCreateOrConnectWithoutEntity_subsidiaryInput[]
    upsert?: SocialAssistantUpsertWithWhereUniqueWithoutEntity_subsidiaryInput | SocialAssistantUpsertWithWhereUniqueWithoutEntity_subsidiaryInput[]
    set?: SocialAssistantWhereUniqueInput | SocialAssistantWhereUniqueInput[]
    disconnect?: SocialAssistantWhereUniqueInput | SocialAssistantWhereUniqueInput[]
    delete?: SocialAssistantWhereUniqueInput | SocialAssistantWhereUniqueInput[]
    connect?: SocialAssistantWhereUniqueInput | SocialAssistantWhereUniqueInput[]
    update?: SocialAssistantUpdateWithWhereUniqueWithoutEntity_subsidiaryInput | SocialAssistantUpdateWithWhereUniqueWithoutEntity_subsidiaryInput[]
    updateMany?: SocialAssistantUpdateManyWithWhereWithoutEntity_subsidiaryInput | SocialAssistantUpdateManyWithWhereWithoutEntity_subsidiaryInput[]
    deleteMany?: SocialAssistantScalarWhereInput | SocialAssistantScalarWhereInput[]
  }

  export type EducationLevelUncheckedUpdateManyWithoutEntitySubsidiaryNestedInput = {
    create?: XOR<EducationLevelCreateWithoutEntitySubsidiaryInput, EducationLevelUncheckedCreateWithoutEntitySubsidiaryInput> | EducationLevelCreateWithoutEntitySubsidiaryInput[] | EducationLevelUncheckedCreateWithoutEntitySubsidiaryInput[]
    connectOrCreate?: EducationLevelCreateOrConnectWithoutEntitySubsidiaryInput | EducationLevelCreateOrConnectWithoutEntitySubsidiaryInput[]
    upsert?: EducationLevelUpsertWithWhereUniqueWithoutEntitySubsidiaryInput | EducationLevelUpsertWithWhereUniqueWithoutEntitySubsidiaryInput[]
    createMany?: EducationLevelCreateManyEntitySubsidiaryInputEnvelope
    set?: EducationLevelWhereUniqueInput | EducationLevelWhereUniqueInput[]
    disconnect?: EducationLevelWhereUniqueInput | EducationLevelWhereUniqueInput[]
    delete?: EducationLevelWhereUniqueInput | EducationLevelWhereUniqueInput[]
    connect?: EducationLevelWhereUniqueInput | EducationLevelWhereUniqueInput[]
    update?: EducationLevelUpdateWithWhereUniqueWithoutEntitySubsidiaryInput | EducationLevelUpdateWithWhereUniqueWithoutEntitySubsidiaryInput[]
    updateMany?: EducationLevelUpdateManyWithWhereWithoutEntitySubsidiaryInput | EducationLevelUpdateManyWithWhereWithoutEntitySubsidiaryInput[]
    deleteMany?: EducationLevelScalarWhereInput | EducationLevelScalarWhereInput[]
  }

  export type EntityCreateNestedOneWithoutEntityDirectorInput = {
    create?: XOR<EntityCreateWithoutEntityDirectorInput, EntityUncheckedCreateWithoutEntityDirectorInput>
    connectOrCreate?: EntityCreateOrConnectWithoutEntityDirectorInput
    connect?: EntityWhereUniqueInput
  }

  export type EntitySubsidiaryCreateNestedOneWithoutEntityDirectorInput = {
    create?: XOR<EntitySubsidiaryCreateWithoutEntityDirectorInput, EntitySubsidiaryUncheckedCreateWithoutEntityDirectorInput>
    connectOrCreate?: EntitySubsidiaryCreateOrConnectWithoutEntityDirectorInput
    connect?: EntitySubsidiaryWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutEntityDirectorInput = {
    create?: XOR<UserCreateWithoutEntityDirectorInput, UserUncheckedCreateWithoutEntityDirectorInput>
    connectOrCreate?: UserCreateOrConnectWithoutEntityDirectorInput
    connect?: UserWhereUniqueInput
  }

  export type EntityUpdateOneWithoutEntityDirectorNestedInput = {
    create?: XOR<EntityCreateWithoutEntityDirectorInput, EntityUncheckedCreateWithoutEntityDirectorInput>
    connectOrCreate?: EntityCreateOrConnectWithoutEntityDirectorInput
    upsert?: EntityUpsertWithoutEntityDirectorInput
    disconnect?: EntityWhereInput | boolean
    delete?: EntityWhereInput | boolean
    connect?: EntityWhereUniqueInput
    update?: XOR<XOR<EntityUpdateToOneWithWhereWithoutEntityDirectorInput, EntityUpdateWithoutEntityDirectorInput>, EntityUncheckedUpdateWithoutEntityDirectorInput>
  }

  export type EntitySubsidiaryUpdateOneWithoutEntityDirectorNestedInput = {
    create?: XOR<EntitySubsidiaryCreateWithoutEntityDirectorInput, EntitySubsidiaryUncheckedCreateWithoutEntityDirectorInput>
    connectOrCreate?: EntitySubsidiaryCreateOrConnectWithoutEntityDirectorInput
    upsert?: EntitySubsidiaryUpsertWithoutEntityDirectorInput
    disconnect?: EntitySubsidiaryWhereInput | boolean
    delete?: EntitySubsidiaryWhereInput | boolean
    connect?: EntitySubsidiaryWhereUniqueInput
    update?: XOR<XOR<EntitySubsidiaryUpdateToOneWithWhereWithoutEntityDirectorInput, EntitySubsidiaryUpdateWithoutEntityDirectorInput>, EntitySubsidiaryUncheckedUpdateWithoutEntityDirectorInput>
  }

  export type UserUpdateOneRequiredWithoutEntityDirectorNestedInput = {
    create?: XOR<UserCreateWithoutEntityDirectorInput, UserUncheckedCreateWithoutEntityDirectorInput>
    connectOrCreate?: UserCreateOrConnectWithoutEntityDirectorInput
    upsert?: UserUpsertWithoutEntityDirectorInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutEntityDirectorInput, UserUpdateWithoutEntityDirectorInput>, UserUncheckedUpdateWithoutEntityDirectorInput>
  }

  export type IdentityDetailsCreateincomeSourceInput = {
    set: $Enums.IncomeSource[]
  }

  export type IdentityDetailsCreateyearsBenefitedFromCebas_basicInput = {
    set: string[]
  }

  export type CandidateCreateNestedOneWithoutIdentityDetailsInput = {
    create?: XOR<CandidateCreateWithoutIdentityDetailsInput, CandidateUncheckedCreateWithoutIdentityDetailsInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutIdentityDetailsInput
    connect?: CandidateWhereUniqueInput
  }

  export type LegalResponsibleCreateNestedOneWithoutIdentityDetailsInput = {
    create?: XOR<LegalResponsibleCreateWithoutIdentityDetailsInput, LegalResponsibleUncheckedCreateWithoutIdentityDetailsInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutIdentityDetailsInput
    connect?: LegalResponsibleWhereUniqueInput
  }

  export type EnumGENDERFieldUpdateOperationsInput = {
    set?: $Enums.GENDER
  }

  export type EnumCOUNTRYFieldUpdateOperationsInput = {
    set?: $Enums.COUNTRY
  }

  export type NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput = {
    set?: $Enums.DOCUMENT_TYPE | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type EnumMARITAL_STATUSFieldUpdateOperationsInput = {
    set?: $Enums.MARITAL_STATUS
  }

  export type EnumSkinColorFieldUpdateOperationsInput = {
    set?: $Enums.SkinColor
  }

  export type EnumRELIGIONFieldUpdateOperationsInput = {
    set?: $Enums.RELIGION
  }

  export type EnumSCHOLARSHIPFieldUpdateOperationsInput = {
    set?: $Enums.SCHOLARSHIP
  }

  export type IdentityDetailsUpdateincomeSourceInput = {
    set?: $Enums.IncomeSource[]
    push?: $Enums.IncomeSource | $Enums.IncomeSource[]
  }

  export type IdentityDetailsUpdateyearsBenefitedFromCebas_basicInput = {
    set?: string[]
    push?: string | string[]
  }

  export type NullableEnumScholarshipTypeFieldUpdateOperationsInput = {
    set?: $Enums.ScholarshipType | null
  }

  export type CandidateUpdateOneWithoutIdentityDetailsNestedInput = {
    create?: XOR<CandidateCreateWithoutIdentityDetailsInput, CandidateUncheckedCreateWithoutIdentityDetailsInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutIdentityDetailsInput
    upsert?: CandidateUpsertWithoutIdentityDetailsInput
    disconnect?: CandidateWhereInput | boolean
    delete?: CandidateWhereInput | boolean
    connect?: CandidateWhereUniqueInput
    update?: XOR<XOR<CandidateUpdateToOneWithWhereWithoutIdentityDetailsInput, CandidateUpdateWithoutIdentityDetailsInput>, CandidateUncheckedUpdateWithoutIdentityDetailsInput>
  }

  export type LegalResponsibleUpdateOneWithoutIdentityDetailsNestedInput = {
    create?: XOR<LegalResponsibleCreateWithoutIdentityDetailsInput, LegalResponsibleUncheckedCreateWithoutIdentityDetailsInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutIdentityDetailsInput
    upsert?: LegalResponsibleUpsertWithoutIdentityDetailsInput
    disconnect?: LegalResponsibleWhereInput | boolean
    delete?: LegalResponsibleWhereInput | boolean
    connect?: LegalResponsibleWhereUniqueInput
    update?: XOR<XOR<LegalResponsibleUpdateToOneWithWhereWithoutIdentityDetailsInput, LegalResponsibleUpdateWithoutIdentityDetailsInput>, LegalResponsibleUncheckedUpdateWithoutIdentityDetailsInput>
  }

  export type FamilyMemberCreateincomeSourceInput = {
    set: $Enums.IncomeSource[]
  }

  export type CreditCardCreateNestedManyWithoutFamilyMemberInput = {
    create?: XOR<CreditCardCreateWithoutFamilyMemberInput, CreditCardUncheckedCreateWithoutFamilyMemberInput> | CreditCardCreateWithoutFamilyMemberInput[] | CreditCardUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: CreditCardCreateOrConnectWithoutFamilyMemberInput | CreditCardCreateOrConnectWithoutFamilyMemberInput[]
    createMany?: CreditCardCreateManyFamilyMemberInputEnvelope
    connect?: CreditCardWhereUniqueInput | CreditCardWhereUniqueInput[]
  }

  export type FamilyMemberIncomeCreateNestedManyWithoutFamilyMemberInput = {
    create?: XOR<FamilyMemberIncomeCreateWithoutFamilyMemberInput, FamilyMemberIncomeUncheckedCreateWithoutFamilyMemberInput> | FamilyMemberIncomeCreateWithoutFamilyMemberInput[] | FamilyMemberIncomeUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: FamilyMemberIncomeCreateOrConnectWithoutFamilyMemberInput | FamilyMemberIncomeCreateOrConnectWithoutFamilyMemberInput[]
    createMany?: FamilyMemberIncomeCreateManyFamilyMemberInputEnvelope
    connect?: FamilyMemberIncomeWhereUniqueInput | FamilyMemberIncomeWhereUniqueInput[]
  }

  export type FinancingCreateNestedManyWithoutFamilyMemberInput = {
    create?: XOR<FinancingCreateWithoutFamilyMemberInput, FinancingUncheckedCreateWithoutFamilyMemberInput> | FinancingCreateWithoutFamilyMemberInput[] | FinancingUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: FinancingCreateOrConnectWithoutFamilyMemberInput | FinancingCreateOrConnectWithoutFamilyMemberInput[]
    createMany?: FinancingCreateManyFamilyMemberInputEnvelope
    connect?: FinancingWhereUniqueInput | FinancingWhereUniqueInput[]
  }

  export type LoanCreateNestedManyWithoutFamilyMemberInput = {
    create?: XOR<LoanCreateWithoutFamilyMemberInput, LoanUncheckedCreateWithoutFamilyMemberInput> | LoanCreateWithoutFamilyMemberInput[] | LoanUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: LoanCreateOrConnectWithoutFamilyMemberInput | LoanCreateOrConnectWithoutFamilyMemberInput[]
    createMany?: LoanCreateManyFamilyMemberInputEnvelope
    connect?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
  }

  export type MonthlyIncomeCreateNestedManyWithoutFamilyMemberInput = {
    create?: XOR<MonthlyIncomeCreateWithoutFamilyMemberInput, MonthlyIncomeUncheckedCreateWithoutFamilyMemberInput> | MonthlyIncomeCreateWithoutFamilyMemberInput[] | MonthlyIncomeUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: MonthlyIncomeCreateOrConnectWithoutFamilyMemberInput | MonthlyIncomeCreateOrConnectWithoutFamilyMemberInput[]
    createMany?: MonthlyIncomeCreateManyFamilyMemberInputEnvelope
    connect?: MonthlyIncomeWhereUniqueInput | MonthlyIncomeWhereUniqueInput[]
  }

  export type OtherExpenseCreateNestedManyWithoutFamilyMemberInput = {
    create?: XOR<OtherExpenseCreateWithoutFamilyMemberInput, OtherExpenseUncheckedCreateWithoutFamilyMemberInput> | OtherExpenseCreateWithoutFamilyMemberInput[] | OtherExpenseUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: OtherExpenseCreateOrConnectWithoutFamilyMemberInput | OtherExpenseCreateOrConnectWithoutFamilyMemberInput[]
    createMany?: OtherExpenseCreateManyFamilyMemberInputEnvelope
    connect?: OtherExpenseWhereUniqueInput | OtherExpenseWhereUniqueInput[]
  }

  export type FamilyMemberToVehicleCreateNestedManyWithoutFamilyMembersInput = {
    create?: XOR<FamilyMemberToVehicleCreateWithoutFamilyMembersInput, FamilyMemberToVehicleUncheckedCreateWithoutFamilyMembersInput> | FamilyMemberToVehicleCreateWithoutFamilyMembersInput[] | FamilyMemberToVehicleUncheckedCreateWithoutFamilyMembersInput[]
    connectOrCreate?: FamilyMemberToVehicleCreateOrConnectWithoutFamilyMembersInput | FamilyMemberToVehicleCreateOrConnectWithoutFamilyMembersInput[]
    createMany?: FamilyMemberToVehicleCreateManyFamilyMembersInputEnvelope
    connect?: FamilyMemberToVehicleWhereUniqueInput | FamilyMemberToVehicleWhereUniqueInput[]
  }

  export type FamilyMemberDiseaseCreateNestedManyWithoutFamilyMemberInput = {
    create?: XOR<FamilyMemberDiseaseCreateWithoutFamilyMemberInput, FamilyMemberDiseaseUncheckedCreateWithoutFamilyMemberInput> | FamilyMemberDiseaseCreateWithoutFamilyMemberInput[] | FamilyMemberDiseaseUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: FamilyMemberDiseaseCreateOrConnectWithoutFamilyMemberInput | FamilyMemberDiseaseCreateOrConnectWithoutFamilyMemberInput[]
    createMany?: FamilyMemberDiseaseCreateManyFamilyMemberInputEnvelope
    connect?: FamilyMemberDiseaseWhereUniqueInput | FamilyMemberDiseaseWhereUniqueInput[]
  }

  export type CandidateCreateNestedOneWithoutFamillyMemberInput = {
    create?: XOR<CandidateCreateWithoutFamillyMemberInput, CandidateUncheckedCreateWithoutFamillyMemberInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutFamillyMemberInput
    connect?: CandidateWhereUniqueInput
  }

  export type MedicationCreateNestedManyWithoutFamilyMemberInput = {
    create?: XOR<MedicationCreateWithoutFamilyMemberInput, MedicationUncheckedCreateWithoutFamilyMemberInput> | MedicationCreateWithoutFamilyMemberInput[] | MedicationUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: MedicationCreateOrConnectWithoutFamilyMemberInput | MedicationCreateOrConnectWithoutFamilyMemberInput[]
    createMany?: MedicationCreateManyFamilyMemberInputEnvelope
    connect?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
  }

  export type LegalResponsibleCreateNestedOneWithoutFamillyMemberInput = {
    create?: XOR<LegalResponsibleCreateWithoutFamillyMemberInput, LegalResponsibleUncheckedCreateWithoutFamillyMemberInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutFamillyMemberInput
    connect?: LegalResponsibleWhereUniqueInput
  }

  export type BankAccountCreateNestedManyWithoutFamilyMemberInput = {
    create?: XOR<BankAccountCreateWithoutFamilyMemberInput, BankAccountUncheckedCreateWithoutFamilyMemberInput> | BankAccountCreateWithoutFamilyMemberInput[] | BankAccountUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: BankAccountCreateOrConnectWithoutFamilyMemberInput | BankAccountCreateOrConnectWithoutFamilyMemberInput[]
    createMany?: BankAccountCreateManyFamilyMemberInputEnvelope
    connect?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
  }

  export type DeclarationsCreateNestedManyWithoutFamilyMemberInput = {
    create?: XOR<DeclarationsCreateWithoutFamilyMemberInput, DeclarationsUncheckedCreateWithoutFamilyMemberInput> | DeclarationsCreateWithoutFamilyMemberInput[] | DeclarationsUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: DeclarationsCreateOrConnectWithoutFamilyMemberInput | DeclarationsCreateOrConnectWithoutFamilyMemberInput[]
    createMany?: DeclarationsCreateManyFamilyMemberInputEnvelope
    connect?: DeclarationsWhereUniqueInput | DeclarationsWhereUniqueInput[]
  }

  export type CreditCardUncheckedCreateNestedManyWithoutFamilyMemberInput = {
    create?: XOR<CreditCardCreateWithoutFamilyMemberInput, CreditCardUncheckedCreateWithoutFamilyMemberInput> | CreditCardCreateWithoutFamilyMemberInput[] | CreditCardUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: CreditCardCreateOrConnectWithoutFamilyMemberInput | CreditCardCreateOrConnectWithoutFamilyMemberInput[]
    createMany?: CreditCardCreateManyFamilyMemberInputEnvelope
    connect?: CreditCardWhereUniqueInput | CreditCardWhereUniqueInput[]
  }

  export type FamilyMemberIncomeUncheckedCreateNestedManyWithoutFamilyMemberInput = {
    create?: XOR<FamilyMemberIncomeCreateWithoutFamilyMemberInput, FamilyMemberIncomeUncheckedCreateWithoutFamilyMemberInput> | FamilyMemberIncomeCreateWithoutFamilyMemberInput[] | FamilyMemberIncomeUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: FamilyMemberIncomeCreateOrConnectWithoutFamilyMemberInput | FamilyMemberIncomeCreateOrConnectWithoutFamilyMemberInput[]
    createMany?: FamilyMemberIncomeCreateManyFamilyMemberInputEnvelope
    connect?: FamilyMemberIncomeWhereUniqueInput | FamilyMemberIncomeWhereUniqueInput[]
  }

  export type FinancingUncheckedCreateNestedManyWithoutFamilyMemberInput = {
    create?: XOR<FinancingCreateWithoutFamilyMemberInput, FinancingUncheckedCreateWithoutFamilyMemberInput> | FinancingCreateWithoutFamilyMemberInput[] | FinancingUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: FinancingCreateOrConnectWithoutFamilyMemberInput | FinancingCreateOrConnectWithoutFamilyMemberInput[]
    createMany?: FinancingCreateManyFamilyMemberInputEnvelope
    connect?: FinancingWhereUniqueInput | FinancingWhereUniqueInput[]
  }

  export type LoanUncheckedCreateNestedManyWithoutFamilyMemberInput = {
    create?: XOR<LoanCreateWithoutFamilyMemberInput, LoanUncheckedCreateWithoutFamilyMemberInput> | LoanCreateWithoutFamilyMemberInput[] | LoanUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: LoanCreateOrConnectWithoutFamilyMemberInput | LoanCreateOrConnectWithoutFamilyMemberInput[]
    createMany?: LoanCreateManyFamilyMemberInputEnvelope
    connect?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
  }

  export type MonthlyIncomeUncheckedCreateNestedManyWithoutFamilyMemberInput = {
    create?: XOR<MonthlyIncomeCreateWithoutFamilyMemberInput, MonthlyIncomeUncheckedCreateWithoutFamilyMemberInput> | MonthlyIncomeCreateWithoutFamilyMemberInput[] | MonthlyIncomeUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: MonthlyIncomeCreateOrConnectWithoutFamilyMemberInput | MonthlyIncomeCreateOrConnectWithoutFamilyMemberInput[]
    createMany?: MonthlyIncomeCreateManyFamilyMemberInputEnvelope
    connect?: MonthlyIncomeWhereUniqueInput | MonthlyIncomeWhereUniqueInput[]
  }

  export type OtherExpenseUncheckedCreateNestedManyWithoutFamilyMemberInput = {
    create?: XOR<OtherExpenseCreateWithoutFamilyMemberInput, OtherExpenseUncheckedCreateWithoutFamilyMemberInput> | OtherExpenseCreateWithoutFamilyMemberInput[] | OtherExpenseUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: OtherExpenseCreateOrConnectWithoutFamilyMemberInput | OtherExpenseCreateOrConnectWithoutFamilyMemberInput[]
    createMany?: OtherExpenseCreateManyFamilyMemberInputEnvelope
    connect?: OtherExpenseWhereUniqueInput | OtherExpenseWhereUniqueInput[]
  }

  export type FamilyMemberToVehicleUncheckedCreateNestedManyWithoutFamilyMembersInput = {
    create?: XOR<FamilyMemberToVehicleCreateWithoutFamilyMembersInput, FamilyMemberToVehicleUncheckedCreateWithoutFamilyMembersInput> | FamilyMemberToVehicleCreateWithoutFamilyMembersInput[] | FamilyMemberToVehicleUncheckedCreateWithoutFamilyMembersInput[]
    connectOrCreate?: FamilyMemberToVehicleCreateOrConnectWithoutFamilyMembersInput | FamilyMemberToVehicleCreateOrConnectWithoutFamilyMembersInput[]
    createMany?: FamilyMemberToVehicleCreateManyFamilyMembersInputEnvelope
    connect?: FamilyMemberToVehicleWhereUniqueInput | FamilyMemberToVehicleWhereUniqueInput[]
  }

  export type FamilyMemberDiseaseUncheckedCreateNestedManyWithoutFamilyMemberInput = {
    create?: XOR<FamilyMemberDiseaseCreateWithoutFamilyMemberInput, FamilyMemberDiseaseUncheckedCreateWithoutFamilyMemberInput> | FamilyMemberDiseaseCreateWithoutFamilyMemberInput[] | FamilyMemberDiseaseUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: FamilyMemberDiseaseCreateOrConnectWithoutFamilyMemberInput | FamilyMemberDiseaseCreateOrConnectWithoutFamilyMemberInput[]
    createMany?: FamilyMemberDiseaseCreateManyFamilyMemberInputEnvelope
    connect?: FamilyMemberDiseaseWhereUniqueInput | FamilyMemberDiseaseWhereUniqueInput[]
  }

  export type MedicationUncheckedCreateNestedManyWithoutFamilyMemberInput = {
    create?: XOR<MedicationCreateWithoutFamilyMemberInput, MedicationUncheckedCreateWithoutFamilyMemberInput> | MedicationCreateWithoutFamilyMemberInput[] | MedicationUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: MedicationCreateOrConnectWithoutFamilyMemberInput | MedicationCreateOrConnectWithoutFamilyMemberInput[]
    createMany?: MedicationCreateManyFamilyMemberInputEnvelope
    connect?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
  }

  export type BankAccountUncheckedCreateNestedManyWithoutFamilyMemberInput = {
    create?: XOR<BankAccountCreateWithoutFamilyMemberInput, BankAccountUncheckedCreateWithoutFamilyMemberInput> | BankAccountCreateWithoutFamilyMemberInput[] | BankAccountUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: BankAccountCreateOrConnectWithoutFamilyMemberInput | BankAccountCreateOrConnectWithoutFamilyMemberInput[]
    createMany?: BankAccountCreateManyFamilyMemberInputEnvelope
    connect?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
  }

  export type DeclarationsUncheckedCreateNestedManyWithoutFamilyMemberInput = {
    create?: XOR<DeclarationsCreateWithoutFamilyMemberInput, DeclarationsUncheckedCreateWithoutFamilyMemberInput> | DeclarationsCreateWithoutFamilyMemberInput[] | DeclarationsUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: DeclarationsCreateOrConnectWithoutFamilyMemberInput | DeclarationsCreateOrConnectWithoutFamilyMemberInput[]
    createMany?: DeclarationsCreateManyFamilyMemberInputEnvelope
    connect?: DeclarationsWhereUniqueInput | DeclarationsWhereUniqueInput[]
  }

  export type EnumRelationshipFieldUpdateOperationsInput = {
    set?: $Enums.Relationship
  }

  export type FamilyMemberUpdateincomeSourceInput = {
    set?: $Enums.IncomeSource[]
    push?: $Enums.IncomeSource | $Enums.IncomeSource[]
  }

  export type CreditCardUpdateManyWithoutFamilyMemberNestedInput = {
    create?: XOR<CreditCardCreateWithoutFamilyMemberInput, CreditCardUncheckedCreateWithoutFamilyMemberInput> | CreditCardCreateWithoutFamilyMemberInput[] | CreditCardUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: CreditCardCreateOrConnectWithoutFamilyMemberInput | CreditCardCreateOrConnectWithoutFamilyMemberInput[]
    upsert?: CreditCardUpsertWithWhereUniqueWithoutFamilyMemberInput | CreditCardUpsertWithWhereUniqueWithoutFamilyMemberInput[]
    createMany?: CreditCardCreateManyFamilyMemberInputEnvelope
    set?: CreditCardWhereUniqueInput | CreditCardWhereUniqueInput[]
    disconnect?: CreditCardWhereUniqueInput | CreditCardWhereUniqueInput[]
    delete?: CreditCardWhereUniqueInput | CreditCardWhereUniqueInput[]
    connect?: CreditCardWhereUniqueInput | CreditCardWhereUniqueInput[]
    update?: CreditCardUpdateWithWhereUniqueWithoutFamilyMemberInput | CreditCardUpdateWithWhereUniqueWithoutFamilyMemberInput[]
    updateMany?: CreditCardUpdateManyWithWhereWithoutFamilyMemberInput | CreditCardUpdateManyWithWhereWithoutFamilyMemberInput[]
    deleteMany?: CreditCardScalarWhereInput | CreditCardScalarWhereInput[]
  }

  export type FamilyMemberIncomeUpdateManyWithoutFamilyMemberNestedInput = {
    create?: XOR<FamilyMemberIncomeCreateWithoutFamilyMemberInput, FamilyMemberIncomeUncheckedCreateWithoutFamilyMemberInput> | FamilyMemberIncomeCreateWithoutFamilyMemberInput[] | FamilyMemberIncomeUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: FamilyMemberIncomeCreateOrConnectWithoutFamilyMemberInput | FamilyMemberIncomeCreateOrConnectWithoutFamilyMemberInput[]
    upsert?: FamilyMemberIncomeUpsertWithWhereUniqueWithoutFamilyMemberInput | FamilyMemberIncomeUpsertWithWhereUniqueWithoutFamilyMemberInput[]
    createMany?: FamilyMemberIncomeCreateManyFamilyMemberInputEnvelope
    set?: FamilyMemberIncomeWhereUniqueInput | FamilyMemberIncomeWhereUniqueInput[]
    disconnect?: FamilyMemberIncomeWhereUniqueInput | FamilyMemberIncomeWhereUniqueInput[]
    delete?: FamilyMemberIncomeWhereUniqueInput | FamilyMemberIncomeWhereUniqueInput[]
    connect?: FamilyMemberIncomeWhereUniqueInput | FamilyMemberIncomeWhereUniqueInput[]
    update?: FamilyMemberIncomeUpdateWithWhereUniqueWithoutFamilyMemberInput | FamilyMemberIncomeUpdateWithWhereUniqueWithoutFamilyMemberInput[]
    updateMany?: FamilyMemberIncomeUpdateManyWithWhereWithoutFamilyMemberInput | FamilyMemberIncomeUpdateManyWithWhereWithoutFamilyMemberInput[]
    deleteMany?: FamilyMemberIncomeScalarWhereInput | FamilyMemberIncomeScalarWhereInput[]
  }

  export type FinancingUpdateManyWithoutFamilyMemberNestedInput = {
    create?: XOR<FinancingCreateWithoutFamilyMemberInput, FinancingUncheckedCreateWithoutFamilyMemberInput> | FinancingCreateWithoutFamilyMemberInput[] | FinancingUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: FinancingCreateOrConnectWithoutFamilyMemberInput | FinancingCreateOrConnectWithoutFamilyMemberInput[]
    upsert?: FinancingUpsertWithWhereUniqueWithoutFamilyMemberInput | FinancingUpsertWithWhereUniqueWithoutFamilyMemberInput[]
    createMany?: FinancingCreateManyFamilyMemberInputEnvelope
    set?: FinancingWhereUniqueInput | FinancingWhereUniqueInput[]
    disconnect?: FinancingWhereUniqueInput | FinancingWhereUniqueInput[]
    delete?: FinancingWhereUniqueInput | FinancingWhereUniqueInput[]
    connect?: FinancingWhereUniqueInput | FinancingWhereUniqueInput[]
    update?: FinancingUpdateWithWhereUniqueWithoutFamilyMemberInput | FinancingUpdateWithWhereUniqueWithoutFamilyMemberInput[]
    updateMany?: FinancingUpdateManyWithWhereWithoutFamilyMemberInput | FinancingUpdateManyWithWhereWithoutFamilyMemberInput[]
    deleteMany?: FinancingScalarWhereInput | FinancingScalarWhereInput[]
  }

  export type LoanUpdateManyWithoutFamilyMemberNestedInput = {
    create?: XOR<LoanCreateWithoutFamilyMemberInput, LoanUncheckedCreateWithoutFamilyMemberInput> | LoanCreateWithoutFamilyMemberInput[] | LoanUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: LoanCreateOrConnectWithoutFamilyMemberInput | LoanCreateOrConnectWithoutFamilyMemberInput[]
    upsert?: LoanUpsertWithWhereUniqueWithoutFamilyMemberInput | LoanUpsertWithWhereUniqueWithoutFamilyMemberInput[]
    createMany?: LoanCreateManyFamilyMemberInputEnvelope
    set?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    disconnect?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    delete?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    connect?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    update?: LoanUpdateWithWhereUniqueWithoutFamilyMemberInput | LoanUpdateWithWhereUniqueWithoutFamilyMemberInput[]
    updateMany?: LoanUpdateManyWithWhereWithoutFamilyMemberInput | LoanUpdateManyWithWhereWithoutFamilyMemberInput[]
    deleteMany?: LoanScalarWhereInput | LoanScalarWhereInput[]
  }

  export type MonthlyIncomeUpdateManyWithoutFamilyMemberNestedInput = {
    create?: XOR<MonthlyIncomeCreateWithoutFamilyMemberInput, MonthlyIncomeUncheckedCreateWithoutFamilyMemberInput> | MonthlyIncomeCreateWithoutFamilyMemberInput[] | MonthlyIncomeUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: MonthlyIncomeCreateOrConnectWithoutFamilyMemberInput | MonthlyIncomeCreateOrConnectWithoutFamilyMemberInput[]
    upsert?: MonthlyIncomeUpsertWithWhereUniqueWithoutFamilyMemberInput | MonthlyIncomeUpsertWithWhereUniqueWithoutFamilyMemberInput[]
    createMany?: MonthlyIncomeCreateManyFamilyMemberInputEnvelope
    set?: MonthlyIncomeWhereUniqueInput | MonthlyIncomeWhereUniqueInput[]
    disconnect?: MonthlyIncomeWhereUniqueInput | MonthlyIncomeWhereUniqueInput[]
    delete?: MonthlyIncomeWhereUniqueInput | MonthlyIncomeWhereUniqueInput[]
    connect?: MonthlyIncomeWhereUniqueInput | MonthlyIncomeWhereUniqueInput[]
    update?: MonthlyIncomeUpdateWithWhereUniqueWithoutFamilyMemberInput | MonthlyIncomeUpdateWithWhereUniqueWithoutFamilyMemberInput[]
    updateMany?: MonthlyIncomeUpdateManyWithWhereWithoutFamilyMemberInput | MonthlyIncomeUpdateManyWithWhereWithoutFamilyMemberInput[]
    deleteMany?: MonthlyIncomeScalarWhereInput | MonthlyIncomeScalarWhereInput[]
  }

  export type OtherExpenseUpdateManyWithoutFamilyMemberNestedInput = {
    create?: XOR<OtherExpenseCreateWithoutFamilyMemberInput, OtherExpenseUncheckedCreateWithoutFamilyMemberInput> | OtherExpenseCreateWithoutFamilyMemberInput[] | OtherExpenseUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: OtherExpenseCreateOrConnectWithoutFamilyMemberInput | OtherExpenseCreateOrConnectWithoutFamilyMemberInput[]
    upsert?: OtherExpenseUpsertWithWhereUniqueWithoutFamilyMemberInput | OtherExpenseUpsertWithWhereUniqueWithoutFamilyMemberInput[]
    createMany?: OtherExpenseCreateManyFamilyMemberInputEnvelope
    set?: OtherExpenseWhereUniqueInput | OtherExpenseWhereUniqueInput[]
    disconnect?: OtherExpenseWhereUniqueInput | OtherExpenseWhereUniqueInput[]
    delete?: OtherExpenseWhereUniqueInput | OtherExpenseWhereUniqueInput[]
    connect?: OtherExpenseWhereUniqueInput | OtherExpenseWhereUniqueInput[]
    update?: OtherExpenseUpdateWithWhereUniqueWithoutFamilyMemberInput | OtherExpenseUpdateWithWhereUniqueWithoutFamilyMemberInput[]
    updateMany?: OtherExpenseUpdateManyWithWhereWithoutFamilyMemberInput | OtherExpenseUpdateManyWithWhereWithoutFamilyMemberInput[]
    deleteMany?: OtherExpenseScalarWhereInput | OtherExpenseScalarWhereInput[]
  }

  export type FamilyMemberToVehicleUpdateManyWithoutFamilyMembersNestedInput = {
    create?: XOR<FamilyMemberToVehicleCreateWithoutFamilyMembersInput, FamilyMemberToVehicleUncheckedCreateWithoutFamilyMembersInput> | FamilyMemberToVehicleCreateWithoutFamilyMembersInput[] | FamilyMemberToVehicleUncheckedCreateWithoutFamilyMembersInput[]
    connectOrCreate?: FamilyMemberToVehicleCreateOrConnectWithoutFamilyMembersInput | FamilyMemberToVehicleCreateOrConnectWithoutFamilyMembersInput[]
    upsert?: FamilyMemberToVehicleUpsertWithWhereUniqueWithoutFamilyMembersInput | FamilyMemberToVehicleUpsertWithWhereUniqueWithoutFamilyMembersInput[]
    createMany?: FamilyMemberToVehicleCreateManyFamilyMembersInputEnvelope
    set?: FamilyMemberToVehicleWhereUniqueInput | FamilyMemberToVehicleWhereUniqueInput[]
    disconnect?: FamilyMemberToVehicleWhereUniqueInput | FamilyMemberToVehicleWhereUniqueInput[]
    delete?: FamilyMemberToVehicleWhereUniqueInput | FamilyMemberToVehicleWhereUniqueInput[]
    connect?: FamilyMemberToVehicleWhereUniqueInput | FamilyMemberToVehicleWhereUniqueInput[]
    update?: FamilyMemberToVehicleUpdateWithWhereUniqueWithoutFamilyMembersInput | FamilyMemberToVehicleUpdateWithWhereUniqueWithoutFamilyMembersInput[]
    updateMany?: FamilyMemberToVehicleUpdateManyWithWhereWithoutFamilyMembersInput | FamilyMemberToVehicleUpdateManyWithWhereWithoutFamilyMembersInput[]
    deleteMany?: FamilyMemberToVehicleScalarWhereInput | FamilyMemberToVehicleScalarWhereInput[]
  }

  export type FamilyMemberDiseaseUpdateManyWithoutFamilyMemberNestedInput = {
    create?: XOR<FamilyMemberDiseaseCreateWithoutFamilyMemberInput, FamilyMemberDiseaseUncheckedCreateWithoutFamilyMemberInput> | FamilyMemberDiseaseCreateWithoutFamilyMemberInput[] | FamilyMemberDiseaseUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: FamilyMemberDiseaseCreateOrConnectWithoutFamilyMemberInput | FamilyMemberDiseaseCreateOrConnectWithoutFamilyMemberInput[]
    upsert?: FamilyMemberDiseaseUpsertWithWhereUniqueWithoutFamilyMemberInput | FamilyMemberDiseaseUpsertWithWhereUniqueWithoutFamilyMemberInput[]
    createMany?: FamilyMemberDiseaseCreateManyFamilyMemberInputEnvelope
    set?: FamilyMemberDiseaseWhereUniqueInput | FamilyMemberDiseaseWhereUniqueInput[]
    disconnect?: FamilyMemberDiseaseWhereUniqueInput | FamilyMemberDiseaseWhereUniqueInput[]
    delete?: FamilyMemberDiseaseWhereUniqueInput | FamilyMemberDiseaseWhereUniqueInput[]
    connect?: FamilyMemberDiseaseWhereUniqueInput | FamilyMemberDiseaseWhereUniqueInput[]
    update?: FamilyMemberDiseaseUpdateWithWhereUniqueWithoutFamilyMemberInput | FamilyMemberDiseaseUpdateWithWhereUniqueWithoutFamilyMemberInput[]
    updateMany?: FamilyMemberDiseaseUpdateManyWithWhereWithoutFamilyMemberInput | FamilyMemberDiseaseUpdateManyWithWhereWithoutFamilyMemberInput[]
    deleteMany?: FamilyMemberDiseaseScalarWhereInput | FamilyMemberDiseaseScalarWhereInput[]
  }

  export type CandidateUpdateOneWithoutFamillyMemberNestedInput = {
    create?: XOR<CandidateCreateWithoutFamillyMemberInput, CandidateUncheckedCreateWithoutFamillyMemberInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutFamillyMemberInput
    upsert?: CandidateUpsertWithoutFamillyMemberInput
    disconnect?: CandidateWhereInput | boolean
    delete?: CandidateWhereInput | boolean
    connect?: CandidateWhereUniqueInput
    update?: XOR<XOR<CandidateUpdateToOneWithWhereWithoutFamillyMemberInput, CandidateUpdateWithoutFamillyMemberInput>, CandidateUncheckedUpdateWithoutFamillyMemberInput>
  }

  export type MedicationUpdateManyWithoutFamilyMemberNestedInput = {
    create?: XOR<MedicationCreateWithoutFamilyMemberInput, MedicationUncheckedCreateWithoutFamilyMemberInput> | MedicationCreateWithoutFamilyMemberInput[] | MedicationUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: MedicationCreateOrConnectWithoutFamilyMemberInput | MedicationCreateOrConnectWithoutFamilyMemberInput[]
    upsert?: MedicationUpsertWithWhereUniqueWithoutFamilyMemberInput | MedicationUpsertWithWhereUniqueWithoutFamilyMemberInput[]
    createMany?: MedicationCreateManyFamilyMemberInputEnvelope
    set?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    disconnect?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    delete?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    connect?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    update?: MedicationUpdateWithWhereUniqueWithoutFamilyMemberInput | MedicationUpdateWithWhereUniqueWithoutFamilyMemberInput[]
    updateMany?: MedicationUpdateManyWithWhereWithoutFamilyMemberInput | MedicationUpdateManyWithWhereWithoutFamilyMemberInput[]
    deleteMany?: MedicationScalarWhereInput | MedicationScalarWhereInput[]
  }

  export type LegalResponsibleUpdateOneWithoutFamillyMemberNestedInput = {
    create?: XOR<LegalResponsibleCreateWithoutFamillyMemberInput, LegalResponsibleUncheckedCreateWithoutFamillyMemberInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutFamillyMemberInput
    upsert?: LegalResponsibleUpsertWithoutFamillyMemberInput
    disconnect?: LegalResponsibleWhereInput | boolean
    delete?: LegalResponsibleWhereInput | boolean
    connect?: LegalResponsibleWhereUniqueInput
    update?: XOR<XOR<LegalResponsibleUpdateToOneWithWhereWithoutFamillyMemberInput, LegalResponsibleUpdateWithoutFamillyMemberInput>, LegalResponsibleUncheckedUpdateWithoutFamillyMemberInput>
  }

  export type BankAccountUpdateManyWithoutFamilyMemberNestedInput = {
    create?: XOR<BankAccountCreateWithoutFamilyMemberInput, BankAccountUncheckedCreateWithoutFamilyMemberInput> | BankAccountCreateWithoutFamilyMemberInput[] | BankAccountUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: BankAccountCreateOrConnectWithoutFamilyMemberInput | BankAccountCreateOrConnectWithoutFamilyMemberInput[]
    upsert?: BankAccountUpsertWithWhereUniqueWithoutFamilyMemberInput | BankAccountUpsertWithWhereUniqueWithoutFamilyMemberInput[]
    createMany?: BankAccountCreateManyFamilyMemberInputEnvelope
    set?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    disconnect?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    delete?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    connect?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    update?: BankAccountUpdateWithWhereUniqueWithoutFamilyMemberInput | BankAccountUpdateWithWhereUniqueWithoutFamilyMemberInput[]
    updateMany?: BankAccountUpdateManyWithWhereWithoutFamilyMemberInput | BankAccountUpdateManyWithWhereWithoutFamilyMemberInput[]
    deleteMany?: BankAccountScalarWhereInput | BankAccountScalarWhereInput[]
  }

  export type DeclarationsUpdateManyWithoutFamilyMemberNestedInput = {
    create?: XOR<DeclarationsCreateWithoutFamilyMemberInput, DeclarationsUncheckedCreateWithoutFamilyMemberInput> | DeclarationsCreateWithoutFamilyMemberInput[] | DeclarationsUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: DeclarationsCreateOrConnectWithoutFamilyMemberInput | DeclarationsCreateOrConnectWithoutFamilyMemberInput[]
    upsert?: DeclarationsUpsertWithWhereUniqueWithoutFamilyMemberInput | DeclarationsUpsertWithWhereUniqueWithoutFamilyMemberInput[]
    createMany?: DeclarationsCreateManyFamilyMemberInputEnvelope
    set?: DeclarationsWhereUniqueInput | DeclarationsWhereUniqueInput[]
    disconnect?: DeclarationsWhereUniqueInput | DeclarationsWhereUniqueInput[]
    delete?: DeclarationsWhereUniqueInput | DeclarationsWhereUniqueInput[]
    connect?: DeclarationsWhereUniqueInput | DeclarationsWhereUniqueInput[]
    update?: DeclarationsUpdateWithWhereUniqueWithoutFamilyMemberInput | DeclarationsUpdateWithWhereUniqueWithoutFamilyMemberInput[]
    updateMany?: DeclarationsUpdateManyWithWhereWithoutFamilyMemberInput | DeclarationsUpdateManyWithWhereWithoutFamilyMemberInput[]
    deleteMany?: DeclarationsScalarWhereInput | DeclarationsScalarWhereInput[]
  }

  export type CreditCardUncheckedUpdateManyWithoutFamilyMemberNestedInput = {
    create?: XOR<CreditCardCreateWithoutFamilyMemberInput, CreditCardUncheckedCreateWithoutFamilyMemberInput> | CreditCardCreateWithoutFamilyMemberInput[] | CreditCardUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: CreditCardCreateOrConnectWithoutFamilyMemberInput | CreditCardCreateOrConnectWithoutFamilyMemberInput[]
    upsert?: CreditCardUpsertWithWhereUniqueWithoutFamilyMemberInput | CreditCardUpsertWithWhereUniqueWithoutFamilyMemberInput[]
    createMany?: CreditCardCreateManyFamilyMemberInputEnvelope
    set?: CreditCardWhereUniqueInput | CreditCardWhereUniqueInput[]
    disconnect?: CreditCardWhereUniqueInput | CreditCardWhereUniqueInput[]
    delete?: CreditCardWhereUniqueInput | CreditCardWhereUniqueInput[]
    connect?: CreditCardWhereUniqueInput | CreditCardWhereUniqueInput[]
    update?: CreditCardUpdateWithWhereUniqueWithoutFamilyMemberInput | CreditCardUpdateWithWhereUniqueWithoutFamilyMemberInput[]
    updateMany?: CreditCardUpdateManyWithWhereWithoutFamilyMemberInput | CreditCardUpdateManyWithWhereWithoutFamilyMemberInput[]
    deleteMany?: CreditCardScalarWhereInput | CreditCardScalarWhereInput[]
  }

  export type FamilyMemberIncomeUncheckedUpdateManyWithoutFamilyMemberNestedInput = {
    create?: XOR<FamilyMemberIncomeCreateWithoutFamilyMemberInput, FamilyMemberIncomeUncheckedCreateWithoutFamilyMemberInput> | FamilyMemberIncomeCreateWithoutFamilyMemberInput[] | FamilyMemberIncomeUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: FamilyMemberIncomeCreateOrConnectWithoutFamilyMemberInput | FamilyMemberIncomeCreateOrConnectWithoutFamilyMemberInput[]
    upsert?: FamilyMemberIncomeUpsertWithWhereUniqueWithoutFamilyMemberInput | FamilyMemberIncomeUpsertWithWhereUniqueWithoutFamilyMemberInput[]
    createMany?: FamilyMemberIncomeCreateManyFamilyMemberInputEnvelope
    set?: FamilyMemberIncomeWhereUniqueInput | FamilyMemberIncomeWhereUniqueInput[]
    disconnect?: FamilyMemberIncomeWhereUniqueInput | FamilyMemberIncomeWhereUniqueInput[]
    delete?: FamilyMemberIncomeWhereUniqueInput | FamilyMemberIncomeWhereUniqueInput[]
    connect?: FamilyMemberIncomeWhereUniqueInput | FamilyMemberIncomeWhereUniqueInput[]
    update?: FamilyMemberIncomeUpdateWithWhereUniqueWithoutFamilyMemberInput | FamilyMemberIncomeUpdateWithWhereUniqueWithoutFamilyMemberInput[]
    updateMany?: FamilyMemberIncomeUpdateManyWithWhereWithoutFamilyMemberInput | FamilyMemberIncomeUpdateManyWithWhereWithoutFamilyMemberInput[]
    deleteMany?: FamilyMemberIncomeScalarWhereInput | FamilyMemberIncomeScalarWhereInput[]
  }

  export type FinancingUncheckedUpdateManyWithoutFamilyMemberNestedInput = {
    create?: XOR<FinancingCreateWithoutFamilyMemberInput, FinancingUncheckedCreateWithoutFamilyMemberInput> | FinancingCreateWithoutFamilyMemberInput[] | FinancingUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: FinancingCreateOrConnectWithoutFamilyMemberInput | FinancingCreateOrConnectWithoutFamilyMemberInput[]
    upsert?: FinancingUpsertWithWhereUniqueWithoutFamilyMemberInput | FinancingUpsertWithWhereUniqueWithoutFamilyMemberInput[]
    createMany?: FinancingCreateManyFamilyMemberInputEnvelope
    set?: FinancingWhereUniqueInput | FinancingWhereUniqueInput[]
    disconnect?: FinancingWhereUniqueInput | FinancingWhereUniqueInput[]
    delete?: FinancingWhereUniqueInput | FinancingWhereUniqueInput[]
    connect?: FinancingWhereUniqueInput | FinancingWhereUniqueInput[]
    update?: FinancingUpdateWithWhereUniqueWithoutFamilyMemberInput | FinancingUpdateWithWhereUniqueWithoutFamilyMemberInput[]
    updateMany?: FinancingUpdateManyWithWhereWithoutFamilyMemberInput | FinancingUpdateManyWithWhereWithoutFamilyMemberInput[]
    deleteMany?: FinancingScalarWhereInput | FinancingScalarWhereInput[]
  }

  export type LoanUncheckedUpdateManyWithoutFamilyMemberNestedInput = {
    create?: XOR<LoanCreateWithoutFamilyMemberInput, LoanUncheckedCreateWithoutFamilyMemberInput> | LoanCreateWithoutFamilyMemberInput[] | LoanUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: LoanCreateOrConnectWithoutFamilyMemberInput | LoanCreateOrConnectWithoutFamilyMemberInput[]
    upsert?: LoanUpsertWithWhereUniqueWithoutFamilyMemberInput | LoanUpsertWithWhereUniqueWithoutFamilyMemberInput[]
    createMany?: LoanCreateManyFamilyMemberInputEnvelope
    set?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    disconnect?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    delete?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    connect?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    update?: LoanUpdateWithWhereUniqueWithoutFamilyMemberInput | LoanUpdateWithWhereUniqueWithoutFamilyMemberInput[]
    updateMany?: LoanUpdateManyWithWhereWithoutFamilyMemberInput | LoanUpdateManyWithWhereWithoutFamilyMemberInput[]
    deleteMany?: LoanScalarWhereInput | LoanScalarWhereInput[]
  }

  export type MonthlyIncomeUncheckedUpdateManyWithoutFamilyMemberNestedInput = {
    create?: XOR<MonthlyIncomeCreateWithoutFamilyMemberInput, MonthlyIncomeUncheckedCreateWithoutFamilyMemberInput> | MonthlyIncomeCreateWithoutFamilyMemberInput[] | MonthlyIncomeUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: MonthlyIncomeCreateOrConnectWithoutFamilyMemberInput | MonthlyIncomeCreateOrConnectWithoutFamilyMemberInput[]
    upsert?: MonthlyIncomeUpsertWithWhereUniqueWithoutFamilyMemberInput | MonthlyIncomeUpsertWithWhereUniqueWithoutFamilyMemberInput[]
    createMany?: MonthlyIncomeCreateManyFamilyMemberInputEnvelope
    set?: MonthlyIncomeWhereUniqueInput | MonthlyIncomeWhereUniqueInput[]
    disconnect?: MonthlyIncomeWhereUniqueInput | MonthlyIncomeWhereUniqueInput[]
    delete?: MonthlyIncomeWhereUniqueInput | MonthlyIncomeWhereUniqueInput[]
    connect?: MonthlyIncomeWhereUniqueInput | MonthlyIncomeWhereUniqueInput[]
    update?: MonthlyIncomeUpdateWithWhereUniqueWithoutFamilyMemberInput | MonthlyIncomeUpdateWithWhereUniqueWithoutFamilyMemberInput[]
    updateMany?: MonthlyIncomeUpdateManyWithWhereWithoutFamilyMemberInput | MonthlyIncomeUpdateManyWithWhereWithoutFamilyMemberInput[]
    deleteMany?: MonthlyIncomeScalarWhereInput | MonthlyIncomeScalarWhereInput[]
  }

  export type OtherExpenseUncheckedUpdateManyWithoutFamilyMemberNestedInput = {
    create?: XOR<OtherExpenseCreateWithoutFamilyMemberInput, OtherExpenseUncheckedCreateWithoutFamilyMemberInput> | OtherExpenseCreateWithoutFamilyMemberInput[] | OtherExpenseUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: OtherExpenseCreateOrConnectWithoutFamilyMemberInput | OtherExpenseCreateOrConnectWithoutFamilyMemberInput[]
    upsert?: OtherExpenseUpsertWithWhereUniqueWithoutFamilyMemberInput | OtherExpenseUpsertWithWhereUniqueWithoutFamilyMemberInput[]
    createMany?: OtherExpenseCreateManyFamilyMemberInputEnvelope
    set?: OtherExpenseWhereUniqueInput | OtherExpenseWhereUniqueInput[]
    disconnect?: OtherExpenseWhereUniqueInput | OtherExpenseWhereUniqueInput[]
    delete?: OtherExpenseWhereUniqueInput | OtherExpenseWhereUniqueInput[]
    connect?: OtherExpenseWhereUniqueInput | OtherExpenseWhereUniqueInput[]
    update?: OtherExpenseUpdateWithWhereUniqueWithoutFamilyMemberInput | OtherExpenseUpdateWithWhereUniqueWithoutFamilyMemberInput[]
    updateMany?: OtherExpenseUpdateManyWithWhereWithoutFamilyMemberInput | OtherExpenseUpdateManyWithWhereWithoutFamilyMemberInput[]
    deleteMany?: OtherExpenseScalarWhereInput | OtherExpenseScalarWhereInput[]
  }

  export type FamilyMemberToVehicleUncheckedUpdateManyWithoutFamilyMembersNestedInput = {
    create?: XOR<FamilyMemberToVehicleCreateWithoutFamilyMembersInput, FamilyMemberToVehicleUncheckedCreateWithoutFamilyMembersInput> | FamilyMemberToVehicleCreateWithoutFamilyMembersInput[] | FamilyMemberToVehicleUncheckedCreateWithoutFamilyMembersInput[]
    connectOrCreate?: FamilyMemberToVehicleCreateOrConnectWithoutFamilyMembersInput | FamilyMemberToVehicleCreateOrConnectWithoutFamilyMembersInput[]
    upsert?: FamilyMemberToVehicleUpsertWithWhereUniqueWithoutFamilyMembersInput | FamilyMemberToVehicleUpsertWithWhereUniqueWithoutFamilyMembersInput[]
    createMany?: FamilyMemberToVehicleCreateManyFamilyMembersInputEnvelope
    set?: FamilyMemberToVehicleWhereUniqueInput | FamilyMemberToVehicleWhereUniqueInput[]
    disconnect?: FamilyMemberToVehicleWhereUniqueInput | FamilyMemberToVehicleWhereUniqueInput[]
    delete?: FamilyMemberToVehicleWhereUniqueInput | FamilyMemberToVehicleWhereUniqueInput[]
    connect?: FamilyMemberToVehicleWhereUniqueInput | FamilyMemberToVehicleWhereUniqueInput[]
    update?: FamilyMemberToVehicleUpdateWithWhereUniqueWithoutFamilyMembersInput | FamilyMemberToVehicleUpdateWithWhereUniqueWithoutFamilyMembersInput[]
    updateMany?: FamilyMemberToVehicleUpdateManyWithWhereWithoutFamilyMembersInput | FamilyMemberToVehicleUpdateManyWithWhereWithoutFamilyMembersInput[]
    deleteMany?: FamilyMemberToVehicleScalarWhereInput | FamilyMemberToVehicleScalarWhereInput[]
  }

  export type FamilyMemberDiseaseUncheckedUpdateManyWithoutFamilyMemberNestedInput = {
    create?: XOR<FamilyMemberDiseaseCreateWithoutFamilyMemberInput, FamilyMemberDiseaseUncheckedCreateWithoutFamilyMemberInput> | FamilyMemberDiseaseCreateWithoutFamilyMemberInput[] | FamilyMemberDiseaseUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: FamilyMemberDiseaseCreateOrConnectWithoutFamilyMemberInput | FamilyMemberDiseaseCreateOrConnectWithoutFamilyMemberInput[]
    upsert?: FamilyMemberDiseaseUpsertWithWhereUniqueWithoutFamilyMemberInput | FamilyMemberDiseaseUpsertWithWhereUniqueWithoutFamilyMemberInput[]
    createMany?: FamilyMemberDiseaseCreateManyFamilyMemberInputEnvelope
    set?: FamilyMemberDiseaseWhereUniqueInput | FamilyMemberDiseaseWhereUniqueInput[]
    disconnect?: FamilyMemberDiseaseWhereUniqueInput | FamilyMemberDiseaseWhereUniqueInput[]
    delete?: FamilyMemberDiseaseWhereUniqueInput | FamilyMemberDiseaseWhereUniqueInput[]
    connect?: FamilyMemberDiseaseWhereUniqueInput | FamilyMemberDiseaseWhereUniqueInput[]
    update?: FamilyMemberDiseaseUpdateWithWhereUniqueWithoutFamilyMemberInput | FamilyMemberDiseaseUpdateWithWhereUniqueWithoutFamilyMemberInput[]
    updateMany?: FamilyMemberDiseaseUpdateManyWithWhereWithoutFamilyMemberInput | FamilyMemberDiseaseUpdateManyWithWhereWithoutFamilyMemberInput[]
    deleteMany?: FamilyMemberDiseaseScalarWhereInput | FamilyMemberDiseaseScalarWhereInput[]
  }

  export type MedicationUncheckedUpdateManyWithoutFamilyMemberNestedInput = {
    create?: XOR<MedicationCreateWithoutFamilyMemberInput, MedicationUncheckedCreateWithoutFamilyMemberInput> | MedicationCreateWithoutFamilyMemberInput[] | MedicationUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: MedicationCreateOrConnectWithoutFamilyMemberInput | MedicationCreateOrConnectWithoutFamilyMemberInput[]
    upsert?: MedicationUpsertWithWhereUniqueWithoutFamilyMemberInput | MedicationUpsertWithWhereUniqueWithoutFamilyMemberInput[]
    createMany?: MedicationCreateManyFamilyMemberInputEnvelope
    set?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    disconnect?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    delete?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    connect?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    update?: MedicationUpdateWithWhereUniqueWithoutFamilyMemberInput | MedicationUpdateWithWhereUniqueWithoutFamilyMemberInput[]
    updateMany?: MedicationUpdateManyWithWhereWithoutFamilyMemberInput | MedicationUpdateManyWithWhereWithoutFamilyMemberInput[]
    deleteMany?: MedicationScalarWhereInput | MedicationScalarWhereInput[]
  }

  export type BankAccountUncheckedUpdateManyWithoutFamilyMemberNestedInput = {
    create?: XOR<BankAccountCreateWithoutFamilyMemberInput, BankAccountUncheckedCreateWithoutFamilyMemberInput> | BankAccountCreateWithoutFamilyMemberInput[] | BankAccountUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: BankAccountCreateOrConnectWithoutFamilyMemberInput | BankAccountCreateOrConnectWithoutFamilyMemberInput[]
    upsert?: BankAccountUpsertWithWhereUniqueWithoutFamilyMemberInput | BankAccountUpsertWithWhereUniqueWithoutFamilyMemberInput[]
    createMany?: BankAccountCreateManyFamilyMemberInputEnvelope
    set?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    disconnect?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    delete?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    connect?: BankAccountWhereUniqueInput | BankAccountWhereUniqueInput[]
    update?: BankAccountUpdateWithWhereUniqueWithoutFamilyMemberInput | BankAccountUpdateWithWhereUniqueWithoutFamilyMemberInput[]
    updateMany?: BankAccountUpdateManyWithWhereWithoutFamilyMemberInput | BankAccountUpdateManyWithWhereWithoutFamilyMemberInput[]
    deleteMany?: BankAccountScalarWhereInput | BankAccountScalarWhereInput[]
  }

  export type DeclarationsUncheckedUpdateManyWithoutFamilyMemberNestedInput = {
    create?: XOR<DeclarationsCreateWithoutFamilyMemberInput, DeclarationsUncheckedCreateWithoutFamilyMemberInput> | DeclarationsCreateWithoutFamilyMemberInput[] | DeclarationsUncheckedCreateWithoutFamilyMemberInput[]
    connectOrCreate?: DeclarationsCreateOrConnectWithoutFamilyMemberInput | DeclarationsCreateOrConnectWithoutFamilyMemberInput[]
    upsert?: DeclarationsUpsertWithWhereUniqueWithoutFamilyMemberInput | DeclarationsUpsertWithWhereUniqueWithoutFamilyMemberInput[]
    createMany?: DeclarationsCreateManyFamilyMemberInputEnvelope
    set?: DeclarationsWhereUniqueInput | DeclarationsWhereUniqueInput[]
    disconnect?: DeclarationsWhereUniqueInput | DeclarationsWhereUniqueInput[]
    delete?: DeclarationsWhereUniqueInput | DeclarationsWhereUniqueInput[]
    connect?: DeclarationsWhereUniqueInput | DeclarationsWhereUniqueInput[]
    update?: DeclarationsUpdateWithWhereUniqueWithoutFamilyMemberInput | DeclarationsUpdateWithWhereUniqueWithoutFamilyMemberInput[]
    updateMany?: DeclarationsUpdateManyWithWhereWithoutFamilyMemberInput | DeclarationsUpdateManyWithWhereWithoutFamilyMemberInput[]
    deleteMany?: DeclarationsScalarWhereInput | DeclarationsScalarWhereInput[]
  }

  export type CandidateCreateNestedOneWithoutHousingInput = {
    create?: XOR<CandidateCreateWithoutHousingInput, CandidateUncheckedCreateWithoutHousingInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutHousingInput
    connect?: CandidateWhereUniqueInput
  }

  export type LegalResponsibleCreateNestedOneWithoutHousingInput = {
    create?: XOR<LegalResponsibleCreateWithoutHousingInput, LegalResponsibleUncheckedCreateWithoutHousingInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutHousingInput
    connect?: LegalResponsibleWhereUniqueInput
  }

  export type EnumPropertyStatusFieldUpdateOperationsInput = {
    set?: $Enums.PropertyStatus
  }

  export type NullableEnumContractTypeFieldUpdateOperationsInput = {
    set?: $Enums.ContractType | null
  }

  export type EnumTimeLivingInPropertyFieldUpdateOperationsInput = {
    set?: $Enums.TimeLivingInProperty
  }

  export type EnumDomicileTypeFieldUpdateOperationsInput = {
    set?: $Enums.DomicileType
  }

  export type EnumNumberOfRoomsFieldUpdateOperationsInput = {
    set?: $Enums.NumberOfRooms
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CandidateUpdateOneWithoutHousingNestedInput = {
    create?: XOR<CandidateCreateWithoutHousingInput, CandidateUncheckedCreateWithoutHousingInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutHousingInput
    upsert?: CandidateUpsertWithoutHousingInput
    disconnect?: CandidateWhereInput | boolean
    delete?: CandidateWhereInput | boolean
    connect?: CandidateWhereUniqueInput
    update?: XOR<XOR<CandidateUpdateToOneWithWhereWithoutHousingInput, CandidateUpdateWithoutHousingInput>, CandidateUncheckedUpdateWithoutHousingInput>
  }

  export type LegalResponsibleUpdateOneWithoutHousingNestedInput = {
    create?: XOR<LegalResponsibleCreateWithoutHousingInput, LegalResponsibleUncheckedCreateWithoutHousingInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutHousingInput
    upsert?: LegalResponsibleUpsertWithoutHousingInput
    disconnect?: LegalResponsibleWhereInput | boolean
    delete?: LegalResponsibleWhereInput | boolean
    connect?: LegalResponsibleWhereUniqueInput
    update?: XOR<XOR<LegalResponsibleUpdateToOneWithWhereWithoutHousingInput, LegalResponsibleUpdateWithoutHousingInput>, LegalResponsibleUncheckedUpdateWithoutHousingInput>
  }

  export type VehicleCreateowners_idInput = {
    set: string[]
  }

  export type CandidateCreateNestedOneWithoutVehicleInput = {
    create?: XOR<CandidateCreateWithoutVehicleInput, CandidateUncheckedCreateWithoutVehicleInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutVehicleInput
    connect?: CandidateWhereUniqueInput
  }

  export type FamilyMemberToVehicleCreateNestedManyWithoutVehicleInput = {
    create?: XOR<FamilyMemberToVehicleCreateWithoutVehicleInput, FamilyMemberToVehicleUncheckedCreateWithoutVehicleInput> | FamilyMemberToVehicleCreateWithoutVehicleInput[] | FamilyMemberToVehicleUncheckedCreateWithoutVehicleInput[]
    connectOrCreate?: FamilyMemberToVehicleCreateOrConnectWithoutVehicleInput | FamilyMemberToVehicleCreateOrConnectWithoutVehicleInput[]
    createMany?: FamilyMemberToVehicleCreateManyVehicleInputEnvelope
    connect?: FamilyMemberToVehicleWhereUniqueInput | FamilyMemberToVehicleWhereUniqueInput[]
  }

  export type LegalResponsibleCreateNestedOneWithoutVehicleInput = {
    create?: XOR<LegalResponsibleCreateWithoutVehicleInput, LegalResponsibleUncheckedCreateWithoutVehicleInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutVehicleInput
    connect?: LegalResponsibleWhereUniqueInput
  }

  export type FamilyMemberToVehicleUncheckedCreateNestedManyWithoutVehicleInput = {
    create?: XOR<FamilyMemberToVehicleCreateWithoutVehicleInput, FamilyMemberToVehicleUncheckedCreateWithoutVehicleInput> | FamilyMemberToVehicleCreateWithoutVehicleInput[] | FamilyMemberToVehicleUncheckedCreateWithoutVehicleInput[]
    connectOrCreate?: FamilyMemberToVehicleCreateOrConnectWithoutVehicleInput | FamilyMemberToVehicleCreateOrConnectWithoutVehicleInput[]
    createMany?: FamilyMemberToVehicleCreateManyVehicleInputEnvelope
    connect?: FamilyMemberToVehicleWhereUniqueInput | FamilyMemberToVehicleWhereUniqueInput[]
  }

  export type EnumVehicleTypeFieldUpdateOperationsInput = {
    set?: $Enums.VehicleType
  }

  export type EnumVehicleSituationFieldUpdateOperationsInput = {
    set?: $Enums.VehicleSituation
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumVehicleUsageFieldUpdateOperationsInput = {
    set?: $Enums.VehicleUsage
  }

  export type VehicleUpdateowners_idInput = {
    set?: string[]
    push?: string | string[]
  }

  export type CandidateUpdateOneWithoutVehicleNestedInput = {
    create?: XOR<CandidateCreateWithoutVehicleInput, CandidateUncheckedCreateWithoutVehicleInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutVehicleInput
    upsert?: CandidateUpsertWithoutVehicleInput
    disconnect?: CandidateWhereInput | boolean
    delete?: CandidateWhereInput | boolean
    connect?: CandidateWhereUniqueInput
    update?: XOR<XOR<CandidateUpdateToOneWithWhereWithoutVehicleInput, CandidateUpdateWithoutVehicleInput>, CandidateUncheckedUpdateWithoutVehicleInput>
  }

  export type FamilyMemberToVehicleUpdateManyWithoutVehicleNestedInput = {
    create?: XOR<FamilyMemberToVehicleCreateWithoutVehicleInput, FamilyMemberToVehicleUncheckedCreateWithoutVehicleInput> | FamilyMemberToVehicleCreateWithoutVehicleInput[] | FamilyMemberToVehicleUncheckedCreateWithoutVehicleInput[]
    connectOrCreate?: FamilyMemberToVehicleCreateOrConnectWithoutVehicleInput | FamilyMemberToVehicleCreateOrConnectWithoutVehicleInput[]
    upsert?: FamilyMemberToVehicleUpsertWithWhereUniqueWithoutVehicleInput | FamilyMemberToVehicleUpsertWithWhereUniqueWithoutVehicleInput[]
    createMany?: FamilyMemberToVehicleCreateManyVehicleInputEnvelope
    set?: FamilyMemberToVehicleWhereUniqueInput | FamilyMemberToVehicleWhereUniqueInput[]
    disconnect?: FamilyMemberToVehicleWhereUniqueInput | FamilyMemberToVehicleWhereUniqueInput[]
    delete?: FamilyMemberToVehicleWhereUniqueInput | FamilyMemberToVehicleWhereUniqueInput[]
    connect?: FamilyMemberToVehicleWhereUniqueInput | FamilyMemberToVehicleWhereUniqueInput[]
    update?: FamilyMemberToVehicleUpdateWithWhereUniqueWithoutVehicleInput | FamilyMemberToVehicleUpdateWithWhereUniqueWithoutVehicleInput[]
    updateMany?: FamilyMemberToVehicleUpdateManyWithWhereWithoutVehicleInput | FamilyMemberToVehicleUpdateManyWithWhereWithoutVehicleInput[]
    deleteMany?: FamilyMemberToVehicleScalarWhereInput | FamilyMemberToVehicleScalarWhereInput[]
  }

  export type LegalResponsibleUpdateOneWithoutVehicleNestedInput = {
    create?: XOR<LegalResponsibleCreateWithoutVehicleInput, LegalResponsibleUncheckedCreateWithoutVehicleInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutVehicleInput
    upsert?: LegalResponsibleUpsertWithoutVehicleInput
    disconnect?: LegalResponsibleWhereInput | boolean
    delete?: LegalResponsibleWhereInput | boolean
    connect?: LegalResponsibleWhereUniqueInput
    update?: XOR<XOR<LegalResponsibleUpdateToOneWithWhereWithoutVehicleInput, LegalResponsibleUpdateWithoutVehicleInput>, LegalResponsibleUncheckedUpdateWithoutVehicleInput>
  }

  export type FamilyMemberToVehicleUncheckedUpdateManyWithoutVehicleNestedInput = {
    create?: XOR<FamilyMemberToVehicleCreateWithoutVehicleInput, FamilyMemberToVehicleUncheckedCreateWithoutVehicleInput> | FamilyMemberToVehicleCreateWithoutVehicleInput[] | FamilyMemberToVehicleUncheckedCreateWithoutVehicleInput[]
    connectOrCreate?: FamilyMemberToVehicleCreateOrConnectWithoutVehicleInput | FamilyMemberToVehicleCreateOrConnectWithoutVehicleInput[]
    upsert?: FamilyMemberToVehicleUpsertWithWhereUniqueWithoutVehicleInput | FamilyMemberToVehicleUpsertWithWhereUniqueWithoutVehicleInput[]
    createMany?: FamilyMemberToVehicleCreateManyVehicleInputEnvelope
    set?: FamilyMemberToVehicleWhereUniqueInput | FamilyMemberToVehicleWhereUniqueInput[]
    disconnect?: FamilyMemberToVehicleWhereUniqueInput | FamilyMemberToVehicleWhereUniqueInput[]
    delete?: FamilyMemberToVehicleWhereUniqueInput | FamilyMemberToVehicleWhereUniqueInput[]
    connect?: FamilyMemberToVehicleWhereUniqueInput | FamilyMemberToVehicleWhereUniqueInput[]
    update?: FamilyMemberToVehicleUpdateWithWhereUniqueWithoutVehicleInput | FamilyMemberToVehicleUpdateWithWhereUniqueWithoutVehicleInput[]
    updateMany?: FamilyMemberToVehicleUpdateManyWithWhereWithoutVehicleInput | FamilyMemberToVehicleUpdateManyWithWhereWithoutVehicleInput[]
    deleteMany?: FamilyMemberToVehicleScalarWhereInput | FamilyMemberToVehicleScalarWhereInput[]
  }

  export type FamilyMemberCreateNestedOneWithoutFamilyMemberIncomeInput = {
    create?: XOR<FamilyMemberCreateWithoutFamilyMemberIncomeInput, FamilyMemberUncheckedCreateWithoutFamilyMemberIncomeInput>
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutFamilyMemberIncomeInput
    connect?: FamilyMemberWhereUniqueInput
  }

  export type CandidateCreateNestedOneWithoutFamilyMemberIncomeInput = {
    create?: XOR<CandidateCreateWithoutFamilyMemberIncomeInput, CandidateUncheckedCreateWithoutFamilyMemberIncomeInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutFamilyMemberIncomeInput
    connect?: CandidateWhereUniqueInput
  }

  export type LegalResponsibleCreateNestedOneWithoutFamilyMemberIncomeInput = {
    create?: XOR<LegalResponsibleCreateWithoutFamilyMemberIncomeInput, LegalResponsibleUncheckedCreateWithoutFamilyMemberIncomeInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutFamilyMemberIncomeInput
    connect?: LegalResponsibleWhereUniqueInput
  }

  export type EnumEmploymentTypeFieldUpdateOperationsInput = {
    set?: $Enums.EmploymentType
  }

  export type FamilyMemberUpdateOneWithoutFamilyMemberIncomeNestedInput = {
    create?: XOR<FamilyMemberCreateWithoutFamilyMemberIncomeInput, FamilyMemberUncheckedCreateWithoutFamilyMemberIncomeInput>
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutFamilyMemberIncomeInput
    upsert?: FamilyMemberUpsertWithoutFamilyMemberIncomeInput
    disconnect?: FamilyMemberWhereInput | boolean
    delete?: FamilyMemberWhereInput | boolean
    connect?: FamilyMemberWhereUniqueInput
    update?: XOR<XOR<FamilyMemberUpdateToOneWithWhereWithoutFamilyMemberIncomeInput, FamilyMemberUpdateWithoutFamilyMemberIncomeInput>, FamilyMemberUncheckedUpdateWithoutFamilyMemberIncomeInput>
  }

  export type CandidateUpdateOneWithoutFamilyMemberIncomeNestedInput = {
    create?: XOR<CandidateCreateWithoutFamilyMemberIncomeInput, CandidateUncheckedCreateWithoutFamilyMemberIncomeInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutFamilyMemberIncomeInput
    upsert?: CandidateUpsertWithoutFamilyMemberIncomeInput
    disconnect?: CandidateWhereInput | boolean
    delete?: CandidateWhereInput | boolean
    connect?: CandidateWhereUniqueInput
    update?: XOR<XOR<CandidateUpdateToOneWithWhereWithoutFamilyMemberIncomeInput, CandidateUpdateWithoutFamilyMemberIncomeInput>, CandidateUncheckedUpdateWithoutFamilyMemberIncomeInput>
  }

  export type LegalResponsibleUpdateOneWithoutFamilyMemberIncomeNestedInput = {
    create?: XOR<LegalResponsibleCreateWithoutFamilyMemberIncomeInput, LegalResponsibleUncheckedCreateWithoutFamilyMemberIncomeInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutFamilyMemberIncomeInput
    upsert?: LegalResponsibleUpsertWithoutFamilyMemberIncomeInput
    disconnect?: LegalResponsibleWhereInput | boolean
    delete?: LegalResponsibleWhereInput | boolean
    connect?: LegalResponsibleWhereUniqueInput
    update?: XOR<XOR<LegalResponsibleUpdateToOneWithWhereWithoutFamilyMemberIncomeInput, LegalResponsibleUpdateWithoutFamilyMemberIncomeInput>, LegalResponsibleUncheckedUpdateWithoutFamilyMemberIncomeInput>
  }

  export type FamilyMemberCreateNestedOneWithoutMonthlyIncomeInput = {
    create?: XOR<FamilyMemberCreateWithoutMonthlyIncomeInput, FamilyMemberUncheckedCreateWithoutMonthlyIncomeInput>
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutMonthlyIncomeInput
    connect?: FamilyMemberWhereUniqueInput
  }

  export type CandidateCreateNestedOneWithoutMonthlyIncomeInput = {
    create?: XOR<CandidateCreateWithoutMonthlyIncomeInput, CandidateUncheckedCreateWithoutMonthlyIncomeInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutMonthlyIncomeInput
    connect?: CandidateWhereUniqueInput
  }

  export type LegalResponsibleCreateNestedOneWithoutMonthlyIncomeInput = {
    create?: XOR<LegalResponsibleCreateWithoutMonthlyIncomeInput, LegalResponsibleUncheckedCreateWithoutMonthlyIncomeInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutMonthlyIncomeInput
    connect?: LegalResponsibleWhereUniqueInput
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableEnumIncomeSourceFieldUpdateOperationsInput = {
    set?: $Enums.IncomeSource | null
  }

  export type FamilyMemberUpdateOneWithoutMonthlyIncomeNestedInput = {
    create?: XOR<FamilyMemberCreateWithoutMonthlyIncomeInput, FamilyMemberUncheckedCreateWithoutMonthlyIncomeInput>
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutMonthlyIncomeInput
    upsert?: FamilyMemberUpsertWithoutMonthlyIncomeInput
    disconnect?: FamilyMemberWhereInput | boolean
    delete?: FamilyMemberWhereInput | boolean
    connect?: FamilyMemberWhereUniqueInput
    update?: XOR<XOR<FamilyMemberUpdateToOneWithWhereWithoutMonthlyIncomeInput, FamilyMemberUpdateWithoutMonthlyIncomeInput>, FamilyMemberUncheckedUpdateWithoutMonthlyIncomeInput>
  }

  export type CandidateUpdateOneWithoutMonthlyIncomeNestedInput = {
    create?: XOR<CandidateCreateWithoutMonthlyIncomeInput, CandidateUncheckedCreateWithoutMonthlyIncomeInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutMonthlyIncomeInput
    upsert?: CandidateUpsertWithoutMonthlyIncomeInput
    disconnect?: CandidateWhereInput | boolean
    delete?: CandidateWhereInput | boolean
    connect?: CandidateWhereUniqueInput
    update?: XOR<XOR<CandidateUpdateToOneWithWhereWithoutMonthlyIncomeInput, CandidateUpdateWithoutMonthlyIncomeInput>, CandidateUncheckedUpdateWithoutMonthlyIncomeInput>
  }

  export type LegalResponsibleUpdateOneWithoutMonthlyIncomeNestedInput = {
    create?: XOR<LegalResponsibleCreateWithoutMonthlyIncomeInput, LegalResponsibleUncheckedCreateWithoutMonthlyIncomeInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutMonthlyIncomeInput
    upsert?: LegalResponsibleUpsertWithoutMonthlyIncomeInput
    disconnect?: LegalResponsibleWhereInput | boolean
    delete?: LegalResponsibleWhereInput | boolean
    connect?: LegalResponsibleWhereUniqueInput
    update?: XOR<XOR<LegalResponsibleUpdateToOneWithWhereWithoutMonthlyIncomeInput, LegalResponsibleUpdateWithoutMonthlyIncomeInput>, LegalResponsibleUncheckedUpdateWithoutMonthlyIncomeInput>
  }

  export type FamilyMemberCreateNestedOneWithoutBankAccountInput = {
    create?: XOR<FamilyMemberCreateWithoutBankAccountInput, FamilyMemberUncheckedCreateWithoutBankAccountInput>
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutBankAccountInput
    connect?: FamilyMemberWhereUniqueInput
  }

  export type CandidateCreateNestedOneWithoutBankAccountInput = {
    create?: XOR<CandidateCreateWithoutBankAccountInput, CandidateUncheckedCreateWithoutBankAccountInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutBankAccountInput
    connect?: CandidateWhereUniqueInput
  }

  export type LegalResponsibleCreateNestedOneWithoutBankAccountInput = {
    create?: XOR<LegalResponsibleCreateWithoutBankAccountInput, LegalResponsibleUncheckedCreateWithoutBankAccountInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutBankAccountInput
    connect?: LegalResponsibleWhereUniqueInput
  }

  export type EnumAccountTypeFieldUpdateOperationsInput = {
    set?: $Enums.AccountType
  }

  export type FamilyMemberUpdateOneWithoutBankAccountNestedInput = {
    create?: XOR<FamilyMemberCreateWithoutBankAccountInput, FamilyMemberUncheckedCreateWithoutBankAccountInput>
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutBankAccountInput
    upsert?: FamilyMemberUpsertWithoutBankAccountInput
    disconnect?: FamilyMemberWhereInput | boolean
    delete?: FamilyMemberWhereInput | boolean
    connect?: FamilyMemberWhereUniqueInput
    update?: XOR<XOR<FamilyMemberUpdateToOneWithWhereWithoutBankAccountInput, FamilyMemberUpdateWithoutBankAccountInput>, FamilyMemberUncheckedUpdateWithoutBankAccountInput>
  }

  export type CandidateUpdateOneWithoutBankAccountNestedInput = {
    create?: XOR<CandidateCreateWithoutBankAccountInput, CandidateUncheckedCreateWithoutBankAccountInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutBankAccountInput
    upsert?: CandidateUpsertWithoutBankAccountInput
    disconnect?: CandidateWhereInput | boolean
    delete?: CandidateWhereInput | boolean
    connect?: CandidateWhereUniqueInput
    update?: XOR<XOR<CandidateUpdateToOneWithWhereWithoutBankAccountInput, CandidateUpdateWithoutBankAccountInput>, CandidateUncheckedUpdateWithoutBankAccountInput>
  }

  export type LegalResponsibleUpdateOneWithoutBankAccountNestedInput = {
    create?: XOR<LegalResponsibleCreateWithoutBankAccountInput, LegalResponsibleUncheckedCreateWithoutBankAccountInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutBankAccountInput
    upsert?: LegalResponsibleUpsertWithoutBankAccountInput
    disconnect?: LegalResponsibleWhereInput | boolean
    delete?: LegalResponsibleWhereInput | boolean
    connect?: LegalResponsibleWhereUniqueInput
    update?: XOR<XOR<LegalResponsibleUpdateToOneWithWhereWithoutBankAccountInput, LegalResponsibleUpdateWithoutBankAccountInput>, LegalResponsibleUncheckedUpdateWithoutBankAccountInput>
  }

  export type ExpenseCreateotherExpensesDescriptionInput = {
    set: string[]
  }

  export type ExpenseCreateotherExpensesValueInput = {
    set: number[]
  }

  export type CandidateCreateNestedOneWithoutExpenseInput = {
    create?: XOR<CandidateCreateWithoutExpenseInput, CandidateUncheckedCreateWithoutExpenseInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutExpenseInput
    connect?: CandidateWhereUniqueInput
  }

  export type LegalResponsibleCreateNestedOneWithoutExpenseInput = {
    create?: XOR<LegalResponsibleCreateWithoutExpenseInput, LegalResponsibleUncheckedCreateWithoutExpenseInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutExpenseInput
    connect?: LegalResponsibleWhereUniqueInput
  }

  export type ExpenseUpdateotherExpensesDescriptionInput = {
    set?: string[]
    push?: string | string[]
  }

  export type ExpenseUpdateotherExpensesValueInput = {
    set?: number[]
    push?: number | number[]
  }

  export type CandidateUpdateOneWithoutExpenseNestedInput = {
    create?: XOR<CandidateCreateWithoutExpenseInput, CandidateUncheckedCreateWithoutExpenseInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutExpenseInput
    upsert?: CandidateUpsertWithoutExpenseInput
    disconnect?: CandidateWhereInput | boolean
    delete?: CandidateWhereInput | boolean
    connect?: CandidateWhereUniqueInput
    update?: XOR<XOR<CandidateUpdateToOneWithWhereWithoutExpenseInput, CandidateUpdateWithoutExpenseInput>, CandidateUncheckedUpdateWithoutExpenseInput>
  }

  export type LegalResponsibleUpdateOneWithoutExpenseNestedInput = {
    create?: XOR<LegalResponsibleCreateWithoutExpenseInput, LegalResponsibleUncheckedCreateWithoutExpenseInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutExpenseInput
    upsert?: LegalResponsibleUpsertWithoutExpenseInput
    disconnect?: LegalResponsibleWhereInput | boolean
    delete?: LegalResponsibleWhereInput | boolean
    connect?: LegalResponsibleWhereUniqueInput
    update?: XOR<XOR<LegalResponsibleUpdateToOneWithWhereWithoutExpenseInput, LegalResponsibleUpdateWithoutExpenseInput>, LegalResponsibleUncheckedUpdateWithoutExpenseInput>
  }

  export type CandidateCreateNestedOneWithoutLoanInput = {
    create?: XOR<CandidateCreateWithoutLoanInput, CandidateUncheckedCreateWithoutLoanInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutLoanInput
    connect?: CandidateWhereUniqueInput
  }

  export type FamilyMemberCreateNestedOneWithoutLoanInput = {
    create?: XOR<FamilyMemberCreateWithoutLoanInput, FamilyMemberUncheckedCreateWithoutLoanInput>
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutLoanInput
    connect?: FamilyMemberWhereUniqueInput
  }

  export type LegalResponsibleCreateNestedOneWithoutLoanInput = {
    create?: XOR<LegalResponsibleCreateWithoutLoanInput, LegalResponsibleUncheckedCreateWithoutLoanInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutLoanInput
    connect?: LegalResponsibleWhereUniqueInput
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CandidateUpdateOneWithoutLoanNestedInput = {
    create?: XOR<CandidateCreateWithoutLoanInput, CandidateUncheckedCreateWithoutLoanInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutLoanInput
    upsert?: CandidateUpsertWithoutLoanInput
    disconnect?: CandidateWhereInput | boolean
    delete?: CandidateWhereInput | boolean
    connect?: CandidateWhereUniqueInput
    update?: XOR<XOR<CandidateUpdateToOneWithWhereWithoutLoanInput, CandidateUpdateWithoutLoanInput>, CandidateUncheckedUpdateWithoutLoanInput>
  }

  export type FamilyMemberUpdateOneWithoutLoanNestedInput = {
    create?: XOR<FamilyMemberCreateWithoutLoanInput, FamilyMemberUncheckedCreateWithoutLoanInput>
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutLoanInput
    upsert?: FamilyMemberUpsertWithoutLoanInput
    disconnect?: FamilyMemberWhereInput | boolean
    delete?: FamilyMemberWhereInput | boolean
    connect?: FamilyMemberWhereUniqueInput
    update?: XOR<XOR<FamilyMemberUpdateToOneWithWhereWithoutLoanInput, FamilyMemberUpdateWithoutLoanInput>, FamilyMemberUncheckedUpdateWithoutLoanInput>
  }

  export type LegalResponsibleUpdateOneWithoutLoanNestedInput = {
    create?: XOR<LegalResponsibleCreateWithoutLoanInput, LegalResponsibleUncheckedCreateWithoutLoanInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutLoanInput
    upsert?: LegalResponsibleUpsertWithoutLoanInput
    disconnect?: LegalResponsibleWhereInput | boolean
    delete?: LegalResponsibleWhereInput | boolean
    connect?: LegalResponsibleWhereUniqueInput
    update?: XOR<XOR<LegalResponsibleUpdateToOneWithWhereWithoutLoanInput, LegalResponsibleUpdateWithoutLoanInput>, LegalResponsibleUncheckedUpdateWithoutLoanInput>
  }

  export type CandidateCreateNestedOneWithoutFinancingInput = {
    create?: XOR<CandidateCreateWithoutFinancingInput, CandidateUncheckedCreateWithoutFinancingInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutFinancingInput
    connect?: CandidateWhereUniqueInput
  }

  export type FamilyMemberCreateNestedOneWithoutFinancingInput = {
    create?: XOR<FamilyMemberCreateWithoutFinancingInput, FamilyMemberUncheckedCreateWithoutFinancingInput>
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutFinancingInput
    connect?: FamilyMemberWhereUniqueInput
  }

  export type LegalResponsibleCreateNestedOneWithoutFinancingInput = {
    create?: XOR<LegalResponsibleCreateWithoutFinancingInput, LegalResponsibleUncheckedCreateWithoutFinancingInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutFinancingInput
    connect?: LegalResponsibleWhereUniqueInput
  }

  export type EnumFinancingTypeFieldUpdateOperationsInput = {
    set?: $Enums.FinancingType
  }

  export type CandidateUpdateOneWithoutFinancingNestedInput = {
    create?: XOR<CandidateCreateWithoutFinancingInput, CandidateUncheckedCreateWithoutFinancingInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutFinancingInput
    upsert?: CandidateUpsertWithoutFinancingInput
    disconnect?: CandidateWhereInput | boolean
    delete?: CandidateWhereInput | boolean
    connect?: CandidateWhereUniqueInput
    update?: XOR<XOR<CandidateUpdateToOneWithWhereWithoutFinancingInput, CandidateUpdateWithoutFinancingInput>, CandidateUncheckedUpdateWithoutFinancingInput>
  }

  export type FamilyMemberUpdateOneWithoutFinancingNestedInput = {
    create?: XOR<FamilyMemberCreateWithoutFinancingInput, FamilyMemberUncheckedCreateWithoutFinancingInput>
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutFinancingInput
    upsert?: FamilyMemberUpsertWithoutFinancingInput
    disconnect?: FamilyMemberWhereInput | boolean
    delete?: FamilyMemberWhereInput | boolean
    connect?: FamilyMemberWhereUniqueInput
    update?: XOR<XOR<FamilyMemberUpdateToOneWithWhereWithoutFinancingInput, FamilyMemberUpdateWithoutFinancingInput>, FamilyMemberUncheckedUpdateWithoutFinancingInput>
  }

  export type LegalResponsibleUpdateOneWithoutFinancingNestedInput = {
    create?: XOR<LegalResponsibleCreateWithoutFinancingInput, LegalResponsibleUncheckedCreateWithoutFinancingInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutFinancingInput
    upsert?: LegalResponsibleUpsertWithoutFinancingInput
    disconnect?: LegalResponsibleWhereInput | boolean
    delete?: LegalResponsibleWhereInput | boolean
    connect?: LegalResponsibleWhereUniqueInput
    update?: XOR<XOR<LegalResponsibleUpdateToOneWithWhereWithoutFinancingInput, LegalResponsibleUpdateWithoutFinancingInput>, LegalResponsibleUncheckedUpdateWithoutFinancingInput>
  }

  export type CandidateCreateNestedOneWithoutCreditCardInput = {
    create?: XOR<CandidateCreateWithoutCreditCardInput, CandidateUncheckedCreateWithoutCreditCardInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutCreditCardInput
    connect?: CandidateWhereUniqueInput
  }

  export type FamilyMemberCreateNestedOneWithoutCreditCardInput = {
    create?: XOR<FamilyMemberCreateWithoutCreditCardInput, FamilyMemberUncheckedCreateWithoutCreditCardInput>
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutCreditCardInput
    connect?: FamilyMemberWhereUniqueInput
  }

  export type LegalResponsibleCreateNestedOneWithoutCreditCardInput = {
    create?: XOR<LegalResponsibleCreateWithoutCreditCardInput, LegalResponsibleUncheckedCreateWithoutCreditCardInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutCreditCardInput
    connect?: LegalResponsibleWhereUniqueInput
  }

  export type CandidateUpdateOneWithoutCreditCardNestedInput = {
    create?: XOR<CandidateCreateWithoutCreditCardInput, CandidateUncheckedCreateWithoutCreditCardInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutCreditCardInput
    upsert?: CandidateUpsertWithoutCreditCardInput
    disconnect?: CandidateWhereInput | boolean
    delete?: CandidateWhereInput | boolean
    connect?: CandidateWhereUniqueInput
    update?: XOR<XOR<CandidateUpdateToOneWithWhereWithoutCreditCardInput, CandidateUpdateWithoutCreditCardInput>, CandidateUncheckedUpdateWithoutCreditCardInput>
  }

  export type FamilyMemberUpdateOneWithoutCreditCardNestedInput = {
    create?: XOR<FamilyMemberCreateWithoutCreditCardInput, FamilyMemberUncheckedCreateWithoutCreditCardInput>
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutCreditCardInput
    upsert?: FamilyMemberUpsertWithoutCreditCardInput
    disconnect?: FamilyMemberWhereInput | boolean
    delete?: FamilyMemberWhereInput | boolean
    connect?: FamilyMemberWhereUniqueInput
    update?: XOR<XOR<FamilyMemberUpdateToOneWithWhereWithoutCreditCardInput, FamilyMemberUpdateWithoutCreditCardInput>, FamilyMemberUncheckedUpdateWithoutCreditCardInput>
  }

  export type LegalResponsibleUpdateOneWithoutCreditCardNestedInput = {
    create?: XOR<LegalResponsibleCreateWithoutCreditCardInput, LegalResponsibleUncheckedCreateWithoutCreditCardInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutCreditCardInput
    upsert?: LegalResponsibleUpsertWithoutCreditCardInput
    disconnect?: LegalResponsibleWhereInput | boolean
    delete?: LegalResponsibleWhereInput | boolean
    connect?: LegalResponsibleWhereUniqueInput
    update?: XOR<XOR<LegalResponsibleUpdateToOneWithWhereWithoutCreditCardInput, LegalResponsibleUpdateWithoutCreditCardInput>, LegalResponsibleUncheckedUpdateWithoutCreditCardInput>
  }

  export type CandidateCreateNestedOneWithoutOtherExpenseInput = {
    create?: XOR<CandidateCreateWithoutOtherExpenseInput, CandidateUncheckedCreateWithoutOtherExpenseInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutOtherExpenseInput
    connect?: CandidateWhereUniqueInput
  }

  export type FamilyMemberCreateNestedOneWithoutOtherExpenseInput = {
    create?: XOR<FamilyMemberCreateWithoutOtherExpenseInput, FamilyMemberUncheckedCreateWithoutOtherExpenseInput>
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutOtherExpenseInput
    connect?: FamilyMemberWhereUniqueInput
  }

  export type LegalResponsibleCreateNestedOneWithoutOtherExpenseInput = {
    create?: XOR<LegalResponsibleCreateWithoutOtherExpenseInput, LegalResponsibleUncheckedCreateWithoutOtherExpenseInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutOtherExpenseInput
    connect?: LegalResponsibleWhereUniqueInput
  }

  export type CandidateUpdateOneWithoutOtherExpenseNestedInput = {
    create?: XOR<CandidateCreateWithoutOtherExpenseInput, CandidateUncheckedCreateWithoutOtherExpenseInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutOtherExpenseInput
    upsert?: CandidateUpsertWithoutOtherExpenseInput
    disconnect?: CandidateWhereInput | boolean
    delete?: CandidateWhereInput | boolean
    connect?: CandidateWhereUniqueInput
    update?: XOR<XOR<CandidateUpdateToOneWithWhereWithoutOtherExpenseInput, CandidateUpdateWithoutOtherExpenseInput>, CandidateUncheckedUpdateWithoutOtherExpenseInput>
  }

  export type FamilyMemberUpdateOneWithoutOtherExpenseNestedInput = {
    create?: XOR<FamilyMemberCreateWithoutOtherExpenseInput, FamilyMemberUncheckedCreateWithoutOtherExpenseInput>
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutOtherExpenseInput
    upsert?: FamilyMemberUpsertWithoutOtherExpenseInput
    disconnect?: FamilyMemberWhereInput | boolean
    delete?: FamilyMemberWhereInput | boolean
    connect?: FamilyMemberWhereUniqueInput
    update?: XOR<XOR<FamilyMemberUpdateToOneWithWhereWithoutOtherExpenseInput, FamilyMemberUpdateWithoutOtherExpenseInput>, FamilyMemberUncheckedUpdateWithoutOtherExpenseInput>
  }

  export type LegalResponsibleUpdateOneWithoutOtherExpenseNestedInput = {
    create?: XOR<LegalResponsibleCreateWithoutOtherExpenseInput, LegalResponsibleUncheckedCreateWithoutOtherExpenseInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutOtherExpenseInput
    upsert?: LegalResponsibleUpsertWithoutOtherExpenseInput
    disconnect?: LegalResponsibleWhereInput | boolean
    delete?: LegalResponsibleWhereInput | boolean
    connect?: LegalResponsibleWhereUniqueInput
    update?: XOR<XOR<LegalResponsibleUpdateToOneWithWhereWithoutOtherExpenseInput, LegalResponsibleUpdateWithoutOtherExpenseInput>, LegalResponsibleUncheckedUpdateWithoutOtherExpenseInput>
  }

  export type FamilyMemberDiseaseCreatediseasesInput = {
    set: $Enums.Disease[]
  }

  export type FamilyMemberCreateNestedOneWithoutFamilyMemberDiseaseInput = {
    create?: XOR<FamilyMemberCreateWithoutFamilyMemberDiseaseInput, FamilyMemberUncheckedCreateWithoutFamilyMemberDiseaseInput>
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutFamilyMemberDiseaseInput
    connect?: FamilyMemberWhereUniqueInput
  }

  export type CandidateCreateNestedOneWithoutFamilyMemberDiseaseInput = {
    create?: XOR<CandidateCreateWithoutFamilyMemberDiseaseInput, CandidateUncheckedCreateWithoutFamilyMemberDiseaseInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutFamilyMemberDiseaseInput
    connect?: CandidateWhereUniqueInput
  }

  export type LegalResponsibleCreateNestedOneWithoutFamilyMemberDiseaseInput = {
    create?: XOR<LegalResponsibleCreateWithoutFamilyMemberDiseaseInput, LegalResponsibleUncheckedCreateWithoutFamilyMemberDiseaseInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutFamilyMemberDiseaseInput
    connect?: LegalResponsibleWhereUniqueInput
  }

  export type MedicationCreateNestedManyWithoutFamilyMemberDiseaseInput = {
    create?: XOR<MedicationCreateWithoutFamilyMemberDiseaseInput, MedicationUncheckedCreateWithoutFamilyMemberDiseaseInput> | MedicationCreateWithoutFamilyMemberDiseaseInput[] | MedicationUncheckedCreateWithoutFamilyMemberDiseaseInput[]
    connectOrCreate?: MedicationCreateOrConnectWithoutFamilyMemberDiseaseInput | MedicationCreateOrConnectWithoutFamilyMemberDiseaseInput[]
    createMany?: MedicationCreateManyFamilyMemberDiseaseInputEnvelope
    connect?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
  }

  export type MedicationUncheckedCreateNestedManyWithoutFamilyMemberDiseaseInput = {
    create?: XOR<MedicationCreateWithoutFamilyMemberDiseaseInput, MedicationUncheckedCreateWithoutFamilyMemberDiseaseInput> | MedicationCreateWithoutFamilyMemberDiseaseInput[] | MedicationUncheckedCreateWithoutFamilyMemberDiseaseInput[]
    connectOrCreate?: MedicationCreateOrConnectWithoutFamilyMemberDiseaseInput | MedicationCreateOrConnectWithoutFamilyMemberDiseaseInput[]
    createMany?: MedicationCreateManyFamilyMemberDiseaseInputEnvelope
    connect?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
  }

  export type NullableEnumDiseaseFieldUpdateOperationsInput = {
    set?: $Enums.Disease | null
  }

  export type FamilyMemberDiseaseUpdatediseasesInput = {
    set?: $Enums.Disease[]
    push?: $Enums.Disease | $Enums.Disease[]
  }

  export type FamilyMemberUpdateOneWithoutFamilyMemberDiseaseNestedInput = {
    create?: XOR<FamilyMemberCreateWithoutFamilyMemberDiseaseInput, FamilyMemberUncheckedCreateWithoutFamilyMemberDiseaseInput>
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutFamilyMemberDiseaseInput
    upsert?: FamilyMemberUpsertWithoutFamilyMemberDiseaseInput
    disconnect?: FamilyMemberWhereInput | boolean
    delete?: FamilyMemberWhereInput | boolean
    connect?: FamilyMemberWhereUniqueInput
    update?: XOR<XOR<FamilyMemberUpdateToOneWithWhereWithoutFamilyMemberDiseaseInput, FamilyMemberUpdateWithoutFamilyMemberDiseaseInput>, FamilyMemberUncheckedUpdateWithoutFamilyMemberDiseaseInput>
  }

  export type CandidateUpdateOneWithoutFamilyMemberDiseaseNestedInput = {
    create?: XOR<CandidateCreateWithoutFamilyMemberDiseaseInput, CandidateUncheckedCreateWithoutFamilyMemberDiseaseInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutFamilyMemberDiseaseInput
    upsert?: CandidateUpsertWithoutFamilyMemberDiseaseInput
    disconnect?: CandidateWhereInput | boolean
    delete?: CandidateWhereInput | boolean
    connect?: CandidateWhereUniqueInput
    update?: XOR<XOR<CandidateUpdateToOneWithWhereWithoutFamilyMemberDiseaseInput, CandidateUpdateWithoutFamilyMemberDiseaseInput>, CandidateUncheckedUpdateWithoutFamilyMemberDiseaseInput>
  }

  export type LegalResponsibleUpdateOneWithoutFamilyMemberDiseaseNestedInput = {
    create?: XOR<LegalResponsibleCreateWithoutFamilyMemberDiseaseInput, LegalResponsibleUncheckedCreateWithoutFamilyMemberDiseaseInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutFamilyMemberDiseaseInput
    upsert?: LegalResponsibleUpsertWithoutFamilyMemberDiseaseInput
    disconnect?: LegalResponsibleWhereInput | boolean
    delete?: LegalResponsibleWhereInput | boolean
    connect?: LegalResponsibleWhereUniqueInput
    update?: XOR<XOR<LegalResponsibleUpdateToOneWithWhereWithoutFamilyMemberDiseaseInput, LegalResponsibleUpdateWithoutFamilyMemberDiseaseInput>, LegalResponsibleUncheckedUpdateWithoutFamilyMemberDiseaseInput>
  }

  export type MedicationUpdateManyWithoutFamilyMemberDiseaseNestedInput = {
    create?: XOR<MedicationCreateWithoutFamilyMemberDiseaseInput, MedicationUncheckedCreateWithoutFamilyMemberDiseaseInput> | MedicationCreateWithoutFamilyMemberDiseaseInput[] | MedicationUncheckedCreateWithoutFamilyMemberDiseaseInput[]
    connectOrCreate?: MedicationCreateOrConnectWithoutFamilyMemberDiseaseInput | MedicationCreateOrConnectWithoutFamilyMemberDiseaseInput[]
    upsert?: MedicationUpsertWithWhereUniqueWithoutFamilyMemberDiseaseInput | MedicationUpsertWithWhereUniqueWithoutFamilyMemberDiseaseInput[]
    createMany?: MedicationCreateManyFamilyMemberDiseaseInputEnvelope
    set?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    disconnect?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    delete?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    connect?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    update?: MedicationUpdateWithWhereUniqueWithoutFamilyMemberDiseaseInput | MedicationUpdateWithWhereUniqueWithoutFamilyMemberDiseaseInput[]
    updateMany?: MedicationUpdateManyWithWhereWithoutFamilyMemberDiseaseInput | MedicationUpdateManyWithWhereWithoutFamilyMemberDiseaseInput[]
    deleteMany?: MedicationScalarWhereInput | MedicationScalarWhereInput[]
  }

  export type MedicationUncheckedUpdateManyWithoutFamilyMemberDiseaseNestedInput = {
    create?: XOR<MedicationCreateWithoutFamilyMemberDiseaseInput, MedicationUncheckedCreateWithoutFamilyMemberDiseaseInput> | MedicationCreateWithoutFamilyMemberDiseaseInput[] | MedicationUncheckedCreateWithoutFamilyMemberDiseaseInput[]
    connectOrCreate?: MedicationCreateOrConnectWithoutFamilyMemberDiseaseInput | MedicationCreateOrConnectWithoutFamilyMemberDiseaseInput[]
    upsert?: MedicationUpsertWithWhereUniqueWithoutFamilyMemberDiseaseInput | MedicationUpsertWithWhereUniqueWithoutFamilyMemberDiseaseInput[]
    createMany?: MedicationCreateManyFamilyMemberDiseaseInputEnvelope
    set?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    disconnect?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    delete?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    connect?: MedicationWhereUniqueInput | MedicationWhereUniqueInput[]
    update?: MedicationUpdateWithWhereUniqueWithoutFamilyMemberDiseaseInput | MedicationUpdateWithWhereUniqueWithoutFamilyMemberDiseaseInput[]
    updateMany?: MedicationUpdateManyWithWhereWithoutFamilyMemberDiseaseInput | MedicationUpdateManyWithWhereWithoutFamilyMemberDiseaseInput[]
    deleteMany?: MedicationScalarWhereInput | MedicationScalarWhereInput[]
  }

  export type FamilyMemberCreateNestedOneWithoutMedicationInput = {
    create?: XOR<FamilyMemberCreateWithoutMedicationInput, FamilyMemberUncheckedCreateWithoutMedicationInput>
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutMedicationInput
    connect?: FamilyMemberWhereUniqueInput
  }

  export type CandidateCreateNestedOneWithoutMedicationInput = {
    create?: XOR<CandidateCreateWithoutMedicationInput, CandidateUncheckedCreateWithoutMedicationInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutMedicationInput
    connect?: CandidateWhereUniqueInput
  }

  export type LegalResponsibleCreateNestedOneWithoutMedicationInput = {
    create?: XOR<LegalResponsibleCreateWithoutMedicationInput, LegalResponsibleUncheckedCreateWithoutMedicationInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutMedicationInput
    connect?: LegalResponsibleWhereUniqueInput
  }

  export type FamilyMemberDiseaseCreateNestedOneWithoutMedicationInput = {
    create?: XOR<FamilyMemberDiseaseCreateWithoutMedicationInput, FamilyMemberDiseaseUncheckedCreateWithoutMedicationInput>
    connectOrCreate?: FamilyMemberDiseaseCreateOrConnectWithoutMedicationInput
    connect?: FamilyMemberDiseaseWhereUniqueInput
  }

  export type FamilyMemberUpdateOneWithoutMedicationNestedInput = {
    create?: XOR<FamilyMemberCreateWithoutMedicationInput, FamilyMemberUncheckedCreateWithoutMedicationInput>
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutMedicationInput
    upsert?: FamilyMemberUpsertWithoutMedicationInput
    disconnect?: FamilyMemberWhereInput | boolean
    delete?: FamilyMemberWhereInput | boolean
    connect?: FamilyMemberWhereUniqueInput
    update?: XOR<XOR<FamilyMemberUpdateToOneWithWhereWithoutMedicationInput, FamilyMemberUpdateWithoutMedicationInput>, FamilyMemberUncheckedUpdateWithoutMedicationInput>
  }

  export type CandidateUpdateOneWithoutMedicationNestedInput = {
    create?: XOR<CandidateCreateWithoutMedicationInput, CandidateUncheckedCreateWithoutMedicationInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutMedicationInput
    upsert?: CandidateUpsertWithoutMedicationInput
    disconnect?: CandidateWhereInput | boolean
    delete?: CandidateWhereInput | boolean
    connect?: CandidateWhereUniqueInput
    update?: XOR<XOR<CandidateUpdateToOneWithWhereWithoutMedicationInput, CandidateUpdateWithoutMedicationInput>, CandidateUncheckedUpdateWithoutMedicationInput>
  }

  export type LegalResponsibleUpdateOneWithoutMedicationNestedInput = {
    create?: XOR<LegalResponsibleCreateWithoutMedicationInput, LegalResponsibleUncheckedCreateWithoutMedicationInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutMedicationInput
    upsert?: LegalResponsibleUpsertWithoutMedicationInput
    disconnect?: LegalResponsibleWhereInput | boolean
    delete?: LegalResponsibleWhereInput | boolean
    connect?: LegalResponsibleWhereUniqueInput
    update?: XOR<XOR<LegalResponsibleUpdateToOneWithWhereWithoutMedicationInput, LegalResponsibleUpdateWithoutMedicationInput>, LegalResponsibleUncheckedUpdateWithoutMedicationInput>
  }

  export type FamilyMemberDiseaseUpdateOneWithoutMedicationNestedInput = {
    create?: XOR<FamilyMemberDiseaseCreateWithoutMedicationInput, FamilyMemberDiseaseUncheckedCreateWithoutMedicationInput>
    connectOrCreate?: FamilyMemberDiseaseCreateOrConnectWithoutMedicationInput
    upsert?: FamilyMemberDiseaseUpsertWithoutMedicationInput
    disconnect?: FamilyMemberDiseaseWhereInput | boolean
    delete?: FamilyMemberDiseaseWhereInput | boolean
    connect?: FamilyMemberDiseaseWhereUniqueInput
    update?: XOR<XOR<FamilyMemberDiseaseUpdateToOneWithWhereWithoutMedicationInput, FamilyMemberDiseaseUpdateWithoutMedicationInput>, FamilyMemberDiseaseUncheckedUpdateWithoutMedicationInput>
  }

  export type CandidateCreateNestedOneWithoutDeclarationsInput = {
    create?: XOR<CandidateCreateWithoutDeclarationsInput, CandidateUncheckedCreateWithoutDeclarationsInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutDeclarationsInput
    connect?: CandidateWhereUniqueInput
  }

  export type FamilyMemberCreateNestedOneWithoutDeclarationsInput = {
    create?: XOR<FamilyMemberCreateWithoutDeclarationsInput, FamilyMemberUncheckedCreateWithoutDeclarationsInput>
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutDeclarationsInput
    connect?: FamilyMemberWhereUniqueInput
  }

  export type LegalResponsibleCreateNestedOneWithoutDeclarationsInput = {
    create?: XOR<LegalResponsibleCreateWithoutDeclarationsInput, LegalResponsibleUncheckedCreateWithoutDeclarationsInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutDeclarationsInput
    connect?: LegalResponsibleWhereUniqueInput
  }

  export type EnumDeclaration_TypeFieldUpdateOperationsInput = {
    set?: $Enums.Declaration_Type
  }

  export type CandidateUpdateOneWithoutDeclarationsNestedInput = {
    create?: XOR<CandidateCreateWithoutDeclarationsInput, CandidateUncheckedCreateWithoutDeclarationsInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutDeclarationsInput
    upsert?: CandidateUpsertWithoutDeclarationsInput
    disconnect?: CandidateWhereInput | boolean
    delete?: CandidateWhereInput | boolean
    connect?: CandidateWhereUniqueInput
    update?: XOR<XOR<CandidateUpdateToOneWithWhereWithoutDeclarationsInput, CandidateUpdateWithoutDeclarationsInput>, CandidateUncheckedUpdateWithoutDeclarationsInput>
  }

  export type FamilyMemberUpdateOneWithoutDeclarationsNestedInput = {
    create?: XOR<FamilyMemberCreateWithoutDeclarationsInput, FamilyMemberUncheckedCreateWithoutDeclarationsInput>
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutDeclarationsInput
    upsert?: FamilyMemberUpsertWithoutDeclarationsInput
    disconnect?: FamilyMemberWhereInput | boolean
    delete?: FamilyMemberWhereInput | boolean
    connect?: FamilyMemberWhereUniqueInput
    update?: XOR<XOR<FamilyMemberUpdateToOneWithWhereWithoutDeclarationsInput, FamilyMemberUpdateWithoutDeclarationsInput>, FamilyMemberUncheckedUpdateWithoutDeclarationsInput>
  }

  export type LegalResponsibleUpdateOneWithoutDeclarationsNestedInput = {
    create?: XOR<LegalResponsibleCreateWithoutDeclarationsInput, LegalResponsibleUncheckedCreateWithoutDeclarationsInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutDeclarationsInput
    upsert?: LegalResponsibleUpsertWithoutDeclarationsInput
    disconnect?: LegalResponsibleWhereInput | boolean
    delete?: LegalResponsibleWhereInput | boolean
    connect?: LegalResponsibleWhereUniqueInput
    update?: XOR<XOR<LegalResponsibleUpdateToOneWithWhereWithoutDeclarationsInput, LegalResponsibleUpdateWithoutDeclarationsInput>, LegalResponsibleUncheckedUpdateWithoutDeclarationsInput>
  }

  export type AnnouncementCreateNestedOneWithoutInterviewInput = {
    create?: XOR<AnnouncementCreateWithoutInterviewInput, AnnouncementUncheckedCreateWithoutInterviewInput>
    connectOrCreate?: AnnouncementCreateOrConnectWithoutInterviewInput
    connect?: AnnouncementWhereUniqueInput
  }

  export type AnnouncementUpdateOneRequiredWithoutInterviewNestedInput = {
    create?: XOR<AnnouncementCreateWithoutInterviewInput, AnnouncementUncheckedCreateWithoutInterviewInput>
    connectOrCreate?: AnnouncementCreateOrConnectWithoutInterviewInput
    upsert?: AnnouncementUpsertWithoutInterviewInput
    connect?: AnnouncementWhereUniqueInput
    update?: XOR<XOR<AnnouncementUpdateToOneWithWhereWithoutInterviewInput, AnnouncementUpdateWithoutInterviewInput>, AnnouncementUncheckedUpdateWithoutInterviewInput>
  }

  export type AnnouncementCreatecriteriaInput = {
    set: $Enums.TiebreakerCriterias[]
  }

  export type AnnouncementCreatetypes1Input = {
    set: $Enums.scholarshipGrantedType[]
  }

  export type AnnouncementInterviewCreateNestedOneWithoutAnnouncementInput = {
    create?: XOR<AnnouncementInterviewCreateWithoutAnnouncementInput, AnnouncementInterviewUncheckedCreateWithoutAnnouncementInput>
    connectOrCreate?: AnnouncementInterviewCreateOrConnectWithoutAnnouncementInput
    connect?: AnnouncementInterviewWhereUniqueInput
  }

  export type EntityCreateNestedOneWithoutAnnouncementInput = {
    create?: XOR<EntityCreateWithoutAnnouncementInput, EntityUncheckedCreateWithoutAnnouncementInput>
    connectOrCreate?: EntityCreateOrConnectWithoutAnnouncementInput
    connect?: EntityWhereUniqueInput
  }

  export type EntitySubsidiaryCreateNestedManyWithoutAnnouncementInput = {
    create?: XOR<EntitySubsidiaryCreateWithoutAnnouncementInput, EntitySubsidiaryUncheckedCreateWithoutAnnouncementInput> | EntitySubsidiaryCreateWithoutAnnouncementInput[] | EntitySubsidiaryUncheckedCreateWithoutAnnouncementInput[]
    connectOrCreate?: EntitySubsidiaryCreateOrConnectWithoutAnnouncementInput | EntitySubsidiaryCreateOrConnectWithoutAnnouncementInput[]
    connect?: EntitySubsidiaryWhereUniqueInput | EntitySubsidiaryWhereUniqueInput[]
  }

  export type ApplicationCreateNestedManyWithoutAnnouncementInput = {
    create?: XOR<ApplicationCreateWithoutAnnouncementInput, ApplicationUncheckedCreateWithoutAnnouncementInput> | ApplicationCreateWithoutAnnouncementInput[] | ApplicationUncheckedCreateWithoutAnnouncementInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutAnnouncementInput | ApplicationCreateOrConnectWithoutAnnouncementInput[]
    createMany?: ApplicationCreateManyAnnouncementInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type EducationLevelCreateNestedManyWithoutAnnouncementInput = {
    create?: XOR<EducationLevelCreateWithoutAnnouncementInput, EducationLevelUncheckedCreateWithoutAnnouncementInput> | EducationLevelCreateWithoutAnnouncementInput[] | EducationLevelUncheckedCreateWithoutAnnouncementInput[]
    connectOrCreate?: EducationLevelCreateOrConnectWithoutAnnouncementInput | EducationLevelCreateOrConnectWithoutAnnouncementInput[]
    createMany?: EducationLevelCreateManyAnnouncementInputEnvelope
    connect?: EducationLevelWhereUniqueInput | EducationLevelWhereUniqueInput[]
  }

  export type ScholarshipGrantedCreateNestedManyWithoutAnnounmententInput = {
    create?: XOR<ScholarshipGrantedCreateWithoutAnnounmententInput, ScholarshipGrantedUncheckedCreateWithoutAnnounmententInput> | ScholarshipGrantedCreateWithoutAnnounmententInput[] | ScholarshipGrantedUncheckedCreateWithoutAnnounmententInput[]
    connectOrCreate?: ScholarshipGrantedCreateOrConnectWithoutAnnounmententInput | ScholarshipGrantedCreateOrConnectWithoutAnnounmententInput[]
    createMany?: ScholarshipGrantedCreateManyAnnounmententInputEnvelope
    connect?: ScholarshipGrantedWhereUniqueInput | ScholarshipGrantedWhereUniqueInput[]
  }

  export type TimelineCreateNestedManyWithoutAnnouncementInput = {
    create?: XOR<TimelineCreateWithoutAnnouncementInput, TimelineUncheckedCreateWithoutAnnouncementInput> | TimelineCreateWithoutAnnouncementInput[] | TimelineUncheckedCreateWithoutAnnouncementInput[]
    connectOrCreate?: TimelineCreateOrConnectWithoutAnnouncementInput | TimelineCreateOrConnectWithoutAnnouncementInput[]
    createMany?: TimelineCreateManyAnnouncementInputEnvelope
    connect?: TimelineWhereUniqueInput | TimelineWhereUniqueInput[]
  }

  export type SocialAssistantCreateNestedManyWithoutAnnouncementInput = {
    create?: XOR<SocialAssistantCreateWithoutAnnouncementInput, SocialAssistantUncheckedCreateWithoutAnnouncementInput> | SocialAssistantCreateWithoutAnnouncementInput[] | SocialAssistantUncheckedCreateWithoutAnnouncementInput[]
    connectOrCreate?: SocialAssistantCreateOrConnectWithoutAnnouncementInput | SocialAssistantCreateOrConnectWithoutAnnouncementInput[]
    connect?: SocialAssistantWhereUniqueInput | SocialAssistantWhereUniqueInput[]
  }

  export type AnnouncementInterviewUncheckedCreateNestedOneWithoutAnnouncementInput = {
    create?: XOR<AnnouncementInterviewCreateWithoutAnnouncementInput, AnnouncementInterviewUncheckedCreateWithoutAnnouncementInput>
    connectOrCreate?: AnnouncementInterviewCreateOrConnectWithoutAnnouncementInput
    connect?: AnnouncementInterviewWhereUniqueInput
  }

  export type EntitySubsidiaryUncheckedCreateNestedManyWithoutAnnouncementInput = {
    create?: XOR<EntitySubsidiaryCreateWithoutAnnouncementInput, EntitySubsidiaryUncheckedCreateWithoutAnnouncementInput> | EntitySubsidiaryCreateWithoutAnnouncementInput[] | EntitySubsidiaryUncheckedCreateWithoutAnnouncementInput[]
    connectOrCreate?: EntitySubsidiaryCreateOrConnectWithoutAnnouncementInput | EntitySubsidiaryCreateOrConnectWithoutAnnouncementInput[]
    connect?: EntitySubsidiaryWhereUniqueInput | EntitySubsidiaryWhereUniqueInput[]
  }

  export type ApplicationUncheckedCreateNestedManyWithoutAnnouncementInput = {
    create?: XOR<ApplicationCreateWithoutAnnouncementInput, ApplicationUncheckedCreateWithoutAnnouncementInput> | ApplicationCreateWithoutAnnouncementInput[] | ApplicationUncheckedCreateWithoutAnnouncementInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutAnnouncementInput | ApplicationCreateOrConnectWithoutAnnouncementInput[]
    createMany?: ApplicationCreateManyAnnouncementInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type EducationLevelUncheckedCreateNestedManyWithoutAnnouncementInput = {
    create?: XOR<EducationLevelCreateWithoutAnnouncementInput, EducationLevelUncheckedCreateWithoutAnnouncementInput> | EducationLevelCreateWithoutAnnouncementInput[] | EducationLevelUncheckedCreateWithoutAnnouncementInput[]
    connectOrCreate?: EducationLevelCreateOrConnectWithoutAnnouncementInput | EducationLevelCreateOrConnectWithoutAnnouncementInput[]
    createMany?: EducationLevelCreateManyAnnouncementInputEnvelope
    connect?: EducationLevelWhereUniqueInput | EducationLevelWhereUniqueInput[]
  }

  export type ScholarshipGrantedUncheckedCreateNestedManyWithoutAnnounmententInput = {
    create?: XOR<ScholarshipGrantedCreateWithoutAnnounmententInput, ScholarshipGrantedUncheckedCreateWithoutAnnounmententInput> | ScholarshipGrantedCreateWithoutAnnounmententInput[] | ScholarshipGrantedUncheckedCreateWithoutAnnounmententInput[]
    connectOrCreate?: ScholarshipGrantedCreateOrConnectWithoutAnnounmententInput | ScholarshipGrantedCreateOrConnectWithoutAnnounmententInput[]
    createMany?: ScholarshipGrantedCreateManyAnnounmententInputEnvelope
    connect?: ScholarshipGrantedWhereUniqueInput | ScholarshipGrantedWhereUniqueInput[]
  }

  export type TimelineUncheckedCreateNestedManyWithoutAnnouncementInput = {
    create?: XOR<TimelineCreateWithoutAnnouncementInput, TimelineUncheckedCreateWithoutAnnouncementInput> | TimelineCreateWithoutAnnouncementInput[] | TimelineUncheckedCreateWithoutAnnouncementInput[]
    connectOrCreate?: TimelineCreateOrConnectWithoutAnnouncementInput | TimelineCreateOrConnectWithoutAnnouncementInput[]
    createMany?: TimelineCreateManyAnnouncementInputEnvelope
    connect?: TimelineWhereUniqueInput | TimelineWhereUniqueInput[]
  }

  export type SocialAssistantUncheckedCreateNestedManyWithoutAnnouncementInput = {
    create?: XOR<SocialAssistantCreateWithoutAnnouncementInput, SocialAssistantUncheckedCreateWithoutAnnouncementInput> | SocialAssistantCreateWithoutAnnouncementInput[] | SocialAssistantUncheckedCreateWithoutAnnouncementInput[]
    connectOrCreate?: SocialAssistantCreateOrConnectWithoutAnnouncementInput | SocialAssistantCreateOrConnectWithoutAnnouncementInput[]
    connect?: SocialAssistantWhereUniqueInput | SocialAssistantWhereUniqueInput[]
  }

  export type EnumAnnouncementTypeFieldUpdateOperationsInput = {
    set?: $Enums.AnnouncementType
  }

  export type AnnouncementUpdatecriteriaInput = {
    set?: $Enums.TiebreakerCriterias[]
    push?: $Enums.TiebreakerCriterias | $Enums.TiebreakerCriterias[]
  }

  export type AnnouncementUpdatetypes1Input = {
    set?: $Enums.scholarshipGrantedType[]
    push?: $Enums.scholarshipGrantedType | $Enums.scholarshipGrantedType[]
  }

  export type AnnouncementInterviewUpdateOneWithoutAnnouncementNestedInput = {
    create?: XOR<AnnouncementInterviewCreateWithoutAnnouncementInput, AnnouncementInterviewUncheckedCreateWithoutAnnouncementInput>
    connectOrCreate?: AnnouncementInterviewCreateOrConnectWithoutAnnouncementInput
    upsert?: AnnouncementInterviewUpsertWithoutAnnouncementInput
    disconnect?: AnnouncementInterviewWhereInput | boolean
    delete?: AnnouncementInterviewWhereInput | boolean
    connect?: AnnouncementInterviewWhereUniqueInput
    update?: XOR<XOR<AnnouncementInterviewUpdateToOneWithWhereWithoutAnnouncementInput, AnnouncementInterviewUpdateWithoutAnnouncementInput>, AnnouncementInterviewUncheckedUpdateWithoutAnnouncementInput>
  }

  export type EntityUpdateOneRequiredWithoutAnnouncementNestedInput = {
    create?: XOR<EntityCreateWithoutAnnouncementInput, EntityUncheckedCreateWithoutAnnouncementInput>
    connectOrCreate?: EntityCreateOrConnectWithoutAnnouncementInput
    upsert?: EntityUpsertWithoutAnnouncementInput
    connect?: EntityWhereUniqueInput
    update?: XOR<XOR<EntityUpdateToOneWithWhereWithoutAnnouncementInput, EntityUpdateWithoutAnnouncementInput>, EntityUncheckedUpdateWithoutAnnouncementInput>
  }

  export type EntitySubsidiaryUpdateManyWithoutAnnouncementNestedInput = {
    create?: XOR<EntitySubsidiaryCreateWithoutAnnouncementInput, EntitySubsidiaryUncheckedCreateWithoutAnnouncementInput> | EntitySubsidiaryCreateWithoutAnnouncementInput[] | EntitySubsidiaryUncheckedCreateWithoutAnnouncementInput[]
    connectOrCreate?: EntitySubsidiaryCreateOrConnectWithoutAnnouncementInput | EntitySubsidiaryCreateOrConnectWithoutAnnouncementInput[]
    upsert?: EntitySubsidiaryUpsertWithWhereUniqueWithoutAnnouncementInput | EntitySubsidiaryUpsertWithWhereUniqueWithoutAnnouncementInput[]
    set?: EntitySubsidiaryWhereUniqueInput | EntitySubsidiaryWhereUniqueInput[]
    disconnect?: EntitySubsidiaryWhereUniqueInput | EntitySubsidiaryWhereUniqueInput[]
    delete?: EntitySubsidiaryWhereUniqueInput | EntitySubsidiaryWhereUniqueInput[]
    connect?: EntitySubsidiaryWhereUniqueInput | EntitySubsidiaryWhereUniqueInput[]
    update?: EntitySubsidiaryUpdateWithWhereUniqueWithoutAnnouncementInput | EntitySubsidiaryUpdateWithWhereUniqueWithoutAnnouncementInput[]
    updateMany?: EntitySubsidiaryUpdateManyWithWhereWithoutAnnouncementInput | EntitySubsidiaryUpdateManyWithWhereWithoutAnnouncementInput[]
    deleteMany?: EntitySubsidiaryScalarWhereInput | EntitySubsidiaryScalarWhereInput[]
  }

  export type ApplicationUpdateManyWithoutAnnouncementNestedInput = {
    create?: XOR<ApplicationCreateWithoutAnnouncementInput, ApplicationUncheckedCreateWithoutAnnouncementInput> | ApplicationCreateWithoutAnnouncementInput[] | ApplicationUncheckedCreateWithoutAnnouncementInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutAnnouncementInput | ApplicationCreateOrConnectWithoutAnnouncementInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutAnnouncementInput | ApplicationUpsertWithWhereUniqueWithoutAnnouncementInput[]
    createMany?: ApplicationCreateManyAnnouncementInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutAnnouncementInput | ApplicationUpdateWithWhereUniqueWithoutAnnouncementInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutAnnouncementInput | ApplicationUpdateManyWithWhereWithoutAnnouncementInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type EducationLevelUpdateManyWithoutAnnouncementNestedInput = {
    create?: XOR<EducationLevelCreateWithoutAnnouncementInput, EducationLevelUncheckedCreateWithoutAnnouncementInput> | EducationLevelCreateWithoutAnnouncementInput[] | EducationLevelUncheckedCreateWithoutAnnouncementInput[]
    connectOrCreate?: EducationLevelCreateOrConnectWithoutAnnouncementInput | EducationLevelCreateOrConnectWithoutAnnouncementInput[]
    upsert?: EducationLevelUpsertWithWhereUniqueWithoutAnnouncementInput | EducationLevelUpsertWithWhereUniqueWithoutAnnouncementInput[]
    createMany?: EducationLevelCreateManyAnnouncementInputEnvelope
    set?: EducationLevelWhereUniqueInput | EducationLevelWhereUniqueInput[]
    disconnect?: EducationLevelWhereUniqueInput | EducationLevelWhereUniqueInput[]
    delete?: EducationLevelWhereUniqueInput | EducationLevelWhereUniqueInput[]
    connect?: EducationLevelWhereUniqueInput | EducationLevelWhereUniqueInput[]
    update?: EducationLevelUpdateWithWhereUniqueWithoutAnnouncementInput | EducationLevelUpdateWithWhereUniqueWithoutAnnouncementInput[]
    updateMany?: EducationLevelUpdateManyWithWhereWithoutAnnouncementInput | EducationLevelUpdateManyWithWhereWithoutAnnouncementInput[]
    deleteMany?: EducationLevelScalarWhereInput | EducationLevelScalarWhereInput[]
  }

  export type ScholarshipGrantedUpdateManyWithoutAnnounmententNestedInput = {
    create?: XOR<ScholarshipGrantedCreateWithoutAnnounmententInput, ScholarshipGrantedUncheckedCreateWithoutAnnounmententInput> | ScholarshipGrantedCreateWithoutAnnounmententInput[] | ScholarshipGrantedUncheckedCreateWithoutAnnounmententInput[]
    connectOrCreate?: ScholarshipGrantedCreateOrConnectWithoutAnnounmententInput | ScholarshipGrantedCreateOrConnectWithoutAnnounmententInput[]
    upsert?: ScholarshipGrantedUpsertWithWhereUniqueWithoutAnnounmententInput | ScholarshipGrantedUpsertWithWhereUniqueWithoutAnnounmententInput[]
    createMany?: ScholarshipGrantedCreateManyAnnounmententInputEnvelope
    set?: ScholarshipGrantedWhereUniqueInput | ScholarshipGrantedWhereUniqueInput[]
    disconnect?: ScholarshipGrantedWhereUniqueInput | ScholarshipGrantedWhereUniqueInput[]
    delete?: ScholarshipGrantedWhereUniqueInput | ScholarshipGrantedWhereUniqueInput[]
    connect?: ScholarshipGrantedWhereUniqueInput | ScholarshipGrantedWhereUniqueInput[]
    update?: ScholarshipGrantedUpdateWithWhereUniqueWithoutAnnounmententInput | ScholarshipGrantedUpdateWithWhereUniqueWithoutAnnounmententInput[]
    updateMany?: ScholarshipGrantedUpdateManyWithWhereWithoutAnnounmententInput | ScholarshipGrantedUpdateManyWithWhereWithoutAnnounmententInput[]
    deleteMany?: ScholarshipGrantedScalarWhereInput | ScholarshipGrantedScalarWhereInput[]
  }

  export type TimelineUpdateManyWithoutAnnouncementNestedInput = {
    create?: XOR<TimelineCreateWithoutAnnouncementInput, TimelineUncheckedCreateWithoutAnnouncementInput> | TimelineCreateWithoutAnnouncementInput[] | TimelineUncheckedCreateWithoutAnnouncementInput[]
    connectOrCreate?: TimelineCreateOrConnectWithoutAnnouncementInput | TimelineCreateOrConnectWithoutAnnouncementInput[]
    upsert?: TimelineUpsertWithWhereUniqueWithoutAnnouncementInput | TimelineUpsertWithWhereUniqueWithoutAnnouncementInput[]
    createMany?: TimelineCreateManyAnnouncementInputEnvelope
    set?: TimelineWhereUniqueInput | TimelineWhereUniqueInput[]
    disconnect?: TimelineWhereUniqueInput | TimelineWhereUniqueInput[]
    delete?: TimelineWhereUniqueInput | TimelineWhereUniqueInput[]
    connect?: TimelineWhereUniqueInput | TimelineWhereUniqueInput[]
    update?: TimelineUpdateWithWhereUniqueWithoutAnnouncementInput | TimelineUpdateWithWhereUniqueWithoutAnnouncementInput[]
    updateMany?: TimelineUpdateManyWithWhereWithoutAnnouncementInput | TimelineUpdateManyWithWhereWithoutAnnouncementInput[]
    deleteMany?: TimelineScalarWhereInput | TimelineScalarWhereInput[]
  }

  export type SocialAssistantUpdateManyWithoutAnnouncementNestedInput = {
    create?: XOR<SocialAssistantCreateWithoutAnnouncementInput, SocialAssistantUncheckedCreateWithoutAnnouncementInput> | SocialAssistantCreateWithoutAnnouncementInput[] | SocialAssistantUncheckedCreateWithoutAnnouncementInput[]
    connectOrCreate?: SocialAssistantCreateOrConnectWithoutAnnouncementInput | SocialAssistantCreateOrConnectWithoutAnnouncementInput[]
    upsert?: SocialAssistantUpsertWithWhereUniqueWithoutAnnouncementInput | SocialAssistantUpsertWithWhereUniqueWithoutAnnouncementInput[]
    set?: SocialAssistantWhereUniqueInput | SocialAssistantWhereUniqueInput[]
    disconnect?: SocialAssistantWhereUniqueInput | SocialAssistantWhereUniqueInput[]
    delete?: SocialAssistantWhereUniqueInput | SocialAssistantWhereUniqueInput[]
    connect?: SocialAssistantWhereUniqueInput | SocialAssistantWhereUniqueInput[]
    update?: SocialAssistantUpdateWithWhereUniqueWithoutAnnouncementInput | SocialAssistantUpdateWithWhereUniqueWithoutAnnouncementInput[]
    updateMany?: SocialAssistantUpdateManyWithWhereWithoutAnnouncementInput | SocialAssistantUpdateManyWithWhereWithoutAnnouncementInput[]
    deleteMany?: SocialAssistantScalarWhereInput | SocialAssistantScalarWhereInput[]
  }

  export type AnnouncementInterviewUncheckedUpdateOneWithoutAnnouncementNestedInput = {
    create?: XOR<AnnouncementInterviewCreateWithoutAnnouncementInput, AnnouncementInterviewUncheckedCreateWithoutAnnouncementInput>
    connectOrCreate?: AnnouncementInterviewCreateOrConnectWithoutAnnouncementInput
    upsert?: AnnouncementInterviewUpsertWithoutAnnouncementInput
    disconnect?: AnnouncementInterviewWhereInput | boolean
    delete?: AnnouncementInterviewWhereInput | boolean
    connect?: AnnouncementInterviewWhereUniqueInput
    update?: XOR<XOR<AnnouncementInterviewUpdateToOneWithWhereWithoutAnnouncementInput, AnnouncementInterviewUpdateWithoutAnnouncementInput>, AnnouncementInterviewUncheckedUpdateWithoutAnnouncementInput>
  }

  export type EntitySubsidiaryUncheckedUpdateManyWithoutAnnouncementNestedInput = {
    create?: XOR<EntitySubsidiaryCreateWithoutAnnouncementInput, EntitySubsidiaryUncheckedCreateWithoutAnnouncementInput> | EntitySubsidiaryCreateWithoutAnnouncementInput[] | EntitySubsidiaryUncheckedCreateWithoutAnnouncementInput[]
    connectOrCreate?: EntitySubsidiaryCreateOrConnectWithoutAnnouncementInput | EntitySubsidiaryCreateOrConnectWithoutAnnouncementInput[]
    upsert?: EntitySubsidiaryUpsertWithWhereUniqueWithoutAnnouncementInput | EntitySubsidiaryUpsertWithWhereUniqueWithoutAnnouncementInput[]
    set?: EntitySubsidiaryWhereUniqueInput | EntitySubsidiaryWhereUniqueInput[]
    disconnect?: EntitySubsidiaryWhereUniqueInput | EntitySubsidiaryWhereUniqueInput[]
    delete?: EntitySubsidiaryWhereUniqueInput | EntitySubsidiaryWhereUniqueInput[]
    connect?: EntitySubsidiaryWhereUniqueInput | EntitySubsidiaryWhereUniqueInput[]
    update?: EntitySubsidiaryUpdateWithWhereUniqueWithoutAnnouncementInput | EntitySubsidiaryUpdateWithWhereUniqueWithoutAnnouncementInput[]
    updateMany?: EntitySubsidiaryUpdateManyWithWhereWithoutAnnouncementInput | EntitySubsidiaryUpdateManyWithWhereWithoutAnnouncementInput[]
    deleteMany?: EntitySubsidiaryScalarWhereInput | EntitySubsidiaryScalarWhereInput[]
  }

  export type ApplicationUncheckedUpdateManyWithoutAnnouncementNestedInput = {
    create?: XOR<ApplicationCreateWithoutAnnouncementInput, ApplicationUncheckedCreateWithoutAnnouncementInput> | ApplicationCreateWithoutAnnouncementInput[] | ApplicationUncheckedCreateWithoutAnnouncementInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutAnnouncementInput | ApplicationCreateOrConnectWithoutAnnouncementInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutAnnouncementInput | ApplicationUpsertWithWhereUniqueWithoutAnnouncementInput[]
    createMany?: ApplicationCreateManyAnnouncementInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutAnnouncementInput | ApplicationUpdateWithWhereUniqueWithoutAnnouncementInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutAnnouncementInput | ApplicationUpdateManyWithWhereWithoutAnnouncementInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type EducationLevelUncheckedUpdateManyWithoutAnnouncementNestedInput = {
    create?: XOR<EducationLevelCreateWithoutAnnouncementInput, EducationLevelUncheckedCreateWithoutAnnouncementInput> | EducationLevelCreateWithoutAnnouncementInput[] | EducationLevelUncheckedCreateWithoutAnnouncementInput[]
    connectOrCreate?: EducationLevelCreateOrConnectWithoutAnnouncementInput | EducationLevelCreateOrConnectWithoutAnnouncementInput[]
    upsert?: EducationLevelUpsertWithWhereUniqueWithoutAnnouncementInput | EducationLevelUpsertWithWhereUniqueWithoutAnnouncementInput[]
    createMany?: EducationLevelCreateManyAnnouncementInputEnvelope
    set?: EducationLevelWhereUniqueInput | EducationLevelWhereUniqueInput[]
    disconnect?: EducationLevelWhereUniqueInput | EducationLevelWhereUniqueInput[]
    delete?: EducationLevelWhereUniqueInput | EducationLevelWhereUniqueInput[]
    connect?: EducationLevelWhereUniqueInput | EducationLevelWhereUniqueInput[]
    update?: EducationLevelUpdateWithWhereUniqueWithoutAnnouncementInput | EducationLevelUpdateWithWhereUniqueWithoutAnnouncementInput[]
    updateMany?: EducationLevelUpdateManyWithWhereWithoutAnnouncementInput | EducationLevelUpdateManyWithWhereWithoutAnnouncementInput[]
    deleteMany?: EducationLevelScalarWhereInput | EducationLevelScalarWhereInput[]
  }

  export type ScholarshipGrantedUncheckedUpdateManyWithoutAnnounmententNestedInput = {
    create?: XOR<ScholarshipGrantedCreateWithoutAnnounmententInput, ScholarshipGrantedUncheckedCreateWithoutAnnounmententInput> | ScholarshipGrantedCreateWithoutAnnounmententInput[] | ScholarshipGrantedUncheckedCreateWithoutAnnounmententInput[]
    connectOrCreate?: ScholarshipGrantedCreateOrConnectWithoutAnnounmententInput | ScholarshipGrantedCreateOrConnectWithoutAnnounmententInput[]
    upsert?: ScholarshipGrantedUpsertWithWhereUniqueWithoutAnnounmententInput | ScholarshipGrantedUpsertWithWhereUniqueWithoutAnnounmententInput[]
    createMany?: ScholarshipGrantedCreateManyAnnounmententInputEnvelope
    set?: ScholarshipGrantedWhereUniqueInput | ScholarshipGrantedWhereUniqueInput[]
    disconnect?: ScholarshipGrantedWhereUniqueInput | ScholarshipGrantedWhereUniqueInput[]
    delete?: ScholarshipGrantedWhereUniqueInput | ScholarshipGrantedWhereUniqueInput[]
    connect?: ScholarshipGrantedWhereUniqueInput | ScholarshipGrantedWhereUniqueInput[]
    update?: ScholarshipGrantedUpdateWithWhereUniqueWithoutAnnounmententInput | ScholarshipGrantedUpdateWithWhereUniqueWithoutAnnounmententInput[]
    updateMany?: ScholarshipGrantedUpdateManyWithWhereWithoutAnnounmententInput | ScholarshipGrantedUpdateManyWithWhereWithoutAnnounmententInput[]
    deleteMany?: ScholarshipGrantedScalarWhereInput | ScholarshipGrantedScalarWhereInput[]
  }

  export type TimelineUncheckedUpdateManyWithoutAnnouncementNestedInput = {
    create?: XOR<TimelineCreateWithoutAnnouncementInput, TimelineUncheckedCreateWithoutAnnouncementInput> | TimelineCreateWithoutAnnouncementInput[] | TimelineUncheckedCreateWithoutAnnouncementInput[]
    connectOrCreate?: TimelineCreateOrConnectWithoutAnnouncementInput | TimelineCreateOrConnectWithoutAnnouncementInput[]
    upsert?: TimelineUpsertWithWhereUniqueWithoutAnnouncementInput | TimelineUpsertWithWhereUniqueWithoutAnnouncementInput[]
    createMany?: TimelineCreateManyAnnouncementInputEnvelope
    set?: TimelineWhereUniqueInput | TimelineWhereUniqueInput[]
    disconnect?: TimelineWhereUniqueInput | TimelineWhereUniqueInput[]
    delete?: TimelineWhereUniqueInput | TimelineWhereUniqueInput[]
    connect?: TimelineWhereUniqueInput | TimelineWhereUniqueInput[]
    update?: TimelineUpdateWithWhereUniqueWithoutAnnouncementInput | TimelineUpdateWithWhereUniqueWithoutAnnouncementInput[]
    updateMany?: TimelineUpdateManyWithWhereWithoutAnnouncementInput | TimelineUpdateManyWithWhereWithoutAnnouncementInput[]
    deleteMany?: TimelineScalarWhereInput | TimelineScalarWhereInput[]
  }

  export type SocialAssistantUncheckedUpdateManyWithoutAnnouncementNestedInput = {
    create?: XOR<SocialAssistantCreateWithoutAnnouncementInput, SocialAssistantUncheckedCreateWithoutAnnouncementInput> | SocialAssistantCreateWithoutAnnouncementInput[] | SocialAssistantUncheckedCreateWithoutAnnouncementInput[]
    connectOrCreate?: SocialAssistantCreateOrConnectWithoutAnnouncementInput | SocialAssistantCreateOrConnectWithoutAnnouncementInput[]
    upsert?: SocialAssistantUpsertWithWhereUniqueWithoutAnnouncementInput | SocialAssistantUpsertWithWhereUniqueWithoutAnnouncementInput[]
    set?: SocialAssistantWhereUniqueInput | SocialAssistantWhereUniqueInput[]
    disconnect?: SocialAssistantWhereUniqueInput | SocialAssistantWhereUniqueInput[]
    delete?: SocialAssistantWhereUniqueInput | SocialAssistantWhereUniqueInput[]
    connect?: SocialAssistantWhereUniqueInput | SocialAssistantWhereUniqueInput[]
    update?: SocialAssistantUpdateWithWhereUniqueWithoutAnnouncementInput | SocialAssistantUpdateWithWhereUniqueWithoutAnnouncementInput[]
    updateMany?: SocialAssistantUpdateManyWithWhereWithoutAnnouncementInput | SocialAssistantUpdateManyWithWhereWithoutAnnouncementInput[]
    deleteMany?: SocialAssistantScalarWhereInput | SocialAssistantScalarWhereInput[]
  }

  export type AnnouncementCreateNestedOneWithoutTimelinesInput = {
    create?: XOR<AnnouncementCreateWithoutTimelinesInput, AnnouncementUncheckedCreateWithoutTimelinesInput>
    connectOrCreate?: AnnouncementCreateOrConnectWithoutTimelinesInput
    connect?: AnnouncementWhereUniqueInput
  }

  export type AnnouncementUpdateOneRequiredWithoutTimelinesNestedInput = {
    create?: XOR<AnnouncementCreateWithoutTimelinesInput, AnnouncementUncheckedCreateWithoutTimelinesInput>
    connectOrCreate?: AnnouncementCreateOrConnectWithoutTimelinesInput
    upsert?: AnnouncementUpsertWithoutTimelinesInput
    connect?: AnnouncementWhereUniqueInput
    update?: XOR<XOR<AnnouncementUpdateToOneWithWhereWithoutTimelinesInput, AnnouncementUpdateWithoutTimelinesInput>, AnnouncementUncheckedUpdateWithoutTimelinesInput>
  }

  export type ApplicationCreateNestedManyWithoutEducationLevelInput = {
    create?: XOR<ApplicationCreateWithoutEducationLevelInput, ApplicationUncheckedCreateWithoutEducationLevelInput> | ApplicationCreateWithoutEducationLevelInput[] | ApplicationUncheckedCreateWithoutEducationLevelInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutEducationLevelInput | ApplicationCreateOrConnectWithoutEducationLevelInput[]
    createMany?: ApplicationCreateManyEducationLevelInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type AnnouncementCreateNestedOneWithoutEducationLevelsInput = {
    create?: XOR<AnnouncementCreateWithoutEducationLevelsInput, AnnouncementUncheckedCreateWithoutEducationLevelsInput>
    connectOrCreate?: AnnouncementCreateOrConnectWithoutEducationLevelsInput
    connect?: AnnouncementWhereUniqueInput
  }

  export type EntitySubsidiaryCreateNestedOneWithoutEducationLevelInput = {
    create?: XOR<EntitySubsidiaryCreateWithoutEducationLevelInput, EntitySubsidiaryUncheckedCreateWithoutEducationLevelInput>
    connectOrCreate?: EntitySubsidiaryCreateOrConnectWithoutEducationLevelInput
    connect?: EntitySubsidiaryWhereUniqueInput
  }

  export type ApplicationUncheckedCreateNestedManyWithoutEducationLevelInput = {
    create?: XOR<ApplicationCreateWithoutEducationLevelInput, ApplicationUncheckedCreateWithoutEducationLevelInput> | ApplicationCreateWithoutEducationLevelInput[] | ApplicationUncheckedCreateWithoutEducationLevelInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutEducationLevelInput | ApplicationCreateOrConnectWithoutEducationLevelInput[]
    createMany?: ApplicationCreateManyEducationLevelInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type EnumLevelTypeFieldUpdateOperationsInput = {
    set?: $Enums.LevelType
  }

  export type NullableEnumBasicEducationTypeFieldUpdateOperationsInput = {
    set?: $Enums.BasicEducationType | null
  }

  export type NullableEnumScholarshipOfferTypeFieldUpdateOperationsInput = {
    set?: $Enums.ScholarshipOfferType | null
  }

  export type NullableEnumHigherEducationScholarshipTypeFieldUpdateOperationsInput = {
    set?: $Enums.HigherEducationScholarshipType | null
  }

  export type NullableEnumOfferedCourseTypeFieldUpdateOperationsInput = {
    set?: $Enums.OfferedCourseType | null
  }

  export type ApplicationUpdateManyWithoutEducationLevelNestedInput = {
    create?: XOR<ApplicationCreateWithoutEducationLevelInput, ApplicationUncheckedCreateWithoutEducationLevelInput> | ApplicationCreateWithoutEducationLevelInput[] | ApplicationUncheckedCreateWithoutEducationLevelInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutEducationLevelInput | ApplicationCreateOrConnectWithoutEducationLevelInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutEducationLevelInput | ApplicationUpsertWithWhereUniqueWithoutEducationLevelInput[]
    createMany?: ApplicationCreateManyEducationLevelInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutEducationLevelInput | ApplicationUpdateWithWhereUniqueWithoutEducationLevelInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutEducationLevelInput | ApplicationUpdateManyWithWhereWithoutEducationLevelInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type AnnouncementUpdateOneRequiredWithoutEducationLevelsNestedInput = {
    create?: XOR<AnnouncementCreateWithoutEducationLevelsInput, AnnouncementUncheckedCreateWithoutEducationLevelsInput>
    connectOrCreate?: AnnouncementCreateOrConnectWithoutEducationLevelsInput
    upsert?: AnnouncementUpsertWithoutEducationLevelsInput
    connect?: AnnouncementWhereUniqueInput
    update?: XOR<XOR<AnnouncementUpdateToOneWithWhereWithoutEducationLevelsInput, AnnouncementUpdateWithoutEducationLevelsInput>, AnnouncementUncheckedUpdateWithoutEducationLevelsInput>
  }

  export type EntitySubsidiaryUpdateOneWithoutEducationLevelNestedInput = {
    create?: XOR<EntitySubsidiaryCreateWithoutEducationLevelInput, EntitySubsidiaryUncheckedCreateWithoutEducationLevelInput>
    connectOrCreate?: EntitySubsidiaryCreateOrConnectWithoutEducationLevelInput
    upsert?: EntitySubsidiaryUpsertWithoutEducationLevelInput
    disconnect?: EntitySubsidiaryWhereInput | boolean
    delete?: EntitySubsidiaryWhereInput | boolean
    connect?: EntitySubsidiaryWhereUniqueInput
    update?: XOR<XOR<EntitySubsidiaryUpdateToOneWithWhereWithoutEducationLevelInput, EntitySubsidiaryUpdateWithoutEducationLevelInput>, EntitySubsidiaryUncheckedUpdateWithoutEducationLevelInput>
  }

  export type ApplicationUncheckedUpdateManyWithoutEducationLevelNestedInput = {
    create?: XOR<ApplicationCreateWithoutEducationLevelInput, ApplicationUncheckedCreateWithoutEducationLevelInput> | ApplicationCreateWithoutEducationLevelInput[] | ApplicationUncheckedCreateWithoutEducationLevelInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutEducationLevelInput | ApplicationCreateOrConnectWithoutEducationLevelInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutEducationLevelInput | ApplicationUpsertWithWhereUniqueWithoutEducationLevelInput[]
    createMany?: ApplicationCreateManyEducationLevelInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutEducationLevelInput | ApplicationUpdateWithWhereUniqueWithoutEducationLevelInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutEducationLevelInput | ApplicationUpdateManyWithWhereWithoutEducationLevelInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type AnnouncementCreateNestedOneWithoutApplicationInput = {
    create?: XOR<AnnouncementCreateWithoutApplicationInput, AnnouncementUncheckedCreateWithoutApplicationInput>
    connectOrCreate?: AnnouncementCreateOrConnectWithoutApplicationInput
    connect?: AnnouncementWhereUniqueInput
  }

  export type CandidateCreateNestedOneWithoutApplicationInput = {
    create?: XOR<CandidateCreateWithoutApplicationInput, CandidateUncheckedCreateWithoutApplicationInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutApplicationInput
    connect?: CandidateWhereUniqueInput
  }

  export type EducationLevelCreateNestedOneWithoutApplicationInput = {
    create?: XOR<EducationLevelCreateWithoutApplicationInput, EducationLevelUncheckedCreateWithoutApplicationInput>
    connectOrCreate?: EducationLevelCreateOrConnectWithoutApplicationInput
    connect?: EducationLevelWhereUniqueInput
  }

  export type SocialAssistantCreateNestedOneWithoutApplicationInput = {
    create?: XOR<SocialAssistantCreateWithoutApplicationInput, SocialAssistantUncheckedCreateWithoutApplicationInput>
    connectOrCreate?: SocialAssistantCreateOrConnectWithoutApplicationInput
    connect?: SocialAssistantWhereUniqueInput
  }

  export type ApplicationHistoryCreateNestedManyWithoutApplicationInput = {
    create?: XOR<ApplicationHistoryCreateWithoutApplicationInput, ApplicationHistoryUncheckedCreateWithoutApplicationInput> | ApplicationHistoryCreateWithoutApplicationInput[] | ApplicationHistoryUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: ApplicationHistoryCreateOrConnectWithoutApplicationInput | ApplicationHistoryCreateOrConnectWithoutApplicationInput[]
    createMany?: ApplicationHistoryCreateManyApplicationInputEnvelope
    connect?: ApplicationHistoryWhereUniqueInput | ApplicationHistoryWhereUniqueInput[]
  }

  export type ScholarshipGrantedCreateNestedOneWithoutApplicationInput = {
    create?: XOR<ScholarshipGrantedCreateWithoutApplicationInput, ScholarshipGrantedUncheckedCreateWithoutApplicationInput>
    connectOrCreate?: ScholarshipGrantedCreateOrConnectWithoutApplicationInput
    connect?: ScholarshipGrantedWhereUniqueInput
  }

  export type LegalResponsibleCreateNestedOneWithoutApplicationInput = {
    create?: XOR<LegalResponsibleCreateWithoutApplicationInput, LegalResponsibleUncheckedCreateWithoutApplicationInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutApplicationInput
    connect?: LegalResponsibleWhereUniqueInput
  }

  export type ApplicationHistoryUncheckedCreateNestedManyWithoutApplicationInput = {
    create?: XOR<ApplicationHistoryCreateWithoutApplicationInput, ApplicationHistoryUncheckedCreateWithoutApplicationInput> | ApplicationHistoryCreateWithoutApplicationInput[] | ApplicationHistoryUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: ApplicationHistoryCreateOrConnectWithoutApplicationInput | ApplicationHistoryCreateOrConnectWithoutApplicationInput[]
    createMany?: ApplicationHistoryCreateManyApplicationInputEnvelope
    connect?: ApplicationHistoryWhereUniqueInput | ApplicationHistoryWhereUniqueInput[]
  }

  export type ScholarshipGrantedUncheckedCreateNestedOneWithoutApplicationInput = {
    create?: XOR<ScholarshipGrantedCreateWithoutApplicationInput, ScholarshipGrantedUncheckedCreateWithoutApplicationInput>
    connectOrCreate?: ScholarshipGrantedCreateOrConnectWithoutApplicationInput
    connect?: ScholarshipGrantedWhereUniqueInput
  }

  export type EnumApplicationStatusFieldUpdateOperationsInput = {
    set?: $Enums.ApplicationStatus
  }

  export type AnnouncementUpdateOneRequiredWithoutApplicationNestedInput = {
    create?: XOR<AnnouncementCreateWithoutApplicationInput, AnnouncementUncheckedCreateWithoutApplicationInput>
    connectOrCreate?: AnnouncementCreateOrConnectWithoutApplicationInput
    upsert?: AnnouncementUpsertWithoutApplicationInput
    connect?: AnnouncementWhereUniqueInput
    update?: XOR<XOR<AnnouncementUpdateToOneWithWhereWithoutApplicationInput, AnnouncementUpdateWithoutApplicationInput>, AnnouncementUncheckedUpdateWithoutApplicationInput>
  }

  export type CandidateUpdateOneRequiredWithoutApplicationNestedInput = {
    create?: XOR<CandidateCreateWithoutApplicationInput, CandidateUncheckedCreateWithoutApplicationInput>
    connectOrCreate?: CandidateCreateOrConnectWithoutApplicationInput
    upsert?: CandidateUpsertWithoutApplicationInput
    connect?: CandidateWhereUniqueInput
    update?: XOR<XOR<CandidateUpdateToOneWithWhereWithoutApplicationInput, CandidateUpdateWithoutApplicationInput>, CandidateUncheckedUpdateWithoutApplicationInput>
  }

  export type EducationLevelUpdateOneRequiredWithoutApplicationNestedInput = {
    create?: XOR<EducationLevelCreateWithoutApplicationInput, EducationLevelUncheckedCreateWithoutApplicationInput>
    connectOrCreate?: EducationLevelCreateOrConnectWithoutApplicationInput
    upsert?: EducationLevelUpsertWithoutApplicationInput
    connect?: EducationLevelWhereUniqueInput
    update?: XOR<XOR<EducationLevelUpdateToOneWithWhereWithoutApplicationInput, EducationLevelUpdateWithoutApplicationInput>, EducationLevelUncheckedUpdateWithoutApplicationInput>
  }

  export type SocialAssistantUpdateOneWithoutApplicationNestedInput = {
    create?: XOR<SocialAssistantCreateWithoutApplicationInput, SocialAssistantUncheckedCreateWithoutApplicationInput>
    connectOrCreate?: SocialAssistantCreateOrConnectWithoutApplicationInput
    upsert?: SocialAssistantUpsertWithoutApplicationInput
    disconnect?: SocialAssistantWhereInput | boolean
    delete?: SocialAssistantWhereInput | boolean
    connect?: SocialAssistantWhereUniqueInput
    update?: XOR<XOR<SocialAssistantUpdateToOneWithWhereWithoutApplicationInput, SocialAssistantUpdateWithoutApplicationInput>, SocialAssistantUncheckedUpdateWithoutApplicationInput>
  }

  export type ApplicationHistoryUpdateManyWithoutApplicationNestedInput = {
    create?: XOR<ApplicationHistoryCreateWithoutApplicationInput, ApplicationHistoryUncheckedCreateWithoutApplicationInput> | ApplicationHistoryCreateWithoutApplicationInput[] | ApplicationHistoryUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: ApplicationHistoryCreateOrConnectWithoutApplicationInput | ApplicationHistoryCreateOrConnectWithoutApplicationInput[]
    upsert?: ApplicationHistoryUpsertWithWhereUniqueWithoutApplicationInput | ApplicationHistoryUpsertWithWhereUniqueWithoutApplicationInput[]
    createMany?: ApplicationHistoryCreateManyApplicationInputEnvelope
    set?: ApplicationHistoryWhereUniqueInput | ApplicationHistoryWhereUniqueInput[]
    disconnect?: ApplicationHistoryWhereUniqueInput | ApplicationHistoryWhereUniqueInput[]
    delete?: ApplicationHistoryWhereUniqueInput | ApplicationHistoryWhereUniqueInput[]
    connect?: ApplicationHistoryWhereUniqueInput | ApplicationHistoryWhereUniqueInput[]
    update?: ApplicationHistoryUpdateWithWhereUniqueWithoutApplicationInput | ApplicationHistoryUpdateWithWhereUniqueWithoutApplicationInput[]
    updateMany?: ApplicationHistoryUpdateManyWithWhereWithoutApplicationInput | ApplicationHistoryUpdateManyWithWhereWithoutApplicationInput[]
    deleteMany?: ApplicationHistoryScalarWhereInput | ApplicationHistoryScalarWhereInput[]
  }

  export type ScholarshipGrantedUpdateOneWithoutApplicationNestedInput = {
    create?: XOR<ScholarshipGrantedCreateWithoutApplicationInput, ScholarshipGrantedUncheckedCreateWithoutApplicationInput>
    connectOrCreate?: ScholarshipGrantedCreateOrConnectWithoutApplicationInput
    upsert?: ScholarshipGrantedUpsertWithoutApplicationInput
    disconnect?: ScholarshipGrantedWhereInput | boolean
    delete?: ScholarshipGrantedWhereInput | boolean
    connect?: ScholarshipGrantedWhereUniqueInput
    update?: XOR<XOR<ScholarshipGrantedUpdateToOneWithWhereWithoutApplicationInput, ScholarshipGrantedUpdateWithoutApplicationInput>, ScholarshipGrantedUncheckedUpdateWithoutApplicationInput>
  }

  export type LegalResponsibleUpdateOneWithoutApplicationNestedInput = {
    create?: XOR<LegalResponsibleCreateWithoutApplicationInput, LegalResponsibleUncheckedCreateWithoutApplicationInput>
    connectOrCreate?: LegalResponsibleCreateOrConnectWithoutApplicationInput
    upsert?: LegalResponsibleUpsertWithoutApplicationInput
    disconnect?: LegalResponsibleWhereInput | boolean
    delete?: LegalResponsibleWhereInput | boolean
    connect?: LegalResponsibleWhereUniqueInput
    update?: XOR<XOR<LegalResponsibleUpdateToOneWithWhereWithoutApplicationInput, LegalResponsibleUpdateWithoutApplicationInput>, LegalResponsibleUncheckedUpdateWithoutApplicationInput>
  }

  export type ApplicationHistoryUncheckedUpdateManyWithoutApplicationNestedInput = {
    create?: XOR<ApplicationHistoryCreateWithoutApplicationInput, ApplicationHistoryUncheckedCreateWithoutApplicationInput> | ApplicationHistoryCreateWithoutApplicationInput[] | ApplicationHistoryUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: ApplicationHistoryCreateOrConnectWithoutApplicationInput | ApplicationHistoryCreateOrConnectWithoutApplicationInput[]
    upsert?: ApplicationHistoryUpsertWithWhereUniqueWithoutApplicationInput | ApplicationHistoryUpsertWithWhereUniqueWithoutApplicationInput[]
    createMany?: ApplicationHistoryCreateManyApplicationInputEnvelope
    set?: ApplicationHistoryWhereUniqueInput | ApplicationHistoryWhereUniqueInput[]
    disconnect?: ApplicationHistoryWhereUniqueInput | ApplicationHistoryWhereUniqueInput[]
    delete?: ApplicationHistoryWhereUniqueInput | ApplicationHistoryWhereUniqueInput[]
    connect?: ApplicationHistoryWhereUniqueInput | ApplicationHistoryWhereUniqueInput[]
    update?: ApplicationHistoryUpdateWithWhereUniqueWithoutApplicationInput | ApplicationHistoryUpdateWithWhereUniqueWithoutApplicationInput[]
    updateMany?: ApplicationHistoryUpdateManyWithWhereWithoutApplicationInput | ApplicationHistoryUpdateManyWithWhereWithoutApplicationInput[]
    deleteMany?: ApplicationHistoryScalarWhereInput | ApplicationHistoryScalarWhereInput[]
  }

  export type ScholarshipGrantedUncheckedUpdateOneWithoutApplicationNestedInput = {
    create?: XOR<ScholarshipGrantedCreateWithoutApplicationInput, ScholarshipGrantedUncheckedCreateWithoutApplicationInput>
    connectOrCreate?: ScholarshipGrantedCreateOrConnectWithoutApplicationInput
    upsert?: ScholarshipGrantedUpsertWithoutApplicationInput
    disconnect?: ScholarshipGrantedWhereInput | boolean
    delete?: ScholarshipGrantedWhereInput | boolean
    connect?: ScholarshipGrantedWhereUniqueInput
    update?: XOR<XOR<ScholarshipGrantedUpdateToOneWithWhereWithoutApplicationInput, ScholarshipGrantedUpdateWithoutApplicationInput>, ScholarshipGrantedUncheckedUpdateWithoutApplicationInput>
  }

  export type ApplicationCreateNestedOneWithoutApplicationHistoriesInput = {
    create?: XOR<ApplicationCreateWithoutApplicationHistoriesInput, ApplicationUncheckedCreateWithoutApplicationHistoriesInput>
    connectOrCreate?: ApplicationCreateOrConnectWithoutApplicationHistoriesInput
    connect?: ApplicationWhereUniqueInput
  }

  export type NullableEnumSolicitationTypeFieldUpdateOperationsInput = {
    set?: $Enums.SolicitationType | null
  }

  export type ApplicationUpdateOneRequiredWithoutApplicationHistoriesNestedInput = {
    create?: XOR<ApplicationCreateWithoutApplicationHistoriesInput, ApplicationUncheckedCreateWithoutApplicationHistoriesInput>
    connectOrCreate?: ApplicationCreateOrConnectWithoutApplicationHistoriesInput
    upsert?: ApplicationUpsertWithoutApplicationHistoriesInput
    connect?: ApplicationWhereUniqueInput
    update?: XOR<XOR<ApplicationUpdateToOneWithWhereWithoutApplicationHistoriesInput, ApplicationUpdateWithoutApplicationHistoriesInput>, ApplicationUncheckedUpdateWithoutApplicationHistoriesInput>
  }

  export type ScholarshipGrantedCreatetypesInput = {
    set: $Enums.scholarshipGrantedType[]
  }

  export type AnnouncementCreateNestedOneWithoutScholarshipGrantedInput = {
    create?: XOR<AnnouncementCreateWithoutScholarshipGrantedInput, AnnouncementUncheckedCreateWithoutScholarshipGrantedInput>
    connectOrCreate?: AnnouncementCreateOrConnectWithoutScholarshipGrantedInput
    connect?: AnnouncementWhereUniqueInput
  }

  export type ApplicationCreateNestedOneWithoutScholarshipGrantedInput = {
    create?: XOR<ApplicationCreateWithoutScholarshipGrantedInput, ApplicationUncheckedCreateWithoutScholarshipGrantedInput>
    connectOrCreate?: ApplicationCreateOrConnectWithoutScholarshipGrantedInput
    connect?: ApplicationWhereUniqueInput
  }

  export type ScholarshipGrantedUpdatetypesInput = {
    set?: $Enums.scholarshipGrantedType[]
    push?: $Enums.scholarshipGrantedType | $Enums.scholarshipGrantedType[]
  }

  export type AnnouncementUpdateOneRequiredWithoutScholarshipGrantedNestedInput = {
    create?: XOR<AnnouncementCreateWithoutScholarshipGrantedInput, AnnouncementUncheckedCreateWithoutScholarshipGrantedInput>
    connectOrCreate?: AnnouncementCreateOrConnectWithoutScholarshipGrantedInput
    upsert?: AnnouncementUpsertWithoutScholarshipGrantedInput
    connect?: AnnouncementWhereUniqueInput
    update?: XOR<XOR<AnnouncementUpdateToOneWithWhereWithoutScholarshipGrantedInput, AnnouncementUpdateWithoutScholarshipGrantedInput>, AnnouncementUncheckedUpdateWithoutScholarshipGrantedInput>
  }

  export type ApplicationUpdateOneRequiredWithoutScholarshipGrantedNestedInput = {
    create?: XOR<ApplicationCreateWithoutScholarshipGrantedInput, ApplicationUncheckedCreateWithoutScholarshipGrantedInput>
    connectOrCreate?: ApplicationCreateOrConnectWithoutScholarshipGrantedInput
    upsert?: ApplicationUpsertWithoutScholarshipGrantedInput
    connect?: ApplicationWhereUniqueInput
    update?: XOR<XOR<ApplicationUpdateToOneWithWhereWithoutScholarshipGrantedInput, ApplicationUpdateWithoutScholarshipGrantedInput>, ApplicationUncheckedUpdateWithoutScholarshipGrantedInput>
  }

  export type FamilyMemberCreateNestedOneWithoutFamilyMemberToVehicleInput = {
    create?: XOR<FamilyMemberCreateWithoutFamilyMemberToVehicleInput, FamilyMemberUncheckedCreateWithoutFamilyMemberToVehicleInput>
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutFamilyMemberToVehicleInput
    connect?: FamilyMemberWhereUniqueInput
  }

  export type VehicleCreateNestedOneWithoutFamilyMemberToVehicleInput = {
    create?: XOR<VehicleCreateWithoutFamilyMemberToVehicleInput, VehicleUncheckedCreateWithoutFamilyMemberToVehicleInput>
    connectOrCreate?: VehicleCreateOrConnectWithoutFamilyMemberToVehicleInput
    connect?: VehicleWhereUniqueInput
  }

  export type FamilyMemberUpdateOneRequiredWithoutFamilyMemberToVehicleNestedInput = {
    create?: XOR<FamilyMemberCreateWithoutFamilyMemberToVehicleInput, FamilyMemberUncheckedCreateWithoutFamilyMemberToVehicleInput>
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutFamilyMemberToVehicleInput
    upsert?: FamilyMemberUpsertWithoutFamilyMemberToVehicleInput
    connect?: FamilyMemberWhereUniqueInput
    update?: XOR<XOR<FamilyMemberUpdateToOneWithWhereWithoutFamilyMemberToVehicleInput, FamilyMemberUpdateWithoutFamilyMemberToVehicleInput>, FamilyMemberUncheckedUpdateWithoutFamilyMemberToVehicleInput>
  }

  export type VehicleUpdateOneRequiredWithoutFamilyMemberToVehicleNestedInput = {
    create?: XOR<VehicleCreateWithoutFamilyMemberToVehicleInput, VehicleUncheckedCreateWithoutFamilyMemberToVehicleInput>
    connectOrCreate?: VehicleCreateOrConnectWithoutFamilyMemberToVehicleInput
    upsert?: VehicleUpsertWithoutFamilyMemberToVehicleInput
    connect?: VehicleWhereUniqueInput
    update?: XOR<XOR<VehicleUpdateToOneWithWhereWithoutFamilyMemberToVehicleInput, VehicleUpdateWithoutFamilyMemberToVehicleInput>, VehicleUncheckedUpdateWithoutFamilyMemberToVehicleInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedEnumROLEFilter<$PrismaModel = never> = {
    equals?: $Enums.ROLE | EnumROLEFieldRefInput<$PrismaModel>
    in?: $Enums.ROLE[] | ListEnumROLEFieldRefInput<$PrismaModel>
    notIn?: $Enums.ROLE[] | ListEnumROLEFieldRefInput<$PrismaModel>
    not?: NestedEnumROLEFilter<$PrismaModel> | $Enums.ROLE
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumROLEWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ROLE | EnumROLEFieldRefInput<$PrismaModel>
    in?: $Enums.ROLE[] | ListEnumROLEFieldRefInput<$PrismaModel>
    notIn?: $Enums.ROLE[] | ListEnumROLEFieldRefInput<$PrismaModel>
    not?: NestedEnumROLEWithAggregatesFilter<$PrismaModel> | $Enums.ROLE
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumROLEFilter<$PrismaModel>
    _max?: NestedEnumROLEFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedEnumINSTITUTION_TYPENullableFilter<$PrismaModel = never> = {
    equals?: $Enums.INSTITUTION_TYPE | EnumINSTITUTION_TYPEFieldRefInput<$PrismaModel> | null
    in?: $Enums.INSTITUTION_TYPE[] | ListEnumINSTITUTION_TYPEFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.INSTITUTION_TYPE[] | ListEnumINSTITUTION_TYPEFieldRefInput<$PrismaModel> | null
    not?: NestedEnumINSTITUTION_TYPENullableFilter<$PrismaModel> | $Enums.INSTITUTION_TYPE | null
  }

  export type NestedEnumEDUCATION_TYPENullableFilter<$PrismaModel = never> = {
    equals?: $Enums.EDUCATION_TYPE | EnumEDUCATION_TYPEFieldRefInput<$PrismaModel> | null
    in?: $Enums.EDUCATION_TYPE[] | ListEnumEDUCATION_TYPEFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.EDUCATION_TYPE[] | ListEnumEDUCATION_TYPEFieldRefInput<$PrismaModel> | null
    not?: NestedEnumEDUCATION_TYPENullableFilter<$PrismaModel> | $Enums.EDUCATION_TYPE | null
  }

  export type NestedEnumSHIFTNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.SHIFT | EnumSHIFTFieldRefInput<$PrismaModel> | null
    in?: $Enums.SHIFT[] | ListEnumSHIFTFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.SHIFT[] | ListEnumSHIFTFieldRefInput<$PrismaModel> | null
    not?: NestedEnumSHIFTNullableFilter<$PrismaModel> | $Enums.SHIFT | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedEnumINSTITUTION_TYPENullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.INSTITUTION_TYPE | EnumINSTITUTION_TYPEFieldRefInput<$PrismaModel> | null
    in?: $Enums.INSTITUTION_TYPE[] | ListEnumINSTITUTION_TYPEFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.INSTITUTION_TYPE[] | ListEnumINSTITUTION_TYPEFieldRefInput<$PrismaModel> | null
    not?: NestedEnumINSTITUTION_TYPENullableWithAggregatesFilter<$PrismaModel> | $Enums.INSTITUTION_TYPE | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumINSTITUTION_TYPENullableFilter<$PrismaModel>
    _max?: NestedEnumINSTITUTION_TYPENullableFilter<$PrismaModel>
  }

  export type NestedEnumEDUCATION_TYPENullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EDUCATION_TYPE | EnumEDUCATION_TYPEFieldRefInput<$PrismaModel> | null
    in?: $Enums.EDUCATION_TYPE[] | ListEnumEDUCATION_TYPEFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.EDUCATION_TYPE[] | ListEnumEDUCATION_TYPEFieldRefInput<$PrismaModel> | null
    not?: NestedEnumEDUCATION_TYPENullableWithAggregatesFilter<$PrismaModel> | $Enums.EDUCATION_TYPE | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumEDUCATION_TYPENullableFilter<$PrismaModel>
    _max?: NestedEnumEDUCATION_TYPENullableFilter<$PrismaModel>
  }

  export type NestedEnumSHIFTNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SHIFT | EnumSHIFTFieldRefInput<$PrismaModel> | null
    in?: $Enums.SHIFT[] | ListEnumSHIFTFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.SHIFT[] | ListEnumSHIFTFieldRefInput<$PrismaModel> | null
    not?: NestedEnumSHIFTNullableWithAggregatesFilter<$PrismaModel> | $Enums.SHIFT | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumSHIFTNullableFilter<$PrismaModel>
    _max?: NestedEnumSHIFTNullableFilter<$PrismaModel>
  }

  export type NestedEnumCOUNTRYNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.COUNTRY | EnumCOUNTRYFieldRefInput<$PrismaModel> | null
    in?: $Enums.COUNTRY[] | ListEnumCOUNTRYFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.COUNTRY[] | ListEnumCOUNTRYFieldRefInput<$PrismaModel> | null
    not?: NestedEnumCOUNTRYNullableFilter<$PrismaModel> | $Enums.COUNTRY | null
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumCOUNTRYNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.COUNTRY | EnumCOUNTRYFieldRefInput<$PrismaModel> | null
    in?: $Enums.COUNTRY[] | ListEnumCOUNTRYFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.COUNTRY[] | ListEnumCOUNTRYFieldRefInput<$PrismaModel> | null
    not?: NestedEnumCOUNTRYNullableWithAggregatesFilter<$PrismaModel> | $Enums.COUNTRY | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumCOUNTRYNullableFilter<$PrismaModel>
    _max?: NestedEnumCOUNTRYNullableFilter<$PrismaModel>
  }

  export type NestedEnumGENDERFilter<$PrismaModel = never> = {
    equals?: $Enums.GENDER | EnumGENDERFieldRefInput<$PrismaModel>
    in?: $Enums.GENDER[] | ListEnumGENDERFieldRefInput<$PrismaModel>
    notIn?: $Enums.GENDER[] | ListEnumGENDERFieldRefInput<$PrismaModel>
    not?: NestedEnumGENDERFilter<$PrismaModel> | $Enums.GENDER
  }

  export type NestedEnumCOUNTRYFilter<$PrismaModel = never> = {
    equals?: $Enums.COUNTRY | EnumCOUNTRYFieldRefInput<$PrismaModel>
    in?: $Enums.COUNTRY[] | ListEnumCOUNTRYFieldRefInput<$PrismaModel>
    notIn?: $Enums.COUNTRY[] | ListEnumCOUNTRYFieldRefInput<$PrismaModel>
    not?: NestedEnumCOUNTRYFilter<$PrismaModel> | $Enums.COUNTRY
  }

  export type NestedEnumDOCUMENT_TYPENullableFilter<$PrismaModel = never> = {
    equals?: $Enums.DOCUMENT_TYPE | EnumDOCUMENT_TYPEFieldRefInput<$PrismaModel> | null
    in?: $Enums.DOCUMENT_TYPE[] | ListEnumDOCUMENT_TYPEFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.DOCUMENT_TYPE[] | ListEnumDOCUMENT_TYPEFieldRefInput<$PrismaModel> | null
    not?: NestedEnumDOCUMENT_TYPENullableFilter<$PrismaModel> | $Enums.DOCUMENT_TYPE | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedEnumMARITAL_STATUSFilter<$PrismaModel = never> = {
    equals?: $Enums.MARITAL_STATUS | EnumMARITAL_STATUSFieldRefInput<$PrismaModel>
    in?: $Enums.MARITAL_STATUS[] | ListEnumMARITAL_STATUSFieldRefInput<$PrismaModel>
    notIn?: $Enums.MARITAL_STATUS[] | ListEnumMARITAL_STATUSFieldRefInput<$PrismaModel>
    not?: NestedEnumMARITAL_STATUSFilter<$PrismaModel> | $Enums.MARITAL_STATUS
  }

  export type NestedEnumSkinColorFilter<$PrismaModel = never> = {
    equals?: $Enums.SkinColor | EnumSkinColorFieldRefInput<$PrismaModel>
    in?: $Enums.SkinColor[] | ListEnumSkinColorFieldRefInput<$PrismaModel>
    notIn?: $Enums.SkinColor[] | ListEnumSkinColorFieldRefInput<$PrismaModel>
    not?: NestedEnumSkinColorFilter<$PrismaModel> | $Enums.SkinColor
  }

  export type NestedEnumRELIGIONFilter<$PrismaModel = never> = {
    equals?: $Enums.RELIGION | EnumRELIGIONFieldRefInput<$PrismaModel>
    in?: $Enums.RELIGION[] | ListEnumRELIGIONFieldRefInput<$PrismaModel>
    notIn?: $Enums.RELIGION[] | ListEnumRELIGIONFieldRefInput<$PrismaModel>
    not?: NestedEnumRELIGIONFilter<$PrismaModel> | $Enums.RELIGION
  }

  export type NestedEnumSCHOLARSHIPFilter<$PrismaModel = never> = {
    equals?: $Enums.SCHOLARSHIP | EnumSCHOLARSHIPFieldRefInput<$PrismaModel>
    in?: $Enums.SCHOLARSHIP[] | ListEnumSCHOLARSHIPFieldRefInput<$PrismaModel>
    notIn?: $Enums.SCHOLARSHIP[] | ListEnumSCHOLARSHIPFieldRefInput<$PrismaModel>
    not?: NestedEnumSCHOLARSHIPFilter<$PrismaModel> | $Enums.SCHOLARSHIP
  }

  export type NestedEnumScholarshipTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.ScholarshipType | EnumScholarshipTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.ScholarshipType[] | ListEnumScholarshipTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.ScholarshipType[] | ListEnumScholarshipTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumScholarshipTypeNullableFilter<$PrismaModel> | $Enums.ScholarshipType | null
  }

  export type NestedEnumGENDERWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.GENDER | EnumGENDERFieldRefInput<$PrismaModel>
    in?: $Enums.GENDER[] | ListEnumGENDERFieldRefInput<$PrismaModel>
    notIn?: $Enums.GENDER[] | ListEnumGENDERFieldRefInput<$PrismaModel>
    not?: NestedEnumGENDERWithAggregatesFilter<$PrismaModel> | $Enums.GENDER
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumGENDERFilter<$PrismaModel>
    _max?: NestedEnumGENDERFilter<$PrismaModel>
  }

  export type NestedEnumCOUNTRYWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.COUNTRY | EnumCOUNTRYFieldRefInput<$PrismaModel>
    in?: $Enums.COUNTRY[] | ListEnumCOUNTRYFieldRefInput<$PrismaModel>
    notIn?: $Enums.COUNTRY[] | ListEnumCOUNTRYFieldRefInput<$PrismaModel>
    not?: NestedEnumCOUNTRYWithAggregatesFilter<$PrismaModel> | $Enums.COUNTRY
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCOUNTRYFilter<$PrismaModel>
    _max?: NestedEnumCOUNTRYFilter<$PrismaModel>
  }

  export type NestedEnumDOCUMENT_TYPENullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DOCUMENT_TYPE | EnumDOCUMENT_TYPEFieldRefInput<$PrismaModel> | null
    in?: $Enums.DOCUMENT_TYPE[] | ListEnumDOCUMENT_TYPEFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.DOCUMENT_TYPE[] | ListEnumDOCUMENT_TYPEFieldRefInput<$PrismaModel> | null
    not?: NestedEnumDOCUMENT_TYPENullableWithAggregatesFilter<$PrismaModel> | $Enums.DOCUMENT_TYPE | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumDOCUMENT_TYPENullableFilter<$PrismaModel>
    _max?: NestedEnumDOCUMENT_TYPENullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumMARITAL_STATUSWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MARITAL_STATUS | EnumMARITAL_STATUSFieldRefInput<$PrismaModel>
    in?: $Enums.MARITAL_STATUS[] | ListEnumMARITAL_STATUSFieldRefInput<$PrismaModel>
    notIn?: $Enums.MARITAL_STATUS[] | ListEnumMARITAL_STATUSFieldRefInput<$PrismaModel>
    not?: NestedEnumMARITAL_STATUSWithAggregatesFilter<$PrismaModel> | $Enums.MARITAL_STATUS
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMARITAL_STATUSFilter<$PrismaModel>
    _max?: NestedEnumMARITAL_STATUSFilter<$PrismaModel>
  }

  export type NestedEnumSkinColorWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SkinColor | EnumSkinColorFieldRefInput<$PrismaModel>
    in?: $Enums.SkinColor[] | ListEnumSkinColorFieldRefInput<$PrismaModel>
    notIn?: $Enums.SkinColor[] | ListEnumSkinColorFieldRefInput<$PrismaModel>
    not?: NestedEnumSkinColorWithAggregatesFilter<$PrismaModel> | $Enums.SkinColor
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSkinColorFilter<$PrismaModel>
    _max?: NestedEnumSkinColorFilter<$PrismaModel>
  }

  export type NestedEnumRELIGIONWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RELIGION | EnumRELIGIONFieldRefInput<$PrismaModel>
    in?: $Enums.RELIGION[] | ListEnumRELIGIONFieldRefInput<$PrismaModel>
    notIn?: $Enums.RELIGION[] | ListEnumRELIGIONFieldRefInput<$PrismaModel>
    not?: NestedEnumRELIGIONWithAggregatesFilter<$PrismaModel> | $Enums.RELIGION
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRELIGIONFilter<$PrismaModel>
    _max?: NestedEnumRELIGIONFilter<$PrismaModel>
  }

  export type NestedEnumSCHOLARSHIPWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SCHOLARSHIP | EnumSCHOLARSHIPFieldRefInput<$PrismaModel>
    in?: $Enums.SCHOLARSHIP[] | ListEnumSCHOLARSHIPFieldRefInput<$PrismaModel>
    notIn?: $Enums.SCHOLARSHIP[] | ListEnumSCHOLARSHIPFieldRefInput<$PrismaModel>
    not?: NestedEnumSCHOLARSHIPWithAggregatesFilter<$PrismaModel> | $Enums.SCHOLARSHIP
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSCHOLARSHIPFilter<$PrismaModel>
    _max?: NestedEnumSCHOLARSHIPFilter<$PrismaModel>
  }

  export type NestedEnumScholarshipTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ScholarshipType | EnumScholarshipTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.ScholarshipType[] | ListEnumScholarshipTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.ScholarshipType[] | ListEnumScholarshipTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumScholarshipTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.ScholarshipType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumScholarshipTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumScholarshipTypeNullableFilter<$PrismaModel>
  }

  export type NestedEnumRelationshipFilter<$PrismaModel = never> = {
    equals?: $Enums.Relationship | EnumRelationshipFieldRefInput<$PrismaModel>
    in?: $Enums.Relationship[] | ListEnumRelationshipFieldRefInput<$PrismaModel>
    notIn?: $Enums.Relationship[] | ListEnumRelationshipFieldRefInput<$PrismaModel>
    not?: NestedEnumRelationshipFilter<$PrismaModel> | $Enums.Relationship
  }

  export type NestedEnumRelationshipWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Relationship | EnumRelationshipFieldRefInput<$PrismaModel>
    in?: $Enums.Relationship[] | ListEnumRelationshipFieldRefInput<$PrismaModel>
    notIn?: $Enums.Relationship[] | ListEnumRelationshipFieldRefInput<$PrismaModel>
    not?: NestedEnumRelationshipWithAggregatesFilter<$PrismaModel> | $Enums.Relationship
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRelationshipFilter<$PrismaModel>
    _max?: NestedEnumRelationshipFilter<$PrismaModel>
  }

  export type NestedEnumPropertyStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PropertyStatus | EnumPropertyStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PropertyStatus[] | ListEnumPropertyStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PropertyStatus[] | ListEnumPropertyStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPropertyStatusFilter<$PrismaModel> | $Enums.PropertyStatus
  }

  export type NestedEnumContractTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.ContractType | EnumContractTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.ContractType[] | ListEnumContractTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.ContractType[] | ListEnumContractTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumContractTypeNullableFilter<$PrismaModel> | $Enums.ContractType | null
  }

  export type NestedEnumTimeLivingInPropertyFilter<$PrismaModel = never> = {
    equals?: $Enums.TimeLivingInProperty | EnumTimeLivingInPropertyFieldRefInput<$PrismaModel>
    in?: $Enums.TimeLivingInProperty[] | ListEnumTimeLivingInPropertyFieldRefInput<$PrismaModel>
    notIn?: $Enums.TimeLivingInProperty[] | ListEnumTimeLivingInPropertyFieldRefInput<$PrismaModel>
    not?: NestedEnumTimeLivingInPropertyFilter<$PrismaModel> | $Enums.TimeLivingInProperty
  }

  export type NestedEnumDomicileTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.DomicileType | EnumDomicileTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DomicileType[] | ListEnumDomicileTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DomicileType[] | ListEnumDomicileTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDomicileTypeFilter<$PrismaModel> | $Enums.DomicileType
  }

  export type NestedEnumNumberOfRoomsFilter<$PrismaModel = never> = {
    equals?: $Enums.NumberOfRooms | EnumNumberOfRoomsFieldRefInput<$PrismaModel>
    in?: $Enums.NumberOfRooms[] | ListEnumNumberOfRoomsFieldRefInput<$PrismaModel>
    notIn?: $Enums.NumberOfRooms[] | ListEnumNumberOfRoomsFieldRefInput<$PrismaModel>
    not?: NestedEnumNumberOfRoomsFilter<$PrismaModel> | $Enums.NumberOfRooms
  }

  export type NestedEnumPropertyStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PropertyStatus | EnumPropertyStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PropertyStatus[] | ListEnumPropertyStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PropertyStatus[] | ListEnumPropertyStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPropertyStatusWithAggregatesFilter<$PrismaModel> | $Enums.PropertyStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPropertyStatusFilter<$PrismaModel>
    _max?: NestedEnumPropertyStatusFilter<$PrismaModel>
  }

  export type NestedEnumContractTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ContractType | EnumContractTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.ContractType[] | ListEnumContractTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.ContractType[] | ListEnumContractTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumContractTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.ContractType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumContractTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumContractTypeNullableFilter<$PrismaModel>
  }

  export type NestedEnumTimeLivingInPropertyWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TimeLivingInProperty | EnumTimeLivingInPropertyFieldRefInput<$PrismaModel>
    in?: $Enums.TimeLivingInProperty[] | ListEnumTimeLivingInPropertyFieldRefInput<$PrismaModel>
    notIn?: $Enums.TimeLivingInProperty[] | ListEnumTimeLivingInPropertyFieldRefInput<$PrismaModel>
    not?: NestedEnumTimeLivingInPropertyWithAggregatesFilter<$PrismaModel> | $Enums.TimeLivingInProperty
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTimeLivingInPropertyFilter<$PrismaModel>
    _max?: NestedEnumTimeLivingInPropertyFilter<$PrismaModel>
  }

  export type NestedEnumDomicileTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DomicileType | EnumDomicileTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DomicileType[] | ListEnumDomicileTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DomicileType[] | ListEnumDomicileTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDomicileTypeWithAggregatesFilter<$PrismaModel> | $Enums.DomicileType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDomicileTypeFilter<$PrismaModel>
    _max?: NestedEnumDomicileTypeFilter<$PrismaModel>
  }

  export type NestedEnumNumberOfRoomsWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NumberOfRooms | EnumNumberOfRoomsFieldRefInput<$PrismaModel>
    in?: $Enums.NumberOfRooms[] | ListEnumNumberOfRoomsFieldRefInput<$PrismaModel>
    notIn?: $Enums.NumberOfRooms[] | ListEnumNumberOfRoomsFieldRefInput<$PrismaModel>
    not?: NestedEnumNumberOfRoomsWithAggregatesFilter<$PrismaModel> | $Enums.NumberOfRooms
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNumberOfRoomsFilter<$PrismaModel>
    _max?: NestedEnumNumberOfRoomsFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedEnumVehicleTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.VehicleType | EnumVehicleTypeFieldRefInput<$PrismaModel>
    in?: $Enums.VehicleType[] | ListEnumVehicleTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.VehicleType[] | ListEnumVehicleTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumVehicleTypeFilter<$PrismaModel> | $Enums.VehicleType
  }

  export type NestedEnumVehicleSituationFilter<$PrismaModel = never> = {
    equals?: $Enums.VehicleSituation | EnumVehicleSituationFieldRefInput<$PrismaModel>
    in?: $Enums.VehicleSituation[] | ListEnumVehicleSituationFieldRefInput<$PrismaModel>
    notIn?: $Enums.VehicleSituation[] | ListEnumVehicleSituationFieldRefInput<$PrismaModel>
    not?: NestedEnumVehicleSituationFilter<$PrismaModel> | $Enums.VehicleSituation
  }

  export type NestedEnumVehicleUsageFilter<$PrismaModel = never> = {
    equals?: $Enums.VehicleUsage | EnumVehicleUsageFieldRefInput<$PrismaModel>
    in?: $Enums.VehicleUsage[] | ListEnumVehicleUsageFieldRefInput<$PrismaModel>
    notIn?: $Enums.VehicleUsage[] | ListEnumVehicleUsageFieldRefInput<$PrismaModel>
    not?: NestedEnumVehicleUsageFilter<$PrismaModel> | $Enums.VehicleUsage
  }

  export type NestedEnumVehicleTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.VehicleType | EnumVehicleTypeFieldRefInput<$PrismaModel>
    in?: $Enums.VehicleType[] | ListEnumVehicleTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.VehicleType[] | ListEnumVehicleTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumVehicleTypeWithAggregatesFilter<$PrismaModel> | $Enums.VehicleType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumVehicleTypeFilter<$PrismaModel>
    _max?: NestedEnumVehicleTypeFilter<$PrismaModel>
  }

  export type NestedEnumVehicleSituationWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.VehicleSituation | EnumVehicleSituationFieldRefInput<$PrismaModel>
    in?: $Enums.VehicleSituation[] | ListEnumVehicleSituationFieldRefInput<$PrismaModel>
    notIn?: $Enums.VehicleSituation[] | ListEnumVehicleSituationFieldRefInput<$PrismaModel>
    not?: NestedEnumVehicleSituationWithAggregatesFilter<$PrismaModel> | $Enums.VehicleSituation
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumVehicleSituationFilter<$PrismaModel>
    _max?: NestedEnumVehicleSituationFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedEnumVehicleUsageWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.VehicleUsage | EnumVehicleUsageFieldRefInput<$PrismaModel>
    in?: $Enums.VehicleUsage[] | ListEnumVehicleUsageFieldRefInput<$PrismaModel>
    notIn?: $Enums.VehicleUsage[] | ListEnumVehicleUsageFieldRefInput<$PrismaModel>
    not?: NestedEnumVehicleUsageWithAggregatesFilter<$PrismaModel> | $Enums.VehicleUsage
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumVehicleUsageFilter<$PrismaModel>
    _max?: NestedEnumVehicleUsageFilter<$PrismaModel>
  }

  export type NestedEnumEmploymentTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.EmploymentType | EnumEmploymentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.EmploymentType[] | ListEnumEmploymentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.EmploymentType[] | ListEnumEmploymentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumEmploymentTypeFilter<$PrismaModel> | $Enums.EmploymentType
  }

  export type NestedEnumEmploymentTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EmploymentType | EnumEmploymentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.EmploymentType[] | ListEnumEmploymentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.EmploymentType[] | ListEnumEmploymentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumEmploymentTypeWithAggregatesFilter<$PrismaModel> | $Enums.EmploymentType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEmploymentTypeFilter<$PrismaModel>
    _max?: NestedEnumEmploymentTypeFilter<$PrismaModel>
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedEnumIncomeSourceNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.IncomeSource | EnumIncomeSourceFieldRefInput<$PrismaModel> | null
    in?: $Enums.IncomeSource[] | ListEnumIncomeSourceFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.IncomeSource[] | ListEnumIncomeSourceFieldRefInput<$PrismaModel> | null
    not?: NestedEnumIncomeSourceNullableFilter<$PrismaModel> | $Enums.IncomeSource | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedEnumIncomeSourceNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.IncomeSource | EnumIncomeSourceFieldRefInput<$PrismaModel> | null
    in?: $Enums.IncomeSource[] | ListEnumIncomeSourceFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.IncomeSource[] | ListEnumIncomeSourceFieldRefInput<$PrismaModel> | null
    not?: NestedEnumIncomeSourceNullableWithAggregatesFilter<$PrismaModel> | $Enums.IncomeSource | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumIncomeSourceNullableFilter<$PrismaModel>
    _max?: NestedEnumIncomeSourceNullableFilter<$PrismaModel>
  }

  export type NestedEnumAccountTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.AccountType | EnumAccountTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AccountType[] | ListEnumAccountTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AccountType[] | ListEnumAccountTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAccountTypeFilter<$PrismaModel> | $Enums.AccountType
  }

  export type NestedEnumAccountTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AccountType | EnumAccountTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AccountType[] | ListEnumAccountTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AccountType[] | ListEnumAccountTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAccountTypeWithAggregatesFilter<$PrismaModel> | $Enums.AccountType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAccountTypeFilter<$PrismaModel>
    _max?: NestedEnumAccountTypeFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedEnumFinancingTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.FinancingType | EnumFinancingTypeFieldRefInput<$PrismaModel>
    in?: $Enums.FinancingType[] | ListEnumFinancingTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.FinancingType[] | ListEnumFinancingTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumFinancingTypeFilter<$PrismaModel> | $Enums.FinancingType
  }

  export type NestedEnumFinancingTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FinancingType | EnumFinancingTypeFieldRefInput<$PrismaModel>
    in?: $Enums.FinancingType[] | ListEnumFinancingTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.FinancingType[] | ListEnumFinancingTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumFinancingTypeWithAggregatesFilter<$PrismaModel> | $Enums.FinancingType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumFinancingTypeFilter<$PrismaModel>
    _max?: NestedEnumFinancingTypeFilter<$PrismaModel>
  }

  export type NestedEnumDiseaseNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.Disease | EnumDiseaseFieldRefInput<$PrismaModel> | null
    in?: $Enums.Disease[] | ListEnumDiseaseFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.Disease[] | ListEnumDiseaseFieldRefInput<$PrismaModel> | null
    not?: NestedEnumDiseaseNullableFilter<$PrismaModel> | $Enums.Disease | null
  }

  export type NestedEnumDiseaseNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Disease | EnumDiseaseFieldRefInput<$PrismaModel> | null
    in?: $Enums.Disease[] | ListEnumDiseaseFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.Disease[] | ListEnumDiseaseFieldRefInput<$PrismaModel> | null
    not?: NestedEnumDiseaseNullableWithAggregatesFilter<$PrismaModel> | $Enums.Disease | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumDiseaseNullableFilter<$PrismaModel>
    _max?: NestedEnumDiseaseNullableFilter<$PrismaModel>
  }

  export type NestedEnumDeclaration_TypeFilter<$PrismaModel = never> = {
    equals?: $Enums.Declaration_Type | EnumDeclaration_TypeFieldRefInput<$PrismaModel>
    in?: $Enums.Declaration_Type[] | ListEnumDeclaration_TypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.Declaration_Type[] | ListEnumDeclaration_TypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDeclaration_TypeFilter<$PrismaModel> | $Enums.Declaration_Type
  }

  export type NestedEnumDeclaration_TypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Declaration_Type | EnumDeclaration_TypeFieldRefInput<$PrismaModel>
    in?: $Enums.Declaration_Type[] | ListEnumDeclaration_TypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.Declaration_Type[] | ListEnumDeclaration_TypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDeclaration_TypeWithAggregatesFilter<$PrismaModel> | $Enums.Declaration_Type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDeclaration_TypeFilter<$PrismaModel>
    _max?: NestedEnumDeclaration_TypeFilter<$PrismaModel>
  }

  export type NestedEnumAnnouncementTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.AnnouncementType | EnumAnnouncementTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AnnouncementType[] | ListEnumAnnouncementTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AnnouncementType[] | ListEnumAnnouncementTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAnnouncementTypeFilter<$PrismaModel> | $Enums.AnnouncementType
  }

  export type NestedEnumAnnouncementTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AnnouncementType | EnumAnnouncementTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AnnouncementType[] | ListEnumAnnouncementTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AnnouncementType[] | ListEnumAnnouncementTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAnnouncementTypeWithAggregatesFilter<$PrismaModel> | $Enums.AnnouncementType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAnnouncementTypeFilter<$PrismaModel>
    _max?: NestedEnumAnnouncementTypeFilter<$PrismaModel>
  }

  export type NestedEnumLevelTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.LevelType | EnumLevelTypeFieldRefInput<$PrismaModel>
    in?: $Enums.LevelType[] | ListEnumLevelTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.LevelType[] | ListEnumLevelTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumLevelTypeFilter<$PrismaModel> | $Enums.LevelType
  }

  export type NestedEnumBasicEducationTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.BasicEducationType | EnumBasicEducationTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.BasicEducationType[] | ListEnumBasicEducationTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.BasicEducationType[] | ListEnumBasicEducationTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumBasicEducationTypeNullableFilter<$PrismaModel> | $Enums.BasicEducationType | null
  }

  export type NestedEnumScholarshipOfferTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.ScholarshipOfferType | EnumScholarshipOfferTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.ScholarshipOfferType[] | ListEnumScholarshipOfferTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.ScholarshipOfferType[] | ListEnumScholarshipOfferTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumScholarshipOfferTypeNullableFilter<$PrismaModel> | $Enums.ScholarshipOfferType | null
  }

  export type NestedEnumHigherEducationScholarshipTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.HigherEducationScholarshipType | EnumHigherEducationScholarshipTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.HigherEducationScholarshipType[] | ListEnumHigherEducationScholarshipTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.HigherEducationScholarshipType[] | ListEnumHigherEducationScholarshipTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumHigherEducationScholarshipTypeNullableFilter<$PrismaModel> | $Enums.HigherEducationScholarshipType | null
  }

  export type NestedEnumOfferedCourseTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.OfferedCourseType | EnumOfferedCourseTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.OfferedCourseType[] | ListEnumOfferedCourseTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.OfferedCourseType[] | ListEnumOfferedCourseTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumOfferedCourseTypeNullableFilter<$PrismaModel> | $Enums.OfferedCourseType | null
  }

  export type NestedEnumLevelTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.LevelType | EnumLevelTypeFieldRefInput<$PrismaModel>
    in?: $Enums.LevelType[] | ListEnumLevelTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.LevelType[] | ListEnumLevelTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumLevelTypeWithAggregatesFilter<$PrismaModel> | $Enums.LevelType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumLevelTypeFilter<$PrismaModel>
    _max?: NestedEnumLevelTypeFilter<$PrismaModel>
  }

  export type NestedEnumBasicEducationTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BasicEducationType | EnumBasicEducationTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.BasicEducationType[] | ListEnumBasicEducationTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.BasicEducationType[] | ListEnumBasicEducationTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumBasicEducationTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.BasicEducationType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumBasicEducationTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumBasicEducationTypeNullableFilter<$PrismaModel>
  }

  export type NestedEnumScholarshipOfferTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ScholarshipOfferType | EnumScholarshipOfferTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.ScholarshipOfferType[] | ListEnumScholarshipOfferTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.ScholarshipOfferType[] | ListEnumScholarshipOfferTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumScholarshipOfferTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.ScholarshipOfferType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumScholarshipOfferTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumScholarshipOfferTypeNullableFilter<$PrismaModel>
  }

  export type NestedEnumHigherEducationScholarshipTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.HigherEducationScholarshipType | EnumHigherEducationScholarshipTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.HigherEducationScholarshipType[] | ListEnumHigherEducationScholarshipTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.HigherEducationScholarshipType[] | ListEnumHigherEducationScholarshipTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumHigherEducationScholarshipTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.HigherEducationScholarshipType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumHigherEducationScholarshipTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumHigherEducationScholarshipTypeNullableFilter<$PrismaModel>
  }

  export type NestedEnumOfferedCourseTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OfferedCourseType | EnumOfferedCourseTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.OfferedCourseType[] | ListEnumOfferedCourseTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.OfferedCourseType[] | ListEnumOfferedCourseTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumOfferedCourseTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.OfferedCourseType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumOfferedCourseTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumOfferedCourseTypeNullableFilter<$PrismaModel>
  }

  export type NestedEnumApplicationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ApplicationStatus | EnumApplicationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumApplicationStatusFilter<$PrismaModel> | $Enums.ApplicationStatus
  }

  export type NestedEnumApplicationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ApplicationStatus | EnumApplicationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumApplicationStatusWithAggregatesFilter<$PrismaModel> | $Enums.ApplicationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumApplicationStatusFilter<$PrismaModel>
    _max?: NestedEnumApplicationStatusFilter<$PrismaModel>
  }

  export type NestedEnumSolicitationTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.SolicitationType | EnumSolicitationTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.SolicitationType[] | ListEnumSolicitationTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.SolicitationType[] | ListEnumSolicitationTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumSolicitationTypeNullableFilter<$PrismaModel> | $Enums.SolicitationType | null
  }

  export type NestedEnumSolicitationTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SolicitationType | EnumSolicitationTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.SolicitationType[] | ListEnumSolicitationTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.SolicitationType[] | ListEnumSolicitationTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumSolicitationTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.SolicitationType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumSolicitationTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumSolicitationTypeNullableFilter<$PrismaModel>
  }

  export type ApplicationCreateWithoutCandidateInput = {
    id?: string
    status: $Enums.ApplicationStatus
    candidateName?: string | null
    SocialAssistantName?: string | null
    CadUnico?: boolean | null
    hasSevereDesease?: boolean | null
    averageIncome?: number | null
    perCapita?: number | null
    position?: number | null
    number?: number
    announcement: AnnouncementCreateNestedOneWithoutApplicationInput
    EducationLevel: EducationLevelCreateNestedOneWithoutApplicationInput
    SocialAssistant?: SocialAssistantCreateNestedOneWithoutApplicationInput
    applicationHistories?: ApplicationHistoryCreateNestedManyWithoutApplicationInput
    ScholarshipGranted?: ScholarshipGrantedCreateNestedOneWithoutApplicationInput
    responsible?: LegalResponsibleCreateNestedOneWithoutApplicationInput
  }

  export type ApplicationUncheckedCreateWithoutCandidateInput = {
    id?: string
    announcement_id: string
    status: $Enums.ApplicationStatus
    socialAssistant_id?: string | null
    educationLevel_id: string
    candidateName?: string | null
    SocialAssistantName?: string | null
    CadUnico?: boolean | null
    hasSevereDesease?: boolean | null
    averageIncome?: number | null
    perCapita?: number | null
    position?: number | null
    number?: number
    reponsible_id?: string | null
    applicationHistories?: ApplicationHistoryUncheckedCreateNestedManyWithoutApplicationInput
    ScholarshipGranted?: ScholarshipGrantedUncheckedCreateNestedOneWithoutApplicationInput
  }

  export type ApplicationCreateOrConnectWithoutCandidateInput = {
    where: ApplicationWhereUniqueInput
    create: XOR<ApplicationCreateWithoutCandidateInput, ApplicationUncheckedCreateWithoutCandidateInput>
  }

  export type ApplicationCreateManyCandidateInputEnvelope = {
    data: ApplicationCreateManyCandidateInput | ApplicationCreateManyCandidateInput[]
    skipDuplicates?: boolean
  }

  export type CreditCardCreateWithoutCandidateInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    usersCount: number
    cardType: string
    bankName: string
    cardFlag: string
    invoiceValue: number
    application_id: string
    familyMember?: FamilyMemberCreateNestedOneWithoutCreditCardInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutCreditCardInput
  }

  export type CreditCardUncheckedCreateWithoutCandidateInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    usersCount: number
    cardType: string
    bankName: string
    cardFlag: string
    invoiceValue: number
    familyMember_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type CreditCardCreateOrConnectWithoutCandidateInput = {
    where: CreditCardWhereUniqueInput
    create: XOR<CreditCardCreateWithoutCandidateInput, CreditCardUncheckedCreateWithoutCandidateInput>
  }

  export type CreditCardCreateManyCandidateInputEnvelope = {
    data: CreditCardCreateManyCandidateInput | CreditCardCreateManyCandidateInput[]
    skipDuplicates?: boolean
  }

  export type ExpenseCreateWithoutCandidateInput = {
    id?: string
    main_id?: string | null
    date: Date | string
    waterSewage?: number | null
    electricity?: number | null
    landlinePhone?: number | null
    mobilePhone?: number | null
    food?: number | null
    rent?: number | null
    garageRent?: number | null
    condominium?: number | null
    cableTV?: number | null
    streamingServices?: number | null
    fuel?: number | null
    annualIPVA?: number | null
    annualIPTU?: number | null
    annualITR?: number | null
    annualIR?: number | null
    INSS?: number | null
    publicTransport?: number | null
    schoolTransport?: number | null
    internet?: number | null
    courses?: number | null
    healthPlan?: number | null
    dentalPlan?: number | null
    medicationExpenses?: number | null
    totalExpense?: number | null
    installmentCountIPTU?: number | null
    installmentCountIPVA?: number | null
    installmentCountIR?: number | null
    installmentCountITR?: number | null
    installmentValueIPTU?: number | null
    installmentValueIPVA?: number | null
    installmentValueIR?: number | null
    installmentValueITR?: number | null
    financing?: number | null
    creditCard?: number | null
    optedForInstallmentIPTU?: boolean | null
    optedForInstallmentIPVA?: boolean | null
    optedForInstallmentIR?: boolean | null
    optedForInstallmentITR?: boolean | null
    otherExpensesDescription?: ExpenseCreateotherExpensesDescriptionInput | string[]
    otherExpensesValue?: ExpenseCreateotherExpensesValueInput | number[]
    application_id: string
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutExpenseInput
  }

  export type ExpenseUncheckedCreateWithoutCandidateInput = {
    id?: string
    main_id?: string | null
    date: Date | string
    waterSewage?: number | null
    electricity?: number | null
    landlinePhone?: number | null
    mobilePhone?: number | null
    food?: number | null
    rent?: number | null
    garageRent?: number | null
    condominium?: number | null
    cableTV?: number | null
    streamingServices?: number | null
    fuel?: number | null
    annualIPVA?: number | null
    annualIPTU?: number | null
    annualITR?: number | null
    annualIR?: number | null
    INSS?: number | null
    publicTransport?: number | null
    schoolTransport?: number | null
    internet?: number | null
    courses?: number | null
    healthPlan?: number | null
    dentalPlan?: number | null
    medicationExpenses?: number | null
    totalExpense?: number | null
    installmentCountIPTU?: number | null
    installmentCountIPVA?: number | null
    installmentCountIR?: number | null
    installmentCountITR?: number | null
    installmentValueIPTU?: number | null
    installmentValueIPVA?: number | null
    installmentValueIR?: number | null
    installmentValueITR?: number | null
    financing?: number | null
    creditCard?: number | null
    optedForInstallmentIPTU?: boolean | null
    optedForInstallmentIPVA?: boolean | null
    optedForInstallmentIR?: boolean | null
    optedForInstallmentITR?: boolean | null
    otherExpensesDescription?: ExpenseCreateotherExpensesDescriptionInput | string[]
    otherExpensesValue?: ExpenseCreateotherExpensesValueInput | number[]
    legalResponsibleId?: string | null
    application_id: string
  }

  export type ExpenseCreateOrConnectWithoutCandidateInput = {
    where: ExpenseWhereUniqueInput
    create: XOR<ExpenseCreateWithoutCandidateInput, ExpenseUncheckedCreateWithoutCandidateInput>
  }

  export type ExpenseCreateManyCandidateInputEnvelope = {
    data: ExpenseCreateManyCandidateInput | ExpenseCreateManyCandidateInput[]
    skipDuplicates?: boolean
  }

  export type FinancingCreateWithoutCandidateInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    installmentValue: number
    totalInstallments: number
    paidInstallments: number
    bankName: string
    otherFinancing?: string | null
    financingType: $Enums.FinancingType
    application_id: string
    familyMember?: FamilyMemberCreateNestedOneWithoutFinancingInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutFinancingInput
  }

  export type FinancingUncheckedCreateWithoutCandidateInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    installmentValue: number
    totalInstallments: number
    paidInstallments: number
    bankName: string
    familyMember_id?: string | null
    otherFinancing?: string | null
    financingType: $Enums.FinancingType
    legalResponsibleId?: string | null
    application_id: string
  }

  export type FinancingCreateOrConnectWithoutCandidateInput = {
    where: FinancingWhereUniqueInput
    create: XOR<FinancingCreateWithoutCandidateInput, FinancingUncheckedCreateWithoutCandidateInput>
  }

  export type FinancingCreateManyCandidateInputEnvelope = {
    data: FinancingCreateManyCandidateInput | FinancingCreateManyCandidateInput[]
    skipDuplicates?: boolean
  }

  export type IdentityDetailsCreateWithoutCandidateInput = {
    id?: string
    fullName: string
    socialName?: string | null
    main_id?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF?: string | null
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    CadUnico?: boolean
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    address?: string | null
    addressNumber?: string | null
    complement?: string | null
    neighborhood?: string | null
    city?: string | null
    UF?: $Enums.COUNTRY | null
    CEP?: string | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    email?: string | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    incomeSource?: IdentityDetailsCreateincomeSourceInput | $Enums.IncomeSource[]
    livesAlone: boolean
    intendsToGetScholarship: boolean
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    yearsBenefitedFromCebas_basic?: IdentityDetailsCreateyearsBenefitedFromCebas_basicInput | string[]
    scholarshipType_basic?: $Enums.ScholarshipType | null
    institutionName_basic?: string | null
    institutionCNPJ_basic?: string | null
    benefitedFromCebasScholarship_professional?: boolean | null
    lastYearBenefitedFromCebas_professional?: string | null
    scholarshipType_professional?: $Enums.ScholarshipType | null
    institutionName_professional?: string | null
    institutionCNPJ_professional?: string | null
    nameOfScholarshipCourse_professional?: string | null
    application_id: string
    responsible?: LegalResponsibleCreateNestedOneWithoutIdentityDetailsInput
  }

  export type IdentityDetailsUncheckedCreateWithoutCandidateInput = {
    id?: string
    fullName: string
    socialName?: string | null
    main_id?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF?: string | null
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    CadUnico?: boolean
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    address?: string | null
    addressNumber?: string | null
    complement?: string | null
    neighborhood?: string | null
    city?: string | null
    UF?: $Enums.COUNTRY | null
    CEP?: string | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    email?: string | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    incomeSource?: IdentityDetailsCreateincomeSourceInput | $Enums.IncomeSource[]
    livesAlone: boolean
    intendsToGetScholarship: boolean
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    yearsBenefitedFromCebas_basic?: IdentityDetailsCreateyearsBenefitedFromCebas_basicInput | string[]
    scholarshipType_basic?: $Enums.ScholarshipType | null
    institutionName_basic?: string | null
    institutionCNPJ_basic?: string | null
    benefitedFromCebasScholarship_professional?: boolean | null
    lastYearBenefitedFromCebas_professional?: string | null
    scholarshipType_professional?: $Enums.ScholarshipType | null
    institutionName_professional?: string | null
    institutionCNPJ_professional?: string | null
    nameOfScholarshipCourse_professional?: string | null
    responsible_id?: string | null
    application_id: string
  }

  export type IdentityDetailsCreateOrConnectWithoutCandidateInput = {
    where: IdentityDetailsWhereUniqueInput
    create: XOR<IdentityDetailsCreateWithoutCandidateInput, IdentityDetailsUncheckedCreateWithoutCandidateInput>
  }

  export type IdentityDetailsCreateManyCandidateInputEnvelope = {
    data: IdentityDetailsCreateManyCandidateInput | IdentityDetailsCreateManyCandidateInput[]
    skipDuplicates?: boolean
  }

  export type FamilyMemberIncomeCreateWithoutCandidateInput = {
    id?: string
    employmentType: $Enums.EmploymentType
    averageIncome: string
    main_id?: string | null
    admissionDate?: Date | string | null
    position?: string | null
    payingSource?: string | null
    payingSourcePhone?: string | null
    startDate?: Date | string | null
    CNPJ?: string | null
    financialAssistantCPF?: string | null
    socialReason?: string | null
    fantasyName?: string | null
    CPNJ?: string | null
    receivesUnemployment?: boolean | null
    parcels?: number | null
    firstParcelDate?: Date | string | null
    parcelValue?: number | null
    quantity?: number
    application_id: string
    familyMember?: FamilyMemberCreateNestedOneWithoutFamilyMemberIncomeInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutFamilyMemberIncomeInput
  }

  export type FamilyMemberIncomeUncheckedCreateWithoutCandidateInput = {
    id?: string
    employmentType: $Enums.EmploymentType
    averageIncome: string
    main_id?: string | null
    admissionDate?: Date | string | null
    position?: string | null
    payingSource?: string | null
    payingSourcePhone?: string | null
    startDate?: Date | string | null
    CNPJ?: string | null
    financialAssistantCPF?: string | null
    socialReason?: string | null
    fantasyName?: string | null
    CPNJ?: string | null
    receivesUnemployment?: boolean | null
    parcels?: number | null
    firstParcelDate?: Date | string | null
    parcelValue?: number | null
    familyMember_id?: string | null
    quantity?: number
    application_id: string
    legalResponsibleId?: string | null
  }

  export type FamilyMemberIncomeCreateOrConnectWithoutCandidateInput = {
    where: FamilyMemberIncomeWhereUniqueInput
    create: XOR<FamilyMemberIncomeCreateWithoutCandidateInput, FamilyMemberIncomeUncheckedCreateWithoutCandidateInput>
  }

  export type FamilyMemberIncomeCreateManyCandidateInputEnvelope = {
    data: FamilyMemberIncomeCreateManyCandidateInput | FamilyMemberIncomeCreateManyCandidateInput[]
    skipDuplicates?: boolean
  }

  export type LoanCreateWithoutCandidateInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    installmentValue: number
    totalInstallments: number
    paidInstallments: number
    bankName: string
    application_id: string
    familyMember?: FamilyMemberCreateNestedOneWithoutLoanInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutLoanInput
  }

  export type LoanUncheckedCreateWithoutCandidateInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    installmentValue: number
    totalInstallments: number
    paidInstallments: number
    bankName: string
    familyMember_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type LoanCreateOrConnectWithoutCandidateInput = {
    where: LoanWhereUniqueInput
    create: XOR<LoanCreateWithoutCandidateInput, LoanUncheckedCreateWithoutCandidateInput>
  }

  export type LoanCreateManyCandidateInputEnvelope = {
    data: LoanCreateManyCandidateInput | LoanCreateManyCandidateInput[]
    skipDuplicates?: boolean
  }

  export type OtherExpenseCreateWithoutCandidateInput = {
    id?: string
    main_id?: string | null
    description: string
    value: number
    application_id: string
    familyMember?: FamilyMemberCreateNestedOneWithoutOtherExpenseInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutOtherExpenseInput
  }

  export type OtherExpenseUncheckedCreateWithoutCandidateInput = {
    id?: string
    main_id?: string | null
    description: string
    value: number
    familyMember_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type OtherExpenseCreateOrConnectWithoutCandidateInput = {
    where: OtherExpenseWhereUniqueInput
    create: XOR<OtherExpenseCreateWithoutCandidateInput, OtherExpenseUncheckedCreateWithoutCandidateInput>
  }

  export type OtherExpenseCreateManyCandidateInputEnvelope = {
    data: OtherExpenseCreateManyCandidateInput | OtherExpenseCreateManyCandidateInput[]
    skipDuplicates?: boolean
  }

  export type VehicleCreateWithoutCandidateInput = {
    id?: string
    vehicleType: $Enums.VehicleType
    modelAndBrand: string
    main_id?: string | null
    manufacturingYear: number
    situation: $Enums.VehicleSituation
    financedMonths?: number | null
    monthsToPayOff?: number | null
    hasInsurance?: boolean
    insuranceValue?: number | null
    usage: $Enums.VehicleUsage
    owners_id?: VehicleCreateowners_idInput | string[]
    application_id: string
    FamilyMemberToVehicle?: FamilyMemberToVehicleCreateNestedManyWithoutVehicleInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutVehicleInput
  }

  export type VehicleUncheckedCreateWithoutCandidateInput = {
    id?: string
    vehicleType: $Enums.VehicleType
    modelAndBrand: string
    main_id?: string | null
    manufacturingYear: number
    situation: $Enums.VehicleSituation
    financedMonths?: number | null
    monthsToPayOff?: number | null
    hasInsurance?: boolean
    insuranceValue?: number | null
    usage: $Enums.VehicleUsage
    owners_id?: VehicleCreateowners_idInput | string[]
    legalResponsibleId?: string | null
    application_id: string
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedCreateNestedManyWithoutVehicleInput
  }

  export type VehicleCreateOrConnectWithoutCandidateInput = {
    where: VehicleWhereUniqueInput
    create: XOR<VehicleCreateWithoutCandidateInput, VehicleUncheckedCreateWithoutCandidateInput>
  }

  export type VehicleCreateManyCandidateInputEnvelope = {
    data: VehicleCreateManyCandidateInput | VehicleCreateManyCandidateInput[]
    skipDuplicates?: boolean
  }

  export type LegalResponsibleCreateWithoutCandidateInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutResponsibleInput
    Housing?: HousingCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleUncheckedCreateWithoutCandidateInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutResponsibleInput
    Housing?: HousingUncheckedCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanUncheckedCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleCreateOrConnectWithoutCandidateInput = {
    where: LegalResponsibleWhereUniqueInput
    create: XOR<LegalResponsibleCreateWithoutCandidateInput, LegalResponsibleUncheckedCreateWithoutCandidateInput>
  }

  export type FamilyMemberCreateWithoutCandidateInput = {
    id?: string
    relationship: $Enums.Relationship
    otherRelationship?: string | null
    main_id?: string | null
    fullName: string
    socialName?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    numberOfBirthRegister?: string | null
    bookOfBirthRegister?: string | null
    pageOfBirthRegister?: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    email?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    educationPlace?: $Enums.INSTITUTION_TYPE | null
    institutionName?: string | null
    coursingEducationLevel?: $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: string | null
    turnOfEducation?: $Enums.SHIFT | null
    hasScholarship?: boolean | null
    percentageOfScholarship?: string | null
    monthlyAmount?: string | null
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    benefitedFromCebasScholarship_professional?: boolean | null
    CadUnico?: boolean | null
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    incomeSource?: FamilyMemberCreateincomeSourceInput | $Enums.IncomeSource[]
    application_id: string
    CreditCard?: CreditCardCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutFamilyMemberInput
    Financing?: FinancingCreateNestedManyWithoutFamilyMemberInput
    Loan?: LoanCreateNestedManyWithoutFamilyMemberInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutFamilyMemberInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleCreateNestedManyWithoutFamilyMembersInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutFamilyMemberInput
    Medication?: MedicationCreateNestedManyWithoutFamilyMemberInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutFamillyMemberInput
    BankAccount?: BankAccountCreateNestedManyWithoutFamilyMemberInput
    Declarations?: DeclarationsCreateNestedManyWithoutFamilyMemberInput
  }

  export type FamilyMemberUncheckedCreateWithoutCandidateInput = {
    id?: string
    relationship: $Enums.Relationship
    otherRelationship?: string | null
    main_id?: string | null
    fullName: string
    socialName?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    numberOfBirthRegister?: string | null
    bookOfBirthRegister?: string | null
    pageOfBirthRegister?: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    email?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    educationPlace?: $Enums.INSTITUTION_TYPE | null
    institutionName?: string | null
    coursingEducationLevel?: $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: string | null
    turnOfEducation?: $Enums.SHIFT | null
    hasScholarship?: boolean | null
    percentageOfScholarship?: string | null
    monthlyAmount?: string | null
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    benefitedFromCebasScholarship_professional?: boolean | null
    CadUnico?: boolean | null
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    incomeSource?: FamilyMemberCreateincomeSourceInput | $Enums.IncomeSource[]
    legalResponsibleId?: string | null
    application_id: string
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutFamilyMemberInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutFamilyMemberInput
    Loan?: LoanUncheckedCreateNestedManyWithoutFamilyMemberInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutFamilyMemberInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedCreateNestedManyWithoutFamilyMembersInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutFamilyMemberInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutFamilyMemberInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutFamilyMemberInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutFamilyMemberInput
  }

  export type FamilyMemberCreateOrConnectWithoutCandidateInput = {
    where: FamilyMemberWhereUniqueInput
    create: XOR<FamilyMemberCreateWithoutCandidateInput, FamilyMemberUncheckedCreateWithoutCandidateInput>
  }

  export type FamilyMemberCreateManyCandidateInputEnvelope = {
    data: FamilyMemberCreateManyCandidateInput | FamilyMemberCreateManyCandidateInput[]
    skipDuplicates?: boolean
  }

  export type HousingCreateWithoutCandidateInput = {
    id?: string
    propertyStatus: $Enums.PropertyStatus
    contractType?: $Enums.ContractType | null
    main_id?: string | null
    grantorName?: string | null
    timeLivingInProperty: $Enums.TimeLivingInProperty
    domicileType: $Enums.DomicileType
    numberOfRooms: $Enums.NumberOfRooms
    numberOfBedrooms: number
    application_id: string
    responsible?: LegalResponsibleCreateNestedOneWithoutHousingInput
  }

  export type HousingUncheckedCreateWithoutCandidateInput = {
    id?: string
    propertyStatus: $Enums.PropertyStatus
    contractType?: $Enums.ContractType | null
    main_id?: string | null
    grantorName?: string | null
    timeLivingInProperty: $Enums.TimeLivingInProperty
    domicileType: $Enums.DomicileType
    numberOfRooms: $Enums.NumberOfRooms
    numberOfBedrooms: number
    responsible_id?: string | null
    application_id: string
  }

  export type HousingCreateOrConnectWithoutCandidateInput = {
    where: HousingWhereUniqueInput
    create: XOR<HousingCreateWithoutCandidateInput, HousingUncheckedCreateWithoutCandidateInput>
  }

  export type HousingCreateManyCandidateInputEnvelope = {
    data: HousingCreateManyCandidateInput | HousingCreateManyCandidateInput[]
    skipDuplicates?: boolean
  }

  export type MonthlyIncomeCreateWithoutCandidateInput = {
    id?: string
    date?: Date | string | null
    main_id?: string | null
    grossAmount?: number | null
    liquidAmount?: number | null
    proLabore?: number | null
    dividends?: number | null
    total?: number | null
    deductionValue?: Decimal | DecimalJsLike | number | string | null
    publicPension?: Decimal | DecimalJsLike | number | string | null
    incomeTax?: Decimal | DecimalJsLike | number | string | null
    otherDeductions?: Decimal | DecimalJsLike | number | string | null
    foodAllowanceValue?: Decimal | DecimalJsLike | number | string | null
    transportAllowanceValue?: Decimal | DecimalJsLike | number | string | null
    expenseReimbursementValue?: Decimal | DecimalJsLike | number | string | null
    advancePaymentValue?: Decimal | DecimalJsLike | number | string | null
    reversalValue?: Decimal | DecimalJsLike | number | string | null
    compensationValue?: Decimal | DecimalJsLike | number | string | null
    judicialPensionValue?: Decimal | DecimalJsLike | number | string | null
    incomeSource?: $Enums.IncomeSource | null
    application_id: string
    familyMember?: FamilyMemberCreateNestedOneWithoutMonthlyIncomeInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutMonthlyIncomeInput
  }

  export type MonthlyIncomeUncheckedCreateWithoutCandidateInput = {
    id?: string
    date?: Date | string | null
    main_id?: string | null
    grossAmount?: number | null
    liquidAmount?: number | null
    proLabore?: number | null
    dividends?: number | null
    total?: number | null
    deductionValue?: Decimal | DecimalJsLike | number | string | null
    publicPension?: Decimal | DecimalJsLike | number | string | null
    incomeTax?: Decimal | DecimalJsLike | number | string | null
    otherDeductions?: Decimal | DecimalJsLike | number | string | null
    foodAllowanceValue?: Decimal | DecimalJsLike | number | string | null
    transportAllowanceValue?: Decimal | DecimalJsLike | number | string | null
    expenseReimbursementValue?: Decimal | DecimalJsLike | number | string | null
    advancePaymentValue?: Decimal | DecimalJsLike | number | string | null
    reversalValue?: Decimal | DecimalJsLike | number | string | null
    compensationValue?: Decimal | DecimalJsLike | number | string | null
    judicialPensionValue?: Decimal | DecimalJsLike | number | string | null
    familyMember_id?: string | null
    incomeSource?: $Enums.IncomeSource | null
    application_id: string
    legalResponsibleId?: string | null
  }

  export type MonthlyIncomeCreateOrConnectWithoutCandidateInput = {
    where: MonthlyIncomeWhereUniqueInput
    create: XOR<MonthlyIncomeCreateWithoutCandidateInput, MonthlyIncomeUncheckedCreateWithoutCandidateInput>
  }

  export type MonthlyIncomeCreateManyCandidateInputEnvelope = {
    data: MonthlyIncomeCreateManyCandidateInput | MonthlyIncomeCreateManyCandidateInput[]
    skipDuplicates?: boolean
  }

  export type FamilyMemberDiseaseCreateWithoutCandidateInput = {
    id?: string
    main_id?: string | null
    disease?: $Enums.Disease | null
    diseases?: FamilyMemberDiseaseCreatediseasesInput | $Enums.Disease[]
    specificDisease?: string | null
    hasMedicalReport: boolean
    application_id: string
    familyMember?: FamilyMemberCreateNestedOneWithoutFamilyMemberDiseaseInput
    legalResponsible?: LegalResponsibleCreateNestedOneWithoutFamilyMemberDiseaseInput
    Medication?: MedicationCreateNestedManyWithoutFamilyMemberDiseaseInput
  }

  export type FamilyMemberDiseaseUncheckedCreateWithoutCandidateInput = {
    id?: string
    main_id?: string | null
    disease?: $Enums.Disease | null
    diseases?: FamilyMemberDiseaseCreatediseasesInput | $Enums.Disease[]
    specificDisease?: string | null
    hasMedicalReport: boolean
    familyMember_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
    Medication?: MedicationUncheckedCreateNestedManyWithoutFamilyMemberDiseaseInput
  }

  export type FamilyMemberDiseaseCreateOrConnectWithoutCandidateInput = {
    where: FamilyMemberDiseaseWhereUniqueInput
    create: XOR<FamilyMemberDiseaseCreateWithoutCandidateInput, FamilyMemberDiseaseUncheckedCreateWithoutCandidateInput>
  }

  export type FamilyMemberDiseaseCreateManyCandidateInputEnvelope = {
    data: FamilyMemberDiseaseCreateManyCandidateInput | FamilyMemberDiseaseCreateManyCandidateInput[]
    skipDuplicates?: boolean
  }

  export type MedicationCreateWithoutCandidateInput = {
    id?: string
    main_id?: string | null
    medicationName: string
    obtainedPublicly: boolean
    specificMedicationPublicly?: string | null
    application_id: string
    familyMember?: FamilyMemberCreateNestedOneWithoutMedicationInput
    legalResponsible?: LegalResponsibleCreateNestedOneWithoutMedicationInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedOneWithoutMedicationInput
  }

  export type MedicationUncheckedCreateWithoutCandidateInput = {
    id?: string
    main_id?: string | null
    medicationName: string
    obtainedPublicly: boolean
    specificMedicationPublicly?: string | null
    familyMember_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
    familyMemberDiseaseId?: string | null
  }

  export type MedicationCreateOrConnectWithoutCandidateInput = {
    where: MedicationWhereUniqueInput
    create: XOR<MedicationCreateWithoutCandidateInput, MedicationUncheckedCreateWithoutCandidateInput>
  }

  export type MedicationCreateManyCandidateInputEnvelope = {
    data: MedicationCreateManyCandidateInput | MedicationCreateManyCandidateInput[]
    skipDuplicates?: boolean
  }

  export type BankAccountCreateWithoutCandidateInput = {
    id?: string
    main_id?: string | null
    bankName: string
    agencyNumber: string
    accountNumber: string
    accountType: $Enums.AccountType
    application_id: string
    familyMember?: FamilyMemberCreateNestedOneWithoutBankAccountInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutBankAccountInput
  }

  export type BankAccountUncheckedCreateWithoutCandidateInput = {
    id?: string
    main_id?: string | null
    bankName: string
    agencyNumber: string
    accountNumber: string
    accountType: $Enums.AccountType
    familyMember_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type BankAccountCreateOrConnectWithoutCandidateInput = {
    where: BankAccountWhereUniqueInput
    create: XOR<BankAccountCreateWithoutCandidateInput, BankAccountUncheckedCreateWithoutCandidateInput>
  }

  export type BankAccountCreateManyCandidateInputEnvelope = {
    data: BankAccountCreateManyCandidateInput | BankAccountCreateManyCandidateInput[]
    skipDuplicates?: boolean
  }

  export type DeclarationsCreateWithoutCandidateInput = {
    id?: string
    declarationType: $Enums.Declaration_Type
    text: string
    application_id: string
    familyMember?: FamilyMemberCreateNestedOneWithoutDeclarationsInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutDeclarationsInput
  }

  export type DeclarationsUncheckedCreateWithoutCandidateInput = {
    id?: string
    declarationType: $Enums.Declaration_Type
    text: string
    familyMember_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type DeclarationsCreateOrConnectWithoutCandidateInput = {
    where: DeclarationsWhereUniqueInput
    create: XOR<DeclarationsCreateWithoutCandidateInput, DeclarationsUncheckedCreateWithoutCandidateInput>
  }

  export type DeclarationsCreateManyCandidateInputEnvelope = {
    data: DeclarationsCreateManyCandidateInput | DeclarationsCreateManyCandidateInput[]
    skipDuplicates?: boolean
  }

  export type ApplicationUpsertWithWhereUniqueWithoutCandidateInput = {
    where: ApplicationWhereUniqueInput
    update: XOR<ApplicationUpdateWithoutCandidateInput, ApplicationUncheckedUpdateWithoutCandidateInput>
    create: XOR<ApplicationCreateWithoutCandidateInput, ApplicationUncheckedCreateWithoutCandidateInput>
  }

  export type ApplicationUpdateWithWhereUniqueWithoutCandidateInput = {
    where: ApplicationWhereUniqueInput
    data: XOR<ApplicationUpdateWithoutCandidateInput, ApplicationUncheckedUpdateWithoutCandidateInput>
  }

  export type ApplicationUpdateManyWithWhereWithoutCandidateInput = {
    where: ApplicationScalarWhereInput
    data: XOR<ApplicationUpdateManyMutationInput, ApplicationUncheckedUpdateManyWithoutCandidateInput>
  }

  export type ApplicationScalarWhereInput = {
    AND?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
    OR?: ApplicationScalarWhereInput[]
    NOT?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
    id?: StringFilter<"Application"> | string
    candidate_id?: StringFilter<"Application"> | string
    announcement_id?: StringFilter<"Application"> | string
    status?: EnumApplicationStatusFilter<"Application"> | $Enums.ApplicationStatus
    socialAssistant_id?: StringNullableFilter<"Application"> | string | null
    educationLevel_id?: StringFilter<"Application"> | string
    candidateName?: StringNullableFilter<"Application"> | string | null
    SocialAssistantName?: StringNullableFilter<"Application"> | string | null
    CadUnico?: BoolNullableFilter<"Application"> | boolean | null
    hasSevereDesease?: BoolNullableFilter<"Application"> | boolean | null
    averageIncome?: FloatNullableFilter<"Application"> | number | null
    perCapita?: FloatNullableFilter<"Application"> | number | null
    position?: IntNullableFilter<"Application"> | number | null
    number?: IntFilter<"Application"> | number
    reponsible_id?: StringNullableFilter<"Application"> | string | null
  }

  export type CreditCardUpsertWithWhereUniqueWithoutCandidateInput = {
    where: CreditCardWhereUniqueInput
    update: XOR<CreditCardUpdateWithoutCandidateInput, CreditCardUncheckedUpdateWithoutCandidateInput>
    create: XOR<CreditCardCreateWithoutCandidateInput, CreditCardUncheckedCreateWithoutCandidateInput>
  }

  export type CreditCardUpdateWithWhereUniqueWithoutCandidateInput = {
    where: CreditCardWhereUniqueInput
    data: XOR<CreditCardUpdateWithoutCandidateInput, CreditCardUncheckedUpdateWithoutCandidateInput>
  }

  export type CreditCardUpdateManyWithWhereWithoutCandidateInput = {
    where: CreditCardScalarWhereInput
    data: XOR<CreditCardUpdateManyMutationInput, CreditCardUncheckedUpdateManyWithoutCandidateInput>
  }

  export type CreditCardScalarWhereInput = {
    AND?: CreditCardScalarWhereInput | CreditCardScalarWhereInput[]
    OR?: CreditCardScalarWhereInput[]
    NOT?: CreditCardScalarWhereInput | CreditCardScalarWhereInput[]
    id?: StringFilter<"CreditCard"> | string
    main_id?: StringNullableFilter<"CreditCard"> | string | null
    familyMemberName?: StringFilter<"CreditCard"> | string
    usersCount?: IntFilter<"CreditCard"> | number
    cardType?: StringFilter<"CreditCard"> | string
    bankName?: StringFilter<"CreditCard"> | string
    cardFlag?: StringFilter<"CreditCard"> | string
    invoiceValue?: FloatFilter<"CreditCard"> | number
    familyMember_id?: StringNullableFilter<"CreditCard"> | string | null
    candidate_id?: StringNullableFilter<"CreditCard"> | string | null
    legalResponsibleId?: StringNullableFilter<"CreditCard"> | string | null
    application_id?: StringFilter<"CreditCard"> | string
  }

  export type ExpenseUpsertWithWhereUniqueWithoutCandidateInput = {
    where: ExpenseWhereUniqueInput
    update: XOR<ExpenseUpdateWithoutCandidateInput, ExpenseUncheckedUpdateWithoutCandidateInput>
    create: XOR<ExpenseCreateWithoutCandidateInput, ExpenseUncheckedCreateWithoutCandidateInput>
  }

  export type ExpenseUpdateWithWhereUniqueWithoutCandidateInput = {
    where: ExpenseWhereUniqueInput
    data: XOR<ExpenseUpdateWithoutCandidateInput, ExpenseUncheckedUpdateWithoutCandidateInput>
  }

  export type ExpenseUpdateManyWithWhereWithoutCandidateInput = {
    where: ExpenseScalarWhereInput
    data: XOR<ExpenseUpdateManyMutationInput, ExpenseUncheckedUpdateManyWithoutCandidateInput>
  }

  export type ExpenseScalarWhereInput = {
    AND?: ExpenseScalarWhereInput | ExpenseScalarWhereInput[]
    OR?: ExpenseScalarWhereInput[]
    NOT?: ExpenseScalarWhereInput | ExpenseScalarWhereInput[]
    id?: StringFilter<"Expense"> | string
    main_id?: StringNullableFilter<"Expense"> | string | null
    date?: DateTimeFilter<"Expense"> | Date | string
    waterSewage?: FloatNullableFilter<"Expense"> | number | null
    electricity?: FloatNullableFilter<"Expense"> | number | null
    landlinePhone?: FloatNullableFilter<"Expense"> | number | null
    mobilePhone?: FloatNullableFilter<"Expense"> | number | null
    food?: FloatNullableFilter<"Expense"> | number | null
    rent?: FloatNullableFilter<"Expense"> | number | null
    garageRent?: FloatNullableFilter<"Expense"> | number | null
    condominium?: FloatNullableFilter<"Expense"> | number | null
    cableTV?: FloatNullableFilter<"Expense"> | number | null
    streamingServices?: FloatNullableFilter<"Expense"> | number | null
    fuel?: FloatNullableFilter<"Expense"> | number | null
    annualIPVA?: FloatNullableFilter<"Expense"> | number | null
    annualIPTU?: FloatNullableFilter<"Expense"> | number | null
    annualITR?: FloatNullableFilter<"Expense"> | number | null
    annualIR?: FloatNullableFilter<"Expense"> | number | null
    INSS?: FloatNullableFilter<"Expense"> | number | null
    publicTransport?: FloatNullableFilter<"Expense"> | number | null
    schoolTransport?: FloatNullableFilter<"Expense"> | number | null
    internet?: FloatNullableFilter<"Expense"> | number | null
    courses?: FloatNullableFilter<"Expense"> | number | null
    healthPlan?: FloatNullableFilter<"Expense"> | number | null
    dentalPlan?: FloatNullableFilter<"Expense"> | number | null
    medicationExpenses?: FloatNullableFilter<"Expense"> | number | null
    totalExpense?: FloatNullableFilter<"Expense"> | number | null
    candidate_id?: StringNullableFilter<"Expense"> | string | null
    installmentCountIPTU?: IntNullableFilter<"Expense"> | number | null
    installmentCountIPVA?: IntNullableFilter<"Expense"> | number | null
    installmentCountIR?: IntNullableFilter<"Expense"> | number | null
    installmentCountITR?: IntNullableFilter<"Expense"> | number | null
    installmentValueIPTU?: FloatNullableFilter<"Expense"> | number | null
    installmentValueIPVA?: FloatNullableFilter<"Expense"> | number | null
    installmentValueIR?: FloatNullableFilter<"Expense"> | number | null
    installmentValueITR?: FloatNullableFilter<"Expense"> | number | null
    financing?: FloatNullableFilter<"Expense"> | number | null
    creditCard?: FloatNullableFilter<"Expense"> | number | null
    optedForInstallmentIPTU?: BoolNullableFilter<"Expense"> | boolean | null
    optedForInstallmentIPVA?: BoolNullableFilter<"Expense"> | boolean | null
    optedForInstallmentIR?: BoolNullableFilter<"Expense"> | boolean | null
    optedForInstallmentITR?: BoolNullableFilter<"Expense"> | boolean | null
    otherExpensesDescription?: StringNullableListFilter<"Expense">
    otherExpensesValue?: FloatNullableListFilter<"Expense">
    legalResponsibleId?: StringNullableFilter<"Expense"> | string | null
    application_id?: StringFilter<"Expense"> | string
  }

  export type FinancingUpsertWithWhereUniqueWithoutCandidateInput = {
    where: FinancingWhereUniqueInput
    update: XOR<FinancingUpdateWithoutCandidateInput, FinancingUncheckedUpdateWithoutCandidateInput>
    create: XOR<FinancingCreateWithoutCandidateInput, FinancingUncheckedCreateWithoutCandidateInput>
  }

  export type FinancingUpdateWithWhereUniqueWithoutCandidateInput = {
    where: FinancingWhereUniqueInput
    data: XOR<FinancingUpdateWithoutCandidateInput, FinancingUncheckedUpdateWithoutCandidateInput>
  }

  export type FinancingUpdateManyWithWhereWithoutCandidateInput = {
    where: FinancingScalarWhereInput
    data: XOR<FinancingUpdateManyMutationInput, FinancingUncheckedUpdateManyWithoutCandidateInput>
  }

  export type FinancingScalarWhereInput = {
    AND?: FinancingScalarWhereInput | FinancingScalarWhereInput[]
    OR?: FinancingScalarWhereInput[]
    NOT?: FinancingScalarWhereInput | FinancingScalarWhereInput[]
    id?: StringFilter<"Financing"> | string
    main_id?: StringNullableFilter<"Financing"> | string | null
    familyMemberName?: StringFilter<"Financing"> | string
    installmentValue?: FloatFilter<"Financing"> | number
    totalInstallments?: IntFilter<"Financing"> | number
    paidInstallments?: IntFilter<"Financing"> | number
    bankName?: StringFilter<"Financing"> | string
    familyMember_id?: StringNullableFilter<"Financing"> | string | null
    candidate_id?: StringNullableFilter<"Financing"> | string | null
    otherFinancing?: StringNullableFilter<"Financing"> | string | null
    financingType?: EnumFinancingTypeFilter<"Financing"> | $Enums.FinancingType
    legalResponsibleId?: StringNullableFilter<"Financing"> | string | null
    application_id?: StringFilter<"Financing"> | string
  }

  export type IdentityDetailsUpsertWithWhereUniqueWithoutCandidateInput = {
    where: IdentityDetailsWhereUniqueInput
    update: XOR<IdentityDetailsUpdateWithoutCandidateInput, IdentityDetailsUncheckedUpdateWithoutCandidateInput>
    create: XOR<IdentityDetailsCreateWithoutCandidateInput, IdentityDetailsUncheckedCreateWithoutCandidateInput>
  }

  export type IdentityDetailsUpdateWithWhereUniqueWithoutCandidateInput = {
    where: IdentityDetailsWhereUniqueInput
    data: XOR<IdentityDetailsUpdateWithoutCandidateInput, IdentityDetailsUncheckedUpdateWithoutCandidateInput>
  }

  export type IdentityDetailsUpdateManyWithWhereWithoutCandidateInput = {
    where: IdentityDetailsScalarWhereInput
    data: XOR<IdentityDetailsUpdateManyMutationInput, IdentityDetailsUncheckedUpdateManyWithoutCandidateInput>
  }

  export type IdentityDetailsScalarWhereInput = {
    AND?: IdentityDetailsScalarWhereInput | IdentityDetailsScalarWhereInput[]
    OR?: IdentityDetailsScalarWhereInput[]
    NOT?: IdentityDetailsScalarWhereInput | IdentityDetailsScalarWhereInput[]
    id?: StringFilter<"IdentityDetails"> | string
    fullName?: StringFilter<"IdentityDetails"> | string
    socialName?: StringNullableFilter<"IdentityDetails"> | string | null
    main_id?: StringNullableFilter<"IdentityDetails"> | string | null
    birthDate?: DateTimeFilter<"IdentityDetails"> | Date | string
    gender?: EnumGENDERFilter<"IdentityDetails"> | $Enums.GENDER
    nationality?: StringFilter<"IdentityDetails"> | string
    natural_city?: StringFilter<"IdentityDetails"> | string
    natural_UF?: EnumCOUNTRYFilter<"IdentityDetails"> | $Enums.COUNTRY
    CPF?: StringNullableFilter<"IdentityDetails"> | string | null
    RG?: StringFilter<"IdentityDetails"> | string
    rgIssuingAuthority?: StringFilter<"IdentityDetails"> | string
    rgIssuingState?: StringFilter<"IdentityDetails"> | string
    documentType?: EnumDOCUMENT_TYPENullableFilter<"IdentityDetails"> | $Enums.DOCUMENT_TYPE | null
    CadUnico?: BoolFilter<"IdentityDetails"> | boolean
    hasSevereDeseaseOrUsesMedication?: BoolNullableFilter<"IdentityDetails"> | boolean | null
    hasBankAccount?: BoolNullableFilter<"IdentityDetails"> | boolean | null
    documentNumber?: StringNullableFilter<"IdentityDetails"> | string | null
    documentValidity?: DateTimeNullableFilter<"IdentityDetails"> | Date | string | null
    maritalStatus?: EnumMARITAL_STATUSFilter<"IdentityDetails"> | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFilter<"IdentityDetails"> | $Enums.SkinColor
    religion?: EnumRELIGIONFilter<"IdentityDetails"> | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFilter<"IdentityDetails"> | $Enums.SCHOLARSHIP
    specialNeeds?: BoolNullableFilter<"IdentityDetails"> | boolean | null
    address?: StringNullableFilter<"IdentityDetails"> | string | null
    addressNumber?: StringNullableFilter<"IdentityDetails"> | string | null
    complement?: StringNullableFilter<"IdentityDetails"> | string | null
    neighborhood?: StringNullableFilter<"IdentityDetails"> | string | null
    city?: StringNullableFilter<"IdentityDetails"> | string | null
    UF?: EnumCOUNTRYNullableFilter<"IdentityDetails"> | $Enums.COUNTRY | null
    CEP?: StringNullableFilter<"IdentityDetails"> | string | null
    specialNeedsDescription?: StringNullableFilter<"IdentityDetails"> | string | null
    specialNeedsType?: StringNullableFilter<"IdentityDetails"> | string | null
    hasMedicalReport?: BoolNullableFilter<"IdentityDetails"> | boolean | null
    email?: StringNullableFilter<"IdentityDetails"> | string | null
    landlinePhone?: StringNullableFilter<"IdentityDetails"> | string | null
    workPhone?: StringNullableFilter<"IdentityDetails"> | string | null
    contactNameForMessage?: StringNullableFilter<"IdentityDetails"> | string | null
    profession?: StringFilter<"IdentityDetails"> | string
    enrolledGovernmentProgram?: StringNullableFilter<"IdentityDetails"> | string | null
    NIS?: StringNullableFilter<"IdentityDetails"> | string | null
    incomeSource?: EnumIncomeSourceNullableListFilter<"IdentityDetails">
    livesAlone?: BoolFilter<"IdentityDetails"> | boolean
    intendsToGetScholarship?: BoolFilter<"IdentityDetails"> | boolean
    attendedPublicHighSchool?: BoolNullableFilter<"IdentityDetails"> | boolean | null
    benefitedFromCebasScholarship_basic?: BoolNullableFilter<"IdentityDetails"> | boolean | null
    yearsBenefitedFromCebas_basic?: StringNullableListFilter<"IdentityDetails">
    scholarshipType_basic?: EnumScholarshipTypeNullableFilter<"IdentityDetails"> | $Enums.ScholarshipType | null
    institutionName_basic?: StringNullableFilter<"IdentityDetails"> | string | null
    institutionCNPJ_basic?: StringNullableFilter<"IdentityDetails"> | string | null
    benefitedFromCebasScholarship_professional?: BoolNullableFilter<"IdentityDetails"> | boolean | null
    lastYearBenefitedFromCebas_professional?: StringNullableFilter<"IdentityDetails"> | string | null
    scholarshipType_professional?: EnumScholarshipTypeNullableFilter<"IdentityDetails"> | $Enums.ScholarshipType | null
    institutionName_professional?: StringNullableFilter<"IdentityDetails"> | string | null
    institutionCNPJ_professional?: StringNullableFilter<"IdentityDetails"> | string | null
    nameOfScholarshipCourse_professional?: StringNullableFilter<"IdentityDetails"> | string | null
    candidate_id?: StringNullableFilter<"IdentityDetails"> | string | null
    responsible_id?: StringNullableFilter<"IdentityDetails"> | string | null
    application_id?: StringFilter<"IdentityDetails"> | string
  }

  export type FamilyMemberIncomeUpsertWithWhereUniqueWithoutCandidateInput = {
    where: FamilyMemberIncomeWhereUniqueInput
    update: XOR<FamilyMemberIncomeUpdateWithoutCandidateInput, FamilyMemberIncomeUncheckedUpdateWithoutCandidateInput>
    create: XOR<FamilyMemberIncomeCreateWithoutCandidateInput, FamilyMemberIncomeUncheckedCreateWithoutCandidateInput>
  }

  export type FamilyMemberIncomeUpdateWithWhereUniqueWithoutCandidateInput = {
    where: FamilyMemberIncomeWhereUniqueInput
    data: XOR<FamilyMemberIncomeUpdateWithoutCandidateInput, FamilyMemberIncomeUncheckedUpdateWithoutCandidateInput>
  }

  export type FamilyMemberIncomeUpdateManyWithWhereWithoutCandidateInput = {
    where: FamilyMemberIncomeScalarWhereInput
    data: XOR<FamilyMemberIncomeUpdateManyMutationInput, FamilyMemberIncomeUncheckedUpdateManyWithoutCandidateInput>
  }

  export type FamilyMemberIncomeScalarWhereInput = {
    AND?: FamilyMemberIncomeScalarWhereInput | FamilyMemberIncomeScalarWhereInput[]
    OR?: FamilyMemberIncomeScalarWhereInput[]
    NOT?: FamilyMemberIncomeScalarWhereInput | FamilyMemberIncomeScalarWhereInput[]
    id?: StringFilter<"FamilyMemberIncome"> | string
    employmentType?: EnumEmploymentTypeFilter<"FamilyMemberIncome"> | $Enums.EmploymentType
    averageIncome?: StringFilter<"FamilyMemberIncome"> | string
    main_id?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    admissionDate?: DateTimeNullableFilter<"FamilyMemberIncome"> | Date | string | null
    position?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    payingSource?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    payingSourcePhone?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    startDate?: DateTimeNullableFilter<"FamilyMemberIncome"> | Date | string | null
    CNPJ?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    financialAssistantCPF?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    socialReason?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    fantasyName?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    CPNJ?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    receivesUnemployment?: BoolNullableFilter<"FamilyMemberIncome"> | boolean | null
    parcels?: IntNullableFilter<"FamilyMemberIncome"> | number | null
    firstParcelDate?: DateTimeNullableFilter<"FamilyMemberIncome"> | Date | string | null
    parcelValue?: FloatNullableFilter<"FamilyMemberIncome"> | number | null
    familyMember_id?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    quantity?: IntFilter<"FamilyMemberIncome"> | number
    candidate_id?: StringNullableFilter<"FamilyMemberIncome"> | string | null
    application_id?: StringFilter<"FamilyMemberIncome"> | string
    legalResponsibleId?: StringNullableFilter<"FamilyMemberIncome"> | string | null
  }

  export type LoanUpsertWithWhereUniqueWithoutCandidateInput = {
    where: LoanWhereUniqueInput
    update: XOR<LoanUpdateWithoutCandidateInput, LoanUncheckedUpdateWithoutCandidateInput>
    create: XOR<LoanCreateWithoutCandidateInput, LoanUncheckedCreateWithoutCandidateInput>
  }

  export type LoanUpdateWithWhereUniqueWithoutCandidateInput = {
    where: LoanWhereUniqueInput
    data: XOR<LoanUpdateWithoutCandidateInput, LoanUncheckedUpdateWithoutCandidateInput>
  }

  export type LoanUpdateManyWithWhereWithoutCandidateInput = {
    where: LoanScalarWhereInput
    data: XOR<LoanUpdateManyMutationInput, LoanUncheckedUpdateManyWithoutCandidateInput>
  }

  export type LoanScalarWhereInput = {
    AND?: LoanScalarWhereInput | LoanScalarWhereInput[]
    OR?: LoanScalarWhereInput[]
    NOT?: LoanScalarWhereInput | LoanScalarWhereInput[]
    id?: StringFilter<"Loan"> | string
    main_id?: StringNullableFilter<"Loan"> | string | null
    familyMemberName?: StringFilter<"Loan"> | string
    installmentValue?: FloatFilter<"Loan"> | number
    totalInstallments?: IntFilter<"Loan"> | number
    paidInstallments?: IntFilter<"Loan"> | number
    bankName?: StringFilter<"Loan"> | string
    familyMember_id?: StringNullableFilter<"Loan"> | string | null
    candidate_id?: StringNullableFilter<"Loan"> | string | null
    legalResponsibleId?: StringNullableFilter<"Loan"> | string | null
    application_id?: StringFilter<"Loan"> | string
  }

  export type OtherExpenseUpsertWithWhereUniqueWithoutCandidateInput = {
    where: OtherExpenseWhereUniqueInput
    update: XOR<OtherExpenseUpdateWithoutCandidateInput, OtherExpenseUncheckedUpdateWithoutCandidateInput>
    create: XOR<OtherExpenseCreateWithoutCandidateInput, OtherExpenseUncheckedCreateWithoutCandidateInput>
  }

  export type OtherExpenseUpdateWithWhereUniqueWithoutCandidateInput = {
    where: OtherExpenseWhereUniqueInput
    data: XOR<OtherExpenseUpdateWithoutCandidateInput, OtherExpenseUncheckedUpdateWithoutCandidateInput>
  }

  export type OtherExpenseUpdateManyWithWhereWithoutCandidateInput = {
    where: OtherExpenseScalarWhereInput
    data: XOR<OtherExpenseUpdateManyMutationInput, OtherExpenseUncheckedUpdateManyWithoutCandidateInput>
  }

  export type OtherExpenseScalarWhereInput = {
    AND?: OtherExpenseScalarWhereInput | OtherExpenseScalarWhereInput[]
    OR?: OtherExpenseScalarWhereInput[]
    NOT?: OtherExpenseScalarWhereInput | OtherExpenseScalarWhereInput[]
    id?: StringFilter<"OtherExpense"> | string
    main_id?: StringNullableFilter<"OtherExpense"> | string | null
    description?: StringFilter<"OtherExpense"> | string
    value?: FloatFilter<"OtherExpense"> | number
    familyMember_id?: StringNullableFilter<"OtherExpense"> | string | null
    candidate_id?: StringNullableFilter<"OtherExpense"> | string | null
    legalResponsibleId?: StringNullableFilter<"OtherExpense"> | string | null
    application_id?: StringFilter<"OtherExpense"> | string
  }

  export type VehicleUpsertWithWhereUniqueWithoutCandidateInput = {
    where: VehicleWhereUniqueInput
    update: XOR<VehicleUpdateWithoutCandidateInput, VehicleUncheckedUpdateWithoutCandidateInput>
    create: XOR<VehicleCreateWithoutCandidateInput, VehicleUncheckedCreateWithoutCandidateInput>
  }

  export type VehicleUpdateWithWhereUniqueWithoutCandidateInput = {
    where: VehicleWhereUniqueInput
    data: XOR<VehicleUpdateWithoutCandidateInput, VehicleUncheckedUpdateWithoutCandidateInput>
  }

  export type VehicleUpdateManyWithWhereWithoutCandidateInput = {
    where: VehicleScalarWhereInput
    data: XOR<VehicleUpdateManyMutationInput, VehicleUncheckedUpdateManyWithoutCandidateInput>
  }

  export type VehicleScalarWhereInput = {
    AND?: VehicleScalarWhereInput | VehicleScalarWhereInput[]
    OR?: VehicleScalarWhereInput[]
    NOT?: VehicleScalarWhereInput | VehicleScalarWhereInput[]
    id?: StringFilter<"Vehicle"> | string
    vehicleType?: EnumVehicleTypeFilter<"Vehicle"> | $Enums.VehicleType
    modelAndBrand?: StringFilter<"Vehicle"> | string
    main_id?: StringNullableFilter<"Vehicle"> | string | null
    manufacturingYear?: IntFilter<"Vehicle"> | number
    situation?: EnumVehicleSituationFilter<"Vehicle"> | $Enums.VehicleSituation
    financedMonths?: IntNullableFilter<"Vehicle"> | number | null
    monthsToPayOff?: IntNullableFilter<"Vehicle"> | number | null
    hasInsurance?: BoolFilter<"Vehicle"> | boolean
    insuranceValue?: FloatNullableFilter<"Vehicle"> | number | null
    usage?: EnumVehicleUsageFilter<"Vehicle"> | $Enums.VehicleUsage
    candidate_id?: StringNullableFilter<"Vehicle"> | string | null
    owners_id?: StringNullableListFilter<"Vehicle">
    legalResponsibleId?: StringNullableFilter<"Vehicle"> | string | null
    application_id?: StringFilter<"Vehicle"> | string
  }

  export type LegalResponsibleUpsertWithoutCandidateInput = {
    update: XOR<LegalResponsibleUpdateWithoutCandidateInput, LegalResponsibleUncheckedUpdateWithoutCandidateInput>
    create: XOR<LegalResponsibleCreateWithoutCandidateInput, LegalResponsibleUncheckedCreateWithoutCandidateInput>
    where?: LegalResponsibleWhereInput
  }

  export type LegalResponsibleUpdateToOneWithWhereWithoutCandidateInput = {
    where?: LegalResponsibleWhereInput
    data: XOR<LegalResponsibleUpdateWithoutCandidateInput, LegalResponsibleUncheckedUpdateWithoutCandidateInput>
  }

  export type LegalResponsibleUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type LegalResponsibleUncheckedUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type FamilyMemberUpsertWithWhereUniqueWithoutCandidateInput = {
    where: FamilyMemberWhereUniqueInput
    update: XOR<FamilyMemberUpdateWithoutCandidateInput, FamilyMemberUncheckedUpdateWithoutCandidateInput>
    create: XOR<FamilyMemberCreateWithoutCandidateInput, FamilyMemberUncheckedCreateWithoutCandidateInput>
  }

  export type FamilyMemberUpdateWithWhereUniqueWithoutCandidateInput = {
    where: FamilyMemberWhereUniqueInput
    data: XOR<FamilyMemberUpdateWithoutCandidateInput, FamilyMemberUncheckedUpdateWithoutCandidateInput>
  }

  export type FamilyMemberUpdateManyWithWhereWithoutCandidateInput = {
    where: FamilyMemberScalarWhereInput
    data: XOR<FamilyMemberUpdateManyMutationInput, FamilyMemberUncheckedUpdateManyWithoutCandidateInput>
  }

  export type FamilyMemberScalarWhereInput = {
    AND?: FamilyMemberScalarWhereInput | FamilyMemberScalarWhereInput[]
    OR?: FamilyMemberScalarWhereInput[]
    NOT?: FamilyMemberScalarWhereInput | FamilyMemberScalarWhereInput[]
    id?: StringFilter<"FamilyMember"> | string
    relationship?: EnumRelationshipFilter<"FamilyMember"> | $Enums.Relationship
    otherRelationship?: StringNullableFilter<"FamilyMember"> | string | null
    main_id?: StringNullableFilter<"FamilyMember"> | string | null
    fullName?: StringFilter<"FamilyMember"> | string
    socialName?: StringNullableFilter<"FamilyMember"> | string | null
    birthDate?: DateTimeFilter<"FamilyMember"> | Date | string
    gender?: EnumGENDERFilter<"FamilyMember"> | $Enums.GENDER
    nationality?: StringFilter<"FamilyMember"> | string
    natural_city?: StringFilter<"FamilyMember"> | string
    natural_UF?: EnumCOUNTRYFilter<"FamilyMember"> | $Enums.COUNTRY
    CPF?: StringFilter<"FamilyMember"> | string
    RG?: StringFilter<"FamilyMember"> | string
    rgIssuingAuthority?: StringFilter<"FamilyMember"> | string
    rgIssuingState?: StringFilter<"FamilyMember"> | string
    documentType?: EnumDOCUMENT_TYPENullableFilter<"FamilyMember"> | $Enums.DOCUMENT_TYPE | null
    documentNumber?: StringNullableFilter<"FamilyMember"> | string | null
    documentValidity?: DateTimeNullableFilter<"FamilyMember"> | Date | string | null
    numberOfBirthRegister?: StringNullableFilter<"FamilyMember"> | string | null
    bookOfBirthRegister?: StringNullableFilter<"FamilyMember"> | string | null
    pageOfBirthRegister?: StringNullableFilter<"FamilyMember"> | string | null
    maritalStatus?: EnumMARITAL_STATUSFilter<"FamilyMember"> | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFilter<"FamilyMember"> | $Enums.SkinColor
    religion?: EnumRELIGIONFilter<"FamilyMember"> | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFilter<"FamilyMember"> | $Enums.SCHOLARSHIP
    specialNeeds?: BoolNullableFilter<"FamilyMember"> | boolean | null
    specialNeedsDescription?: StringNullableFilter<"FamilyMember"> | string | null
    specialNeedsType?: StringNullableFilter<"FamilyMember"> | string | null
    hasMedicalReport?: BoolNullableFilter<"FamilyMember"> | boolean | null
    landlinePhone?: StringNullableFilter<"FamilyMember"> | string | null
    workPhone?: StringNullableFilter<"FamilyMember"> | string | null
    contactNameForMessage?: StringNullableFilter<"FamilyMember"> | string | null
    email?: StringNullableFilter<"FamilyMember"> | string | null
    profession?: StringFilter<"FamilyMember"> | string
    enrolledGovernmentProgram?: StringNullableFilter<"FamilyMember"> | string | null
    NIS?: StringNullableFilter<"FamilyMember"> | string | null
    educationPlace?: EnumINSTITUTION_TYPENullableFilter<"FamilyMember"> | $Enums.INSTITUTION_TYPE | null
    institutionName?: StringNullableFilter<"FamilyMember"> | string | null
    coursingEducationLevel?: EnumEDUCATION_TYPENullableFilter<"FamilyMember"> | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: StringNullableFilter<"FamilyMember"> | string | null
    turnOfEducation?: EnumSHIFTNullableFilter<"FamilyMember"> | $Enums.SHIFT | null
    hasScholarship?: BoolNullableFilter<"FamilyMember"> | boolean | null
    percentageOfScholarship?: StringNullableFilter<"FamilyMember"> | string | null
    monthlyAmount?: StringNullableFilter<"FamilyMember"> | string | null
    candidate_id?: StringNullableFilter<"FamilyMember"> | string | null
    attendedPublicHighSchool?: BoolNullableFilter<"FamilyMember"> | boolean | null
    benefitedFromCebasScholarship_basic?: BoolNullableFilter<"FamilyMember"> | boolean | null
    benefitedFromCebasScholarship_professional?: BoolNullableFilter<"FamilyMember"> | boolean | null
    CadUnico?: BoolNullableFilter<"FamilyMember"> | boolean | null
    hasSevereDeseaseOrUsesMedication?: BoolNullableFilter<"FamilyMember"> | boolean | null
    hasBankAccount?: BoolNullableFilter<"FamilyMember"> | boolean | null
    incomeSource?: EnumIncomeSourceNullableListFilter<"FamilyMember">
    legalResponsibleId?: StringNullableFilter<"FamilyMember"> | string | null
    application_id?: StringFilter<"FamilyMember"> | string
  }

  export type HousingUpsertWithWhereUniqueWithoutCandidateInput = {
    where: HousingWhereUniqueInput
    update: XOR<HousingUpdateWithoutCandidateInput, HousingUncheckedUpdateWithoutCandidateInput>
    create: XOR<HousingCreateWithoutCandidateInput, HousingUncheckedCreateWithoutCandidateInput>
  }

  export type HousingUpdateWithWhereUniqueWithoutCandidateInput = {
    where: HousingWhereUniqueInput
    data: XOR<HousingUpdateWithoutCandidateInput, HousingUncheckedUpdateWithoutCandidateInput>
  }

  export type HousingUpdateManyWithWhereWithoutCandidateInput = {
    where: HousingScalarWhereInput
    data: XOR<HousingUpdateManyMutationInput, HousingUncheckedUpdateManyWithoutCandidateInput>
  }

  export type HousingScalarWhereInput = {
    AND?: HousingScalarWhereInput | HousingScalarWhereInput[]
    OR?: HousingScalarWhereInput[]
    NOT?: HousingScalarWhereInput | HousingScalarWhereInput[]
    id?: StringFilter<"Housing"> | string
    propertyStatus?: EnumPropertyStatusFilter<"Housing"> | $Enums.PropertyStatus
    contractType?: EnumContractTypeNullableFilter<"Housing"> | $Enums.ContractType | null
    main_id?: StringNullableFilter<"Housing"> | string | null
    grantorName?: StringNullableFilter<"Housing"> | string | null
    timeLivingInProperty?: EnumTimeLivingInPropertyFilter<"Housing"> | $Enums.TimeLivingInProperty
    domicileType?: EnumDomicileTypeFilter<"Housing"> | $Enums.DomicileType
    numberOfRooms?: EnumNumberOfRoomsFilter<"Housing"> | $Enums.NumberOfRooms
    numberOfBedrooms?: IntFilter<"Housing"> | number
    candidate_id?: StringNullableFilter<"Housing"> | string | null
    responsible_id?: StringNullableFilter<"Housing"> | string | null
    application_id?: StringFilter<"Housing"> | string
  }

  export type MonthlyIncomeUpsertWithWhereUniqueWithoutCandidateInput = {
    where: MonthlyIncomeWhereUniqueInput
    update: XOR<MonthlyIncomeUpdateWithoutCandidateInput, MonthlyIncomeUncheckedUpdateWithoutCandidateInput>
    create: XOR<MonthlyIncomeCreateWithoutCandidateInput, MonthlyIncomeUncheckedCreateWithoutCandidateInput>
  }

  export type MonthlyIncomeUpdateWithWhereUniqueWithoutCandidateInput = {
    where: MonthlyIncomeWhereUniqueInput
    data: XOR<MonthlyIncomeUpdateWithoutCandidateInput, MonthlyIncomeUncheckedUpdateWithoutCandidateInput>
  }

  export type MonthlyIncomeUpdateManyWithWhereWithoutCandidateInput = {
    where: MonthlyIncomeScalarWhereInput
    data: XOR<MonthlyIncomeUpdateManyMutationInput, MonthlyIncomeUncheckedUpdateManyWithoutCandidateInput>
  }

  export type MonthlyIncomeScalarWhereInput = {
    AND?: MonthlyIncomeScalarWhereInput | MonthlyIncomeScalarWhereInput[]
    OR?: MonthlyIncomeScalarWhereInput[]
    NOT?: MonthlyIncomeScalarWhereInput | MonthlyIncomeScalarWhereInput[]
    id?: StringFilter<"MonthlyIncome"> | string
    date?: DateTimeNullableFilter<"MonthlyIncome"> | Date | string | null
    main_id?: StringNullableFilter<"MonthlyIncome"> | string | null
    grossAmount?: FloatNullableFilter<"MonthlyIncome"> | number | null
    liquidAmount?: FloatNullableFilter<"MonthlyIncome"> | number | null
    proLabore?: FloatNullableFilter<"MonthlyIncome"> | number | null
    dividends?: FloatNullableFilter<"MonthlyIncome"> | number | null
    total?: FloatNullableFilter<"MonthlyIncome"> | number | null
    deductionValue?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    publicPension?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    incomeTax?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    otherDeductions?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    foodAllowanceValue?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    transportAllowanceValue?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    expenseReimbursementValue?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    advancePaymentValue?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    reversalValue?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    compensationValue?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    judicialPensionValue?: DecimalNullableFilter<"MonthlyIncome"> | Decimal | DecimalJsLike | number | string | null
    familyMember_id?: StringNullableFilter<"MonthlyIncome"> | string | null
    candidate_id?: StringNullableFilter<"MonthlyIncome"> | string | null
    incomeSource?: EnumIncomeSourceNullableFilter<"MonthlyIncome"> | $Enums.IncomeSource | null
    application_id?: StringFilter<"MonthlyIncome"> | string
    legalResponsibleId?: StringNullableFilter<"MonthlyIncome"> | string | null
  }

  export type FamilyMemberDiseaseUpsertWithWhereUniqueWithoutCandidateInput = {
    where: FamilyMemberDiseaseWhereUniqueInput
    update: XOR<FamilyMemberDiseaseUpdateWithoutCandidateInput, FamilyMemberDiseaseUncheckedUpdateWithoutCandidateInput>
    create: XOR<FamilyMemberDiseaseCreateWithoutCandidateInput, FamilyMemberDiseaseUncheckedCreateWithoutCandidateInput>
  }

  export type FamilyMemberDiseaseUpdateWithWhereUniqueWithoutCandidateInput = {
    where: FamilyMemberDiseaseWhereUniqueInput
    data: XOR<FamilyMemberDiseaseUpdateWithoutCandidateInput, FamilyMemberDiseaseUncheckedUpdateWithoutCandidateInput>
  }

  export type FamilyMemberDiseaseUpdateManyWithWhereWithoutCandidateInput = {
    where: FamilyMemberDiseaseScalarWhereInput
    data: XOR<FamilyMemberDiseaseUpdateManyMutationInput, FamilyMemberDiseaseUncheckedUpdateManyWithoutCandidateInput>
  }

  export type FamilyMemberDiseaseScalarWhereInput = {
    AND?: FamilyMemberDiseaseScalarWhereInput | FamilyMemberDiseaseScalarWhereInput[]
    OR?: FamilyMemberDiseaseScalarWhereInput[]
    NOT?: FamilyMemberDiseaseScalarWhereInput | FamilyMemberDiseaseScalarWhereInput[]
    id?: StringFilter<"FamilyMemberDisease"> | string
    main_id?: StringNullableFilter<"FamilyMemberDisease"> | string | null
    disease?: EnumDiseaseNullableFilter<"FamilyMemberDisease"> | $Enums.Disease | null
    diseases?: EnumDiseaseNullableListFilter<"FamilyMemberDisease">
    specificDisease?: StringNullableFilter<"FamilyMemberDisease"> | string | null
    hasMedicalReport?: BoolFilter<"FamilyMemberDisease"> | boolean
    familyMember_id?: StringNullableFilter<"FamilyMemberDisease"> | string | null
    candidate_id?: StringNullableFilter<"FamilyMemberDisease"> | string | null
    legalResponsibleId?: StringNullableFilter<"FamilyMemberDisease"> | string | null
    application_id?: StringFilter<"FamilyMemberDisease"> | string
  }

  export type MedicationUpsertWithWhereUniqueWithoutCandidateInput = {
    where: MedicationWhereUniqueInput
    update: XOR<MedicationUpdateWithoutCandidateInput, MedicationUncheckedUpdateWithoutCandidateInput>
    create: XOR<MedicationCreateWithoutCandidateInput, MedicationUncheckedCreateWithoutCandidateInput>
  }

  export type MedicationUpdateWithWhereUniqueWithoutCandidateInput = {
    where: MedicationWhereUniqueInput
    data: XOR<MedicationUpdateWithoutCandidateInput, MedicationUncheckedUpdateWithoutCandidateInput>
  }

  export type MedicationUpdateManyWithWhereWithoutCandidateInput = {
    where: MedicationScalarWhereInput
    data: XOR<MedicationUpdateManyMutationInput, MedicationUncheckedUpdateManyWithoutCandidateInput>
  }

  export type MedicationScalarWhereInput = {
    AND?: MedicationScalarWhereInput | MedicationScalarWhereInput[]
    OR?: MedicationScalarWhereInput[]
    NOT?: MedicationScalarWhereInput | MedicationScalarWhereInput[]
    id?: StringFilter<"Medication"> | string
    main_id?: StringNullableFilter<"Medication"> | string | null
    medicationName?: StringFilter<"Medication"> | string
    obtainedPublicly?: BoolFilter<"Medication"> | boolean
    specificMedicationPublicly?: StringNullableFilter<"Medication"> | string | null
    familyMember_id?: StringNullableFilter<"Medication"> | string | null
    candidate_id?: StringNullableFilter<"Medication"> | string | null
    legalResponsibleId?: StringNullableFilter<"Medication"> | string | null
    application_id?: StringFilter<"Medication"> | string
    familyMemberDiseaseId?: StringNullableFilter<"Medication"> | string | null
  }

  export type BankAccountUpsertWithWhereUniqueWithoutCandidateInput = {
    where: BankAccountWhereUniqueInput
    update: XOR<BankAccountUpdateWithoutCandidateInput, BankAccountUncheckedUpdateWithoutCandidateInput>
    create: XOR<BankAccountCreateWithoutCandidateInput, BankAccountUncheckedCreateWithoutCandidateInput>
  }

  export type BankAccountUpdateWithWhereUniqueWithoutCandidateInput = {
    where: BankAccountWhereUniqueInput
    data: XOR<BankAccountUpdateWithoutCandidateInput, BankAccountUncheckedUpdateWithoutCandidateInput>
  }

  export type BankAccountUpdateManyWithWhereWithoutCandidateInput = {
    where: BankAccountScalarWhereInput
    data: XOR<BankAccountUpdateManyMutationInput, BankAccountUncheckedUpdateManyWithoutCandidateInput>
  }

  export type BankAccountScalarWhereInput = {
    AND?: BankAccountScalarWhereInput | BankAccountScalarWhereInput[]
    OR?: BankAccountScalarWhereInput[]
    NOT?: BankAccountScalarWhereInput | BankAccountScalarWhereInput[]
    id?: StringFilter<"BankAccount"> | string
    main_id?: StringNullableFilter<"BankAccount"> | string | null
    bankName?: StringFilter<"BankAccount"> | string
    agencyNumber?: StringFilter<"BankAccount"> | string
    accountNumber?: StringFilter<"BankAccount"> | string
    accountType?: EnumAccountTypeFilter<"BankAccount"> | $Enums.AccountType
    familyMember_id?: StringNullableFilter<"BankAccount"> | string | null
    candidate_id?: StringNullableFilter<"BankAccount"> | string | null
    legalResponsibleId?: StringNullableFilter<"BankAccount"> | string | null
    application_id?: StringFilter<"BankAccount"> | string
  }

  export type DeclarationsUpsertWithWhereUniqueWithoutCandidateInput = {
    where: DeclarationsWhereUniqueInput
    update: XOR<DeclarationsUpdateWithoutCandidateInput, DeclarationsUncheckedUpdateWithoutCandidateInput>
    create: XOR<DeclarationsCreateWithoutCandidateInput, DeclarationsUncheckedCreateWithoutCandidateInput>
  }

  export type DeclarationsUpdateWithWhereUniqueWithoutCandidateInput = {
    where: DeclarationsWhereUniqueInput
    data: XOR<DeclarationsUpdateWithoutCandidateInput, DeclarationsUncheckedUpdateWithoutCandidateInput>
  }

  export type DeclarationsUpdateManyWithWhereWithoutCandidateInput = {
    where: DeclarationsScalarWhereInput
    data: XOR<DeclarationsUpdateManyMutationInput, DeclarationsUncheckedUpdateManyWithoutCandidateInput>
  }

  export type DeclarationsScalarWhereInput = {
    AND?: DeclarationsScalarWhereInput | DeclarationsScalarWhereInput[]
    OR?: DeclarationsScalarWhereInput[]
    NOT?: DeclarationsScalarWhereInput | DeclarationsScalarWhereInput[]
    id?: StringFilter<"Declarations"> | string
    declarationType?: EnumDeclaration_TypeFilter<"Declarations"> | $Enums.Declaration_Type
    text?: StringFilter<"Declarations"> | string
    familyMember_id?: StringNullableFilter<"Declarations"> | string | null
    candidate_id?: StringNullableFilter<"Declarations"> | string | null
    legalResponsibleId?: StringNullableFilter<"Declarations"> | string | null
    application_id?: StringFilter<"Declarations"> | string
  }

  export type EntityDirectorCreateWithoutUserInput = {
    id?: string
    name: string
    CPF: string
    phone: string
    entity?: EntityCreateNestedOneWithoutEntityDirectorInput
    entity_subsidiary?: EntitySubsidiaryCreateNestedOneWithoutEntityDirectorInput
  }

  export type EntityDirectorUncheckedCreateWithoutUserInput = {
    id?: string
    name: string
    CPF: string
    phone: string
    entity_subsidiary_id?: string | null
    entity_id?: string | null
  }

  export type EntityDirectorCreateOrConnectWithoutUserInput = {
    where: EntityDirectorWhereUniqueInput
    create: XOR<EntityDirectorCreateWithoutUserInput, EntityDirectorUncheckedCreateWithoutUserInput>
  }

  export type EntitySubsidiaryCreateWithoutUserInput = {
    id?: string
    CNPJ: string
    name: string
    socialReason: string
    CEP: string
    address: string
    addressNumber?: number | null
    city?: string | null
    neighborhood?: string | null
    UF?: $Enums.COUNTRY | null
    educationalInstitutionCode?: string | null
    Announcement?: AnnouncementCreateNestedManyWithoutEntity_subsidiaryInput
    EntityDirector?: EntityDirectorCreateNestedManyWithoutEntity_subsidiaryInput
    entity: EntityCreateNestedOneWithoutEntitySubsidiaryInput
    SocialAssistant?: SocialAssistantCreateNestedManyWithoutEntity_subsidiaryInput
    EducationLevel?: EducationLevelCreateNestedManyWithoutEntitySubsidiaryInput
  }

  export type EntitySubsidiaryUncheckedCreateWithoutUserInput = {
    id?: string
    CNPJ: string
    name: string
    socialReason: string
    CEP: string
    address: string
    addressNumber?: number | null
    city?: string | null
    neighborhood?: string | null
    UF?: $Enums.COUNTRY | null
    educationalInstitutionCode?: string | null
    entity_id: string
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutEntity_subsidiaryInput
    EntityDirector?: EntityDirectorUncheckedCreateNestedManyWithoutEntity_subsidiaryInput
    SocialAssistant?: SocialAssistantUncheckedCreateNestedManyWithoutEntity_subsidiaryInput
    EducationLevel?: EducationLevelUncheckedCreateNestedManyWithoutEntitySubsidiaryInput
  }

  export type EntitySubsidiaryCreateOrConnectWithoutUserInput = {
    where: EntitySubsidiaryWhereUniqueInput
    create: XOR<EntitySubsidiaryCreateWithoutUserInput, EntitySubsidiaryUncheckedCreateWithoutUserInput>
  }

  export type SocialAssistantCreateWithoutUserInput = {
    id?: string
    name: string
    CPF: string
    RG: string
    CRESS: string
    phone: string
    Application?: ApplicationCreateNestedManyWithoutSocialAssistantInput
    entity: EntityCreateNestedOneWithoutSocialAssistantInput
    Announcement?: AnnouncementCreateNestedManyWithoutSocialAssistantInput
    entity_subsidiary?: EntitySubsidiaryCreateNestedManyWithoutSocialAssistantInput
  }

  export type SocialAssistantUncheckedCreateWithoutUserInput = {
    id?: string
    name: string
    CPF: string
    RG: string
    CRESS: string
    phone: string
    entity_id: string
    Application?: ApplicationUncheckedCreateNestedManyWithoutSocialAssistantInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutSocialAssistantInput
    entity_subsidiary?: EntitySubsidiaryUncheckedCreateNestedManyWithoutSocialAssistantInput
  }

  export type SocialAssistantCreateOrConnectWithoutUserInput = {
    where: SocialAssistantWhereUniqueInput
    create: XOR<SocialAssistantCreateWithoutUserInput, SocialAssistantUncheckedCreateWithoutUserInput>
  }

  export type EntityCreateWithoutUserInput = {
    id?: string
    name?: string | null
    socialReason: string
    logo?: string | null
    CNPJ: string
    CEP: string
    address?: string
    addressNumber?: number | null
    neighborhood?: string
    UF?: $Enums.COUNTRY | null
    city?: string
    educationalInstitutionCode?: string | null
    Announcement?: AnnouncementCreateNestedManyWithoutEntityInput
    EntityDirector?: EntityDirectorCreateNestedManyWithoutEntityInput
    EntitySubsidiary?: EntitySubsidiaryCreateNestedManyWithoutEntityInput
    SocialAssistant?: SocialAssistantCreateNestedManyWithoutEntityInput
  }

  export type EntityUncheckedCreateWithoutUserInput = {
    id?: string
    name?: string | null
    socialReason: string
    logo?: string | null
    CNPJ: string
    CEP: string
    address?: string
    addressNumber?: number | null
    neighborhood?: string
    UF?: $Enums.COUNTRY | null
    city?: string
    educationalInstitutionCode?: string | null
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutEntityInput
    EntityDirector?: EntityDirectorUncheckedCreateNestedManyWithoutEntityInput
    EntitySubsidiary?: EntitySubsidiaryUncheckedCreateNestedManyWithoutEntityInput
    SocialAssistant?: SocialAssistantUncheckedCreateNestedManyWithoutEntityInput
  }

  export type EntityCreateOrConnectWithoutUserInput = {
    where: EntityWhereUniqueInput
    create: XOR<EntityCreateWithoutUserInput, EntityUncheckedCreateWithoutUserInput>
  }

  export type EntityDirectorUpsertWithoutUserInput = {
    update: XOR<EntityDirectorUpdateWithoutUserInput, EntityDirectorUncheckedUpdateWithoutUserInput>
    create: XOR<EntityDirectorCreateWithoutUserInput, EntityDirectorUncheckedCreateWithoutUserInput>
    where?: EntityDirectorWhereInput
  }

  export type EntityDirectorUpdateToOneWithWhereWithoutUserInput = {
    where?: EntityDirectorWhereInput
    data: XOR<EntityDirectorUpdateWithoutUserInput, EntityDirectorUncheckedUpdateWithoutUserInput>
  }

  export type EntityDirectorUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    entity?: EntityUpdateOneWithoutEntityDirectorNestedInput
    entity_subsidiary?: EntitySubsidiaryUpdateOneWithoutEntityDirectorNestedInput
  }

  export type EntityDirectorUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    entity_subsidiary_id?: NullableStringFieldUpdateOperationsInput | string | null
    entity_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EntitySubsidiaryUpsertWithoutUserInput = {
    update: XOR<EntitySubsidiaryUpdateWithoutUserInput, EntitySubsidiaryUncheckedUpdateWithoutUserInput>
    create: XOR<EntitySubsidiaryCreateWithoutUserInput, EntitySubsidiaryUncheckedCreateWithoutUserInput>
    where?: EntitySubsidiaryWhereInput
  }

  export type EntitySubsidiaryUpdateToOneWithWhereWithoutUserInput = {
    where?: EntitySubsidiaryWhereInput
    data: XOR<EntitySubsidiaryUpdateWithoutUserInput, EntitySubsidiaryUncheckedUpdateWithoutUserInput>
  }

  export type EntitySubsidiaryUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    CNPJ?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    socialReason?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
    Announcement?: AnnouncementUpdateManyWithoutEntity_subsidiaryNestedInput
    EntityDirector?: EntityDirectorUpdateManyWithoutEntity_subsidiaryNestedInput
    entity?: EntityUpdateOneRequiredWithoutEntitySubsidiaryNestedInput
    SocialAssistant?: SocialAssistantUpdateManyWithoutEntity_subsidiaryNestedInput
    EducationLevel?: EducationLevelUpdateManyWithoutEntitySubsidiaryNestedInput
  }

  export type EntitySubsidiaryUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    CNPJ?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    socialReason?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
    entity_id?: StringFieldUpdateOperationsInput | string
    Announcement?: AnnouncementUncheckedUpdateManyWithoutEntity_subsidiaryNestedInput
    EntityDirector?: EntityDirectorUncheckedUpdateManyWithoutEntity_subsidiaryNestedInput
    SocialAssistant?: SocialAssistantUncheckedUpdateManyWithoutEntity_subsidiaryNestedInput
    EducationLevel?: EducationLevelUncheckedUpdateManyWithoutEntitySubsidiaryNestedInput
  }

  export type SocialAssistantUpsertWithoutUserInput = {
    update: XOR<SocialAssistantUpdateWithoutUserInput, SocialAssistantUncheckedUpdateWithoutUserInput>
    create: XOR<SocialAssistantCreateWithoutUserInput, SocialAssistantUncheckedCreateWithoutUserInput>
    where?: SocialAssistantWhereInput
  }

  export type SocialAssistantUpdateToOneWithWhereWithoutUserInput = {
    where?: SocialAssistantWhereInput
    data: XOR<SocialAssistantUpdateWithoutUserInput, SocialAssistantUncheckedUpdateWithoutUserInput>
  }

  export type SocialAssistantUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    CRESS?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    Application?: ApplicationUpdateManyWithoutSocialAssistantNestedInput
    entity?: EntityUpdateOneRequiredWithoutSocialAssistantNestedInput
    Announcement?: AnnouncementUpdateManyWithoutSocialAssistantNestedInput
    entity_subsidiary?: EntitySubsidiaryUpdateManyWithoutSocialAssistantNestedInput
  }

  export type SocialAssistantUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    CRESS?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    entity_id?: StringFieldUpdateOperationsInput | string
    Application?: ApplicationUncheckedUpdateManyWithoutSocialAssistantNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutSocialAssistantNestedInput
    entity_subsidiary?: EntitySubsidiaryUncheckedUpdateManyWithoutSocialAssistantNestedInput
  }

  export type EntityUpsertWithoutUserInput = {
    update: XOR<EntityUpdateWithoutUserInput, EntityUncheckedUpdateWithoutUserInput>
    create: XOR<EntityCreateWithoutUserInput, EntityUncheckedCreateWithoutUserInput>
    where?: EntityWhereInput
  }

  export type EntityUpdateToOneWithWhereWithoutUserInput = {
    where?: EntityWhereInput
    data: XOR<EntityUpdateWithoutUserInput, EntityUncheckedUpdateWithoutUserInput>
  }

  export type EntityUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    socialReason?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    CNPJ?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    neighborhood?: StringFieldUpdateOperationsInput | string
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    city?: StringFieldUpdateOperationsInput | string
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
    Announcement?: AnnouncementUpdateManyWithoutEntityNestedInput
    EntityDirector?: EntityDirectorUpdateManyWithoutEntityNestedInput
    EntitySubsidiary?: EntitySubsidiaryUpdateManyWithoutEntityNestedInput
    SocialAssistant?: SocialAssistantUpdateManyWithoutEntityNestedInput
  }

  export type EntityUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    socialReason?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    CNPJ?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    neighborhood?: StringFieldUpdateOperationsInput | string
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    city?: StringFieldUpdateOperationsInput | string
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
    Announcement?: AnnouncementUncheckedUpdateManyWithoutEntityNestedInput
    EntityDirector?: EntityDirectorUncheckedUpdateManyWithoutEntityNestedInput
    EntitySubsidiary?: EntitySubsidiaryUncheckedUpdateManyWithoutEntityNestedInput
    SocialAssistant?: SocialAssistantUncheckedUpdateManyWithoutEntityNestedInput
  }

  export type IdentityDetailsCreateWithoutResponsibleInput = {
    id?: string
    fullName: string
    socialName?: string | null
    main_id?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF?: string | null
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    CadUnico?: boolean
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    address?: string | null
    addressNumber?: string | null
    complement?: string | null
    neighborhood?: string | null
    city?: string | null
    UF?: $Enums.COUNTRY | null
    CEP?: string | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    email?: string | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    incomeSource?: IdentityDetailsCreateincomeSourceInput | $Enums.IncomeSource[]
    livesAlone: boolean
    intendsToGetScholarship: boolean
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    yearsBenefitedFromCebas_basic?: IdentityDetailsCreateyearsBenefitedFromCebas_basicInput | string[]
    scholarshipType_basic?: $Enums.ScholarshipType | null
    institutionName_basic?: string | null
    institutionCNPJ_basic?: string | null
    benefitedFromCebasScholarship_professional?: boolean | null
    lastYearBenefitedFromCebas_professional?: string | null
    scholarshipType_professional?: $Enums.ScholarshipType | null
    institutionName_professional?: string | null
    institutionCNPJ_professional?: string | null
    nameOfScholarshipCourse_professional?: string | null
    application_id: string
    candidate?: CandidateCreateNestedOneWithoutIdentityDetailsInput
  }

  export type IdentityDetailsUncheckedCreateWithoutResponsibleInput = {
    id?: string
    fullName: string
    socialName?: string | null
    main_id?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF?: string | null
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    CadUnico?: boolean
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    address?: string | null
    addressNumber?: string | null
    complement?: string | null
    neighborhood?: string | null
    city?: string | null
    UF?: $Enums.COUNTRY | null
    CEP?: string | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    email?: string | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    incomeSource?: IdentityDetailsCreateincomeSourceInput | $Enums.IncomeSource[]
    livesAlone: boolean
    intendsToGetScholarship: boolean
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    yearsBenefitedFromCebas_basic?: IdentityDetailsCreateyearsBenefitedFromCebas_basicInput | string[]
    scholarshipType_basic?: $Enums.ScholarshipType | null
    institutionName_basic?: string | null
    institutionCNPJ_basic?: string | null
    benefitedFromCebasScholarship_professional?: boolean | null
    lastYearBenefitedFromCebas_professional?: string | null
    scholarshipType_professional?: $Enums.ScholarshipType | null
    institutionName_professional?: string | null
    institutionCNPJ_professional?: string | null
    nameOfScholarshipCourse_professional?: string | null
    candidate_id?: string | null
    application_id: string
  }

  export type IdentityDetailsCreateOrConnectWithoutResponsibleInput = {
    where: IdentityDetailsWhereUniqueInput
    create: XOR<IdentityDetailsCreateWithoutResponsibleInput, IdentityDetailsUncheckedCreateWithoutResponsibleInput>
  }

  export type IdentityDetailsCreateManyResponsibleInputEnvelope = {
    data: IdentityDetailsCreateManyResponsibleInput | IdentityDetailsCreateManyResponsibleInput[]
    skipDuplicates?: boolean
  }

  export type CandidateCreateWithoutResponsibleInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseCreateNestedManyWithoutCandidateInput
    Financing?: FinancingCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutCandidateInput
    Loan?: LoanCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleCreateNestedManyWithoutCandidateInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutCandidateInput
    Housing?: HousingCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutCandidateInput
    Medication?: MedicationCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsCreateNestedManyWithoutCandidateInput
  }

  export type CandidateUncheckedCreateWithoutResponsibleInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationUncheckedCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutCandidateInput
    Loan?: LoanUncheckedCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutCandidateInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutCandidateInput
    Housing?: HousingUncheckedCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutCandidateInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type CandidateCreateOrConnectWithoutResponsibleInput = {
    where: CandidateWhereUniqueInput
    create: XOR<CandidateCreateWithoutResponsibleInput, CandidateUncheckedCreateWithoutResponsibleInput>
  }

  export type CandidateCreateManyResponsibleInputEnvelope = {
    data: CandidateCreateManyResponsibleInput | CandidateCreateManyResponsibleInput[]
    skipDuplicates?: boolean
  }

  export type HousingCreateWithoutResponsibleInput = {
    id?: string
    propertyStatus: $Enums.PropertyStatus
    contractType?: $Enums.ContractType | null
    main_id?: string | null
    grantorName?: string | null
    timeLivingInProperty: $Enums.TimeLivingInProperty
    domicileType: $Enums.DomicileType
    numberOfRooms: $Enums.NumberOfRooms
    numberOfBedrooms: number
    application_id: string
    candidate?: CandidateCreateNestedOneWithoutHousingInput
  }

  export type HousingUncheckedCreateWithoutResponsibleInput = {
    id?: string
    propertyStatus: $Enums.PropertyStatus
    contractType?: $Enums.ContractType | null
    main_id?: string | null
    grantorName?: string | null
    timeLivingInProperty: $Enums.TimeLivingInProperty
    domicileType: $Enums.DomicileType
    numberOfRooms: $Enums.NumberOfRooms
    numberOfBedrooms: number
    candidate_id?: string | null
    application_id: string
  }

  export type HousingCreateOrConnectWithoutResponsibleInput = {
    where: HousingWhereUniqueInput
    create: XOR<HousingCreateWithoutResponsibleInput, HousingUncheckedCreateWithoutResponsibleInput>
  }

  export type HousingCreateManyResponsibleInputEnvelope = {
    data: HousingCreateManyResponsibleInput | HousingCreateManyResponsibleInput[]
    skipDuplicates?: boolean
  }

  export type FamilyMemberCreateWithoutLegalResponsibleInput = {
    id?: string
    relationship: $Enums.Relationship
    otherRelationship?: string | null
    main_id?: string | null
    fullName: string
    socialName?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    numberOfBirthRegister?: string | null
    bookOfBirthRegister?: string | null
    pageOfBirthRegister?: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    email?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    educationPlace?: $Enums.INSTITUTION_TYPE | null
    institutionName?: string | null
    coursingEducationLevel?: $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: string | null
    turnOfEducation?: $Enums.SHIFT | null
    hasScholarship?: boolean | null
    percentageOfScholarship?: string | null
    monthlyAmount?: string | null
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    benefitedFromCebasScholarship_professional?: boolean | null
    CadUnico?: boolean | null
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    incomeSource?: FamilyMemberCreateincomeSourceInput | $Enums.IncomeSource[]
    application_id: string
    CreditCard?: CreditCardCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutFamilyMemberInput
    Financing?: FinancingCreateNestedManyWithoutFamilyMemberInput
    Loan?: LoanCreateNestedManyWithoutFamilyMemberInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutFamilyMemberInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleCreateNestedManyWithoutFamilyMembersInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutFamilyMemberInput
    candidate?: CandidateCreateNestedOneWithoutFamillyMemberInput
    Medication?: MedicationCreateNestedManyWithoutFamilyMemberInput
    BankAccount?: BankAccountCreateNestedManyWithoutFamilyMemberInput
    Declarations?: DeclarationsCreateNestedManyWithoutFamilyMemberInput
  }

  export type FamilyMemberUncheckedCreateWithoutLegalResponsibleInput = {
    id?: string
    relationship: $Enums.Relationship
    otherRelationship?: string | null
    main_id?: string | null
    fullName: string
    socialName?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    numberOfBirthRegister?: string | null
    bookOfBirthRegister?: string | null
    pageOfBirthRegister?: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    email?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    educationPlace?: $Enums.INSTITUTION_TYPE | null
    institutionName?: string | null
    coursingEducationLevel?: $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: string | null
    turnOfEducation?: $Enums.SHIFT | null
    hasScholarship?: boolean | null
    percentageOfScholarship?: string | null
    monthlyAmount?: string | null
    candidate_id?: string | null
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    benefitedFromCebasScholarship_professional?: boolean | null
    CadUnico?: boolean | null
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    incomeSource?: FamilyMemberCreateincomeSourceInput | $Enums.IncomeSource[]
    application_id: string
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutFamilyMemberInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutFamilyMemberInput
    Loan?: LoanUncheckedCreateNestedManyWithoutFamilyMemberInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutFamilyMemberInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedCreateNestedManyWithoutFamilyMembersInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutFamilyMemberInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutFamilyMemberInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutFamilyMemberInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutFamilyMemberInput
  }

  export type FamilyMemberCreateOrConnectWithoutLegalResponsibleInput = {
    where: FamilyMemberWhereUniqueInput
    create: XOR<FamilyMemberCreateWithoutLegalResponsibleInput, FamilyMemberUncheckedCreateWithoutLegalResponsibleInput>
  }

  export type FamilyMemberCreateManyLegalResponsibleInputEnvelope = {
    data: FamilyMemberCreateManyLegalResponsibleInput | FamilyMemberCreateManyLegalResponsibleInput[]
    skipDuplicates?: boolean
  }

  export type CreditCardCreateWithoutLegalResponsibleInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    usersCount: number
    cardType: string
    bankName: string
    cardFlag: string
    invoiceValue: number
    application_id: string
    candidate?: CandidateCreateNestedOneWithoutCreditCardInput
    familyMember?: FamilyMemberCreateNestedOneWithoutCreditCardInput
  }

  export type CreditCardUncheckedCreateWithoutLegalResponsibleInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    usersCount: number
    cardType: string
    bankName: string
    cardFlag: string
    invoiceValue: number
    familyMember_id?: string | null
    candidate_id?: string | null
    application_id: string
  }

  export type CreditCardCreateOrConnectWithoutLegalResponsibleInput = {
    where: CreditCardWhereUniqueInput
    create: XOR<CreditCardCreateWithoutLegalResponsibleInput, CreditCardUncheckedCreateWithoutLegalResponsibleInput>
  }

  export type CreditCardCreateManyLegalResponsibleInputEnvelope = {
    data: CreditCardCreateManyLegalResponsibleInput | CreditCardCreateManyLegalResponsibleInput[]
    skipDuplicates?: boolean
  }

  export type ExpenseCreateWithoutLegalResponsibleInput = {
    id?: string
    main_id?: string | null
    date: Date | string
    waterSewage?: number | null
    electricity?: number | null
    landlinePhone?: number | null
    mobilePhone?: number | null
    food?: number | null
    rent?: number | null
    garageRent?: number | null
    condominium?: number | null
    cableTV?: number | null
    streamingServices?: number | null
    fuel?: number | null
    annualIPVA?: number | null
    annualIPTU?: number | null
    annualITR?: number | null
    annualIR?: number | null
    INSS?: number | null
    publicTransport?: number | null
    schoolTransport?: number | null
    internet?: number | null
    courses?: number | null
    healthPlan?: number | null
    dentalPlan?: number | null
    medicationExpenses?: number | null
    totalExpense?: number | null
    installmentCountIPTU?: number | null
    installmentCountIPVA?: number | null
    installmentCountIR?: number | null
    installmentCountITR?: number | null
    installmentValueIPTU?: number | null
    installmentValueIPVA?: number | null
    installmentValueIR?: number | null
    installmentValueITR?: number | null
    financing?: number | null
    creditCard?: number | null
    optedForInstallmentIPTU?: boolean | null
    optedForInstallmentIPVA?: boolean | null
    optedForInstallmentIR?: boolean | null
    optedForInstallmentITR?: boolean | null
    otherExpensesDescription?: ExpenseCreateotherExpensesDescriptionInput | string[]
    otherExpensesValue?: ExpenseCreateotherExpensesValueInput | number[]
    application_id: string
    candidate?: CandidateCreateNestedOneWithoutExpenseInput
  }

  export type ExpenseUncheckedCreateWithoutLegalResponsibleInput = {
    id?: string
    main_id?: string | null
    date: Date | string
    waterSewage?: number | null
    electricity?: number | null
    landlinePhone?: number | null
    mobilePhone?: number | null
    food?: number | null
    rent?: number | null
    garageRent?: number | null
    condominium?: number | null
    cableTV?: number | null
    streamingServices?: number | null
    fuel?: number | null
    annualIPVA?: number | null
    annualIPTU?: number | null
    annualITR?: number | null
    annualIR?: number | null
    INSS?: number | null
    publicTransport?: number | null
    schoolTransport?: number | null
    internet?: number | null
    courses?: number | null
    healthPlan?: number | null
    dentalPlan?: number | null
    medicationExpenses?: number | null
    totalExpense?: number | null
    candidate_id?: string | null
    installmentCountIPTU?: number | null
    installmentCountIPVA?: number | null
    installmentCountIR?: number | null
    installmentCountITR?: number | null
    installmentValueIPTU?: number | null
    installmentValueIPVA?: number | null
    installmentValueIR?: number | null
    installmentValueITR?: number | null
    financing?: number | null
    creditCard?: number | null
    optedForInstallmentIPTU?: boolean | null
    optedForInstallmentIPVA?: boolean | null
    optedForInstallmentIR?: boolean | null
    optedForInstallmentITR?: boolean | null
    otherExpensesDescription?: ExpenseCreateotherExpensesDescriptionInput | string[]
    otherExpensesValue?: ExpenseCreateotherExpensesValueInput | number[]
    application_id: string
  }

  export type ExpenseCreateOrConnectWithoutLegalResponsibleInput = {
    where: ExpenseWhereUniqueInput
    create: XOR<ExpenseCreateWithoutLegalResponsibleInput, ExpenseUncheckedCreateWithoutLegalResponsibleInput>
  }

  export type ExpenseCreateManyLegalResponsibleInputEnvelope = {
    data: ExpenseCreateManyLegalResponsibleInput | ExpenseCreateManyLegalResponsibleInput[]
    skipDuplicates?: boolean
  }

  export type FinancingCreateWithoutLegalResponsibleInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    installmentValue: number
    totalInstallments: number
    paidInstallments: number
    bankName: string
    otherFinancing?: string | null
    financingType: $Enums.FinancingType
    application_id: string
    candidate?: CandidateCreateNestedOneWithoutFinancingInput
    familyMember?: FamilyMemberCreateNestedOneWithoutFinancingInput
  }

  export type FinancingUncheckedCreateWithoutLegalResponsibleInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    installmentValue: number
    totalInstallments: number
    paidInstallments: number
    bankName: string
    familyMember_id?: string | null
    candidate_id?: string | null
    otherFinancing?: string | null
    financingType: $Enums.FinancingType
    application_id: string
  }

  export type FinancingCreateOrConnectWithoutLegalResponsibleInput = {
    where: FinancingWhereUniqueInput
    create: XOR<FinancingCreateWithoutLegalResponsibleInput, FinancingUncheckedCreateWithoutLegalResponsibleInput>
  }

  export type FinancingCreateManyLegalResponsibleInputEnvelope = {
    data: FinancingCreateManyLegalResponsibleInput | FinancingCreateManyLegalResponsibleInput[]
    skipDuplicates?: boolean
  }

  export type LoanCreateWithoutLegalResponsibleInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    installmentValue: number
    totalInstallments: number
    paidInstallments: number
    bankName: string
    application_id: string
    candidate?: CandidateCreateNestedOneWithoutLoanInput
    familyMember?: FamilyMemberCreateNestedOneWithoutLoanInput
  }

  export type LoanUncheckedCreateWithoutLegalResponsibleInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    installmentValue: number
    totalInstallments: number
    paidInstallments: number
    bankName: string
    familyMember_id?: string | null
    candidate_id?: string | null
    application_id: string
  }

  export type LoanCreateOrConnectWithoutLegalResponsibleInput = {
    where: LoanWhereUniqueInput
    create: XOR<LoanCreateWithoutLegalResponsibleInput, LoanUncheckedCreateWithoutLegalResponsibleInput>
  }

  export type LoanCreateManyLegalResponsibleInputEnvelope = {
    data: LoanCreateManyLegalResponsibleInput | LoanCreateManyLegalResponsibleInput[]
    skipDuplicates?: boolean
  }

  export type OtherExpenseCreateWithoutLegalResponsibleInput = {
    id?: string
    main_id?: string | null
    description: string
    value: number
    application_id: string
    candidate?: CandidateCreateNestedOneWithoutOtherExpenseInput
    familyMember?: FamilyMemberCreateNestedOneWithoutOtherExpenseInput
  }

  export type OtherExpenseUncheckedCreateWithoutLegalResponsibleInput = {
    id?: string
    main_id?: string | null
    description: string
    value: number
    familyMember_id?: string | null
    candidate_id?: string | null
    application_id: string
  }

  export type OtherExpenseCreateOrConnectWithoutLegalResponsibleInput = {
    where: OtherExpenseWhereUniqueInput
    create: XOR<OtherExpenseCreateWithoutLegalResponsibleInput, OtherExpenseUncheckedCreateWithoutLegalResponsibleInput>
  }

  export type OtherExpenseCreateManyLegalResponsibleInputEnvelope = {
    data: OtherExpenseCreateManyLegalResponsibleInput | OtherExpenseCreateManyLegalResponsibleInput[]
    skipDuplicates?: boolean
  }

  export type VehicleCreateWithoutLegalResponsibleInput = {
    id?: string
    vehicleType: $Enums.VehicleType
    modelAndBrand: string
    main_id?: string | null
    manufacturingYear: number
    situation: $Enums.VehicleSituation
    financedMonths?: number | null
    monthsToPayOff?: number | null
    hasInsurance?: boolean
    insuranceValue?: number | null
    usage: $Enums.VehicleUsage
    owners_id?: VehicleCreateowners_idInput | string[]
    application_id: string
    candidate?: CandidateCreateNestedOneWithoutVehicleInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleCreateNestedManyWithoutVehicleInput
  }

  export type VehicleUncheckedCreateWithoutLegalResponsibleInput = {
    id?: string
    vehicleType: $Enums.VehicleType
    modelAndBrand: string
    main_id?: string | null
    manufacturingYear: number
    situation: $Enums.VehicleSituation
    financedMonths?: number | null
    monthsToPayOff?: number | null
    hasInsurance?: boolean
    insuranceValue?: number | null
    usage: $Enums.VehicleUsage
    candidate_id?: string | null
    owners_id?: VehicleCreateowners_idInput | string[]
    application_id: string
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedCreateNestedManyWithoutVehicleInput
  }

  export type VehicleCreateOrConnectWithoutLegalResponsibleInput = {
    where: VehicleWhereUniqueInput
    create: XOR<VehicleCreateWithoutLegalResponsibleInput, VehicleUncheckedCreateWithoutLegalResponsibleInput>
  }

  export type VehicleCreateManyLegalResponsibleInputEnvelope = {
    data: VehicleCreateManyLegalResponsibleInput | VehicleCreateManyLegalResponsibleInput[]
    skipDuplicates?: boolean
  }

  export type FamilyMemberDiseaseCreateWithoutLegalResponsibleInput = {
    id?: string
    main_id?: string | null
    disease?: $Enums.Disease | null
    diseases?: FamilyMemberDiseaseCreatediseasesInput | $Enums.Disease[]
    specificDisease?: string | null
    hasMedicalReport: boolean
    application_id: string
    familyMember?: FamilyMemberCreateNestedOneWithoutFamilyMemberDiseaseInput
    candidate?: CandidateCreateNestedOneWithoutFamilyMemberDiseaseInput
    Medication?: MedicationCreateNestedManyWithoutFamilyMemberDiseaseInput
  }

  export type FamilyMemberDiseaseUncheckedCreateWithoutLegalResponsibleInput = {
    id?: string
    main_id?: string | null
    disease?: $Enums.Disease | null
    diseases?: FamilyMemberDiseaseCreatediseasesInput | $Enums.Disease[]
    specificDisease?: string | null
    hasMedicalReport: boolean
    familyMember_id?: string | null
    candidate_id?: string | null
    application_id: string
    Medication?: MedicationUncheckedCreateNestedManyWithoutFamilyMemberDiseaseInput
  }

  export type FamilyMemberDiseaseCreateOrConnectWithoutLegalResponsibleInput = {
    where: FamilyMemberDiseaseWhereUniqueInput
    create: XOR<FamilyMemberDiseaseCreateWithoutLegalResponsibleInput, FamilyMemberDiseaseUncheckedCreateWithoutLegalResponsibleInput>
  }

  export type FamilyMemberDiseaseCreateManyLegalResponsibleInputEnvelope = {
    data: FamilyMemberDiseaseCreateManyLegalResponsibleInput | FamilyMemberDiseaseCreateManyLegalResponsibleInput[]
    skipDuplicates?: boolean
  }

  export type MedicationCreateWithoutLegalResponsibleInput = {
    id?: string
    main_id?: string | null
    medicationName: string
    obtainedPublicly: boolean
    specificMedicationPublicly?: string | null
    application_id: string
    familyMember?: FamilyMemberCreateNestedOneWithoutMedicationInput
    candidate?: CandidateCreateNestedOneWithoutMedicationInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedOneWithoutMedicationInput
  }

  export type MedicationUncheckedCreateWithoutLegalResponsibleInput = {
    id?: string
    main_id?: string | null
    medicationName: string
    obtainedPublicly: boolean
    specificMedicationPublicly?: string | null
    familyMember_id?: string | null
    candidate_id?: string | null
    application_id: string
    familyMemberDiseaseId?: string | null
  }

  export type MedicationCreateOrConnectWithoutLegalResponsibleInput = {
    where: MedicationWhereUniqueInput
    create: XOR<MedicationCreateWithoutLegalResponsibleInput, MedicationUncheckedCreateWithoutLegalResponsibleInput>
  }

  export type MedicationCreateManyLegalResponsibleInputEnvelope = {
    data: MedicationCreateManyLegalResponsibleInput | MedicationCreateManyLegalResponsibleInput[]
    skipDuplicates?: boolean
  }

  export type ApplicationCreateWithoutResponsibleInput = {
    id?: string
    status: $Enums.ApplicationStatus
    candidateName?: string | null
    SocialAssistantName?: string | null
    CadUnico?: boolean | null
    hasSevereDesease?: boolean | null
    averageIncome?: number | null
    perCapita?: number | null
    position?: number | null
    number?: number
    announcement: AnnouncementCreateNestedOneWithoutApplicationInput
    candidate: CandidateCreateNestedOneWithoutApplicationInput
    EducationLevel: EducationLevelCreateNestedOneWithoutApplicationInput
    SocialAssistant?: SocialAssistantCreateNestedOneWithoutApplicationInput
    applicationHistories?: ApplicationHistoryCreateNestedManyWithoutApplicationInput
    ScholarshipGranted?: ScholarshipGrantedCreateNestedOneWithoutApplicationInput
  }

  export type ApplicationUncheckedCreateWithoutResponsibleInput = {
    id?: string
    candidate_id: string
    announcement_id: string
    status: $Enums.ApplicationStatus
    socialAssistant_id?: string | null
    educationLevel_id: string
    candidateName?: string | null
    SocialAssistantName?: string | null
    CadUnico?: boolean | null
    hasSevereDesease?: boolean | null
    averageIncome?: number | null
    perCapita?: number | null
    position?: number | null
    number?: number
    applicationHistories?: ApplicationHistoryUncheckedCreateNestedManyWithoutApplicationInput
    ScholarshipGranted?: ScholarshipGrantedUncheckedCreateNestedOneWithoutApplicationInput
  }

  export type ApplicationCreateOrConnectWithoutResponsibleInput = {
    where: ApplicationWhereUniqueInput
    create: XOR<ApplicationCreateWithoutResponsibleInput, ApplicationUncheckedCreateWithoutResponsibleInput>
  }

  export type ApplicationCreateManyResponsibleInputEnvelope = {
    data: ApplicationCreateManyResponsibleInput | ApplicationCreateManyResponsibleInput[]
    skipDuplicates?: boolean
  }

  export type FamilyMemberIncomeCreateWithoutLegalResponsibleInput = {
    id?: string
    employmentType: $Enums.EmploymentType
    averageIncome: string
    main_id?: string | null
    admissionDate?: Date | string | null
    position?: string | null
    payingSource?: string | null
    payingSourcePhone?: string | null
    startDate?: Date | string | null
    CNPJ?: string | null
    financialAssistantCPF?: string | null
    socialReason?: string | null
    fantasyName?: string | null
    CPNJ?: string | null
    receivesUnemployment?: boolean | null
    parcels?: number | null
    firstParcelDate?: Date | string | null
    parcelValue?: number | null
    quantity?: number
    application_id: string
    familyMember?: FamilyMemberCreateNestedOneWithoutFamilyMemberIncomeInput
    candidate?: CandidateCreateNestedOneWithoutFamilyMemberIncomeInput
  }

  export type FamilyMemberIncomeUncheckedCreateWithoutLegalResponsibleInput = {
    id?: string
    employmentType: $Enums.EmploymentType
    averageIncome: string
    main_id?: string | null
    admissionDate?: Date | string | null
    position?: string | null
    payingSource?: string | null
    payingSourcePhone?: string | null
    startDate?: Date | string | null
    CNPJ?: string | null
    financialAssistantCPF?: string | null
    socialReason?: string | null
    fantasyName?: string | null
    CPNJ?: string | null
    receivesUnemployment?: boolean | null
    parcels?: number | null
    firstParcelDate?: Date | string | null
    parcelValue?: number | null
    familyMember_id?: string | null
    quantity?: number
    candidate_id?: string | null
    application_id: string
  }

  export type FamilyMemberIncomeCreateOrConnectWithoutLegalResponsibleInput = {
    where: FamilyMemberIncomeWhereUniqueInput
    create: XOR<FamilyMemberIncomeCreateWithoutLegalResponsibleInput, FamilyMemberIncomeUncheckedCreateWithoutLegalResponsibleInput>
  }

  export type FamilyMemberIncomeCreateManyLegalResponsibleInputEnvelope = {
    data: FamilyMemberIncomeCreateManyLegalResponsibleInput | FamilyMemberIncomeCreateManyLegalResponsibleInput[]
    skipDuplicates?: boolean
  }

  export type MonthlyIncomeCreateWithoutLegalResponsibleInput = {
    id?: string
    date?: Date | string | null
    main_id?: string | null
    grossAmount?: number | null
    liquidAmount?: number | null
    proLabore?: number | null
    dividends?: number | null
    total?: number | null
    deductionValue?: Decimal | DecimalJsLike | number | string | null
    publicPension?: Decimal | DecimalJsLike | number | string | null
    incomeTax?: Decimal | DecimalJsLike | number | string | null
    otherDeductions?: Decimal | DecimalJsLike | number | string | null
    foodAllowanceValue?: Decimal | DecimalJsLike | number | string | null
    transportAllowanceValue?: Decimal | DecimalJsLike | number | string | null
    expenseReimbursementValue?: Decimal | DecimalJsLike | number | string | null
    advancePaymentValue?: Decimal | DecimalJsLike | number | string | null
    reversalValue?: Decimal | DecimalJsLike | number | string | null
    compensationValue?: Decimal | DecimalJsLike | number | string | null
    judicialPensionValue?: Decimal | DecimalJsLike | number | string | null
    incomeSource?: $Enums.IncomeSource | null
    application_id: string
    familyMember?: FamilyMemberCreateNestedOneWithoutMonthlyIncomeInput
    candidate?: CandidateCreateNestedOneWithoutMonthlyIncomeInput
  }

  export type MonthlyIncomeUncheckedCreateWithoutLegalResponsibleInput = {
    id?: string
    date?: Date | string | null
    main_id?: string | null
    grossAmount?: number | null
    liquidAmount?: number | null
    proLabore?: number | null
    dividends?: number | null
    total?: number | null
    deductionValue?: Decimal | DecimalJsLike | number | string | null
    publicPension?: Decimal | DecimalJsLike | number | string | null
    incomeTax?: Decimal | DecimalJsLike | number | string | null
    otherDeductions?: Decimal | DecimalJsLike | number | string | null
    foodAllowanceValue?: Decimal | DecimalJsLike | number | string | null
    transportAllowanceValue?: Decimal | DecimalJsLike | number | string | null
    expenseReimbursementValue?: Decimal | DecimalJsLike | number | string | null
    advancePaymentValue?: Decimal | DecimalJsLike | number | string | null
    reversalValue?: Decimal | DecimalJsLike | number | string | null
    compensationValue?: Decimal | DecimalJsLike | number | string | null
    judicialPensionValue?: Decimal | DecimalJsLike | number | string | null
    familyMember_id?: string | null
    candidate_id?: string | null
    incomeSource?: $Enums.IncomeSource | null
    application_id: string
  }

  export type MonthlyIncomeCreateOrConnectWithoutLegalResponsibleInput = {
    where: MonthlyIncomeWhereUniqueInput
    create: XOR<MonthlyIncomeCreateWithoutLegalResponsibleInput, MonthlyIncomeUncheckedCreateWithoutLegalResponsibleInput>
  }

  export type MonthlyIncomeCreateManyLegalResponsibleInputEnvelope = {
    data: MonthlyIncomeCreateManyLegalResponsibleInput | MonthlyIncomeCreateManyLegalResponsibleInput[]
    skipDuplicates?: boolean
  }

  export type BankAccountCreateWithoutLegalResponsibleInput = {
    id?: string
    main_id?: string | null
    bankName: string
    agencyNumber: string
    accountNumber: string
    accountType: $Enums.AccountType
    application_id: string
    familyMember?: FamilyMemberCreateNestedOneWithoutBankAccountInput
    candidate?: CandidateCreateNestedOneWithoutBankAccountInput
  }

  export type BankAccountUncheckedCreateWithoutLegalResponsibleInput = {
    id?: string
    main_id?: string | null
    bankName: string
    agencyNumber: string
    accountNumber: string
    accountType: $Enums.AccountType
    familyMember_id?: string | null
    candidate_id?: string | null
    application_id: string
  }

  export type BankAccountCreateOrConnectWithoutLegalResponsibleInput = {
    where: BankAccountWhereUniqueInput
    create: XOR<BankAccountCreateWithoutLegalResponsibleInput, BankAccountUncheckedCreateWithoutLegalResponsibleInput>
  }

  export type BankAccountCreateManyLegalResponsibleInputEnvelope = {
    data: BankAccountCreateManyLegalResponsibleInput | BankAccountCreateManyLegalResponsibleInput[]
    skipDuplicates?: boolean
  }

  export type DeclarationsCreateWithoutLegalResponsibleInput = {
    id?: string
    declarationType: $Enums.Declaration_Type
    text: string
    application_id: string
    candidate?: CandidateCreateNestedOneWithoutDeclarationsInput
    familyMember?: FamilyMemberCreateNestedOneWithoutDeclarationsInput
  }

  export type DeclarationsUncheckedCreateWithoutLegalResponsibleInput = {
    id?: string
    declarationType: $Enums.Declaration_Type
    text: string
    familyMember_id?: string | null
    candidate_id?: string | null
    application_id: string
  }

  export type DeclarationsCreateOrConnectWithoutLegalResponsibleInput = {
    where: DeclarationsWhereUniqueInput
    create: XOR<DeclarationsCreateWithoutLegalResponsibleInput, DeclarationsUncheckedCreateWithoutLegalResponsibleInput>
  }

  export type DeclarationsCreateManyLegalResponsibleInputEnvelope = {
    data: DeclarationsCreateManyLegalResponsibleInput | DeclarationsCreateManyLegalResponsibleInput[]
    skipDuplicates?: boolean
  }

  export type IdentityDetailsUpsertWithWhereUniqueWithoutResponsibleInput = {
    where: IdentityDetailsWhereUniqueInput
    update: XOR<IdentityDetailsUpdateWithoutResponsibleInput, IdentityDetailsUncheckedUpdateWithoutResponsibleInput>
    create: XOR<IdentityDetailsCreateWithoutResponsibleInput, IdentityDetailsUncheckedCreateWithoutResponsibleInput>
  }

  export type IdentityDetailsUpdateWithWhereUniqueWithoutResponsibleInput = {
    where: IdentityDetailsWhereUniqueInput
    data: XOR<IdentityDetailsUpdateWithoutResponsibleInput, IdentityDetailsUncheckedUpdateWithoutResponsibleInput>
  }

  export type IdentityDetailsUpdateManyWithWhereWithoutResponsibleInput = {
    where: IdentityDetailsScalarWhereInput
    data: XOR<IdentityDetailsUpdateManyMutationInput, IdentityDetailsUncheckedUpdateManyWithoutResponsibleInput>
  }

  export type CandidateUpsertWithWhereUniqueWithoutResponsibleInput = {
    where: CandidateWhereUniqueInput
    update: XOR<CandidateUpdateWithoutResponsibleInput, CandidateUncheckedUpdateWithoutResponsibleInput>
    create: XOR<CandidateCreateWithoutResponsibleInput, CandidateUncheckedCreateWithoutResponsibleInput>
  }

  export type CandidateUpdateWithWhereUniqueWithoutResponsibleInput = {
    where: CandidateWhereUniqueInput
    data: XOR<CandidateUpdateWithoutResponsibleInput, CandidateUncheckedUpdateWithoutResponsibleInput>
  }

  export type CandidateUpdateManyWithWhereWithoutResponsibleInput = {
    where: CandidateScalarWhereInput
    data: XOR<CandidateUpdateManyMutationInput, CandidateUncheckedUpdateManyWithoutResponsibleInput>
  }

  export type CandidateScalarWhereInput = {
    AND?: CandidateScalarWhereInput | CandidateScalarWhereInput[]
    OR?: CandidateScalarWhereInput[]
    NOT?: CandidateScalarWhereInput | CandidateScalarWhereInput[]
    id?: StringFilter<"Candidate"> | string
    name?: StringFilter<"Candidate"> | string
    CPF?: StringFilter<"Candidate"> | string
    main_id?: StringNullableFilter<"Candidate"> | string | null
    birthDate?: DateTimeFilter<"Candidate"> | Date | string
    role?: EnumROLEFilter<"Candidate"> | $Enums.ROLE
    createdAt?: DateTimeFilter<"Candidate"> | Date | string
    user_id?: StringNullableFilter<"Candidate"> | string | null
    responsible_id?: StringNullableFilter<"Candidate"> | string | null
    profilePicture?: StringNullableFilter<"Candidate"> | string | null
    email?: StringNullableFilter<"Candidate"> | string | null
    finishedapplication?: BoolFilter<"Candidate"> | boolean
    application_id?: StringNullableFilter<"Candidate"> | string | null
  }

  export type HousingUpsertWithWhereUniqueWithoutResponsibleInput = {
    where: HousingWhereUniqueInput
    update: XOR<HousingUpdateWithoutResponsibleInput, HousingUncheckedUpdateWithoutResponsibleInput>
    create: XOR<HousingCreateWithoutResponsibleInput, HousingUncheckedCreateWithoutResponsibleInput>
  }

  export type HousingUpdateWithWhereUniqueWithoutResponsibleInput = {
    where: HousingWhereUniqueInput
    data: XOR<HousingUpdateWithoutResponsibleInput, HousingUncheckedUpdateWithoutResponsibleInput>
  }

  export type HousingUpdateManyWithWhereWithoutResponsibleInput = {
    where: HousingScalarWhereInput
    data: XOR<HousingUpdateManyMutationInput, HousingUncheckedUpdateManyWithoutResponsibleInput>
  }

  export type FamilyMemberUpsertWithWhereUniqueWithoutLegalResponsibleInput = {
    where: FamilyMemberWhereUniqueInput
    update: XOR<FamilyMemberUpdateWithoutLegalResponsibleInput, FamilyMemberUncheckedUpdateWithoutLegalResponsibleInput>
    create: XOR<FamilyMemberCreateWithoutLegalResponsibleInput, FamilyMemberUncheckedCreateWithoutLegalResponsibleInput>
  }

  export type FamilyMemberUpdateWithWhereUniqueWithoutLegalResponsibleInput = {
    where: FamilyMemberWhereUniqueInput
    data: XOR<FamilyMemberUpdateWithoutLegalResponsibleInput, FamilyMemberUncheckedUpdateWithoutLegalResponsibleInput>
  }

  export type FamilyMemberUpdateManyWithWhereWithoutLegalResponsibleInput = {
    where: FamilyMemberScalarWhereInput
    data: XOR<FamilyMemberUpdateManyMutationInput, FamilyMemberUncheckedUpdateManyWithoutLegalResponsibleInput>
  }

  export type CreditCardUpsertWithWhereUniqueWithoutLegalResponsibleInput = {
    where: CreditCardWhereUniqueInput
    update: XOR<CreditCardUpdateWithoutLegalResponsibleInput, CreditCardUncheckedUpdateWithoutLegalResponsibleInput>
    create: XOR<CreditCardCreateWithoutLegalResponsibleInput, CreditCardUncheckedCreateWithoutLegalResponsibleInput>
  }

  export type CreditCardUpdateWithWhereUniqueWithoutLegalResponsibleInput = {
    where: CreditCardWhereUniqueInput
    data: XOR<CreditCardUpdateWithoutLegalResponsibleInput, CreditCardUncheckedUpdateWithoutLegalResponsibleInput>
  }

  export type CreditCardUpdateManyWithWhereWithoutLegalResponsibleInput = {
    where: CreditCardScalarWhereInput
    data: XOR<CreditCardUpdateManyMutationInput, CreditCardUncheckedUpdateManyWithoutLegalResponsibleInput>
  }

  export type ExpenseUpsertWithWhereUniqueWithoutLegalResponsibleInput = {
    where: ExpenseWhereUniqueInput
    update: XOR<ExpenseUpdateWithoutLegalResponsibleInput, ExpenseUncheckedUpdateWithoutLegalResponsibleInput>
    create: XOR<ExpenseCreateWithoutLegalResponsibleInput, ExpenseUncheckedCreateWithoutLegalResponsibleInput>
  }

  export type ExpenseUpdateWithWhereUniqueWithoutLegalResponsibleInput = {
    where: ExpenseWhereUniqueInput
    data: XOR<ExpenseUpdateWithoutLegalResponsibleInput, ExpenseUncheckedUpdateWithoutLegalResponsibleInput>
  }

  export type ExpenseUpdateManyWithWhereWithoutLegalResponsibleInput = {
    where: ExpenseScalarWhereInput
    data: XOR<ExpenseUpdateManyMutationInput, ExpenseUncheckedUpdateManyWithoutLegalResponsibleInput>
  }

  export type FinancingUpsertWithWhereUniqueWithoutLegalResponsibleInput = {
    where: FinancingWhereUniqueInput
    update: XOR<FinancingUpdateWithoutLegalResponsibleInput, FinancingUncheckedUpdateWithoutLegalResponsibleInput>
    create: XOR<FinancingCreateWithoutLegalResponsibleInput, FinancingUncheckedCreateWithoutLegalResponsibleInput>
  }

  export type FinancingUpdateWithWhereUniqueWithoutLegalResponsibleInput = {
    where: FinancingWhereUniqueInput
    data: XOR<FinancingUpdateWithoutLegalResponsibleInput, FinancingUncheckedUpdateWithoutLegalResponsibleInput>
  }

  export type FinancingUpdateManyWithWhereWithoutLegalResponsibleInput = {
    where: FinancingScalarWhereInput
    data: XOR<FinancingUpdateManyMutationInput, FinancingUncheckedUpdateManyWithoutLegalResponsibleInput>
  }

  export type LoanUpsertWithWhereUniqueWithoutLegalResponsibleInput = {
    where: LoanWhereUniqueInput
    update: XOR<LoanUpdateWithoutLegalResponsibleInput, LoanUncheckedUpdateWithoutLegalResponsibleInput>
    create: XOR<LoanCreateWithoutLegalResponsibleInput, LoanUncheckedCreateWithoutLegalResponsibleInput>
  }

  export type LoanUpdateWithWhereUniqueWithoutLegalResponsibleInput = {
    where: LoanWhereUniqueInput
    data: XOR<LoanUpdateWithoutLegalResponsibleInput, LoanUncheckedUpdateWithoutLegalResponsibleInput>
  }

  export type LoanUpdateManyWithWhereWithoutLegalResponsibleInput = {
    where: LoanScalarWhereInput
    data: XOR<LoanUpdateManyMutationInput, LoanUncheckedUpdateManyWithoutLegalResponsibleInput>
  }

  export type OtherExpenseUpsertWithWhereUniqueWithoutLegalResponsibleInput = {
    where: OtherExpenseWhereUniqueInput
    update: XOR<OtherExpenseUpdateWithoutLegalResponsibleInput, OtherExpenseUncheckedUpdateWithoutLegalResponsibleInput>
    create: XOR<OtherExpenseCreateWithoutLegalResponsibleInput, OtherExpenseUncheckedCreateWithoutLegalResponsibleInput>
  }

  export type OtherExpenseUpdateWithWhereUniqueWithoutLegalResponsibleInput = {
    where: OtherExpenseWhereUniqueInput
    data: XOR<OtherExpenseUpdateWithoutLegalResponsibleInput, OtherExpenseUncheckedUpdateWithoutLegalResponsibleInput>
  }

  export type OtherExpenseUpdateManyWithWhereWithoutLegalResponsibleInput = {
    where: OtherExpenseScalarWhereInput
    data: XOR<OtherExpenseUpdateManyMutationInput, OtherExpenseUncheckedUpdateManyWithoutLegalResponsibleInput>
  }

  export type VehicleUpsertWithWhereUniqueWithoutLegalResponsibleInput = {
    where: VehicleWhereUniqueInput
    update: XOR<VehicleUpdateWithoutLegalResponsibleInput, VehicleUncheckedUpdateWithoutLegalResponsibleInput>
    create: XOR<VehicleCreateWithoutLegalResponsibleInput, VehicleUncheckedCreateWithoutLegalResponsibleInput>
  }

  export type VehicleUpdateWithWhereUniqueWithoutLegalResponsibleInput = {
    where: VehicleWhereUniqueInput
    data: XOR<VehicleUpdateWithoutLegalResponsibleInput, VehicleUncheckedUpdateWithoutLegalResponsibleInput>
  }

  export type VehicleUpdateManyWithWhereWithoutLegalResponsibleInput = {
    where: VehicleScalarWhereInput
    data: XOR<VehicleUpdateManyMutationInput, VehicleUncheckedUpdateManyWithoutLegalResponsibleInput>
  }

  export type FamilyMemberDiseaseUpsertWithWhereUniqueWithoutLegalResponsibleInput = {
    where: FamilyMemberDiseaseWhereUniqueInput
    update: XOR<FamilyMemberDiseaseUpdateWithoutLegalResponsibleInput, FamilyMemberDiseaseUncheckedUpdateWithoutLegalResponsibleInput>
    create: XOR<FamilyMemberDiseaseCreateWithoutLegalResponsibleInput, FamilyMemberDiseaseUncheckedCreateWithoutLegalResponsibleInput>
  }

  export type FamilyMemberDiseaseUpdateWithWhereUniqueWithoutLegalResponsibleInput = {
    where: FamilyMemberDiseaseWhereUniqueInput
    data: XOR<FamilyMemberDiseaseUpdateWithoutLegalResponsibleInput, FamilyMemberDiseaseUncheckedUpdateWithoutLegalResponsibleInput>
  }

  export type FamilyMemberDiseaseUpdateManyWithWhereWithoutLegalResponsibleInput = {
    where: FamilyMemberDiseaseScalarWhereInput
    data: XOR<FamilyMemberDiseaseUpdateManyMutationInput, FamilyMemberDiseaseUncheckedUpdateManyWithoutLegalResponsibleInput>
  }

  export type MedicationUpsertWithWhereUniqueWithoutLegalResponsibleInput = {
    where: MedicationWhereUniqueInput
    update: XOR<MedicationUpdateWithoutLegalResponsibleInput, MedicationUncheckedUpdateWithoutLegalResponsibleInput>
    create: XOR<MedicationCreateWithoutLegalResponsibleInput, MedicationUncheckedCreateWithoutLegalResponsibleInput>
  }

  export type MedicationUpdateWithWhereUniqueWithoutLegalResponsibleInput = {
    where: MedicationWhereUniqueInput
    data: XOR<MedicationUpdateWithoutLegalResponsibleInput, MedicationUncheckedUpdateWithoutLegalResponsibleInput>
  }

  export type MedicationUpdateManyWithWhereWithoutLegalResponsibleInput = {
    where: MedicationScalarWhereInput
    data: XOR<MedicationUpdateManyMutationInput, MedicationUncheckedUpdateManyWithoutLegalResponsibleInput>
  }

  export type ApplicationUpsertWithWhereUniqueWithoutResponsibleInput = {
    where: ApplicationWhereUniqueInput
    update: XOR<ApplicationUpdateWithoutResponsibleInput, ApplicationUncheckedUpdateWithoutResponsibleInput>
    create: XOR<ApplicationCreateWithoutResponsibleInput, ApplicationUncheckedCreateWithoutResponsibleInput>
  }

  export type ApplicationUpdateWithWhereUniqueWithoutResponsibleInput = {
    where: ApplicationWhereUniqueInput
    data: XOR<ApplicationUpdateWithoutResponsibleInput, ApplicationUncheckedUpdateWithoutResponsibleInput>
  }

  export type ApplicationUpdateManyWithWhereWithoutResponsibleInput = {
    where: ApplicationScalarWhereInput
    data: XOR<ApplicationUpdateManyMutationInput, ApplicationUncheckedUpdateManyWithoutResponsibleInput>
  }

  export type FamilyMemberIncomeUpsertWithWhereUniqueWithoutLegalResponsibleInput = {
    where: FamilyMemberIncomeWhereUniqueInput
    update: XOR<FamilyMemberIncomeUpdateWithoutLegalResponsibleInput, FamilyMemberIncomeUncheckedUpdateWithoutLegalResponsibleInput>
    create: XOR<FamilyMemberIncomeCreateWithoutLegalResponsibleInput, FamilyMemberIncomeUncheckedCreateWithoutLegalResponsibleInput>
  }

  export type FamilyMemberIncomeUpdateWithWhereUniqueWithoutLegalResponsibleInput = {
    where: FamilyMemberIncomeWhereUniqueInput
    data: XOR<FamilyMemberIncomeUpdateWithoutLegalResponsibleInput, FamilyMemberIncomeUncheckedUpdateWithoutLegalResponsibleInput>
  }

  export type FamilyMemberIncomeUpdateManyWithWhereWithoutLegalResponsibleInput = {
    where: FamilyMemberIncomeScalarWhereInput
    data: XOR<FamilyMemberIncomeUpdateManyMutationInput, FamilyMemberIncomeUncheckedUpdateManyWithoutLegalResponsibleInput>
  }

  export type MonthlyIncomeUpsertWithWhereUniqueWithoutLegalResponsibleInput = {
    where: MonthlyIncomeWhereUniqueInput
    update: XOR<MonthlyIncomeUpdateWithoutLegalResponsibleInput, MonthlyIncomeUncheckedUpdateWithoutLegalResponsibleInput>
    create: XOR<MonthlyIncomeCreateWithoutLegalResponsibleInput, MonthlyIncomeUncheckedCreateWithoutLegalResponsibleInput>
  }

  export type MonthlyIncomeUpdateWithWhereUniqueWithoutLegalResponsibleInput = {
    where: MonthlyIncomeWhereUniqueInput
    data: XOR<MonthlyIncomeUpdateWithoutLegalResponsibleInput, MonthlyIncomeUncheckedUpdateWithoutLegalResponsibleInput>
  }

  export type MonthlyIncomeUpdateManyWithWhereWithoutLegalResponsibleInput = {
    where: MonthlyIncomeScalarWhereInput
    data: XOR<MonthlyIncomeUpdateManyMutationInput, MonthlyIncomeUncheckedUpdateManyWithoutLegalResponsibleInput>
  }

  export type BankAccountUpsertWithWhereUniqueWithoutLegalResponsibleInput = {
    where: BankAccountWhereUniqueInput
    update: XOR<BankAccountUpdateWithoutLegalResponsibleInput, BankAccountUncheckedUpdateWithoutLegalResponsibleInput>
    create: XOR<BankAccountCreateWithoutLegalResponsibleInput, BankAccountUncheckedCreateWithoutLegalResponsibleInput>
  }

  export type BankAccountUpdateWithWhereUniqueWithoutLegalResponsibleInput = {
    where: BankAccountWhereUniqueInput
    data: XOR<BankAccountUpdateWithoutLegalResponsibleInput, BankAccountUncheckedUpdateWithoutLegalResponsibleInput>
  }

  export type BankAccountUpdateManyWithWhereWithoutLegalResponsibleInput = {
    where: BankAccountScalarWhereInput
    data: XOR<BankAccountUpdateManyMutationInput, BankAccountUncheckedUpdateManyWithoutLegalResponsibleInput>
  }

  export type DeclarationsUpsertWithWhereUniqueWithoutLegalResponsibleInput = {
    where: DeclarationsWhereUniqueInput
    update: XOR<DeclarationsUpdateWithoutLegalResponsibleInput, DeclarationsUncheckedUpdateWithoutLegalResponsibleInput>
    create: XOR<DeclarationsCreateWithoutLegalResponsibleInput, DeclarationsUncheckedCreateWithoutLegalResponsibleInput>
  }

  export type DeclarationsUpdateWithWhereUniqueWithoutLegalResponsibleInput = {
    where: DeclarationsWhereUniqueInput
    data: XOR<DeclarationsUpdateWithoutLegalResponsibleInput, DeclarationsUncheckedUpdateWithoutLegalResponsibleInput>
  }

  export type DeclarationsUpdateManyWithWhereWithoutLegalResponsibleInput = {
    where: DeclarationsScalarWhereInput
    data: XOR<DeclarationsUpdateManyMutationInput, DeclarationsUncheckedUpdateManyWithoutLegalResponsibleInput>
  }

  export type ApplicationCreateWithoutSocialAssistantInput = {
    id?: string
    status: $Enums.ApplicationStatus
    candidateName?: string | null
    SocialAssistantName?: string | null
    CadUnico?: boolean | null
    hasSevereDesease?: boolean | null
    averageIncome?: number | null
    perCapita?: number | null
    position?: number | null
    number?: number
    announcement: AnnouncementCreateNestedOneWithoutApplicationInput
    candidate: CandidateCreateNestedOneWithoutApplicationInput
    EducationLevel: EducationLevelCreateNestedOneWithoutApplicationInput
    applicationHistories?: ApplicationHistoryCreateNestedManyWithoutApplicationInput
    ScholarshipGranted?: ScholarshipGrantedCreateNestedOneWithoutApplicationInput
    responsible?: LegalResponsibleCreateNestedOneWithoutApplicationInput
  }

  export type ApplicationUncheckedCreateWithoutSocialAssistantInput = {
    id?: string
    candidate_id: string
    announcement_id: string
    status: $Enums.ApplicationStatus
    educationLevel_id: string
    candidateName?: string | null
    SocialAssistantName?: string | null
    CadUnico?: boolean | null
    hasSevereDesease?: boolean | null
    averageIncome?: number | null
    perCapita?: number | null
    position?: number | null
    number?: number
    reponsible_id?: string | null
    applicationHistories?: ApplicationHistoryUncheckedCreateNestedManyWithoutApplicationInput
    ScholarshipGranted?: ScholarshipGrantedUncheckedCreateNestedOneWithoutApplicationInput
  }

  export type ApplicationCreateOrConnectWithoutSocialAssistantInput = {
    where: ApplicationWhereUniqueInput
    create: XOR<ApplicationCreateWithoutSocialAssistantInput, ApplicationUncheckedCreateWithoutSocialAssistantInput>
  }

  export type ApplicationCreateManySocialAssistantInputEnvelope = {
    data: ApplicationCreateManySocialAssistantInput | ApplicationCreateManySocialAssistantInput[]
    skipDuplicates?: boolean
  }

  export type EntityCreateWithoutSocialAssistantInput = {
    id?: string
    name?: string | null
    socialReason: string
    logo?: string | null
    CNPJ: string
    CEP: string
    address?: string
    addressNumber?: number | null
    neighborhood?: string
    UF?: $Enums.COUNTRY | null
    city?: string
    educationalInstitutionCode?: string | null
    Announcement?: AnnouncementCreateNestedManyWithoutEntityInput
    EntityDirector?: EntityDirectorCreateNestedManyWithoutEntityInput
    EntitySubsidiary?: EntitySubsidiaryCreateNestedManyWithoutEntityInput
    user: UserCreateNestedOneWithoutEntityInput
  }

  export type EntityUncheckedCreateWithoutSocialAssistantInput = {
    id?: string
    name?: string | null
    socialReason: string
    logo?: string | null
    CNPJ: string
    CEP: string
    address?: string
    addressNumber?: number | null
    neighborhood?: string
    UF?: $Enums.COUNTRY | null
    city?: string
    educationalInstitutionCode?: string | null
    user_id: string
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutEntityInput
    EntityDirector?: EntityDirectorUncheckedCreateNestedManyWithoutEntityInput
    EntitySubsidiary?: EntitySubsidiaryUncheckedCreateNestedManyWithoutEntityInput
  }

  export type EntityCreateOrConnectWithoutSocialAssistantInput = {
    where: EntityWhereUniqueInput
    create: XOR<EntityCreateWithoutSocialAssistantInput, EntityUncheckedCreateWithoutSocialAssistantInput>
  }

  export type UserCreateWithoutSocialAssistantInput = {
    id?: string
    email: string
    password: string
    role?: $Enums.ROLE
    createdAt?: Date | string
    profilePicture?: string | null
    EntityDirector?: EntityDirectorCreateNestedOneWithoutUserInput
    EntitySubsidiary?: EntitySubsidiaryCreateNestedOneWithoutUserInput
    Entity?: EntityCreateNestedOneWithoutUserInput
  }

  export type UserUncheckedCreateWithoutSocialAssistantInput = {
    id?: string
    email: string
    password: string
    role?: $Enums.ROLE
    createdAt?: Date | string
    profilePicture?: string | null
    EntityDirector?: EntityDirectorUncheckedCreateNestedOneWithoutUserInput
    EntitySubsidiary?: EntitySubsidiaryUncheckedCreateNestedOneWithoutUserInput
    Entity?: EntityUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSocialAssistantInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSocialAssistantInput, UserUncheckedCreateWithoutSocialAssistantInput>
  }

  export type AnnouncementCreateWithoutSocialAssistantInput = {
    id?: string
    entityChanged?: boolean | null
    branchChanged?: boolean | null
    announcementType: $Enums.AnnouncementType
    announcementNumber?: string | null
    announcementDate?: Date | string | null
    announcementBegin?: Date | string | null
    openDate?: Date | string | null
    closeDate?: Date | string | null
    waitingList?: boolean | null
    offeredVacancies?: number | null
    verifiedScholarships?: number | null
    description?: string | null
    announcementName?: string | null
    announcementLogo?: string | null
    type2?: string | null
    criteria?: AnnouncementCreatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementCreatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewCreateNestedOneWithoutAnnouncementInput
    entity: EntityCreateNestedOneWithoutAnnouncementInput
    entity_subsidiary?: EntitySubsidiaryCreateNestedManyWithoutAnnouncementInput
    Application?: ApplicationCreateNestedManyWithoutAnnouncementInput
    educationLevels?: EducationLevelCreateNestedManyWithoutAnnouncementInput
    ScholarshipGranted?: ScholarshipGrantedCreateNestedManyWithoutAnnounmententInput
    timelines?: TimelineCreateNestedManyWithoutAnnouncementInput
  }

  export type AnnouncementUncheckedCreateWithoutSocialAssistantInput = {
    id?: string
    entityChanged?: boolean | null
    branchChanged?: boolean | null
    announcementType: $Enums.AnnouncementType
    announcementNumber?: string | null
    announcementDate?: Date | string | null
    announcementBegin?: Date | string | null
    openDate?: Date | string | null
    closeDate?: Date | string | null
    waitingList?: boolean | null
    offeredVacancies?: number | null
    verifiedScholarships?: number | null
    description?: string | null
    entity_id: string
    announcementName?: string | null
    announcementLogo?: string | null
    type2?: string | null
    criteria?: AnnouncementCreatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementCreatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewUncheckedCreateNestedOneWithoutAnnouncementInput
    entity_subsidiary?: EntitySubsidiaryUncheckedCreateNestedManyWithoutAnnouncementInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutAnnouncementInput
    educationLevels?: EducationLevelUncheckedCreateNestedManyWithoutAnnouncementInput
    ScholarshipGranted?: ScholarshipGrantedUncheckedCreateNestedManyWithoutAnnounmententInput
    timelines?: TimelineUncheckedCreateNestedManyWithoutAnnouncementInput
  }

  export type AnnouncementCreateOrConnectWithoutSocialAssistantInput = {
    where: AnnouncementWhereUniqueInput
    create: XOR<AnnouncementCreateWithoutSocialAssistantInput, AnnouncementUncheckedCreateWithoutSocialAssistantInput>
  }

  export type EntitySubsidiaryCreateWithoutSocialAssistantInput = {
    id?: string
    CNPJ: string
    name: string
    socialReason: string
    CEP: string
    address: string
    addressNumber?: number | null
    city?: string | null
    neighborhood?: string | null
    UF?: $Enums.COUNTRY | null
    educationalInstitutionCode?: string | null
    Announcement?: AnnouncementCreateNestedManyWithoutEntity_subsidiaryInput
    EntityDirector?: EntityDirectorCreateNestedManyWithoutEntity_subsidiaryInput
    entity: EntityCreateNestedOneWithoutEntitySubsidiaryInput
    user: UserCreateNestedOneWithoutEntitySubsidiaryInput
    EducationLevel?: EducationLevelCreateNestedManyWithoutEntitySubsidiaryInput
  }

  export type EntitySubsidiaryUncheckedCreateWithoutSocialAssistantInput = {
    id?: string
    CNPJ: string
    name: string
    socialReason: string
    CEP: string
    address: string
    addressNumber?: number | null
    city?: string | null
    neighborhood?: string | null
    UF?: $Enums.COUNTRY | null
    educationalInstitutionCode?: string | null
    entity_id: string
    user_id: string
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutEntity_subsidiaryInput
    EntityDirector?: EntityDirectorUncheckedCreateNestedManyWithoutEntity_subsidiaryInput
    EducationLevel?: EducationLevelUncheckedCreateNestedManyWithoutEntitySubsidiaryInput
  }

  export type EntitySubsidiaryCreateOrConnectWithoutSocialAssistantInput = {
    where: EntitySubsidiaryWhereUniqueInput
    create: XOR<EntitySubsidiaryCreateWithoutSocialAssistantInput, EntitySubsidiaryUncheckedCreateWithoutSocialAssistantInput>
  }

  export type ApplicationUpsertWithWhereUniqueWithoutSocialAssistantInput = {
    where: ApplicationWhereUniqueInput
    update: XOR<ApplicationUpdateWithoutSocialAssistantInput, ApplicationUncheckedUpdateWithoutSocialAssistantInput>
    create: XOR<ApplicationCreateWithoutSocialAssistantInput, ApplicationUncheckedCreateWithoutSocialAssistantInput>
  }

  export type ApplicationUpdateWithWhereUniqueWithoutSocialAssistantInput = {
    where: ApplicationWhereUniqueInput
    data: XOR<ApplicationUpdateWithoutSocialAssistantInput, ApplicationUncheckedUpdateWithoutSocialAssistantInput>
  }

  export type ApplicationUpdateManyWithWhereWithoutSocialAssistantInput = {
    where: ApplicationScalarWhereInput
    data: XOR<ApplicationUpdateManyMutationInput, ApplicationUncheckedUpdateManyWithoutSocialAssistantInput>
  }

  export type EntityUpsertWithoutSocialAssistantInput = {
    update: XOR<EntityUpdateWithoutSocialAssistantInput, EntityUncheckedUpdateWithoutSocialAssistantInput>
    create: XOR<EntityCreateWithoutSocialAssistantInput, EntityUncheckedCreateWithoutSocialAssistantInput>
    where?: EntityWhereInput
  }

  export type EntityUpdateToOneWithWhereWithoutSocialAssistantInput = {
    where?: EntityWhereInput
    data: XOR<EntityUpdateWithoutSocialAssistantInput, EntityUncheckedUpdateWithoutSocialAssistantInput>
  }

  export type EntityUpdateWithoutSocialAssistantInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    socialReason?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    CNPJ?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    neighborhood?: StringFieldUpdateOperationsInput | string
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    city?: StringFieldUpdateOperationsInput | string
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
    Announcement?: AnnouncementUpdateManyWithoutEntityNestedInput
    EntityDirector?: EntityDirectorUpdateManyWithoutEntityNestedInput
    EntitySubsidiary?: EntitySubsidiaryUpdateManyWithoutEntityNestedInput
    user?: UserUpdateOneRequiredWithoutEntityNestedInput
  }

  export type EntityUncheckedUpdateWithoutSocialAssistantInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    socialReason?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    CNPJ?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    neighborhood?: StringFieldUpdateOperationsInput | string
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    city?: StringFieldUpdateOperationsInput | string
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: StringFieldUpdateOperationsInput | string
    Announcement?: AnnouncementUncheckedUpdateManyWithoutEntityNestedInput
    EntityDirector?: EntityDirectorUncheckedUpdateManyWithoutEntityNestedInput
    EntitySubsidiary?: EntitySubsidiaryUncheckedUpdateManyWithoutEntityNestedInput
  }

  export type UserUpsertWithoutSocialAssistantInput = {
    update: XOR<UserUpdateWithoutSocialAssistantInput, UserUncheckedUpdateWithoutSocialAssistantInput>
    create: XOR<UserCreateWithoutSocialAssistantInput, UserUncheckedCreateWithoutSocialAssistantInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSocialAssistantInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSocialAssistantInput, UserUncheckedUpdateWithoutSocialAssistantInput>
  }

  export type UserUpdateWithoutSocialAssistantInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    EntityDirector?: EntityDirectorUpdateOneWithoutUserNestedInput
    EntitySubsidiary?: EntitySubsidiaryUpdateOneWithoutUserNestedInput
    Entity?: EntityUpdateOneWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutSocialAssistantInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    EntityDirector?: EntityDirectorUncheckedUpdateOneWithoutUserNestedInput
    EntitySubsidiary?: EntitySubsidiaryUncheckedUpdateOneWithoutUserNestedInput
    Entity?: EntityUncheckedUpdateOneWithoutUserNestedInput
  }

  export type AnnouncementUpsertWithWhereUniqueWithoutSocialAssistantInput = {
    where: AnnouncementWhereUniqueInput
    update: XOR<AnnouncementUpdateWithoutSocialAssistantInput, AnnouncementUncheckedUpdateWithoutSocialAssistantInput>
    create: XOR<AnnouncementCreateWithoutSocialAssistantInput, AnnouncementUncheckedCreateWithoutSocialAssistantInput>
  }

  export type AnnouncementUpdateWithWhereUniqueWithoutSocialAssistantInput = {
    where: AnnouncementWhereUniqueInput
    data: XOR<AnnouncementUpdateWithoutSocialAssistantInput, AnnouncementUncheckedUpdateWithoutSocialAssistantInput>
  }

  export type AnnouncementUpdateManyWithWhereWithoutSocialAssistantInput = {
    where: AnnouncementScalarWhereInput
    data: XOR<AnnouncementUpdateManyMutationInput, AnnouncementUncheckedUpdateManyWithoutSocialAssistantInput>
  }

  export type AnnouncementScalarWhereInput = {
    AND?: AnnouncementScalarWhereInput | AnnouncementScalarWhereInput[]
    OR?: AnnouncementScalarWhereInput[]
    NOT?: AnnouncementScalarWhereInput | AnnouncementScalarWhereInput[]
    id?: StringFilter<"Announcement"> | string
    entityChanged?: BoolNullableFilter<"Announcement"> | boolean | null
    branchChanged?: BoolNullableFilter<"Announcement"> | boolean | null
    announcementType?: EnumAnnouncementTypeFilter<"Announcement"> | $Enums.AnnouncementType
    announcementNumber?: StringNullableFilter<"Announcement"> | string | null
    announcementDate?: DateTimeNullableFilter<"Announcement"> | Date | string | null
    announcementBegin?: DateTimeNullableFilter<"Announcement"> | Date | string | null
    openDate?: DateTimeNullableFilter<"Announcement"> | Date | string | null
    closeDate?: DateTimeNullableFilter<"Announcement"> | Date | string | null
    waitingList?: BoolNullableFilter<"Announcement"> | boolean | null
    offeredVacancies?: IntNullableFilter<"Announcement"> | number | null
    verifiedScholarships?: IntNullableFilter<"Announcement"> | number | null
    description?: StringNullableFilter<"Announcement"> | string | null
    entity_id?: StringFilter<"Announcement"> | string
    announcementName?: StringNullableFilter<"Announcement"> | string | null
    announcementLogo?: StringNullableFilter<"Announcement"> | string | null
    type2?: StringNullableFilter<"Announcement"> | string | null
    criteria?: EnumTiebreakerCriteriasNullableListFilter<"Announcement">
    types1?: EnumscholarshipGrantedTypeNullableListFilter<"Announcement">
  }

  export type EntitySubsidiaryUpsertWithWhereUniqueWithoutSocialAssistantInput = {
    where: EntitySubsidiaryWhereUniqueInput
    update: XOR<EntitySubsidiaryUpdateWithoutSocialAssistantInput, EntitySubsidiaryUncheckedUpdateWithoutSocialAssistantInput>
    create: XOR<EntitySubsidiaryCreateWithoutSocialAssistantInput, EntitySubsidiaryUncheckedCreateWithoutSocialAssistantInput>
  }

  export type EntitySubsidiaryUpdateWithWhereUniqueWithoutSocialAssistantInput = {
    where: EntitySubsidiaryWhereUniqueInput
    data: XOR<EntitySubsidiaryUpdateWithoutSocialAssistantInput, EntitySubsidiaryUncheckedUpdateWithoutSocialAssistantInput>
  }

  export type EntitySubsidiaryUpdateManyWithWhereWithoutSocialAssistantInput = {
    where: EntitySubsidiaryScalarWhereInput
    data: XOR<EntitySubsidiaryUpdateManyMutationInput, EntitySubsidiaryUncheckedUpdateManyWithoutSocialAssistantInput>
  }

  export type EntitySubsidiaryScalarWhereInput = {
    AND?: EntitySubsidiaryScalarWhereInput | EntitySubsidiaryScalarWhereInput[]
    OR?: EntitySubsidiaryScalarWhereInput[]
    NOT?: EntitySubsidiaryScalarWhereInput | EntitySubsidiaryScalarWhereInput[]
    id?: StringFilter<"EntitySubsidiary"> | string
    CNPJ?: StringFilter<"EntitySubsidiary"> | string
    name?: StringFilter<"EntitySubsidiary"> | string
    socialReason?: StringFilter<"EntitySubsidiary"> | string
    CEP?: StringFilter<"EntitySubsidiary"> | string
    address?: StringFilter<"EntitySubsidiary"> | string
    addressNumber?: IntNullableFilter<"EntitySubsidiary"> | number | null
    city?: StringNullableFilter<"EntitySubsidiary"> | string | null
    neighborhood?: StringNullableFilter<"EntitySubsidiary"> | string | null
    UF?: EnumCOUNTRYNullableFilter<"EntitySubsidiary"> | $Enums.COUNTRY | null
    educationalInstitutionCode?: StringNullableFilter<"EntitySubsidiary"> | string | null
    entity_id?: StringFilter<"EntitySubsidiary"> | string
    user_id?: StringFilter<"EntitySubsidiary"> | string
  }

  export type AnnouncementCreateWithoutEntityInput = {
    id?: string
    entityChanged?: boolean | null
    branchChanged?: boolean | null
    announcementType: $Enums.AnnouncementType
    announcementNumber?: string | null
    announcementDate?: Date | string | null
    announcementBegin?: Date | string | null
    openDate?: Date | string | null
    closeDate?: Date | string | null
    waitingList?: boolean | null
    offeredVacancies?: number | null
    verifiedScholarships?: number | null
    description?: string | null
    announcementName?: string | null
    announcementLogo?: string | null
    type2?: string | null
    criteria?: AnnouncementCreatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementCreatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewCreateNestedOneWithoutAnnouncementInput
    entity_subsidiary?: EntitySubsidiaryCreateNestedManyWithoutAnnouncementInput
    Application?: ApplicationCreateNestedManyWithoutAnnouncementInput
    educationLevels?: EducationLevelCreateNestedManyWithoutAnnouncementInput
    ScholarshipGranted?: ScholarshipGrantedCreateNestedManyWithoutAnnounmententInput
    timelines?: TimelineCreateNestedManyWithoutAnnouncementInput
    socialAssistant?: SocialAssistantCreateNestedManyWithoutAnnouncementInput
  }

  export type AnnouncementUncheckedCreateWithoutEntityInput = {
    id?: string
    entityChanged?: boolean | null
    branchChanged?: boolean | null
    announcementType: $Enums.AnnouncementType
    announcementNumber?: string | null
    announcementDate?: Date | string | null
    announcementBegin?: Date | string | null
    openDate?: Date | string | null
    closeDate?: Date | string | null
    waitingList?: boolean | null
    offeredVacancies?: number | null
    verifiedScholarships?: number | null
    description?: string | null
    announcementName?: string | null
    announcementLogo?: string | null
    type2?: string | null
    criteria?: AnnouncementCreatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementCreatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewUncheckedCreateNestedOneWithoutAnnouncementInput
    entity_subsidiary?: EntitySubsidiaryUncheckedCreateNestedManyWithoutAnnouncementInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutAnnouncementInput
    educationLevels?: EducationLevelUncheckedCreateNestedManyWithoutAnnouncementInput
    ScholarshipGranted?: ScholarshipGrantedUncheckedCreateNestedManyWithoutAnnounmententInput
    timelines?: TimelineUncheckedCreateNestedManyWithoutAnnouncementInput
    socialAssistant?: SocialAssistantUncheckedCreateNestedManyWithoutAnnouncementInput
  }

  export type AnnouncementCreateOrConnectWithoutEntityInput = {
    where: AnnouncementWhereUniqueInput
    create: XOR<AnnouncementCreateWithoutEntityInput, AnnouncementUncheckedCreateWithoutEntityInput>
  }

  export type AnnouncementCreateManyEntityInputEnvelope = {
    data: AnnouncementCreateManyEntityInput | AnnouncementCreateManyEntityInput[]
    skipDuplicates?: boolean
  }

  export type EntityDirectorCreateWithoutEntityInput = {
    id?: string
    name: string
    CPF: string
    phone: string
    entity_subsidiary?: EntitySubsidiaryCreateNestedOneWithoutEntityDirectorInput
    user: UserCreateNestedOneWithoutEntityDirectorInput
  }

  export type EntityDirectorUncheckedCreateWithoutEntityInput = {
    id?: string
    name: string
    CPF: string
    phone: string
    user_id: string
    entity_subsidiary_id?: string | null
  }

  export type EntityDirectorCreateOrConnectWithoutEntityInput = {
    where: EntityDirectorWhereUniqueInput
    create: XOR<EntityDirectorCreateWithoutEntityInput, EntityDirectorUncheckedCreateWithoutEntityInput>
  }

  export type EntityDirectorCreateManyEntityInputEnvelope = {
    data: EntityDirectorCreateManyEntityInput | EntityDirectorCreateManyEntityInput[]
    skipDuplicates?: boolean
  }

  export type EntitySubsidiaryCreateWithoutEntityInput = {
    id?: string
    CNPJ: string
    name: string
    socialReason: string
    CEP: string
    address: string
    addressNumber?: number | null
    city?: string | null
    neighborhood?: string | null
    UF?: $Enums.COUNTRY | null
    educationalInstitutionCode?: string | null
    Announcement?: AnnouncementCreateNestedManyWithoutEntity_subsidiaryInput
    EntityDirector?: EntityDirectorCreateNestedManyWithoutEntity_subsidiaryInput
    user: UserCreateNestedOneWithoutEntitySubsidiaryInput
    SocialAssistant?: SocialAssistantCreateNestedManyWithoutEntity_subsidiaryInput
    EducationLevel?: EducationLevelCreateNestedManyWithoutEntitySubsidiaryInput
  }

  export type EntitySubsidiaryUncheckedCreateWithoutEntityInput = {
    id?: string
    CNPJ: string
    name: string
    socialReason: string
    CEP: string
    address: string
    addressNumber?: number | null
    city?: string | null
    neighborhood?: string | null
    UF?: $Enums.COUNTRY | null
    educationalInstitutionCode?: string | null
    user_id: string
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutEntity_subsidiaryInput
    EntityDirector?: EntityDirectorUncheckedCreateNestedManyWithoutEntity_subsidiaryInput
    SocialAssistant?: SocialAssistantUncheckedCreateNestedManyWithoutEntity_subsidiaryInput
    EducationLevel?: EducationLevelUncheckedCreateNestedManyWithoutEntitySubsidiaryInput
  }

  export type EntitySubsidiaryCreateOrConnectWithoutEntityInput = {
    where: EntitySubsidiaryWhereUniqueInput
    create: XOR<EntitySubsidiaryCreateWithoutEntityInput, EntitySubsidiaryUncheckedCreateWithoutEntityInput>
  }

  export type EntitySubsidiaryCreateManyEntityInputEnvelope = {
    data: EntitySubsidiaryCreateManyEntityInput | EntitySubsidiaryCreateManyEntityInput[]
    skipDuplicates?: boolean
  }

  export type SocialAssistantCreateWithoutEntityInput = {
    id?: string
    name: string
    CPF: string
    RG: string
    CRESS: string
    phone: string
    Application?: ApplicationCreateNestedManyWithoutSocialAssistantInput
    user: UserCreateNestedOneWithoutSocialAssistantInput
    Announcement?: AnnouncementCreateNestedManyWithoutSocialAssistantInput
    entity_subsidiary?: EntitySubsidiaryCreateNestedManyWithoutSocialAssistantInput
  }

  export type SocialAssistantUncheckedCreateWithoutEntityInput = {
    id?: string
    name: string
    CPF: string
    RG: string
    CRESS: string
    phone: string
    user_id: string
    Application?: ApplicationUncheckedCreateNestedManyWithoutSocialAssistantInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutSocialAssistantInput
    entity_subsidiary?: EntitySubsidiaryUncheckedCreateNestedManyWithoutSocialAssistantInput
  }

  export type SocialAssistantCreateOrConnectWithoutEntityInput = {
    where: SocialAssistantWhereUniqueInput
    create: XOR<SocialAssistantCreateWithoutEntityInput, SocialAssistantUncheckedCreateWithoutEntityInput>
  }

  export type SocialAssistantCreateManyEntityInputEnvelope = {
    data: SocialAssistantCreateManyEntityInput | SocialAssistantCreateManyEntityInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutEntityInput = {
    id?: string
    email: string
    password: string
    role?: $Enums.ROLE
    createdAt?: Date | string
    profilePicture?: string | null
    EntityDirector?: EntityDirectorCreateNestedOneWithoutUserInput
    EntitySubsidiary?: EntitySubsidiaryCreateNestedOneWithoutUserInput
    SocialAssistant?: SocialAssistantCreateNestedOneWithoutUserInput
  }

  export type UserUncheckedCreateWithoutEntityInput = {
    id?: string
    email: string
    password: string
    role?: $Enums.ROLE
    createdAt?: Date | string
    profilePicture?: string | null
    EntityDirector?: EntityDirectorUncheckedCreateNestedOneWithoutUserInput
    EntitySubsidiary?: EntitySubsidiaryUncheckedCreateNestedOneWithoutUserInput
    SocialAssistant?: SocialAssistantUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutEntityInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutEntityInput, UserUncheckedCreateWithoutEntityInput>
  }

  export type AnnouncementUpsertWithWhereUniqueWithoutEntityInput = {
    where: AnnouncementWhereUniqueInput
    update: XOR<AnnouncementUpdateWithoutEntityInput, AnnouncementUncheckedUpdateWithoutEntityInput>
    create: XOR<AnnouncementCreateWithoutEntityInput, AnnouncementUncheckedCreateWithoutEntityInput>
  }

  export type AnnouncementUpdateWithWhereUniqueWithoutEntityInput = {
    where: AnnouncementWhereUniqueInput
    data: XOR<AnnouncementUpdateWithoutEntityInput, AnnouncementUncheckedUpdateWithoutEntityInput>
  }

  export type AnnouncementUpdateManyWithWhereWithoutEntityInput = {
    where: AnnouncementScalarWhereInput
    data: XOR<AnnouncementUpdateManyMutationInput, AnnouncementUncheckedUpdateManyWithoutEntityInput>
  }

  export type EntityDirectorUpsertWithWhereUniqueWithoutEntityInput = {
    where: EntityDirectorWhereUniqueInput
    update: XOR<EntityDirectorUpdateWithoutEntityInput, EntityDirectorUncheckedUpdateWithoutEntityInput>
    create: XOR<EntityDirectorCreateWithoutEntityInput, EntityDirectorUncheckedCreateWithoutEntityInput>
  }

  export type EntityDirectorUpdateWithWhereUniqueWithoutEntityInput = {
    where: EntityDirectorWhereUniqueInput
    data: XOR<EntityDirectorUpdateWithoutEntityInput, EntityDirectorUncheckedUpdateWithoutEntityInput>
  }

  export type EntityDirectorUpdateManyWithWhereWithoutEntityInput = {
    where: EntityDirectorScalarWhereInput
    data: XOR<EntityDirectorUpdateManyMutationInput, EntityDirectorUncheckedUpdateManyWithoutEntityInput>
  }

  export type EntityDirectorScalarWhereInput = {
    AND?: EntityDirectorScalarWhereInput | EntityDirectorScalarWhereInput[]
    OR?: EntityDirectorScalarWhereInput[]
    NOT?: EntityDirectorScalarWhereInput | EntityDirectorScalarWhereInput[]
    id?: StringFilter<"EntityDirector"> | string
    name?: StringFilter<"EntityDirector"> | string
    CPF?: StringFilter<"EntityDirector"> | string
    phone?: StringFilter<"EntityDirector"> | string
    user_id?: StringFilter<"EntityDirector"> | string
    entity_subsidiary_id?: StringNullableFilter<"EntityDirector"> | string | null
    entity_id?: StringNullableFilter<"EntityDirector"> | string | null
  }

  export type EntitySubsidiaryUpsertWithWhereUniqueWithoutEntityInput = {
    where: EntitySubsidiaryWhereUniqueInput
    update: XOR<EntitySubsidiaryUpdateWithoutEntityInput, EntitySubsidiaryUncheckedUpdateWithoutEntityInput>
    create: XOR<EntitySubsidiaryCreateWithoutEntityInput, EntitySubsidiaryUncheckedCreateWithoutEntityInput>
  }

  export type EntitySubsidiaryUpdateWithWhereUniqueWithoutEntityInput = {
    where: EntitySubsidiaryWhereUniqueInput
    data: XOR<EntitySubsidiaryUpdateWithoutEntityInput, EntitySubsidiaryUncheckedUpdateWithoutEntityInput>
  }

  export type EntitySubsidiaryUpdateManyWithWhereWithoutEntityInput = {
    where: EntitySubsidiaryScalarWhereInput
    data: XOR<EntitySubsidiaryUpdateManyMutationInput, EntitySubsidiaryUncheckedUpdateManyWithoutEntityInput>
  }

  export type SocialAssistantUpsertWithWhereUniqueWithoutEntityInput = {
    where: SocialAssistantWhereUniqueInput
    update: XOR<SocialAssistantUpdateWithoutEntityInput, SocialAssistantUncheckedUpdateWithoutEntityInput>
    create: XOR<SocialAssistantCreateWithoutEntityInput, SocialAssistantUncheckedCreateWithoutEntityInput>
  }

  export type SocialAssistantUpdateWithWhereUniqueWithoutEntityInput = {
    where: SocialAssistantWhereUniqueInput
    data: XOR<SocialAssistantUpdateWithoutEntityInput, SocialAssistantUncheckedUpdateWithoutEntityInput>
  }

  export type SocialAssistantUpdateManyWithWhereWithoutEntityInput = {
    where: SocialAssistantScalarWhereInput
    data: XOR<SocialAssistantUpdateManyMutationInput, SocialAssistantUncheckedUpdateManyWithoutEntityInput>
  }

  export type SocialAssistantScalarWhereInput = {
    AND?: SocialAssistantScalarWhereInput | SocialAssistantScalarWhereInput[]
    OR?: SocialAssistantScalarWhereInput[]
    NOT?: SocialAssistantScalarWhereInput | SocialAssistantScalarWhereInput[]
    id?: StringFilter<"SocialAssistant"> | string
    name?: StringFilter<"SocialAssistant"> | string
    CPF?: StringFilter<"SocialAssistant"> | string
    RG?: StringFilter<"SocialAssistant"> | string
    CRESS?: StringFilter<"SocialAssistant"> | string
    phone?: StringFilter<"SocialAssistant"> | string
    user_id?: StringFilter<"SocialAssistant"> | string
    entity_id?: StringFilter<"SocialAssistant"> | string
  }

  export type UserUpsertWithoutEntityInput = {
    update: XOR<UserUpdateWithoutEntityInput, UserUncheckedUpdateWithoutEntityInput>
    create: XOR<UserCreateWithoutEntityInput, UserUncheckedCreateWithoutEntityInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutEntityInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutEntityInput, UserUncheckedUpdateWithoutEntityInput>
  }

  export type UserUpdateWithoutEntityInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    EntityDirector?: EntityDirectorUpdateOneWithoutUserNestedInput
    EntitySubsidiary?: EntitySubsidiaryUpdateOneWithoutUserNestedInput
    SocialAssistant?: SocialAssistantUpdateOneWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutEntityInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    EntityDirector?: EntityDirectorUncheckedUpdateOneWithoutUserNestedInput
    EntitySubsidiary?: EntitySubsidiaryUncheckedUpdateOneWithoutUserNestedInput
    SocialAssistant?: SocialAssistantUncheckedUpdateOneWithoutUserNestedInput
  }

  export type AnnouncementCreateWithoutEntity_subsidiaryInput = {
    id?: string
    entityChanged?: boolean | null
    branchChanged?: boolean | null
    announcementType: $Enums.AnnouncementType
    announcementNumber?: string | null
    announcementDate?: Date | string | null
    announcementBegin?: Date | string | null
    openDate?: Date | string | null
    closeDate?: Date | string | null
    waitingList?: boolean | null
    offeredVacancies?: number | null
    verifiedScholarships?: number | null
    description?: string | null
    announcementName?: string | null
    announcementLogo?: string | null
    type2?: string | null
    criteria?: AnnouncementCreatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementCreatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewCreateNestedOneWithoutAnnouncementInput
    entity: EntityCreateNestedOneWithoutAnnouncementInput
    Application?: ApplicationCreateNestedManyWithoutAnnouncementInput
    educationLevels?: EducationLevelCreateNestedManyWithoutAnnouncementInput
    ScholarshipGranted?: ScholarshipGrantedCreateNestedManyWithoutAnnounmententInput
    timelines?: TimelineCreateNestedManyWithoutAnnouncementInput
    socialAssistant?: SocialAssistantCreateNestedManyWithoutAnnouncementInput
  }

  export type AnnouncementUncheckedCreateWithoutEntity_subsidiaryInput = {
    id?: string
    entityChanged?: boolean | null
    branchChanged?: boolean | null
    announcementType: $Enums.AnnouncementType
    announcementNumber?: string | null
    announcementDate?: Date | string | null
    announcementBegin?: Date | string | null
    openDate?: Date | string | null
    closeDate?: Date | string | null
    waitingList?: boolean | null
    offeredVacancies?: number | null
    verifiedScholarships?: number | null
    description?: string | null
    entity_id: string
    announcementName?: string | null
    announcementLogo?: string | null
    type2?: string | null
    criteria?: AnnouncementCreatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementCreatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewUncheckedCreateNestedOneWithoutAnnouncementInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutAnnouncementInput
    educationLevels?: EducationLevelUncheckedCreateNestedManyWithoutAnnouncementInput
    ScholarshipGranted?: ScholarshipGrantedUncheckedCreateNestedManyWithoutAnnounmententInput
    timelines?: TimelineUncheckedCreateNestedManyWithoutAnnouncementInput
    socialAssistant?: SocialAssistantUncheckedCreateNestedManyWithoutAnnouncementInput
  }

  export type AnnouncementCreateOrConnectWithoutEntity_subsidiaryInput = {
    where: AnnouncementWhereUniqueInput
    create: XOR<AnnouncementCreateWithoutEntity_subsidiaryInput, AnnouncementUncheckedCreateWithoutEntity_subsidiaryInput>
  }

  export type EntityDirectorCreateWithoutEntity_subsidiaryInput = {
    id?: string
    name: string
    CPF: string
    phone: string
    entity?: EntityCreateNestedOneWithoutEntityDirectorInput
    user: UserCreateNestedOneWithoutEntityDirectorInput
  }

  export type EntityDirectorUncheckedCreateWithoutEntity_subsidiaryInput = {
    id?: string
    name: string
    CPF: string
    phone: string
    user_id: string
    entity_id?: string | null
  }

  export type EntityDirectorCreateOrConnectWithoutEntity_subsidiaryInput = {
    where: EntityDirectorWhereUniqueInput
    create: XOR<EntityDirectorCreateWithoutEntity_subsidiaryInput, EntityDirectorUncheckedCreateWithoutEntity_subsidiaryInput>
  }

  export type EntityDirectorCreateManyEntity_subsidiaryInputEnvelope = {
    data: EntityDirectorCreateManyEntity_subsidiaryInput | EntityDirectorCreateManyEntity_subsidiaryInput[]
    skipDuplicates?: boolean
  }

  export type EntityCreateWithoutEntitySubsidiaryInput = {
    id?: string
    name?: string | null
    socialReason: string
    logo?: string | null
    CNPJ: string
    CEP: string
    address?: string
    addressNumber?: number | null
    neighborhood?: string
    UF?: $Enums.COUNTRY | null
    city?: string
    educationalInstitutionCode?: string | null
    Announcement?: AnnouncementCreateNestedManyWithoutEntityInput
    EntityDirector?: EntityDirectorCreateNestedManyWithoutEntityInput
    SocialAssistant?: SocialAssistantCreateNestedManyWithoutEntityInput
    user: UserCreateNestedOneWithoutEntityInput
  }

  export type EntityUncheckedCreateWithoutEntitySubsidiaryInput = {
    id?: string
    name?: string | null
    socialReason: string
    logo?: string | null
    CNPJ: string
    CEP: string
    address?: string
    addressNumber?: number | null
    neighborhood?: string
    UF?: $Enums.COUNTRY | null
    city?: string
    educationalInstitutionCode?: string | null
    user_id: string
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutEntityInput
    EntityDirector?: EntityDirectorUncheckedCreateNestedManyWithoutEntityInput
    SocialAssistant?: SocialAssistantUncheckedCreateNestedManyWithoutEntityInput
  }

  export type EntityCreateOrConnectWithoutEntitySubsidiaryInput = {
    where: EntityWhereUniqueInput
    create: XOR<EntityCreateWithoutEntitySubsidiaryInput, EntityUncheckedCreateWithoutEntitySubsidiaryInput>
  }

  export type UserCreateWithoutEntitySubsidiaryInput = {
    id?: string
    email: string
    password: string
    role?: $Enums.ROLE
    createdAt?: Date | string
    profilePicture?: string | null
    EntityDirector?: EntityDirectorCreateNestedOneWithoutUserInput
    SocialAssistant?: SocialAssistantCreateNestedOneWithoutUserInput
    Entity?: EntityCreateNestedOneWithoutUserInput
  }

  export type UserUncheckedCreateWithoutEntitySubsidiaryInput = {
    id?: string
    email: string
    password: string
    role?: $Enums.ROLE
    createdAt?: Date | string
    profilePicture?: string | null
    EntityDirector?: EntityDirectorUncheckedCreateNestedOneWithoutUserInput
    SocialAssistant?: SocialAssistantUncheckedCreateNestedOneWithoutUserInput
    Entity?: EntityUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutEntitySubsidiaryInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutEntitySubsidiaryInput, UserUncheckedCreateWithoutEntitySubsidiaryInput>
  }

  export type SocialAssistantCreateWithoutEntity_subsidiaryInput = {
    id?: string
    name: string
    CPF: string
    RG: string
    CRESS: string
    phone: string
    Application?: ApplicationCreateNestedManyWithoutSocialAssistantInput
    entity: EntityCreateNestedOneWithoutSocialAssistantInput
    user: UserCreateNestedOneWithoutSocialAssistantInput
    Announcement?: AnnouncementCreateNestedManyWithoutSocialAssistantInput
  }

  export type SocialAssistantUncheckedCreateWithoutEntity_subsidiaryInput = {
    id?: string
    name: string
    CPF: string
    RG: string
    CRESS: string
    phone: string
    user_id: string
    entity_id: string
    Application?: ApplicationUncheckedCreateNestedManyWithoutSocialAssistantInput
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutSocialAssistantInput
  }

  export type SocialAssistantCreateOrConnectWithoutEntity_subsidiaryInput = {
    where: SocialAssistantWhereUniqueInput
    create: XOR<SocialAssistantCreateWithoutEntity_subsidiaryInput, SocialAssistantUncheckedCreateWithoutEntity_subsidiaryInput>
  }

  export type EducationLevelCreateWithoutEntitySubsidiaryInput = {
    id?: string
    level: $Enums.LevelType
    basicEduType?: $Enums.BasicEducationType | null
    scholarshipType?: $Enums.ScholarshipOfferType | null
    higherEduScholarshipType?: $Enums.HigherEducationScholarshipType | null
    offeredCourseType?: $Enums.OfferedCourseType | null
    availableCourses?: string | null
    offeredVacancies?: number | null
    verifiedScholarships?: number | null
    shift?: $Enums.SHIFT | null
    semester?: number | null
    grade?: string | null
    Application?: ApplicationCreateNestedManyWithoutEducationLevelInput
    announcement: AnnouncementCreateNestedOneWithoutEducationLevelsInput
  }

  export type EducationLevelUncheckedCreateWithoutEntitySubsidiaryInput = {
    id?: string
    level: $Enums.LevelType
    basicEduType?: $Enums.BasicEducationType | null
    scholarshipType?: $Enums.ScholarshipOfferType | null
    higherEduScholarshipType?: $Enums.HigherEducationScholarshipType | null
    offeredCourseType?: $Enums.OfferedCourseType | null
    availableCourses?: string | null
    offeredVacancies?: number | null
    verifiedScholarships?: number | null
    shift?: $Enums.SHIFT | null
    semester?: number | null
    grade?: string | null
    announcementId: string
    Application?: ApplicationUncheckedCreateNestedManyWithoutEducationLevelInput
  }

  export type EducationLevelCreateOrConnectWithoutEntitySubsidiaryInput = {
    where: EducationLevelWhereUniqueInput
    create: XOR<EducationLevelCreateWithoutEntitySubsidiaryInput, EducationLevelUncheckedCreateWithoutEntitySubsidiaryInput>
  }

  export type EducationLevelCreateManyEntitySubsidiaryInputEnvelope = {
    data: EducationLevelCreateManyEntitySubsidiaryInput | EducationLevelCreateManyEntitySubsidiaryInput[]
    skipDuplicates?: boolean
  }

  export type AnnouncementUpsertWithWhereUniqueWithoutEntity_subsidiaryInput = {
    where: AnnouncementWhereUniqueInput
    update: XOR<AnnouncementUpdateWithoutEntity_subsidiaryInput, AnnouncementUncheckedUpdateWithoutEntity_subsidiaryInput>
    create: XOR<AnnouncementCreateWithoutEntity_subsidiaryInput, AnnouncementUncheckedCreateWithoutEntity_subsidiaryInput>
  }

  export type AnnouncementUpdateWithWhereUniqueWithoutEntity_subsidiaryInput = {
    where: AnnouncementWhereUniqueInput
    data: XOR<AnnouncementUpdateWithoutEntity_subsidiaryInput, AnnouncementUncheckedUpdateWithoutEntity_subsidiaryInput>
  }

  export type AnnouncementUpdateManyWithWhereWithoutEntity_subsidiaryInput = {
    where: AnnouncementScalarWhereInput
    data: XOR<AnnouncementUpdateManyMutationInput, AnnouncementUncheckedUpdateManyWithoutEntity_subsidiaryInput>
  }

  export type EntityDirectorUpsertWithWhereUniqueWithoutEntity_subsidiaryInput = {
    where: EntityDirectorWhereUniqueInput
    update: XOR<EntityDirectorUpdateWithoutEntity_subsidiaryInput, EntityDirectorUncheckedUpdateWithoutEntity_subsidiaryInput>
    create: XOR<EntityDirectorCreateWithoutEntity_subsidiaryInput, EntityDirectorUncheckedCreateWithoutEntity_subsidiaryInput>
  }

  export type EntityDirectorUpdateWithWhereUniqueWithoutEntity_subsidiaryInput = {
    where: EntityDirectorWhereUniqueInput
    data: XOR<EntityDirectorUpdateWithoutEntity_subsidiaryInput, EntityDirectorUncheckedUpdateWithoutEntity_subsidiaryInput>
  }

  export type EntityDirectorUpdateManyWithWhereWithoutEntity_subsidiaryInput = {
    where: EntityDirectorScalarWhereInput
    data: XOR<EntityDirectorUpdateManyMutationInput, EntityDirectorUncheckedUpdateManyWithoutEntity_subsidiaryInput>
  }

  export type EntityUpsertWithoutEntitySubsidiaryInput = {
    update: XOR<EntityUpdateWithoutEntitySubsidiaryInput, EntityUncheckedUpdateWithoutEntitySubsidiaryInput>
    create: XOR<EntityCreateWithoutEntitySubsidiaryInput, EntityUncheckedCreateWithoutEntitySubsidiaryInput>
    where?: EntityWhereInput
  }

  export type EntityUpdateToOneWithWhereWithoutEntitySubsidiaryInput = {
    where?: EntityWhereInput
    data: XOR<EntityUpdateWithoutEntitySubsidiaryInput, EntityUncheckedUpdateWithoutEntitySubsidiaryInput>
  }

  export type EntityUpdateWithoutEntitySubsidiaryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    socialReason?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    CNPJ?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    neighborhood?: StringFieldUpdateOperationsInput | string
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    city?: StringFieldUpdateOperationsInput | string
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
    Announcement?: AnnouncementUpdateManyWithoutEntityNestedInput
    EntityDirector?: EntityDirectorUpdateManyWithoutEntityNestedInput
    SocialAssistant?: SocialAssistantUpdateManyWithoutEntityNestedInput
    user?: UserUpdateOneRequiredWithoutEntityNestedInput
  }

  export type EntityUncheckedUpdateWithoutEntitySubsidiaryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    socialReason?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    CNPJ?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    neighborhood?: StringFieldUpdateOperationsInput | string
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    city?: StringFieldUpdateOperationsInput | string
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: StringFieldUpdateOperationsInput | string
    Announcement?: AnnouncementUncheckedUpdateManyWithoutEntityNestedInput
    EntityDirector?: EntityDirectorUncheckedUpdateManyWithoutEntityNestedInput
    SocialAssistant?: SocialAssistantUncheckedUpdateManyWithoutEntityNestedInput
  }

  export type UserUpsertWithoutEntitySubsidiaryInput = {
    update: XOR<UserUpdateWithoutEntitySubsidiaryInput, UserUncheckedUpdateWithoutEntitySubsidiaryInput>
    create: XOR<UserCreateWithoutEntitySubsidiaryInput, UserUncheckedCreateWithoutEntitySubsidiaryInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutEntitySubsidiaryInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutEntitySubsidiaryInput, UserUncheckedUpdateWithoutEntitySubsidiaryInput>
  }

  export type UserUpdateWithoutEntitySubsidiaryInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    EntityDirector?: EntityDirectorUpdateOneWithoutUserNestedInput
    SocialAssistant?: SocialAssistantUpdateOneWithoutUserNestedInput
    Entity?: EntityUpdateOneWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutEntitySubsidiaryInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    EntityDirector?: EntityDirectorUncheckedUpdateOneWithoutUserNestedInput
    SocialAssistant?: SocialAssistantUncheckedUpdateOneWithoutUserNestedInput
    Entity?: EntityUncheckedUpdateOneWithoutUserNestedInput
  }

  export type SocialAssistantUpsertWithWhereUniqueWithoutEntity_subsidiaryInput = {
    where: SocialAssistantWhereUniqueInput
    update: XOR<SocialAssistantUpdateWithoutEntity_subsidiaryInput, SocialAssistantUncheckedUpdateWithoutEntity_subsidiaryInput>
    create: XOR<SocialAssistantCreateWithoutEntity_subsidiaryInput, SocialAssistantUncheckedCreateWithoutEntity_subsidiaryInput>
  }

  export type SocialAssistantUpdateWithWhereUniqueWithoutEntity_subsidiaryInput = {
    where: SocialAssistantWhereUniqueInput
    data: XOR<SocialAssistantUpdateWithoutEntity_subsidiaryInput, SocialAssistantUncheckedUpdateWithoutEntity_subsidiaryInput>
  }

  export type SocialAssistantUpdateManyWithWhereWithoutEntity_subsidiaryInput = {
    where: SocialAssistantScalarWhereInput
    data: XOR<SocialAssistantUpdateManyMutationInput, SocialAssistantUncheckedUpdateManyWithoutEntity_subsidiaryInput>
  }

  export type EducationLevelUpsertWithWhereUniqueWithoutEntitySubsidiaryInput = {
    where: EducationLevelWhereUniqueInput
    update: XOR<EducationLevelUpdateWithoutEntitySubsidiaryInput, EducationLevelUncheckedUpdateWithoutEntitySubsidiaryInput>
    create: XOR<EducationLevelCreateWithoutEntitySubsidiaryInput, EducationLevelUncheckedCreateWithoutEntitySubsidiaryInput>
  }

  export type EducationLevelUpdateWithWhereUniqueWithoutEntitySubsidiaryInput = {
    where: EducationLevelWhereUniqueInput
    data: XOR<EducationLevelUpdateWithoutEntitySubsidiaryInput, EducationLevelUncheckedUpdateWithoutEntitySubsidiaryInput>
  }

  export type EducationLevelUpdateManyWithWhereWithoutEntitySubsidiaryInput = {
    where: EducationLevelScalarWhereInput
    data: XOR<EducationLevelUpdateManyMutationInput, EducationLevelUncheckedUpdateManyWithoutEntitySubsidiaryInput>
  }

  export type EducationLevelScalarWhereInput = {
    AND?: EducationLevelScalarWhereInput | EducationLevelScalarWhereInput[]
    OR?: EducationLevelScalarWhereInput[]
    NOT?: EducationLevelScalarWhereInput | EducationLevelScalarWhereInput[]
    id?: StringFilter<"EducationLevel"> | string
    level?: EnumLevelTypeFilter<"EducationLevel"> | $Enums.LevelType
    basicEduType?: EnumBasicEducationTypeNullableFilter<"EducationLevel"> | $Enums.BasicEducationType | null
    scholarshipType?: EnumScholarshipOfferTypeNullableFilter<"EducationLevel"> | $Enums.ScholarshipOfferType | null
    higherEduScholarshipType?: EnumHigherEducationScholarshipTypeNullableFilter<"EducationLevel"> | $Enums.HigherEducationScholarshipType | null
    offeredCourseType?: EnumOfferedCourseTypeNullableFilter<"EducationLevel"> | $Enums.OfferedCourseType | null
    availableCourses?: StringNullableFilter<"EducationLevel"> | string | null
    offeredVacancies?: IntNullableFilter<"EducationLevel"> | number | null
    verifiedScholarships?: IntNullableFilter<"EducationLevel"> | number | null
    shift?: EnumSHIFTNullableFilter<"EducationLevel"> | $Enums.SHIFT | null
    semester?: IntNullableFilter<"EducationLevel"> | number | null
    grade?: StringNullableFilter<"EducationLevel"> | string | null
    announcementId?: StringFilter<"EducationLevel"> | string
    entitySubsidiaryId?: StringNullableFilter<"EducationLevel"> | string | null
  }

  export type EntityCreateWithoutEntityDirectorInput = {
    id?: string
    name?: string | null
    socialReason: string
    logo?: string | null
    CNPJ: string
    CEP: string
    address?: string
    addressNumber?: number | null
    neighborhood?: string
    UF?: $Enums.COUNTRY | null
    city?: string
    educationalInstitutionCode?: string | null
    Announcement?: AnnouncementCreateNestedManyWithoutEntityInput
    EntitySubsidiary?: EntitySubsidiaryCreateNestedManyWithoutEntityInput
    SocialAssistant?: SocialAssistantCreateNestedManyWithoutEntityInput
    user: UserCreateNestedOneWithoutEntityInput
  }

  export type EntityUncheckedCreateWithoutEntityDirectorInput = {
    id?: string
    name?: string | null
    socialReason: string
    logo?: string | null
    CNPJ: string
    CEP: string
    address?: string
    addressNumber?: number | null
    neighborhood?: string
    UF?: $Enums.COUNTRY | null
    city?: string
    educationalInstitutionCode?: string | null
    user_id: string
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutEntityInput
    EntitySubsidiary?: EntitySubsidiaryUncheckedCreateNestedManyWithoutEntityInput
    SocialAssistant?: SocialAssistantUncheckedCreateNestedManyWithoutEntityInput
  }

  export type EntityCreateOrConnectWithoutEntityDirectorInput = {
    where: EntityWhereUniqueInput
    create: XOR<EntityCreateWithoutEntityDirectorInput, EntityUncheckedCreateWithoutEntityDirectorInput>
  }

  export type EntitySubsidiaryCreateWithoutEntityDirectorInput = {
    id?: string
    CNPJ: string
    name: string
    socialReason: string
    CEP: string
    address: string
    addressNumber?: number | null
    city?: string | null
    neighborhood?: string | null
    UF?: $Enums.COUNTRY | null
    educationalInstitutionCode?: string | null
    Announcement?: AnnouncementCreateNestedManyWithoutEntity_subsidiaryInput
    entity: EntityCreateNestedOneWithoutEntitySubsidiaryInput
    user: UserCreateNestedOneWithoutEntitySubsidiaryInput
    SocialAssistant?: SocialAssistantCreateNestedManyWithoutEntity_subsidiaryInput
    EducationLevel?: EducationLevelCreateNestedManyWithoutEntitySubsidiaryInput
  }

  export type EntitySubsidiaryUncheckedCreateWithoutEntityDirectorInput = {
    id?: string
    CNPJ: string
    name: string
    socialReason: string
    CEP: string
    address: string
    addressNumber?: number | null
    city?: string | null
    neighborhood?: string | null
    UF?: $Enums.COUNTRY | null
    educationalInstitutionCode?: string | null
    entity_id: string
    user_id: string
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutEntity_subsidiaryInput
    SocialAssistant?: SocialAssistantUncheckedCreateNestedManyWithoutEntity_subsidiaryInput
    EducationLevel?: EducationLevelUncheckedCreateNestedManyWithoutEntitySubsidiaryInput
  }

  export type EntitySubsidiaryCreateOrConnectWithoutEntityDirectorInput = {
    where: EntitySubsidiaryWhereUniqueInput
    create: XOR<EntitySubsidiaryCreateWithoutEntityDirectorInput, EntitySubsidiaryUncheckedCreateWithoutEntityDirectorInput>
  }

  export type UserCreateWithoutEntityDirectorInput = {
    id?: string
    email: string
    password: string
    role?: $Enums.ROLE
    createdAt?: Date | string
    profilePicture?: string | null
    EntitySubsidiary?: EntitySubsidiaryCreateNestedOneWithoutUserInput
    SocialAssistant?: SocialAssistantCreateNestedOneWithoutUserInput
    Entity?: EntityCreateNestedOneWithoutUserInput
  }

  export type UserUncheckedCreateWithoutEntityDirectorInput = {
    id?: string
    email: string
    password: string
    role?: $Enums.ROLE
    createdAt?: Date | string
    profilePicture?: string | null
    EntitySubsidiary?: EntitySubsidiaryUncheckedCreateNestedOneWithoutUserInput
    SocialAssistant?: SocialAssistantUncheckedCreateNestedOneWithoutUserInput
    Entity?: EntityUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutEntityDirectorInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutEntityDirectorInput, UserUncheckedCreateWithoutEntityDirectorInput>
  }

  export type EntityUpsertWithoutEntityDirectorInput = {
    update: XOR<EntityUpdateWithoutEntityDirectorInput, EntityUncheckedUpdateWithoutEntityDirectorInput>
    create: XOR<EntityCreateWithoutEntityDirectorInput, EntityUncheckedCreateWithoutEntityDirectorInput>
    where?: EntityWhereInput
  }

  export type EntityUpdateToOneWithWhereWithoutEntityDirectorInput = {
    where?: EntityWhereInput
    data: XOR<EntityUpdateWithoutEntityDirectorInput, EntityUncheckedUpdateWithoutEntityDirectorInput>
  }

  export type EntityUpdateWithoutEntityDirectorInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    socialReason?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    CNPJ?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    neighborhood?: StringFieldUpdateOperationsInput | string
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    city?: StringFieldUpdateOperationsInput | string
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
    Announcement?: AnnouncementUpdateManyWithoutEntityNestedInput
    EntitySubsidiary?: EntitySubsidiaryUpdateManyWithoutEntityNestedInput
    SocialAssistant?: SocialAssistantUpdateManyWithoutEntityNestedInput
    user?: UserUpdateOneRequiredWithoutEntityNestedInput
  }

  export type EntityUncheckedUpdateWithoutEntityDirectorInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    socialReason?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    CNPJ?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    neighborhood?: StringFieldUpdateOperationsInput | string
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    city?: StringFieldUpdateOperationsInput | string
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: StringFieldUpdateOperationsInput | string
    Announcement?: AnnouncementUncheckedUpdateManyWithoutEntityNestedInput
    EntitySubsidiary?: EntitySubsidiaryUncheckedUpdateManyWithoutEntityNestedInput
    SocialAssistant?: SocialAssistantUncheckedUpdateManyWithoutEntityNestedInput
  }

  export type EntitySubsidiaryUpsertWithoutEntityDirectorInput = {
    update: XOR<EntitySubsidiaryUpdateWithoutEntityDirectorInput, EntitySubsidiaryUncheckedUpdateWithoutEntityDirectorInput>
    create: XOR<EntitySubsidiaryCreateWithoutEntityDirectorInput, EntitySubsidiaryUncheckedCreateWithoutEntityDirectorInput>
    where?: EntitySubsidiaryWhereInput
  }

  export type EntitySubsidiaryUpdateToOneWithWhereWithoutEntityDirectorInput = {
    where?: EntitySubsidiaryWhereInput
    data: XOR<EntitySubsidiaryUpdateWithoutEntityDirectorInput, EntitySubsidiaryUncheckedUpdateWithoutEntityDirectorInput>
  }

  export type EntitySubsidiaryUpdateWithoutEntityDirectorInput = {
    id?: StringFieldUpdateOperationsInput | string
    CNPJ?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    socialReason?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
    Announcement?: AnnouncementUpdateManyWithoutEntity_subsidiaryNestedInput
    entity?: EntityUpdateOneRequiredWithoutEntitySubsidiaryNestedInput
    user?: UserUpdateOneRequiredWithoutEntitySubsidiaryNestedInput
    SocialAssistant?: SocialAssistantUpdateManyWithoutEntity_subsidiaryNestedInput
    EducationLevel?: EducationLevelUpdateManyWithoutEntitySubsidiaryNestedInput
  }

  export type EntitySubsidiaryUncheckedUpdateWithoutEntityDirectorInput = {
    id?: StringFieldUpdateOperationsInput | string
    CNPJ?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    socialReason?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
    entity_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    Announcement?: AnnouncementUncheckedUpdateManyWithoutEntity_subsidiaryNestedInput
    SocialAssistant?: SocialAssistantUncheckedUpdateManyWithoutEntity_subsidiaryNestedInput
    EducationLevel?: EducationLevelUncheckedUpdateManyWithoutEntitySubsidiaryNestedInput
  }

  export type UserUpsertWithoutEntityDirectorInput = {
    update: XOR<UserUpdateWithoutEntityDirectorInput, UserUncheckedUpdateWithoutEntityDirectorInput>
    create: XOR<UserCreateWithoutEntityDirectorInput, UserUncheckedCreateWithoutEntityDirectorInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutEntityDirectorInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutEntityDirectorInput, UserUncheckedUpdateWithoutEntityDirectorInput>
  }

  export type UserUpdateWithoutEntityDirectorInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    EntitySubsidiary?: EntitySubsidiaryUpdateOneWithoutUserNestedInput
    SocialAssistant?: SocialAssistantUpdateOneWithoutUserNestedInput
    Entity?: EntityUpdateOneWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutEntityDirectorInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    EntitySubsidiary?: EntitySubsidiaryUncheckedUpdateOneWithoutUserNestedInput
    SocialAssistant?: SocialAssistantUncheckedUpdateOneWithoutUserNestedInput
    Entity?: EntityUncheckedUpdateOneWithoutUserNestedInput
  }

  export type CandidateCreateWithoutIdentityDetailsInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseCreateNestedManyWithoutCandidateInput
    Financing?: FinancingCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutCandidateInput
    Loan?: LoanCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleCreateNestedManyWithoutCandidateInput
    responsible?: LegalResponsibleCreateNestedOneWithoutCandidateInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutCandidateInput
    Housing?: HousingCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutCandidateInput
    Medication?: MedicationCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsCreateNestedManyWithoutCandidateInput
  }

  export type CandidateUncheckedCreateWithoutIdentityDetailsInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    responsible_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationUncheckedCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutCandidateInput
    Loan?: LoanUncheckedCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutCandidateInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutCandidateInput
    Housing?: HousingUncheckedCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutCandidateInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type CandidateCreateOrConnectWithoutIdentityDetailsInput = {
    where: CandidateWhereUniqueInput
    create: XOR<CandidateCreateWithoutIdentityDetailsInput, CandidateUncheckedCreateWithoutIdentityDetailsInput>
  }

  export type LegalResponsibleCreateWithoutIdentityDetailsInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    Candidate?: CandidateCreateNestedManyWithoutResponsibleInput
    Housing?: HousingCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleUncheckedCreateWithoutIdentityDetailsInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    Candidate?: CandidateUncheckedCreateNestedManyWithoutResponsibleInput
    Housing?: HousingUncheckedCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanUncheckedCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleCreateOrConnectWithoutIdentityDetailsInput = {
    where: LegalResponsibleWhereUniqueInput
    create: XOR<LegalResponsibleCreateWithoutIdentityDetailsInput, LegalResponsibleUncheckedCreateWithoutIdentityDetailsInput>
  }

  export type CandidateUpsertWithoutIdentityDetailsInput = {
    update: XOR<CandidateUpdateWithoutIdentityDetailsInput, CandidateUncheckedUpdateWithoutIdentityDetailsInput>
    create: XOR<CandidateCreateWithoutIdentityDetailsInput, CandidateUncheckedCreateWithoutIdentityDetailsInput>
    where?: CandidateWhereInput
  }

  export type CandidateUpdateToOneWithWhereWithoutIdentityDetailsInput = {
    where?: CandidateWhereInput
    data: XOR<CandidateUpdateWithoutIdentityDetailsInput, CandidateUncheckedUpdateWithoutIdentityDetailsInput>
  }

  export type CandidateUpdateWithoutIdentityDetailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUpdateManyWithoutCandidateNestedInput
    responsible?: LegalResponsibleUpdateOneWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateUncheckedUpdateWithoutIdentityDetailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    responsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUncheckedUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type LegalResponsibleUpsertWithoutIdentityDetailsInput = {
    update: XOR<LegalResponsibleUpdateWithoutIdentityDetailsInput, LegalResponsibleUncheckedUpdateWithoutIdentityDetailsInput>
    create: XOR<LegalResponsibleCreateWithoutIdentityDetailsInput, LegalResponsibleUncheckedCreateWithoutIdentityDetailsInput>
    where?: LegalResponsibleWhereInput
  }

  export type LegalResponsibleUpdateToOneWithWhereWithoutIdentityDetailsInput = {
    where?: LegalResponsibleWhereInput
    data: XOR<LegalResponsibleUpdateWithoutIdentityDetailsInput, LegalResponsibleUncheckedUpdateWithoutIdentityDetailsInput>
  }

  export type LegalResponsibleUpdateWithoutIdentityDetailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Candidate?: CandidateUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type LegalResponsibleUncheckedUpdateWithoutIdentityDetailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Candidate?: CandidateUncheckedUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type CreditCardCreateWithoutFamilyMemberInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    usersCount: number
    cardType: string
    bankName: string
    cardFlag: string
    invoiceValue: number
    application_id: string
    candidate?: CandidateCreateNestedOneWithoutCreditCardInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutCreditCardInput
  }

  export type CreditCardUncheckedCreateWithoutFamilyMemberInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    usersCount: number
    cardType: string
    bankName: string
    cardFlag: string
    invoiceValue: number
    candidate_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type CreditCardCreateOrConnectWithoutFamilyMemberInput = {
    where: CreditCardWhereUniqueInput
    create: XOR<CreditCardCreateWithoutFamilyMemberInput, CreditCardUncheckedCreateWithoutFamilyMemberInput>
  }

  export type CreditCardCreateManyFamilyMemberInputEnvelope = {
    data: CreditCardCreateManyFamilyMemberInput | CreditCardCreateManyFamilyMemberInput[]
    skipDuplicates?: boolean
  }

  export type FamilyMemberIncomeCreateWithoutFamilyMemberInput = {
    id?: string
    employmentType: $Enums.EmploymentType
    averageIncome: string
    main_id?: string | null
    admissionDate?: Date | string | null
    position?: string | null
    payingSource?: string | null
    payingSourcePhone?: string | null
    startDate?: Date | string | null
    CNPJ?: string | null
    financialAssistantCPF?: string | null
    socialReason?: string | null
    fantasyName?: string | null
    CPNJ?: string | null
    receivesUnemployment?: boolean | null
    parcels?: number | null
    firstParcelDate?: Date | string | null
    parcelValue?: number | null
    quantity?: number
    application_id: string
    candidate?: CandidateCreateNestedOneWithoutFamilyMemberIncomeInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutFamilyMemberIncomeInput
  }

  export type FamilyMemberIncomeUncheckedCreateWithoutFamilyMemberInput = {
    id?: string
    employmentType: $Enums.EmploymentType
    averageIncome: string
    main_id?: string | null
    admissionDate?: Date | string | null
    position?: string | null
    payingSource?: string | null
    payingSourcePhone?: string | null
    startDate?: Date | string | null
    CNPJ?: string | null
    financialAssistantCPF?: string | null
    socialReason?: string | null
    fantasyName?: string | null
    CPNJ?: string | null
    receivesUnemployment?: boolean | null
    parcels?: number | null
    firstParcelDate?: Date | string | null
    parcelValue?: number | null
    quantity?: number
    candidate_id?: string | null
    application_id: string
    legalResponsibleId?: string | null
  }

  export type FamilyMemberIncomeCreateOrConnectWithoutFamilyMemberInput = {
    where: FamilyMemberIncomeWhereUniqueInput
    create: XOR<FamilyMemberIncomeCreateWithoutFamilyMemberInput, FamilyMemberIncomeUncheckedCreateWithoutFamilyMemberInput>
  }

  export type FamilyMemberIncomeCreateManyFamilyMemberInputEnvelope = {
    data: FamilyMemberIncomeCreateManyFamilyMemberInput | FamilyMemberIncomeCreateManyFamilyMemberInput[]
    skipDuplicates?: boolean
  }

  export type FinancingCreateWithoutFamilyMemberInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    installmentValue: number
    totalInstallments: number
    paidInstallments: number
    bankName: string
    otherFinancing?: string | null
    financingType: $Enums.FinancingType
    application_id: string
    candidate?: CandidateCreateNestedOneWithoutFinancingInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutFinancingInput
  }

  export type FinancingUncheckedCreateWithoutFamilyMemberInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    installmentValue: number
    totalInstallments: number
    paidInstallments: number
    bankName: string
    candidate_id?: string | null
    otherFinancing?: string | null
    financingType: $Enums.FinancingType
    legalResponsibleId?: string | null
    application_id: string
  }

  export type FinancingCreateOrConnectWithoutFamilyMemberInput = {
    where: FinancingWhereUniqueInput
    create: XOR<FinancingCreateWithoutFamilyMemberInput, FinancingUncheckedCreateWithoutFamilyMemberInput>
  }

  export type FinancingCreateManyFamilyMemberInputEnvelope = {
    data: FinancingCreateManyFamilyMemberInput | FinancingCreateManyFamilyMemberInput[]
    skipDuplicates?: boolean
  }

  export type LoanCreateWithoutFamilyMemberInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    installmentValue: number
    totalInstallments: number
    paidInstallments: number
    bankName: string
    application_id: string
    candidate?: CandidateCreateNestedOneWithoutLoanInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutLoanInput
  }

  export type LoanUncheckedCreateWithoutFamilyMemberInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    installmentValue: number
    totalInstallments: number
    paidInstallments: number
    bankName: string
    candidate_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type LoanCreateOrConnectWithoutFamilyMemberInput = {
    where: LoanWhereUniqueInput
    create: XOR<LoanCreateWithoutFamilyMemberInput, LoanUncheckedCreateWithoutFamilyMemberInput>
  }

  export type LoanCreateManyFamilyMemberInputEnvelope = {
    data: LoanCreateManyFamilyMemberInput | LoanCreateManyFamilyMemberInput[]
    skipDuplicates?: boolean
  }

  export type MonthlyIncomeCreateWithoutFamilyMemberInput = {
    id?: string
    date?: Date | string | null
    main_id?: string | null
    grossAmount?: number | null
    liquidAmount?: number | null
    proLabore?: number | null
    dividends?: number | null
    total?: number | null
    deductionValue?: Decimal | DecimalJsLike | number | string | null
    publicPension?: Decimal | DecimalJsLike | number | string | null
    incomeTax?: Decimal | DecimalJsLike | number | string | null
    otherDeductions?: Decimal | DecimalJsLike | number | string | null
    foodAllowanceValue?: Decimal | DecimalJsLike | number | string | null
    transportAllowanceValue?: Decimal | DecimalJsLike | number | string | null
    expenseReimbursementValue?: Decimal | DecimalJsLike | number | string | null
    advancePaymentValue?: Decimal | DecimalJsLike | number | string | null
    reversalValue?: Decimal | DecimalJsLike | number | string | null
    compensationValue?: Decimal | DecimalJsLike | number | string | null
    judicialPensionValue?: Decimal | DecimalJsLike | number | string | null
    incomeSource?: $Enums.IncomeSource | null
    application_id: string
    candidate?: CandidateCreateNestedOneWithoutMonthlyIncomeInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutMonthlyIncomeInput
  }

  export type MonthlyIncomeUncheckedCreateWithoutFamilyMemberInput = {
    id?: string
    date?: Date | string | null
    main_id?: string | null
    grossAmount?: number | null
    liquidAmount?: number | null
    proLabore?: number | null
    dividends?: number | null
    total?: number | null
    deductionValue?: Decimal | DecimalJsLike | number | string | null
    publicPension?: Decimal | DecimalJsLike | number | string | null
    incomeTax?: Decimal | DecimalJsLike | number | string | null
    otherDeductions?: Decimal | DecimalJsLike | number | string | null
    foodAllowanceValue?: Decimal | DecimalJsLike | number | string | null
    transportAllowanceValue?: Decimal | DecimalJsLike | number | string | null
    expenseReimbursementValue?: Decimal | DecimalJsLike | number | string | null
    advancePaymentValue?: Decimal | DecimalJsLike | number | string | null
    reversalValue?: Decimal | DecimalJsLike | number | string | null
    compensationValue?: Decimal | DecimalJsLike | number | string | null
    judicialPensionValue?: Decimal | DecimalJsLike | number | string | null
    candidate_id?: string | null
    incomeSource?: $Enums.IncomeSource | null
    application_id: string
    legalResponsibleId?: string | null
  }

  export type MonthlyIncomeCreateOrConnectWithoutFamilyMemberInput = {
    where: MonthlyIncomeWhereUniqueInput
    create: XOR<MonthlyIncomeCreateWithoutFamilyMemberInput, MonthlyIncomeUncheckedCreateWithoutFamilyMemberInput>
  }

  export type MonthlyIncomeCreateManyFamilyMemberInputEnvelope = {
    data: MonthlyIncomeCreateManyFamilyMemberInput | MonthlyIncomeCreateManyFamilyMemberInput[]
    skipDuplicates?: boolean
  }

  export type OtherExpenseCreateWithoutFamilyMemberInput = {
    id?: string
    main_id?: string | null
    description: string
    value: number
    application_id: string
    candidate?: CandidateCreateNestedOneWithoutOtherExpenseInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutOtherExpenseInput
  }

  export type OtherExpenseUncheckedCreateWithoutFamilyMemberInput = {
    id?: string
    main_id?: string | null
    description: string
    value: number
    candidate_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type OtherExpenseCreateOrConnectWithoutFamilyMemberInput = {
    where: OtherExpenseWhereUniqueInput
    create: XOR<OtherExpenseCreateWithoutFamilyMemberInput, OtherExpenseUncheckedCreateWithoutFamilyMemberInput>
  }

  export type OtherExpenseCreateManyFamilyMemberInputEnvelope = {
    data: OtherExpenseCreateManyFamilyMemberInput | OtherExpenseCreateManyFamilyMemberInput[]
    skipDuplicates?: boolean
  }

  export type FamilyMemberToVehicleCreateWithoutFamilyMembersInput = {
    application_id: string
    main_id?: string | null
    Vehicle: VehicleCreateNestedOneWithoutFamilyMemberToVehicleInput
  }

  export type FamilyMemberToVehicleUncheckedCreateWithoutFamilyMembersInput = {
    B: string
    application_id: string
    main_id?: string | null
  }

  export type FamilyMemberToVehicleCreateOrConnectWithoutFamilyMembersInput = {
    where: FamilyMemberToVehicleWhereUniqueInput
    create: XOR<FamilyMemberToVehicleCreateWithoutFamilyMembersInput, FamilyMemberToVehicleUncheckedCreateWithoutFamilyMembersInput>
  }

  export type FamilyMemberToVehicleCreateManyFamilyMembersInputEnvelope = {
    data: FamilyMemberToVehicleCreateManyFamilyMembersInput | FamilyMemberToVehicleCreateManyFamilyMembersInput[]
    skipDuplicates?: boolean
  }

  export type FamilyMemberDiseaseCreateWithoutFamilyMemberInput = {
    id?: string
    main_id?: string | null
    disease?: $Enums.Disease | null
    diseases?: FamilyMemberDiseaseCreatediseasesInput | $Enums.Disease[]
    specificDisease?: string | null
    hasMedicalReport: boolean
    application_id: string
    candidate?: CandidateCreateNestedOneWithoutFamilyMemberDiseaseInput
    legalResponsible?: LegalResponsibleCreateNestedOneWithoutFamilyMemberDiseaseInput
    Medication?: MedicationCreateNestedManyWithoutFamilyMemberDiseaseInput
  }

  export type FamilyMemberDiseaseUncheckedCreateWithoutFamilyMemberInput = {
    id?: string
    main_id?: string | null
    disease?: $Enums.Disease | null
    diseases?: FamilyMemberDiseaseCreatediseasesInput | $Enums.Disease[]
    specificDisease?: string | null
    hasMedicalReport: boolean
    candidate_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
    Medication?: MedicationUncheckedCreateNestedManyWithoutFamilyMemberDiseaseInput
  }

  export type FamilyMemberDiseaseCreateOrConnectWithoutFamilyMemberInput = {
    where: FamilyMemberDiseaseWhereUniqueInput
    create: XOR<FamilyMemberDiseaseCreateWithoutFamilyMemberInput, FamilyMemberDiseaseUncheckedCreateWithoutFamilyMemberInput>
  }

  export type FamilyMemberDiseaseCreateManyFamilyMemberInputEnvelope = {
    data: FamilyMemberDiseaseCreateManyFamilyMemberInput | FamilyMemberDiseaseCreateManyFamilyMemberInput[]
    skipDuplicates?: boolean
  }

  export type CandidateCreateWithoutFamillyMemberInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseCreateNestedManyWithoutCandidateInput
    Financing?: FinancingCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutCandidateInput
    Loan?: LoanCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleCreateNestedManyWithoutCandidateInput
    responsible?: LegalResponsibleCreateNestedOneWithoutCandidateInput
    Housing?: HousingCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutCandidateInput
    Medication?: MedicationCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsCreateNestedManyWithoutCandidateInput
  }

  export type CandidateUncheckedCreateWithoutFamillyMemberInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    responsible_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationUncheckedCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutCandidateInput
    Loan?: LoanUncheckedCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutCandidateInput
    Housing?: HousingUncheckedCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutCandidateInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type CandidateCreateOrConnectWithoutFamillyMemberInput = {
    where: CandidateWhereUniqueInput
    create: XOR<CandidateCreateWithoutFamillyMemberInput, CandidateUncheckedCreateWithoutFamillyMemberInput>
  }

  export type MedicationCreateWithoutFamilyMemberInput = {
    id?: string
    main_id?: string | null
    medicationName: string
    obtainedPublicly: boolean
    specificMedicationPublicly?: string | null
    application_id: string
    candidate?: CandidateCreateNestedOneWithoutMedicationInput
    legalResponsible?: LegalResponsibleCreateNestedOneWithoutMedicationInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedOneWithoutMedicationInput
  }

  export type MedicationUncheckedCreateWithoutFamilyMemberInput = {
    id?: string
    main_id?: string | null
    medicationName: string
    obtainedPublicly: boolean
    specificMedicationPublicly?: string | null
    candidate_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
    familyMemberDiseaseId?: string | null
  }

  export type MedicationCreateOrConnectWithoutFamilyMemberInput = {
    where: MedicationWhereUniqueInput
    create: XOR<MedicationCreateWithoutFamilyMemberInput, MedicationUncheckedCreateWithoutFamilyMemberInput>
  }

  export type MedicationCreateManyFamilyMemberInputEnvelope = {
    data: MedicationCreateManyFamilyMemberInput | MedicationCreateManyFamilyMemberInput[]
    skipDuplicates?: boolean
  }

  export type LegalResponsibleCreateWithoutFamillyMemberInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateCreateNestedManyWithoutResponsibleInput
    Housing?: HousingCreateNestedManyWithoutResponsibleInput
    CreditCard?: CreditCardCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleUncheckedCreateWithoutFamillyMemberInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateUncheckedCreateNestedManyWithoutResponsibleInput
    Housing?: HousingUncheckedCreateNestedManyWithoutResponsibleInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanUncheckedCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleCreateOrConnectWithoutFamillyMemberInput = {
    where: LegalResponsibleWhereUniqueInput
    create: XOR<LegalResponsibleCreateWithoutFamillyMemberInput, LegalResponsibleUncheckedCreateWithoutFamillyMemberInput>
  }

  export type BankAccountCreateWithoutFamilyMemberInput = {
    id?: string
    main_id?: string | null
    bankName: string
    agencyNumber: string
    accountNumber: string
    accountType: $Enums.AccountType
    application_id: string
    candidate?: CandidateCreateNestedOneWithoutBankAccountInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutBankAccountInput
  }

  export type BankAccountUncheckedCreateWithoutFamilyMemberInput = {
    id?: string
    main_id?: string | null
    bankName: string
    agencyNumber: string
    accountNumber: string
    accountType: $Enums.AccountType
    candidate_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type BankAccountCreateOrConnectWithoutFamilyMemberInput = {
    where: BankAccountWhereUniqueInput
    create: XOR<BankAccountCreateWithoutFamilyMemberInput, BankAccountUncheckedCreateWithoutFamilyMemberInput>
  }

  export type BankAccountCreateManyFamilyMemberInputEnvelope = {
    data: BankAccountCreateManyFamilyMemberInput | BankAccountCreateManyFamilyMemberInput[]
    skipDuplicates?: boolean
  }

  export type DeclarationsCreateWithoutFamilyMemberInput = {
    id?: string
    declarationType: $Enums.Declaration_Type
    text: string
    application_id: string
    candidate?: CandidateCreateNestedOneWithoutDeclarationsInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutDeclarationsInput
  }

  export type DeclarationsUncheckedCreateWithoutFamilyMemberInput = {
    id?: string
    declarationType: $Enums.Declaration_Type
    text: string
    candidate_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type DeclarationsCreateOrConnectWithoutFamilyMemberInput = {
    where: DeclarationsWhereUniqueInput
    create: XOR<DeclarationsCreateWithoutFamilyMemberInput, DeclarationsUncheckedCreateWithoutFamilyMemberInput>
  }

  export type DeclarationsCreateManyFamilyMemberInputEnvelope = {
    data: DeclarationsCreateManyFamilyMemberInput | DeclarationsCreateManyFamilyMemberInput[]
    skipDuplicates?: boolean
  }

  export type CreditCardUpsertWithWhereUniqueWithoutFamilyMemberInput = {
    where: CreditCardWhereUniqueInput
    update: XOR<CreditCardUpdateWithoutFamilyMemberInput, CreditCardUncheckedUpdateWithoutFamilyMemberInput>
    create: XOR<CreditCardCreateWithoutFamilyMemberInput, CreditCardUncheckedCreateWithoutFamilyMemberInput>
  }

  export type CreditCardUpdateWithWhereUniqueWithoutFamilyMemberInput = {
    where: CreditCardWhereUniqueInput
    data: XOR<CreditCardUpdateWithoutFamilyMemberInput, CreditCardUncheckedUpdateWithoutFamilyMemberInput>
  }

  export type CreditCardUpdateManyWithWhereWithoutFamilyMemberInput = {
    where: CreditCardScalarWhereInput
    data: XOR<CreditCardUpdateManyMutationInput, CreditCardUncheckedUpdateManyWithoutFamilyMemberInput>
  }

  export type FamilyMemberIncomeUpsertWithWhereUniqueWithoutFamilyMemberInput = {
    where: FamilyMemberIncomeWhereUniqueInput
    update: XOR<FamilyMemberIncomeUpdateWithoutFamilyMemberInput, FamilyMemberIncomeUncheckedUpdateWithoutFamilyMemberInput>
    create: XOR<FamilyMemberIncomeCreateWithoutFamilyMemberInput, FamilyMemberIncomeUncheckedCreateWithoutFamilyMemberInput>
  }

  export type FamilyMemberIncomeUpdateWithWhereUniqueWithoutFamilyMemberInput = {
    where: FamilyMemberIncomeWhereUniqueInput
    data: XOR<FamilyMemberIncomeUpdateWithoutFamilyMemberInput, FamilyMemberIncomeUncheckedUpdateWithoutFamilyMemberInput>
  }

  export type FamilyMemberIncomeUpdateManyWithWhereWithoutFamilyMemberInput = {
    where: FamilyMemberIncomeScalarWhereInput
    data: XOR<FamilyMemberIncomeUpdateManyMutationInput, FamilyMemberIncomeUncheckedUpdateManyWithoutFamilyMemberInput>
  }

  export type FinancingUpsertWithWhereUniqueWithoutFamilyMemberInput = {
    where: FinancingWhereUniqueInput
    update: XOR<FinancingUpdateWithoutFamilyMemberInput, FinancingUncheckedUpdateWithoutFamilyMemberInput>
    create: XOR<FinancingCreateWithoutFamilyMemberInput, FinancingUncheckedCreateWithoutFamilyMemberInput>
  }

  export type FinancingUpdateWithWhereUniqueWithoutFamilyMemberInput = {
    where: FinancingWhereUniqueInput
    data: XOR<FinancingUpdateWithoutFamilyMemberInput, FinancingUncheckedUpdateWithoutFamilyMemberInput>
  }

  export type FinancingUpdateManyWithWhereWithoutFamilyMemberInput = {
    where: FinancingScalarWhereInput
    data: XOR<FinancingUpdateManyMutationInput, FinancingUncheckedUpdateManyWithoutFamilyMemberInput>
  }

  export type LoanUpsertWithWhereUniqueWithoutFamilyMemberInput = {
    where: LoanWhereUniqueInput
    update: XOR<LoanUpdateWithoutFamilyMemberInput, LoanUncheckedUpdateWithoutFamilyMemberInput>
    create: XOR<LoanCreateWithoutFamilyMemberInput, LoanUncheckedCreateWithoutFamilyMemberInput>
  }

  export type LoanUpdateWithWhereUniqueWithoutFamilyMemberInput = {
    where: LoanWhereUniqueInput
    data: XOR<LoanUpdateWithoutFamilyMemberInput, LoanUncheckedUpdateWithoutFamilyMemberInput>
  }

  export type LoanUpdateManyWithWhereWithoutFamilyMemberInput = {
    where: LoanScalarWhereInput
    data: XOR<LoanUpdateManyMutationInput, LoanUncheckedUpdateManyWithoutFamilyMemberInput>
  }

  export type MonthlyIncomeUpsertWithWhereUniqueWithoutFamilyMemberInput = {
    where: MonthlyIncomeWhereUniqueInput
    update: XOR<MonthlyIncomeUpdateWithoutFamilyMemberInput, MonthlyIncomeUncheckedUpdateWithoutFamilyMemberInput>
    create: XOR<MonthlyIncomeCreateWithoutFamilyMemberInput, MonthlyIncomeUncheckedCreateWithoutFamilyMemberInput>
  }

  export type MonthlyIncomeUpdateWithWhereUniqueWithoutFamilyMemberInput = {
    where: MonthlyIncomeWhereUniqueInput
    data: XOR<MonthlyIncomeUpdateWithoutFamilyMemberInput, MonthlyIncomeUncheckedUpdateWithoutFamilyMemberInput>
  }

  export type MonthlyIncomeUpdateManyWithWhereWithoutFamilyMemberInput = {
    where: MonthlyIncomeScalarWhereInput
    data: XOR<MonthlyIncomeUpdateManyMutationInput, MonthlyIncomeUncheckedUpdateManyWithoutFamilyMemberInput>
  }

  export type OtherExpenseUpsertWithWhereUniqueWithoutFamilyMemberInput = {
    where: OtherExpenseWhereUniqueInput
    update: XOR<OtherExpenseUpdateWithoutFamilyMemberInput, OtherExpenseUncheckedUpdateWithoutFamilyMemberInput>
    create: XOR<OtherExpenseCreateWithoutFamilyMemberInput, OtherExpenseUncheckedCreateWithoutFamilyMemberInput>
  }

  export type OtherExpenseUpdateWithWhereUniqueWithoutFamilyMemberInput = {
    where: OtherExpenseWhereUniqueInput
    data: XOR<OtherExpenseUpdateWithoutFamilyMemberInput, OtherExpenseUncheckedUpdateWithoutFamilyMemberInput>
  }

  export type OtherExpenseUpdateManyWithWhereWithoutFamilyMemberInput = {
    where: OtherExpenseScalarWhereInput
    data: XOR<OtherExpenseUpdateManyMutationInput, OtherExpenseUncheckedUpdateManyWithoutFamilyMemberInput>
  }

  export type FamilyMemberToVehicleUpsertWithWhereUniqueWithoutFamilyMembersInput = {
    where: FamilyMemberToVehicleWhereUniqueInput
    update: XOR<FamilyMemberToVehicleUpdateWithoutFamilyMembersInput, FamilyMemberToVehicleUncheckedUpdateWithoutFamilyMembersInput>
    create: XOR<FamilyMemberToVehicleCreateWithoutFamilyMembersInput, FamilyMemberToVehicleUncheckedCreateWithoutFamilyMembersInput>
  }

  export type FamilyMemberToVehicleUpdateWithWhereUniqueWithoutFamilyMembersInput = {
    where: FamilyMemberToVehicleWhereUniqueInput
    data: XOR<FamilyMemberToVehicleUpdateWithoutFamilyMembersInput, FamilyMemberToVehicleUncheckedUpdateWithoutFamilyMembersInput>
  }

  export type FamilyMemberToVehicleUpdateManyWithWhereWithoutFamilyMembersInput = {
    where: FamilyMemberToVehicleScalarWhereInput
    data: XOR<FamilyMemberToVehicleUpdateManyMutationInput, FamilyMemberToVehicleUncheckedUpdateManyWithoutFamilyMembersInput>
  }

  export type FamilyMemberToVehicleScalarWhereInput = {
    AND?: FamilyMemberToVehicleScalarWhereInput | FamilyMemberToVehicleScalarWhereInput[]
    OR?: FamilyMemberToVehicleScalarWhereInput[]
    NOT?: FamilyMemberToVehicleScalarWhereInput | FamilyMemberToVehicleScalarWhereInput[]
    A?: StringFilter<"FamilyMemberToVehicle"> | string
    B?: StringFilter<"FamilyMemberToVehicle"> | string
    application_id?: StringFilter<"FamilyMemberToVehicle"> | string
    main_id?: StringNullableFilter<"FamilyMemberToVehicle"> | string | null
  }

  export type FamilyMemberDiseaseUpsertWithWhereUniqueWithoutFamilyMemberInput = {
    where: FamilyMemberDiseaseWhereUniqueInput
    update: XOR<FamilyMemberDiseaseUpdateWithoutFamilyMemberInput, FamilyMemberDiseaseUncheckedUpdateWithoutFamilyMemberInput>
    create: XOR<FamilyMemberDiseaseCreateWithoutFamilyMemberInput, FamilyMemberDiseaseUncheckedCreateWithoutFamilyMemberInput>
  }

  export type FamilyMemberDiseaseUpdateWithWhereUniqueWithoutFamilyMemberInput = {
    where: FamilyMemberDiseaseWhereUniqueInput
    data: XOR<FamilyMemberDiseaseUpdateWithoutFamilyMemberInput, FamilyMemberDiseaseUncheckedUpdateWithoutFamilyMemberInput>
  }

  export type FamilyMemberDiseaseUpdateManyWithWhereWithoutFamilyMemberInput = {
    where: FamilyMemberDiseaseScalarWhereInput
    data: XOR<FamilyMemberDiseaseUpdateManyMutationInput, FamilyMemberDiseaseUncheckedUpdateManyWithoutFamilyMemberInput>
  }

  export type CandidateUpsertWithoutFamillyMemberInput = {
    update: XOR<CandidateUpdateWithoutFamillyMemberInput, CandidateUncheckedUpdateWithoutFamillyMemberInput>
    create: XOR<CandidateCreateWithoutFamillyMemberInput, CandidateUncheckedCreateWithoutFamillyMemberInput>
    where?: CandidateWhereInput
  }

  export type CandidateUpdateToOneWithWhereWithoutFamillyMemberInput = {
    where?: CandidateWhereInput
    data: XOR<CandidateUpdateWithoutFamillyMemberInput, CandidateUncheckedUpdateWithoutFamillyMemberInput>
  }

  export type CandidateUpdateWithoutFamillyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUpdateManyWithoutCandidateNestedInput
    responsible?: LegalResponsibleUpdateOneWithoutCandidateNestedInput
    Housing?: HousingUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateUncheckedUpdateWithoutFamillyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    responsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUncheckedUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type MedicationUpsertWithWhereUniqueWithoutFamilyMemberInput = {
    where: MedicationWhereUniqueInput
    update: XOR<MedicationUpdateWithoutFamilyMemberInput, MedicationUncheckedUpdateWithoutFamilyMemberInput>
    create: XOR<MedicationCreateWithoutFamilyMemberInput, MedicationUncheckedCreateWithoutFamilyMemberInput>
  }

  export type MedicationUpdateWithWhereUniqueWithoutFamilyMemberInput = {
    where: MedicationWhereUniqueInput
    data: XOR<MedicationUpdateWithoutFamilyMemberInput, MedicationUncheckedUpdateWithoutFamilyMemberInput>
  }

  export type MedicationUpdateManyWithWhereWithoutFamilyMemberInput = {
    where: MedicationScalarWhereInput
    data: XOR<MedicationUpdateManyMutationInput, MedicationUncheckedUpdateManyWithoutFamilyMemberInput>
  }

  export type LegalResponsibleUpsertWithoutFamillyMemberInput = {
    update: XOR<LegalResponsibleUpdateWithoutFamillyMemberInput, LegalResponsibleUncheckedUpdateWithoutFamillyMemberInput>
    create: XOR<LegalResponsibleCreateWithoutFamillyMemberInput, LegalResponsibleUncheckedCreateWithoutFamillyMemberInput>
    where?: LegalResponsibleWhereInput
  }

  export type LegalResponsibleUpdateToOneWithWhereWithoutFamillyMemberInput = {
    where?: LegalResponsibleWhereInput
    data: XOR<LegalResponsibleUpdateWithoutFamillyMemberInput, LegalResponsibleUncheckedUpdateWithoutFamillyMemberInput>
  }

  export type LegalResponsibleUpdateWithoutFamillyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUpdateManyWithoutResponsibleNestedInput
    CreditCard?: CreditCardUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type LegalResponsibleUncheckedUpdateWithoutFamillyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUncheckedUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutResponsibleNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type BankAccountUpsertWithWhereUniqueWithoutFamilyMemberInput = {
    where: BankAccountWhereUniqueInput
    update: XOR<BankAccountUpdateWithoutFamilyMemberInput, BankAccountUncheckedUpdateWithoutFamilyMemberInput>
    create: XOR<BankAccountCreateWithoutFamilyMemberInput, BankAccountUncheckedCreateWithoutFamilyMemberInput>
  }

  export type BankAccountUpdateWithWhereUniqueWithoutFamilyMemberInput = {
    where: BankAccountWhereUniqueInput
    data: XOR<BankAccountUpdateWithoutFamilyMemberInput, BankAccountUncheckedUpdateWithoutFamilyMemberInput>
  }

  export type BankAccountUpdateManyWithWhereWithoutFamilyMemberInput = {
    where: BankAccountScalarWhereInput
    data: XOR<BankAccountUpdateManyMutationInput, BankAccountUncheckedUpdateManyWithoutFamilyMemberInput>
  }

  export type DeclarationsUpsertWithWhereUniqueWithoutFamilyMemberInput = {
    where: DeclarationsWhereUniqueInput
    update: XOR<DeclarationsUpdateWithoutFamilyMemberInput, DeclarationsUncheckedUpdateWithoutFamilyMemberInput>
    create: XOR<DeclarationsCreateWithoutFamilyMemberInput, DeclarationsUncheckedCreateWithoutFamilyMemberInput>
  }

  export type DeclarationsUpdateWithWhereUniqueWithoutFamilyMemberInput = {
    where: DeclarationsWhereUniqueInput
    data: XOR<DeclarationsUpdateWithoutFamilyMemberInput, DeclarationsUncheckedUpdateWithoutFamilyMemberInput>
  }

  export type DeclarationsUpdateManyWithWhereWithoutFamilyMemberInput = {
    where: DeclarationsScalarWhereInput
    data: XOR<DeclarationsUpdateManyMutationInput, DeclarationsUncheckedUpdateManyWithoutFamilyMemberInput>
  }

  export type CandidateCreateWithoutHousingInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseCreateNestedManyWithoutCandidateInput
    Financing?: FinancingCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutCandidateInput
    Loan?: LoanCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleCreateNestedManyWithoutCandidateInput
    responsible?: LegalResponsibleCreateNestedOneWithoutCandidateInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutCandidateInput
    Medication?: MedicationCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsCreateNestedManyWithoutCandidateInput
  }

  export type CandidateUncheckedCreateWithoutHousingInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    responsible_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationUncheckedCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutCandidateInput
    Loan?: LoanUncheckedCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutCandidateInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutCandidateInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type CandidateCreateOrConnectWithoutHousingInput = {
    where: CandidateWhereUniqueInput
    create: XOR<CandidateCreateWithoutHousingInput, CandidateUncheckedCreateWithoutHousingInput>
  }

  export type LegalResponsibleCreateWithoutHousingInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleUncheckedCreateWithoutHousingInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateUncheckedCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanUncheckedCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleCreateOrConnectWithoutHousingInput = {
    where: LegalResponsibleWhereUniqueInput
    create: XOR<LegalResponsibleCreateWithoutHousingInput, LegalResponsibleUncheckedCreateWithoutHousingInput>
  }

  export type CandidateUpsertWithoutHousingInput = {
    update: XOR<CandidateUpdateWithoutHousingInput, CandidateUncheckedUpdateWithoutHousingInput>
    create: XOR<CandidateCreateWithoutHousingInput, CandidateUncheckedCreateWithoutHousingInput>
    where?: CandidateWhereInput
  }

  export type CandidateUpdateToOneWithWhereWithoutHousingInput = {
    where?: CandidateWhereInput
    data: XOR<CandidateUpdateWithoutHousingInput, CandidateUncheckedUpdateWithoutHousingInput>
  }

  export type CandidateUpdateWithoutHousingInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUpdateManyWithoutCandidateNestedInput
    responsible?: LegalResponsibleUpdateOneWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateUncheckedUpdateWithoutHousingInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    responsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUncheckedUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type LegalResponsibleUpsertWithoutHousingInput = {
    update: XOR<LegalResponsibleUpdateWithoutHousingInput, LegalResponsibleUncheckedUpdateWithoutHousingInput>
    create: XOR<LegalResponsibleCreateWithoutHousingInput, LegalResponsibleUncheckedCreateWithoutHousingInput>
    where?: LegalResponsibleWhereInput
  }

  export type LegalResponsibleUpdateToOneWithWhereWithoutHousingInput = {
    where?: LegalResponsibleWhereInput
    data: XOR<LegalResponsibleUpdateWithoutHousingInput, LegalResponsibleUncheckedUpdateWithoutHousingInput>
  }

  export type LegalResponsibleUpdateWithoutHousingInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type LegalResponsibleUncheckedUpdateWithoutHousingInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUncheckedUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type CandidateCreateWithoutVehicleInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseCreateNestedManyWithoutCandidateInput
    Financing?: FinancingCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutCandidateInput
    Loan?: LoanCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutCandidateInput
    responsible?: LegalResponsibleCreateNestedOneWithoutCandidateInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutCandidateInput
    Housing?: HousingCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutCandidateInput
    Medication?: MedicationCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsCreateNestedManyWithoutCandidateInput
  }

  export type CandidateUncheckedCreateWithoutVehicleInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    responsible_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationUncheckedCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutCandidateInput
    Loan?: LoanUncheckedCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutCandidateInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutCandidateInput
    Housing?: HousingUncheckedCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutCandidateInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type CandidateCreateOrConnectWithoutVehicleInput = {
    where: CandidateWhereUniqueInput
    create: XOR<CandidateCreateWithoutVehicleInput, CandidateUncheckedCreateWithoutVehicleInput>
  }

  export type FamilyMemberToVehicleCreateWithoutVehicleInput = {
    application_id: string
    main_id?: string | null
    familyMembers: FamilyMemberCreateNestedOneWithoutFamilyMemberToVehicleInput
  }

  export type FamilyMemberToVehicleUncheckedCreateWithoutVehicleInput = {
    A: string
    application_id: string
    main_id?: string | null
  }

  export type FamilyMemberToVehicleCreateOrConnectWithoutVehicleInput = {
    where: FamilyMemberToVehicleWhereUniqueInput
    create: XOR<FamilyMemberToVehicleCreateWithoutVehicleInput, FamilyMemberToVehicleUncheckedCreateWithoutVehicleInput>
  }

  export type FamilyMemberToVehicleCreateManyVehicleInputEnvelope = {
    data: FamilyMemberToVehicleCreateManyVehicleInput | FamilyMemberToVehicleCreateManyVehicleInput[]
    skipDuplicates?: boolean
  }

  export type LegalResponsibleCreateWithoutVehicleInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateCreateNestedManyWithoutResponsibleInput
    Housing?: HousingCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleUncheckedCreateWithoutVehicleInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateUncheckedCreateNestedManyWithoutResponsibleInput
    Housing?: HousingUncheckedCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanUncheckedCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleCreateOrConnectWithoutVehicleInput = {
    where: LegalResponsibleWhereUniqueInput
    create: XOR<LegalResponsibleCreateWithoutVehicleInput, LegalResponsibleUncheckedCreateWithoutVehicleInput>
  }

  export type CandidateUpsertWithoutVehicleInput = {
    update: XOR<CandidateUpdateWithoutVehicleInput, CandidateUncheckedUpdateWithoutVehicleInput>
    create: XOR<CandidateCreateWithoutVehicleInput, CandidateUncheckedCreateWithoutVehicleInput>
    where?: CandidateWhereInput
  }

  export type CandidateUpdateToOneWithWhereWithoutVehicleInput = {
    where?: CandidateWhereInput
    data: XOR<CandidateUpdateWithoutVehicleInput, CandidateUncheckedUpdateWithoutVehicleInput>
  }

  export type CandidateUpdateWithoutVehicleInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutCandidateNestedInput
    responsible?: LegalResponsibleUpdateOneWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateUncheckedUpdateWithoutVehicleInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    responsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUncheckedUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type FamilyMemberToVehicleUpsertWithWhereUniqueWithoutVehicleInput = {
    where: FamilyMemberToVehicleWhereUniqueInput
    update: XOR<FamilyMemberToVehicleUpdateWithoutVehicleInput, FamilyMemberToVehicleUncheckedUpdateWithoutVehicleInput>
    create: XOR<FamilyMemberToVehicleCreateWithoutVehicleInput, FamilyMemberToVehicleUncheckedCreateWithoutVehicleInput>
  }

  export type FamilyMemberToVehicleUpdateWithWhereUniqueWithoutVehicleInput = {
    where: FamilyMemberToVehicleWhereUniqueInput
    data: XOR<FamilyMemberToVehicleUpdateWithoutVehicleInput, FamilyMemberToVehicleUncheckedUpdateWithoutVehicleInput>
  }

  export type FamilyMemberToVehicleUpdateManyWithWhereWithoutVehicleInput = {
    where: FamilyMemberToVehicleScalarWhereInput
    data: XOR<FamilyMemberToVehicleUpdateManyMutationInput, FamilyMemberToVehicleUncheckedUpdateManyWithoutVehicleInput>
  }

  export type LegalResponsibleUpsertWithoutVehicleInput = {
    update: XOR<LegalResponsibleUpdateWithoutVehicleInput, LegalResponsibleUncheckedUpdateWithoutVehicleInput>
    create: XOR<LegalResponsibleCreateWithoutVehicleInput, LegalResponsibleUncheckedCreateWithoutVehicleInput>
    where?: LegalResponsibleWhereInput
  }

  export type LegalResponsibleUpdateToOneWithWhereWithoutVehicleInput = {
    where?: LegalResponsibleWhereInput
    data: XOR<LegalResponsibleUpdateWithoutVehicleInput, LegalResponsibleUncheckedUpdateWithoutVehicleInput>
  }

  export type LegalResponsibleUpdateWithoutVehicleInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type LegalResponsibleUncheckedUpdateWithoutVehicleInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUncheckedUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type FamilyMemberCreateWithoutFamilyMemberIncomeInput = {
    id?: string
    relationship: $Enums.Relationship
    otherRelationship?: string | null
    main_id?: string | null
    fullName: string
    socialName?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    numberOfBirthRegister?: string | null
    bookOfBirthRegister?: string | null
    pageOfBirthRegister?: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    email?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    educationPlace?: $Enums.INSTITUTION_TYPE | null
    institutionName?: string | null
    coursingEducationLevel?: $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: string | null
    turnOfEducation?: $Enums.SHIFT | null
    hasScholarship?: boolean | null
    percentageOfScholarship?: string | null
    monthlyAmount?: string | null
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    benefitedFromCebasScholarship_professional?: boolean | null
    CadUnico?: boolean | null
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    incomeSource?: FamilyMemberCreateincomeSourceInput | $Enums.IncomeSource[]
    application_id: string
    CreditCard?: CreditCardCreateNestedManyWithoutFamilyMemberInput
    Financing?: FinancingCreateNestedManyWithoutFamilyMemberInput
    Loan?: LoanCreateNestedManyWithoutFamilyMemberInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutFamilyMemberInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleCreateNestedManyWithoutFamilyMembersInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutFamilyMemberInput
    candidate?: CandidateCreateNestedOneWithoutFamillyMemberInput
    Medication?: MedicationCreateNestedManyWithoutFamilyMemberInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutFamillyMemberInput
    BankAccount?: BankAccountCreateNestedManyWithoutFamilyMemberInput
    Declarations?: DeclarationsCreateNestedManyWithoutFamilyMemberInput
  }

  export type FamilyMemberUncheckedCreateWithoutFamilyMemberIncomeInput = {
    id?: string
    relationship: $Enums.Relationship
    otherRelationship?: string | null
    main_id?: string | null
    fullName: string
    socialName?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    numberOfBirthRegister?: string | null
    bookOfBirthRegister?: string | null
    pageOfBirthRegister?: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    email?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    educationPlace?: $Enums.INSTITUTION_TYPE | null
    institutionName?: string | null
    coursingEducationLevel?: $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: string | null
    turnOfEducation?: $Enums.SHIFT | null
    hasScholarship?: boolean | null
    percentageOfScholarship?: string | null
    monthlyAmount?: string | null
    candidate_id?: string | null
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    benefitedFromCebasScholarship_professional?: boolean | null
    CadUnico?: boolean | null
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    incomeSource?: FamilyMemberCreateincomeSourceInput | $Enums.IncomeSource[]
    legalResponsibleId?: string | null
    application_id: string
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutFamilyMemberInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutFamilyMemberInput
    Loan?: LoanUncheckedCreateNestedManyWithoutFamilyMemberInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutFamilyMemberInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedCreateNestedManyWithoutFamilyMembersInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutFamilyMemberInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutFamilyMemberInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutFamilyMemberInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutFamilyMemberInput
  }

  export type FamilyMemberCreateOrConnectWithoutFamilyMemberIncomeInput = {
    where: FamilyMemberWhereUniqueInput
    create: XOR<FamilyMemberCreateWithoutFamilyMemberIncomeInput, FamilyMemberUncheckedCreateWithoutFamilyMemberIncomeInput>
  }

  export type CandidateCreateWithoutFamilyMemberIncomeInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseCreateNestedManyWithoutCandidateInput
    Financing?: FinancingCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutCandidateInput
    Loan?: LoanCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleCreateNestedManyWithoutCandidateInput
    responsible?: LegalResponsibleCreateNestedOneWithoutCandidateInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutCandidateInput
    Housing?: HousingCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutCandidateInput
    Medication?: MedicationCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsCreateNestedManyWithoutCandidateInput
  }

  export type CandidateUncheckedCreateWithoutFamilyMemberIncomeInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    responsible_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationUncheckedCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutCandidateInput
    Loan?: LoanUncheckedCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutCandidateInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutCandidateInput
    Housing?: HousingUncheckedCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutCandidateInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type CandidateCreateOrConnectWithoutFamilyMemberIncomeInput = {
    where: CandidateWhereUniqueInput
    create: XOR<CandidateCreateWithoutFamilyMemberIncomeInput, CandidateUncheckedCreateWithoutFamilyMemberIncomeInput>
  }

  export type LegalResponsibleCreateWithoutFamilyMemberIncomeInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateCreateNestedManyWithoutResponsibleInput
    Housing?: HousingCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationCreateNestedManyWithoutResponsibleInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleUncheckedCreateWithoutFamilyMemberIncomeInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateUncheckedCreateNestedManyWithoutResponsibleInput
    Housing?: HousingUncheckedCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanUncheckedCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutResponsibleInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleCreateOrConnectWithoutFamilyMemberIncomeInput = {
    where: LegalResponsibleWhereUniqueInput
    create: XOR<LegalResponsibleCreateWithoutFamilyMemberIncomeInput, LegalResponsibleUncheckedCreateWithoutFamilyMemberIncomeInput>
  }

  export type FamilyMemberUpsertWithoutFamilyMemberIncomeInput = {
    update: XOR<FamilyMemberUpdateWithoutFamilyMemberIncomeInput, FamilyMemberUncheckedUpdateWithoutFamilyMemberIncomeInput>
    create: XOR<FamilyMemberCreateWithoutFamilyMemberIncomeInput, FamilyMemberUncheckedCreateWithoutFamilyMemberIncomeInput>
    where?: FamilyMemberWhereInput
  }

  export type FamilyMemberUpdateToOneWithWhereWithoutFamilyMemberIncomeInput = {
    where?: FamilyMemberWhereInput
    data: XOR<FamilyMemberUpdateWithoutFamilyMemberIncomeInput, FamilyMemberUncheckedUpdateWithoutFamilyMemberIncomeInput>
  }

  export type FamilyMemberUpdateWithoutFamilyMemberIncomeInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    application_id?: StringFieldUpdateOperationsInput | string
    CreditCard?: CreditCardUpdateManyWithoutFamilyMemberNestedInput
    Financing?: FinancingUpdateManyWithoutFamilyMemberNestedInput
    Loan?: LoanUpdateManyWithoutFamilyMemberNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutFamilyMemberNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUpdateManyWithoutFamilyMembersNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutFamilyMemberNestedInput
    candidate?: CandidateUpdateOneWithoutFamillyMemberNestedInput
    Medication?: MedicationUpdateManyWithoutFamilyMemberNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutFamillyMemberNestedInput
    BankAccount?: BankAccountUpdateManyWithoutFamilyMemberNestedInput
    Declarations?: DeclarationsUpdateManyWithoutFamilyMemberNestedInput
  }

  export type FamilyMemberUncheckedUpdateWithoutFamilyMemberIncomeInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    CreditCard?: CreditCardUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutFamilyMemberNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutFamilyMemberNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedUpdateManyWithoutFamilyMembersNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutFamilyMemberNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutFamilyMemberNestedInput
  }

  export type CandidateUpsertWithoutFamilyMemberIncomeInput = {
    update: XOR<CandidateUpdateWithoutFamilyMemberIncomeInput, CandidateUncheckedUpdateWithoutFamilyMemberIncomeInput>
    create: XOR<CandidateCreateWithoutFamilyMemberIncomeInput, CandidateUncheckedCreateWithoutFamilyMemberIncomeInput>
    where?: CandidateWhereInput
  }

  export type CandidateUpdateToOneWithWhereWithoutFamilyMemberIncomeInput = {
    where?: CandidateWhereInput
    data: XOR<CandidateUpdateWithoutFamilyMemberIncomeInput, CandidateUncheckedUpdateWithoutFamilyMemberIncomeInput>
  }

  export type CandidateUpdateWithoutFamilyMemberIncomeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUpdateManyWithoutCandidateNestedInput
    responsible?: LegalResponsibleUpdateOneWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateUncheckedUpdateWithoutFamilyMemberIncomeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    responsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUncheckedUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type LegalResponsibleUpsertWithoutFamilyMemberIncomeInput = {
    update: XOR<LegalResponsibleUpdateWithoutFamilyMemberIncomeInput, LegalResponsibleUncheckedUpdateWithoutFamilyMemberIncomeInput>
    create: XOR<LegalResponsibleCreateWithoutFamilyMemberIncomeInput, LegalResponsibleUncheckedCreateWithoutFamilyMemberIncomeInput>
    where?: LegalResponsibleWhereInput
  }

  export type LegalResponsibleUpdateToOneWithWhereWithoutFamilyMemberIncomeInput = {
    where?: LegalResponsibleWhereInput
    data: XOR<LegalResponsibleUpdateWithoutFamilyMemberIncomeInput, LegalResponsibleUncheckedUpdateWithoutFamilyMemberIncomeInput>
  }

  export type LegalResponsibleUpdateWithoutFamilyMemberIncomeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUpdateManyWithoutResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type LegalResponsibleUncheckedUpdateWithoutFamilyMemberIncomeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUncheckedUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type FamilyMemberCreateWithoutMonthlyIncomeInput = {
    id?: string
    relationship: $Enums.Relationship
    otherRelationship?: string | null
    main_id?: string | null
    fullName: string
    socialName?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    numberOfBirthRegister?: string | null
    bookOfBirthRegister?: string | null
    pageOfBirthRegister?: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    email?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    educationPlace?: $Enums.INSTITUTION_TYPE | null
    institutionName?: string | null
    coursingEducationLevel?: $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: string | null
    turnOfEducation?: $Enums.SHIFT | null
    hasScholarship?: boolean | null
    percentageOfScholarship?: string | null
    monthlyAmount?: string | null
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    benefitedFromCebasScholarship_professional?: boolean | null
    CadUnico?: boolean | null
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    incomeSource?: FamilyMemberCreateincomeSourceInput | $Enums.IncomeSource[]
    application_id: string
    CreditCard?: CreditCardCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutFamilyMemberInput
    Financing?: FinancingCreateNestedManyWithoutFamilyMemberInput
    Loan?: LoanCreateNestedManyWithoutFamilyMemberInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleCreateNestedManyWithoutFamilyMembersInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutFamilyMemberInput
    candidate?: CandidateCreateNestedOneWithoutFamillyMemberInput
    Medication?: MedicationCreateNestedManyWithoutFamilyMemberInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutFamillyMemberInput
    BankAccount?: BankAccountCreateNestedManyWithoutFamilyMemberInput
    Declarations?: DeclarationsCreateNestedManyWithoutFamilyMemberInput
  }

  export type FamilyMemberUncheckedCreateWithoutMonthlyIncomeInput = {
    id?: string
    relationship: $Enums.Relationship
    otherRelationship?: string | null
    main_id?: string | null
    fullName: string
    socialName?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    numberOfBirthRegister?: string | null
    bookOfBirthRegister?: string | null
    pageOfBirthRegister?: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    email?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    educationPlace?: $Enums.INSTITUTION_TYPE | null
    institutionName?: string | null
    coursingEducationLevel?: $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: string | null
    turnOfEducation?: $Enums.SHIFT | null
    hasScholarship?: boolean | null
    percentageOfScholarship?: string | null
    monthlyAmount?: string | null
    candidate_id?: string | null
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    benefitedFromCebasScholarship_professional?: boolean | null
    CadUnico?: boolean | null
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    incomeSource?: FamilyMemberCreateincomeSourceInput | $Enums.IncomeSource[]
    legalResponsibleId?: string | null
    application_id: string
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutFamilyMemberInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutFamilyMemberInput
    Loan?: LoanUncheckedCreateNestedManyWithoutFamilyMemberInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedCreateNestedManyWithoutFamilyMembersInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutFamilyMemberInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutFamilyMemberInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutFamilyMemberInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutFamilyMemberInput
  }

  export type FamilyMemberCreateOrConnectWithoutMonthlyIncomeInput = {
    where: FamilyMemberWhereUniqueInput
    create: XOR<FamilyMemberCreateWithoutMonthlyIncomeInput, FamilyMemberUncheckedCreateWithoutMonthlyIncomeInput>
  }

  export type CandidateCreateWithoutMonthlyIncomeInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseCreateNestedManyWithoutCandidateInput
    Financing?: FinancingCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutCandidateInput
    Loan?: LoanCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleCreateNestedManyWithoutCandidateInput
    responsible?: LegalResponsibleCreateNestedOneWithoutCandidateInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutCandidateInput
    Housing?: HousingCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutCandidateInput
    Medication?: MedicationCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsCreateNestedManyWithoutCandidateInput
  }

  export type CandidateUncheckedCreateWithoutMonthlyIncomeInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    responsible_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationUncheckedCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutCandidateInput
    Loan?: LoanUncheckedCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutCandidateInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutCandidateInput
    Housing?: HousingUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutCandidateInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type CandidateCreateOrConnectWithoutMonthlyIncomeInput = {
    where: CandidateWhereUniqueInput
    create: XOR<CandidateCreateWithoutMonthlyIncomeInput, CandidateUncheckedCreateWithoutMonthlyIncomeInput>
  }

  export type LegalResponsibleCreateWithoutMonthlyIncomeInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateCreateNestedManyWithoutResponsibleInput
    Housing?: HousingCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleUncheckedCreateWithoutMonthlyIncomeInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateUncheckedCreateNestedManyWithoutResponsibleInput
    Housing?: HousingUncheckedCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanUncheckedCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleCreateOrConnectWithoutMonthlyIncomeInput = {
    where: LegalResponsibleWhereUniqueInput
    create: XOR<LegalResponsibleCreateWithoutMonthlyIncomeInput, LegalResponsibleUncheckedCreateWithoutMonthlyIncomeInput>
  }

  export type FamilyMemberUpsertWithoutMonthlyIncomeInput = {
    update: XOR<FamilyMemberUpdateWithoutMonthlyIncomeInput, FamilyMemberUncheckedUpdateWithoutMonthlyIncomeInput>
    create: XOR<FamilyMemberCreateWithoutMonthlyIncomeInput, FamilyMemberUncheckedCreateWithoutMonthlyIncomeInput>
    where?: FamilyMemberWhereInput
  }

  export type FamilyMemberUpdateToOneWithWhereWithoutMonthlyIncomeInput = {
    where?: FamilyMemberWhereInput
    data: XOR<FamilyMemberUpdateWithoutMonthlyIncomeInput, FamilyMemberUncheckedUpdateWithoutMonthlyIncomeInput>
  }

  export type FamilyMemberUpdateWithoutMonthlyIncomeInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    application_id?: StringFieldUpdateOperationsInput | string
    CreditCard?: CreditCardUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutFamilyMemberNestedInput
    Financing?: FinancingUpdateManyWithoutFamilyMemberNestedInput
    Loan?: LoanUpdateManyWithoutFamilyMemberNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUpdateManyWithoutFamilyMembersNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutFamilyMemberNestedInput
    candidate?: CandidateUpdateOneWithoutFamillyMemberNestedInput
    Medication?: MedicationUpdateManyWithoutFamilyMemberNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutFamillyMemberNestedInput
    BankAccount?: BankAccountUpdateManyWithoutFamilyMemberNestedInput
    Declarations?: DeclarationsUpdateManyWithoutFamilyMemberNestedInput
  }

  export type FamilyMemberUncheckedUpdateWithoutMonthlyIncomeInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    CreditCard?: CreditCardUncheckedUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutFamilyMemberNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedUpdateManyWithoutFamilyMembersNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutFamilyMemberNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutFamilyMemberNestedInput
  }

  export type CandidateUpsertWithoutMonthlyIncomeInput = {
    update: XOR<CandidateUpdateWithoutMonthlyIncomeInput, CandidateUncheckedUpdateWithoutMonthlyIncomeInput>
    create: XOR<CandidateCreateWithoutMonthlyIncomeInput, CandidateUncheckedCreateWithoutMonthlyIncomeInput>
    where?: CandidateWhereInput
  }

  export type CandidateUpdateToOneWithWhereWithoutMonthlyIncomeInput = {
    where?: CandidateWhereInput
    data: XOR<CandidateUpdateWithoutMonthlyIncomeInput, CandidateUncheckedUpdateWithoutMonthlyIncomeInput>
  }

  export type CandidateUpdateWithoutMonthlyIncomeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUpdateManyWithoutCandidateNestedInput
    responsible?: LegalResponsibleUpdateOneWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateUncheckedUpdateWithoutMonthlyIncomeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    responsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUncheckedUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type LegalResponsibleUpsertWithoutMonthlyIncomeInput = {
    update: XOR<LegalResponsibleUpdateWithoutMonthlyIncomeInput, LegalResponsibleUncheckedUpdateWithoutMonthlyIncomeInput>
    create: XOR<LegalResponsibleCreateWithoutMonthlyIncomeInput, LegalResponsibleUncheckedCreateWithoutMonthlyIncomeInput>
    where?: LegalResponsibleWhereInput
  }

  export type LegalResponsibleUpdateToOneWithWhereWithoutMonthlyIncomeInput = {
    where?: LegalResponsibleWhereInput
    data: XOR<LegalResponsibleUpdateWithoutMonthlyIncomeInput, LegalResponsibleUncheckedUpdateWithoutMonthlyIncomeInput>
  }

  export type LegalResponsibleUpdateWithoutMonthlyIncomeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type LegalResponsibleUncheckedUpdateWithoutMonthlyIncomeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUncheckedUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type FamilyMemberCreateWithoutBankAccountInput = {
    id?: string
    relationship: $Enums.Relationship
    otherRelationship?: string | null
    main_id?: string | null
    fullName: string
    socialName?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    numberOfBirthRegister?: string | null
    bookOfBirthRegister?: string | null
    pageOfBirthRegister?: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    email?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    educationPlace?: $Enums.INSTITUTION_TYPE | null
    institutionName?: string | null
    coursingEducationLevel?: $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: string | null
    turnOfEducation?: $Enums.SHIFT | null
    hasScholarship?: boolean | null
    percentageOfScholarship?: string | null
    monthlyAmount?: string | null
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    benefitedFromCebasScholarship_professional?: boolean | null
    CadUnico?: boolean | null
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    incomeSource?: FamilyMemberCreateincomeSourceInput | $Enums.IncomeSource[]
    application_id: string
    CreditCard?: CreditCardCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutFamilyMemberInput
    Financing?: FinancingCreateNestedManyWithoutFamilyMemberInput
    Loan?: LoanCreateNestedManyWithoutFamilyMemberInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutFamilyMemberInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleCreateNestedManyWithoutFamilyMembersInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutFamilyMemberInput
    candidate?: CandidateCreateNestedOneWithoutFamillyMemberInput
    Medication?: MedicationCreateNestedManyWithoutFamilyMemberInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutFamillyMemberInput
    Declarations?: DeclarationsCreateNestedManyWithoutFamilyMemberInput
  }

  export type FamilyMemberUncheckedCreateWithoutBankAccountInput = {
    id?: string
    relationship: $Enums.Relationship
    otherRelationship?: string | null
    main_id?: string | null
    fullName: string
    socialName?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    numberOfBirthRegister?: string | null
    bookOfBirthRegister?: string | null
    pageOfBirthRegister?: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    email?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    educationPlace?: $Enums.INSTITUTION_TYPE | null
    institutionName?: string | null
    coursingEducationLevel?: $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: string | null
    turnOfEducation?: $Enums.SHIFT | null
    hasScholarship?: boolean | null
    percentageOfScholarship?: string | null
    monthlyAmount?: string | null
    candidate_id?: string | null
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    benefitedFromCebasScholarship_professional?: boolean | null
    CadUnico?: boolean | null
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    incomeSource?: FamilyMemberCreateincomeSourceInput | $Enums.IncomeSource[]
    legalResponsibleId?: string | null
    application_id: string
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutFamilyMemberInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutFamilyMemberInput
    Loan?: LoanUncheckedCreateNestedManyWithoutFamilyMemberInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutFamilyMemberInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedCreateNestedManyWithoutFamilyMembersInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutFamilyMemberInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutFamilyMemberInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutFamilyMemberInput
  }

  export type FamilyMemberCreateOrConnectWithoutBankAccountInput = {
    where: FamilyMemberWhereUniqueInput
    create: XOR<FamilyMemberCreateWithoutBankAccountInput, FamilyMemberUncheckedCreateWithoutBankAccountInput>
  }

  export type CandidateCreateWithoutBankAccountInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseCreateNestedManyWithoutCandidateInput
    Financing?: FinancingCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutCandidateInput
    Loan?: LoanCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleCreateNestedManyWithoutCandidateInput
    responsible?: LegalResponsibleCreateNestedOneWithoutCandidateInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutCandidateInput
    Housing?: HousingCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutCandidateInput
    Medication?: MedicationCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsCreateNestedManyWithoutCandidateInput
  }

  export type CandidateUncheckedCreateWithoutBankAccountInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    responsible_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationUncheckedCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutCandidateInput
    Loan?: LoanUncheckedCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutCandidateInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutCandidateInput
    Housing?: HousingUncheckedCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutCandidateInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type CandidateCreateOrConnectWithoutBankAccountInput = {
    where: CandidateWhereUniqueInput
    create: XOR<CandidateCreateWithoutBankAccountInput, CandidateUncheckedCreateWithoutBankAccountInput>
  }

  export type LegalResponsibleCreateWithoutBankAccountInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateCreateNestedManyWithoutResponsibleInput
    Housing?: HousingCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleUncheckedCreateWithoutBankAccountInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateUncheckedCreateNestedManyWithoutResponsibleInput
    Housing?: HousingUncheckedCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanUncheckedCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleCreateOrConnectWithoutBankAccountInput = {
    where: LegalResponsibleWhereUniqueInput
    create: XOR<LegalResponsibleCreateWithoutBankAccountInput, LegalResponsibleUncheckedCreateWithoutBankAccountInput>
  }

  export type FamilyMemberUpsertWithoutBankAccountInput = {
    update: XOR<FamilyMemberUpdateWithoutBankAccountInput, FamilyMemberUncheckedUpdateWithoutBankAccountInput>
    create: XOR<FamilyMemberCreateWithoutBankAccountInput, FamilyMemberUncheckedCreateWithoutBankAccountInput>
    where?: FamilyMemberWhereInput
  }

  export type FamilyMemberUpdateToOneWithWhereWithoutBankAccountInput = {
    where?: FamilyMemberWhereInput
    data: XOR<FamilyMemberUpdateWithoutBankAccountInput, FamilyMemberUncheckedUpdateWithoutBankAccountInput>
  }

  export type FamilyMemberUpdateWithoutBankAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    application_id?: StringFieldUpdateOperationsInput | string
    CreditCard?: CreditCardUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutFamilyMemberNestedInput
    Financing?: FinancingUpdateManyWithoutFamilyMemberNestedInput
    Loan?: LoanUpdateManyWithoutFamilyMemberNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutFamilyMemberNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUpdateManyWithoutFamilyMembersNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutFamilyMemberNestedInput
    candidate?: CandidateUpdateOneWithoutFamillyMemberNestedInput
    Medication?: MedicationUpdateManyWithoutFamilyMemberNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutFamillyMemberNestedInput
    Declarations?: DeclarationsUpdateManyWithoutFamilyMemberNestedInput
  }

  export type FamilyMemberUncheckedUpdateWithoutBankAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    CreditCard?: CreditCardUncheckedUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutFamilyMemberNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutFamilyMemberNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedUpdateManyWithoutFamilyMembersNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutFamilyMemberNestedInput
  }

  export type CandidateUpsertWithoutBankAccountInput = {
    update: XOR<CandidateUpdateWithoutBankAccountInput, CandidateUncheckedUpdateWithoutBankAccountInput>
    create: XOR<CandidateCreateWithoutBankAccountInput, CandidateUncheckedCreateWithoutBankAccountInput>
    where?: CandidateWhereInput
  }

  export type CandidateUpdateToOneWithWhereWithoutBankAccountInput = {
    where?: CandidateWhereInput
    data: XOR<CandidateUpdateWithoutBankAccountInput, CandidateUncheckedUpdateWithoutBankAccountInput>
  }

  export type CandidateUpdateWithoutBankAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUpdateManyWithoutCandidateNestedInput
    responsible?: LegalResponsibleUpdateOneWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateUncheckedUpdateWithoutBankAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    responsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUncheckedUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type LegalResponsibleUpsertWithoutBankAccountInput = {
    update: XOR<LegalResponsibleUpdateWithoutBankAccountInput, LegalResponsibleUncheckedUpdateWithoutBankAccountInput>
    create: XOR<LegalResponsibleCreateWithoutBankAccountInput, LegalResponsibleUncheckedCreateWithoutBankAccountInput>
    where?: LegalResponsibleWhereInput
  }

  export type LegalResponsibleUpdateToOneWithWhereWithoutBankAccountInput = {
    where?: LegalResponsibleWhereInput
    data: XOR<LegalResponsibleUpdateWithoutBankAccountInput, LegalResponsibleUncheckedUpdateWithoutBankAccountInput>
  }

  export type LegalResponsibleUpdateWithoutBankAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type LegalResponsibleUncheckedUpdateWithoutBankAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUncheckedUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type CandidateCreateWithoutExpenseInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardCreateNestedManyWithoutCandidateInput
    Financing?: FinancingCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutCandidateInput
    Loan?: LoanCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleCreateNestedManyWithoutCandidateInput
    responsible?: LegalResponsibleCreateNestedOneWithoutCandidateInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutCandidateInput
    Housing?: HousingCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutCandidateInput
    Medication?: MedicationCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsCreateNestedManyWithoutCandidateInput
  }

  export type CandidateUncheckedCreateWithoutExpenseInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    responsible_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationUncheckedCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutCandidateInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutCandidateInput
    Loan?: LoanUncheckedCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutCandidateInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutCandidateInput
    Housing?: HousingUncheckedCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutCandidateInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type CandidateCreateOrConnectWithoutExpenseInput = {
    where: CandidateWhereUniqueInput
    create: XOR<CandidateCreateWithoutExpenseInput, CandidateUncheckedCreateWithoutExpenseInput>
  }

  export type LegalResponsibleCreateWithoutExpenseInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateCreateNestedManyWithoutResponsibleInput
    Housing?: HousingCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleUncheckedCreateWithoutExpenseInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateUncheckedCreateNestedManyWithoutResponsibleInput
    Housing?: HousingUncheckedCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanUncheckedCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleCreateOrConnectWithoutExpenseInput = {
    where: LegalResponsibleWhereUniqueInput
    create: XOR<LegalResponsibleCreateWithoutExpenseInput, LegalResponsibleUncheckedCreateWithoutExpenseInput>
  }

  export type CandidateUpsertWithoutExpenseInput = {
    update: XOR<CandidateUpdateWithoutExpenseInput, CandidateUncheckedUpdateWithoutExpenseInput>
    create: XOR<CandidateCreateWithoutExpenseInput, CandidateUncheckedCreateWithoutExpenseInput>
    where?: CandidateWhereInput
  }

  export type CandidateUpdateToOneWithWhereWithoutExpenseInput = {
    where?: CandidateWhereInput
    data: XOR<CandidateUpdateWithoutExpenseInput, CandidateUncheckedUpdateWithoutExpenseInput>
  }

  export type CandidateUpdateWithoutExpenseInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUpdateManyWithoutCandidateNestedInput
    responsible?: LegalResponsibleUpdateOneWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateUncheckedUpdateWithoutExpenseInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    responsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUncheckedUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type LegalResponsibleUpsertWithoutExpenseInput = {
    update: XOR<LegalResponsibleUpdateWithoutExpenseInput, LegalResponsibleUncheckedUpdateWithoutExpenseInput>
    create: XOR<LegalResponsibleCreateWithoutExpenseInput, LegalResponsibleUncheckedCreateWithoutExpenseInput>
    where?: LegalResponsibleWhereInput
  }

  export type LegalResponsibleUpdateToOneWithWhereWithoutExpenseInput = {
    where?: LegalResponsibleWhereInput
    data: XOR<LegalResponsibleUpdateWithoutExpenseInput, LegalResponsibleUncheckedUpdateWithoutExpenseInput>
  }

  export type LegalResponsibleUpdateWithoutExpenseInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type LegalResponsibleUncheckedUpdateWithoutExpenseInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUncheckedUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type CandidateCreateWithoutLoanInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseCreateNestedManyWithoutCandidateInput
    Financing?: FinancingCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleCreateNestedManyWithoutCandidateInput
    responsible?: LegalResponsibleCreateNestedOneWithoutCandidateInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutCandidateInput
    Housing?: HousingCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutCandidateInput
    Medication?: MedicationCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsCreateNestedManyWithoutCandidateInput
  }

  export type CandidateUncheckedCreateWithoutLoanInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    responsible_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationUncheckedCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutCandidateInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutCandidateInput
    Housing?: HousingUncheckedCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutCandidateInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type CandidateCreateOrConnectWithoutLoanInput = {
    where: CandidateWhereUniqueInput
    create: XOR<CandidateCreateWithoutLoanInput, CandidateUncheckedCreateWithoutLoanInput>
  }

  export type FamilyMemberCreateWithoutLoanInput = {
    id?: string
    relationship: $Enums.Relationship
    otherRelationship?: string | null
    main_id?: string | null
    fullName: string
    socialName?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    numberOfBirthRegister?: string | null
    bookOfBirthRegister?: string | null
    pageOfBirthRegister?: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    email?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    educationPlace?: $Enums.INSTITUTION_TYPE | null
    institutionName?: string | null
    coursingEducationLevel?: $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: string | null
    turnOfEducation?: $Enums.SHIFT | null
    hasScholarship?: boolean | null
    percentageOfScholarship?: string | null
    monthlyAmount?: string | null
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    benefitedFromCebasScholarship_professional?: boolean | null
    CadUnico?: boolean | null
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    incomeSource?: FamilyMemberCreateincomeSourceInput | $Enums.IncomeSource[]
    application_id: string
    CreditCard?: CreditCardCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutFamilyMemberInput
    Financing?: FinancingCreateNestedManyWithoutFamilyMemberInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutFamilyMemberInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleCreateNestedManyWithoutFamilyMembersInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutFamilyMemberInput
    candidate?: CandidateCreateNestedOneWithoutFamillyMemberInput
    Medication?: MedicationCreateNestedManyWithoutFamilyMemberInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutFamillyMemberInput
    BankAccount?: BankAccountCreateNestedManyWithoutFamilyMemberInput
    Declarations?: DeclarationsCreateNestedManyWithoutFamilyMemberInput
  }

  export type FamilyMemberUncheckedCreateWithoutLoanInput = {
    id?: string
    relationship: $Enums.Relationship
    otherRelationship?: string | null
    main_id?: string | null
    fullName: string
    socialName?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    numberOfBirthRegister?: string | null
    bookOfBirthRegister?: string | null
    pageOfBirthRegister?: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    email?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    educationPlace?: $Enums.INSTITUTION_TYPE | null
    institutionName?: string | null
    coursingEducationLevel?: $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: string | null
    turnOfEducation?: $Enums.SHIFT | null
    hasScholarship?: boolean | null
    percentageOfScholarship?: string | null
    monthlyAmount?: string | null
    candidate_id?: string | null
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    benefitedFromCebasScholarship_professional?: boolean | null
    CadUnico?: boolean | null
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    incomeSource?: FamilyMemberCreateincomeSourceInput | $Enums.IncomeSource[]
    legalResponsibleId?: string | null
    application_id: string
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutFamilyMemberInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutFamilyMemberInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutFamilyMemberInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedCreateNestedManyWithoutFamilyMembersInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutFamilyMemberInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutFamilyMemberInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutFamilyMemberInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutFamilyMemberInput
  }

  export type FamilyMemberCreateOrConnectWithoutLoanInput = {
    where: FamilyMemberWhereUniqueInput
    create: XOR<FamilyMemberCreateWithoutLoanInput, FamilyMemberUncheckedCreateWithoutLoanInput>
  }

  export type LegalResponsibleCreateWithoutLoanInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateCreateNestedManyWithoutResponsibleInput
    Housing?: HousingCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleUncheckedCreateWithoutLoanInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateUncheckedCreateNestedManyWithoutResponsibleInput
    Housing?: HousingUncheckedCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleCreateOrConnectWithoutLoanInput = {
    where: LegalResponsibleWhereUniqueInput
    create: XOR<LegalResponsibleCreateWithoutLoanInput, LegalResponsibleUncheckedCreateWithoutLoanInput>
  }

  export type CandidateUpsertWithoutLoanInput = {
    update: XOR<CandidateUpdateWithoutLoanInput, CandidateUncheckedUpdateWithoutLoanInput>
    create: XOR<CandidateCreateWithoutLoanInput, CandidateUncheckedCreateWithoutLoanInput>
    where?: CandidateWhereInput
  }

  export type CandidateUpdateToOneWithWhereWithoutLoanInput = {
    where?: CandidateWhereInput
    data: XOR<CandidateUpdateWithoutLoanInput, CandidateUncheckedUpdateWithoutLoanInput>
  }

  export type CandidateUpdateWithoutLoanInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUpdateManyWithoutCandidateNestedInput
    responsible?: LegalResponsibleUpdateOneWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateUncheckedUpdateWithoutLoanInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    responsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUncheckedUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type FamilyMemberUpsertWithoutLoanInput = {
    update: XOR<FamilyMemberUpdateWithoutLoanInput, FamilyMemberUncheckedUpdateWithoutLoanInput>
    create: XOR<FamilyMemberCreateWithoutLoanInput, FamilyMemberUncheckedCreateWithoutLoanInput>
    where?: FamilyMemberWhereInput
  }

  export type FamilyMemberUpdateToOneWithWhereWithoutLoanInput = {
    where?: FamilyMemberWhereInput
    data: XOR<FamilyMemberUpdateWithoutLoanInput, FamilyMemberUncheckedUpdateWithoutLoanInput>
  }

  export type FamilyMemberUpdateWithoutLoanInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    application_id?: StringFieldUpdateOperationsInput | string
    CreditCard?: CreditCardUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutFamilyMemberNestedInput
    Financing?: FinancingUpdateManyWithoutFamilyMemberNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutFamilyMemberNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUpdateManyWithoutFamilyMembersNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutFamilyMemberNestedInput
    candidate?: CandidateUpdateOneWithoutFamillyMemberNestedInput
    Medication?: MedicationUpdateManyWithoutFamilyMemberNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutFamillyMemberNestedInput
    BankAccount?: BankAccountUpdateManyWithoutFamilyMemberNestedInput
    Declarations?: DeclarationsUpdateManyWithoutFamilyMemberNestedInput
  }

  export type FamilyMemberUncheckedUpdateWithoutLoanInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    CreditCard?: CreditCardUncheckedUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutFamilyMemberNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutFamilyMemberNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedUpdateManyWithoutFamilyMembersNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutFamilyMemberNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutFamilyMemberNestedInput
  }

  export type LegalResponsibleUpsertWithoutLoanInput = {
    update: XOR<LegalResponsibleUpdateWithoutLoanInput, LegalResponsibleUncheckedUpdateWithoutLoanInput>
    create: XOR<LegalResponsibleCreateWithoutLoanInput, LegalResponsibleUncheckedCreateWithoutLoanInput>
    where?: LegalResponsibleWhereInput
  }

  export type LegalResponsibleUpdateToOneWithWhereWithoutLoanInput = {
    where?: LegalResponsibleWhereInput
    data: XOR<LegalResponsibleUpdateWithoutLoanInput, LegalResponsibleUncheckedUpdateWithoutLoanInput>
  }

  export type LegalResponsibleUpdateWithoutLoanInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type LegalResponsibleUncheckedUpdateWithoutLoanInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUncheckedUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type CandidateCreateWithoutFinancingInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutCandidateInput
    Loan?: LoanCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleCreateNestedManyWithoutCandidateInput
    responsible?: LegalResponsibleCreateNestedOneWithoutCandidateInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutCandidateInput
    Housing?: HousingCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutCandidateInput
    Medication?: MedicationCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsCreateNestedManyWithoutCandidateInput
  }

  export type CandidateUncheckedCreateWithoutFinancingInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    responsible_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationUncheckedCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutCandidateInput
    Loan?: LoanUncheckedCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutCandidateInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutCandidateInput
    Housing?: HousingUncheckedCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutCandidateInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type CandidateCreateOrConnectWithoutFinancingInput = {
    where: CandidateWhereUniqueInput
    create: XOR<CandidateCreateWithoutFinancingInput, CandidateUncheckedCreateWithoutFinancingInput>
  }

  export type FamilyMemberCreateWithoutFinancingInput = {
    id?: string
    relationship: $Enums.Relationship
    otherRelationship?: string | null
    main_id?: string | null
    fullName: string
    socialName?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    numberOfBirthRegister?: string | null
    bookOfBirthRegister?: string | null
    pageOfBirthRegister?: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    email?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    educationPlace?: $Enums.INSTITUTION_TYPE | null
    institutionName?: string | null
    coursingEducationLevel?: $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: string | null
    turnOfEducation?: $Enums.SHIFT | null
    hasScholarship?: boolean | null
    percentageOfScholarship?: string | null
    monthlyAmount?: string | null
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    benefitedFromCebasScholarship_professional?: boolean | null
    CadUnico?: boolean | null
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    incomeSource?: FamilyMemberCreateincomeSourceInput | $Enums.IncomeSource[]
    application_id: string
    CreditCard?: CreditCardCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutFamilyMemberInput
    Loan?: LoanCreateNestedManyWithoutFamilyMemberInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutFamilyMemberInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleCreateNestedManyWithoutFamilyMembersInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutFamilyMemberInput
    candidate?: CandidateCreateNestedOneWithoutFamillyMemberInput
    Medication?: MedicationCreateNestedManyWithoutFamilyMemberInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutFamillyMemberInput
    BankAccount?: BankAccountCreateNestedManyWithoutFamilyMemberInput
    Declarations?: DeclarationsCreateNestedManyWithoutFamilyMemberInput
  }

  export type FamilyMemberUncheckedCreateWithoutFinancingInput = {
    id?: string
    relationship: $Enums.Relationship
    otherRelationship?: string | null
    main_id?: string | null
    fullName: string
    socialName?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    numberOfBirthRegister?: string | null
    bookOfBirthRegister?: string | null
    pageOfBirthRegister?: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    email?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    educationPlace?: $Enums.INSTITUTION_TYPE | null
    institutionName?: string | null
    coursingEducationLevel?: $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: string | null
    turnOfEducation?: $Enums.SHIFT | null
    hasScholarship?: boolean | null
    percentageOfScholarship?: string | null
    monthlyAmount?: string | null
    candidate_id?: string | null
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    benefitedFromCebasScholarship_professional?: boolean | null
    CadUnico?: boolean | null
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    incomeSource?: FamilyMemberCreateincomeSourceInput | $Enums.IncomeSource[]
    legalResponsibleId?: string | null
    application_id: string
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutFamilyMemberInput
    Loan?: LoanUncheckedCreateNestedManyWithoutFamilyMemberInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutFamilyMemberInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedCreateNestedManyWithoutFamilyMembersInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutFamilyMemberInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutFamilyMemberInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutFamilyMemberInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutFamilyMemberInput
  }

  export type FamilyMemberCreateOrConnectWithoutFinancingInput = {
    where: FamilyMemberWhereUniqueInput
    create: XOR<FamilyMemberCreateWithoutFinancingInput, FamilyMemberUncheckedCreateWithoutFinancingInput>
  }

  export type LegalResponsibleCreateWithoutFinancingInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateCreateNestedManyWithoutResponsibleInput
    Housing?: HousingCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleUncheckedCreateWithoutFinancingInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateUncheckedCreateNestedManyWithoutResponsibleInput
    Housing?: HousingUncheckedCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanUncheckedCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleCreateOrConnectWithoutFinancingInput = {
    where: LegalResponsibleWhereUniqueInput
    create: XOR<LegalResponsibleCreateWithoutFinancingInput, LegalResponsibleUncheckedCreateWithoutFinancingInput>
  }

  export type CandidateUpsertWithoutFinancingInput = {
    update: XOR<CandidateUpdateWithoutFinancingInput, CandidateUncheckedUpdateWithoutFinancingInput>
    create: XOR<CandidateCreateWithoutFinancingInput, CandidateUncheckedCreateWithoutFinancingInput>
    where?: CandidateWhereInput
  }

  export type CandidateUpdateToOneWithWhereWithoutFinancingInput = {
    where?: CandidateWhereInput
    data: XOR<CandidateUpdateWithoutFinancingInput, CandidateUncheckedUpdateWithoutFinancingInput>
  }

  export type CandidateUpdateWithoutFinancingInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUpdateManyWithoutCandidateNestedInput
    responsible?: LegalResponsibleUpdateOneWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateUncheckedUpdateWithoutFinancingInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    responsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUncheckedUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type FamilyMemberUpsertWithoutFinancingInput = {
    update: XOR<FamilyMemberUpdateWithoutFinancingInput, FamilyMemberUncheckedUpdateWithoutFinancingInput>
    create: XOR<FamilyMemberCreateWithoutFinancingInput, FamilyMemberUncheckedCreateWithoutFinancingInput>
    where?: FamilyMemberWhereInput
  }

  export type FamilyMemberUpdateToOneWithWhereWithoutFinancingInput = {
    where?: FamilyMemberWhereInput
    data: XOR<FamilyMemberUpdateWithoutFinancingInput, FamilyMemberUncheckedUpdateWithoutFinancingInput>
  }

  export type FamilyMemberUpdateWithoutFinancingInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    application_id?: StringFieldUpdateOperationsInput | string
    CreditCard?: CreditCardUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutFamilyMemberNestedInput
    Loan?: LoanUpdateManyWithoutFamilyMemberNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutFamilyMemberNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUpdateManyWithoutFamilyMembersNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutFamilyMemberNestedInput
    candidate?: CandidateUpdateOneWithoutFamillyMemberNestedInput
    Medication?: MedicationUpdateManyWithoutFamilyMemberNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutFamillyMemberNestedInput
    BankAccount?: BankAccountUpdateManyWithoutFamilyMemberNestedInput
    Declarations?: DeclarationsUpdateManyWithoutFamilyMemberNestedInput
  }

  export type FamilyMemberUncheckedUpdateWithoutFinancingInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    CreditCard?: CreditCardUncheckedUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutFamilyMemberNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutFamilyMemberNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedUpdateManyWithoutFamilyMembersNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutFamilyMemberNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutFamilyMemberNestedInput
  }

  export type LegalResponsibleUpsertWithoutFinancingInput = {
    update: XOR<LegalResponsibleUpdateWithoutFinancingInput, LegalResponsibleUncheckedUpdateWithoutFinancingInput>
    create: XOR<LegalResponsibleCreateWithoutFinancingInput, LegalResponsibleUncheckedCreateWithoutFinancingInput>
    where?: LegalResponsibleWhereInput
  }

  export type LegalResponsibleUpdateToOneWithWhereWithoutFinancingInput = {
    where?: LegalResponsibleWhereInput
    data: XOR<LegalResponsibleUpdateWithoutFinancingInput, LegalResponsibleUncheckedUpdateWithoutFinancingInput>
  }

  export type LegalResponsibleUpdateWithoutFinancingInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type LegalResponsibleUncheckedUpdateWithoutFinancingInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUncheckedUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type CandidateCreateWithoutCreditCardInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseCreateNestedManyWithoutCandidateInput
    Financing?: FinancingCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutCandidateInput
    Loan?: LoanCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleCreateNestedManyWithoutCandidateInput
    responsible?: LegalResponsibleCreateNestedOneWithoutCandidateInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutCandidateInput
    Housing?: HousingCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutCandidateInput
    Medication?: MedicationCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsCreateNestedManyWithoutCandidateInput
  }

  export type CandidateUncheckedCreateWithoutCreditCardInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    responsible_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationUncheckedCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutCandidateInput
    Loan?: LoanUncheckedCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutCandidateInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutCandidateInput
    Housing?: HousingUncheckedCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutCandidateInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type CandidateCreateOrConnectWithoutCreditCardInput = {
    where: CandidateWhereUniqueInput
    create: XOR<CandidateCreateWithoutCreditCardInput, CandidateUncheckedCreateWithoutCreditCardInput>
  }

  export type FamilyMemberCreateWithoutCreditCardInput = {
    id?: string
    relationship: $Enums.Relationship
    otherRelationship?: string | null
    main_id?: string | null
    fullName: string
    socialName?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    numberOfBirthRegister?: string | null
    bookOfBirthRegister?: string | null
    pageOfBirthRegister?: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    email?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    educationPlace?: $Enums.INSTITUTION_TYPE | null
    institutionName?: string | null
    coursingEducationLevel?: $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: string | null
    turnOfEducation?: $Enums.SHIFT | null
    hasScholarship?: boolean | null
    percentageOfScholarship?: string | null
    monthlyAmount?: string | null
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    benefitedFromCebasScholarship_professional?: boolean | null
    CadUnico?: boolean | null
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    incomeSource?: FamilyMemberCreateincomeSourceInput | $Enums.IncomeSource[]
    application_id: string
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutFamilyMemberInput
    Financing?: FinancingCreateNestedManyWithoutFamilyMemberInput
    Loan?: LoanCreateNestedManyWithoutFamilyMemberInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutFamilyMemberInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleCreateNestedManyWithoutFamilyMembersInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutFamilyMemberInput
    candidate?: CandidateCreateNestedOneWithoutFamillyMemberInput
    Medication?: MedicationCreateNestedManyWithoutFamilyMemberInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutFamillyMemberInput
    BankAccount?: BankAccountCreateNestedManyWithoutFamilyMemberInput
    Declarations?: DeclarationsCreateNestedManyWithoutFamilyMemberInput
  }

  export type FamilyMemberUncheckedCreateWithoutCreditCardInput = {
    id?: string
    relationship: $Enums.Relationship
    otherRelationship?: string | null
    main_id?: string | null
    fullName: string
    socialName?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    numberOfBirthRegister?: string | null
    bookOfBirthRegister?: string | null
    pageOfBirthRegister?: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    email?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    educationPlace?: $Enums.INSTITUTION_TYPE | null
    institutionName?: string | null
    coursingEducationLevel?: $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: string | null
    turnOfEducation?: $Enums.SHIFT | null
    hasScholarship?: boolean | null
    percentageOfScholarship?: string | null
    monthlyAmount?: string | null
    candidate_id?: string | null
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    benefitedFromCebasScholarship_professional?: boolean | null
    CadUnico?: boolean | null
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    incomeSource?: FamilyMemberCreateincomeSourceInput | $Enums.IncomeSource[]
    legalResponsibleId?: string | null
    application_id: string
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutFamilyMemberInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutFamilyMemberInput
    Loan?: LoanUncheckedCreateNestedManyWithoutFamilyMemberInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutFamilyMemberInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedCreateNestedManyWithoutFamilyMembersInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutFamilyMemberInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutFamilyMemberInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutFamilyMemberInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutFamilyMemberInput
  }

  export type FamilyMemberCreateOrConnectWithoutCreditCardInput = {
    where: FamilyMemberWhereUniqueInput
    create: XOR<FamilyMemberCreateWithoutCreditCardInput, FamilyMemberUncheckedCreateWithoutCreditCardInput>
  }

  export type LegalResponsibleCreateWithoutCreditCardInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateCreateNestedManyWithoutResponsibleInput
    Housing?: HousingCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleUncheckedCreateWithoutCreditCardInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateUncheckedCreateNestedManyWithoutResponsibleInput
    Housing?: HousingUncheckedCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanUncheckedCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleCreateOrConnectWithoutCreditCardInput = {
    where: LegalResponsibleWhereUniqueInput
    create: XOR<LegalResponsibleCreateWithoutCreditCardInput, LegalResponsibleUncheckedCreateWithoutCreditCardInput>
  }

  export type CandidateUpsertWithoutCreditCardInput = {
    update: XOR<CandidateUpdateWithoutCreditCardInput, CandidateUncheckedUpdateWithoutCreditCardInput>
    create: XOR<CandidateCreateWithoutCreditCardInput, CandidateUncheckedCreateWithoutCreditCardInput>
    where?: CandidateWhereInput
  }

  export type CandidateUpdateToOneWithWhereWithoutCreditCardInput = {
    where?: CandidateWhereInput
    data: XOR<CandidateUpdateWithoutCreditCardInput, CandidateUncheckedUpdateWithoutCreditCardInput>
  }

  export type CandidateUpdateWithoutCreditCardInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUpdateManyWithoutCandidateNestedInput
    responsible?: LegalResponsibleUpdateOneWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateUncheckedUpdateWithoutCreditCardInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    responsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUncheckedUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type FamilyMemberUpsertWithoutCreditCardInput = {
    update: XOR<FamilyMemberUpdateWithoutCreditCardInput, FamilyMemberUncheckedUpdateWithoutCreditCardInput>
    create: XOR<FamilyMemberCreateWithoutCreditCardInput, FamilyMemberUncheckedCreateWithoutCreditCardInput>
    where?: FamilyMemberWhereInput
  }

  export type FamilyMemberUpdateToOneWithWhereWithoutCreditCardInput = {
    where?: FamilyMemberWhereInput
    data: XOR<FamilyMemberUpdateWithoutCreditCardInput, FamilyMemberUncheckedUpdateWithoutCreditCardInput>
  }

  export type FamilyMemberUpdateWithoutCreditCardInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    application_id?: StringFieldUpdateOperationsInput | string
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutFamilyMemberNestedInput
    Financing?: FinancingUpdateManyWithoutFamilyMemberNestedInput
    Loan?: LoanUpdateManyWithoutFamilyMemberNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutFamilyMemberNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUpdateManyWithoutFamilyMembersNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutFamilyMemberNestedInput
    candidate?: CandidateUpdateOneWithoutFamillyMemberNestedInput
    Medication?: MedicationUpdateManyWithoutFamilyMemberNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutFamillyMemberNestedInput
    BankAccount?: BankAccountUpdateManyWithoutFamilyMemberNestedInput
    Declarations?: DeclarationsUpdateManyWithoutFamilyMemberNestedInput
  }

  export type FamilyMemberUncheckedUpdateWithoutCreditCardInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutFamilyMemberNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutFamilyMemberNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedUpdateManyWithoutFamilyMembersNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutFamilyMemberNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutFamilyMemberNestedInput
  }

  export type LegalResponsibleUpsertWithoutCreditCardInput = {
    update: XOR<LegalResponsibleUpdateWithoutCreditCardInput, LegalResponsibleUncheckedUpdateWithoutCreditCardInput>
    create: XOR<LegalResponsibleCreateWithoutCreditCardInput, LegalResponsibleUncheckedCreateWithoutCreditCardInput>
    where?: LegalResponsibleWhereInput
  }

  export type LegalResponsibleUpdateToOneWithWhereWithoutCreditCardInput = {
    where?: LegalResponsibleWhereInput
    data: XOR<LegalResponsibleUpdateWithoutCreditCardInput, LegalResponsibleUncheckedUpdateWithoutCreditCardInput>
  }

  export type LegalResponsibleUpdateWithoutCreditCardInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type LegalResponsibleUncheckedUpdateWithoutCreditCardInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUncheckedUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type CandidateCreateWithoutOtherExpenseInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseCreateNestedManyWithoutCandidateInput
    Financing?: FinancingCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutCandidateInput
    Loan?: LoanCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleCreateNestedManyWithoutCandidateInput
    responsible?: LegalResponsibleCreateNestedOneWithoutCandidateInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutCandidateInput
    Housing?: HousingCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutCandidateInput
    Medication?: MedicationCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsCreateNestedManyWithoutCandidateInput
  }

  export type CandidateUncheckedCreateWithoutOtherExpenseInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    responsible_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationUncheckedCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutCandidateInput
    Loan?: LoanUncheckedCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutCandidateInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutCandidateInput
    Housing?: HousingUncheckedCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutCandidateInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type CandidateCreateOrConnectWithoutOtherExpenseInput = {
    where: CandidateWhereUniqueInput
    create: XOR<CandidateCreateWithoutOtherExpenseInput, CandidateUncheckedCreateWithoutOtherExpenseInput>
  }

  export type FamilyMemberCreateWithoutOtherExpenseInput = {
    id?: string
    relationship: $Enums.Relationship
    otherRelationship?: string | null
    main_id?: string | null
    fullName: string
    socialName?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    numberOfBirthRegister?: string | null
    bookOfBirthRegister?: string | null
    pageOfBirthRegister?: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    email?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    educationPlace?: $Enums.INSTITUTION_TYPE | null
    institutionName?: string | null
    coursingEducationLevel?: $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: string | null
    turnOfEducation?: $Enums.SHIFT | null
    hasScholarship?: boolean | null
    percentageOfScholarship?: string | null
    monthlyAmount?: string | null
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    benefitedFromCebasScholarship_professional?: boolean | null
    CadUnico?: boolean | null
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    incomeSource?: FamilyMemberCreateincomeSourceInput | $Enums.IncomeSource[]
    application_id: string
    CreditCard?: CreditCardCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutFamilyMemberInput
    Financing?: FinancingCreateNestedManyWithoutFamilyMemberInput
    Loan?: LoanCreateNestedManyWithoutFamilyMemberInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleCreateNestedManyWithoutFamilyMembersInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutFamilyMemberInput
    candidate?: CandidateCreateNestedOneWithoutFamillyMemberInput
    Medication?: MedicationCreateNestedManyWithoutFamilyMemberInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutFamillyMemberInput
    BankAccount?: BankAccountCreateNestedManyWithoutFamilyMemberInput
    Declarations?: DeclarationsCreateNestedManyWithoutFamilyMemberInput
  }

  export type FamilyMemberUncheckedCreateWithoutOtherExpenseInput = {
    id?: string
    relationship: $Enums.Relationship
    otherRelationship?: string | null
    main_id?: string | null
    fullName: string
    socialName?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    numberOfBirthRegister?: string | null
    bookOfBirthRegister?: string | null
    pageOfBirthRegister?: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    email?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    educationPlace?: $Enums.INSTITUTION_TYPE | null
    institutionName?: string | null
    coursingEducationLevel?: $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: string | null
    turnOfEducation?: $Enums.SHIFT | null
    hasScholarship?: boolean | null
    percentageOfScholarship?: string | null
    monthlyAmount?: string | null
    candidate_id?: string | null
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    benefitedFromCebasScholarship_professional?: boolean | null
    CadUnico?: boolean | null
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    incomeSource?: FamilyMemberCreateincomeSourceInput | $Enums.IncomeSource[]
    legalResponsibleId?: string | null
    application_id: string
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutFamilyMemberInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutFamilyMemberInput
    Loan?: LoanUncheckedCreateNestedManyWithoutFamilyMemberInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedCreateNestedManyWithoutFamilyMembersInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutFamilyMemberInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutFamilyMemberInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutFamilyMemberInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutFamilyMemberInput
  }

  export type FamilyMemberCreateOrConnectWithoutOtherExpenseInput = {
    where: FamilyMemberWhereUniqueInput
    create: XOR<FamilyMemberCreateWithoutOtherExpenseInput, FamilyMemberUncheckedCreateWithoutOtherExpenseInput>
  }

  export type LegalResponsibleCreateWithoutOtherExpenseInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateCreateNestedManyWithoutResponsibleInput
    Housing?: HousingCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleUncheckedCreateWithoutOtherExpenseInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateUncheckedCreateNestedManyWithoutResponsibleInput
    Housing?: HousingUncheckedCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleCreateOrConnectWithoutOtherExpenseInput = {
    where: LegalResponsibleWhereUniqueInput
    create: XOR<LegalResponsibleCreateWithoutOtherExpenseInput, LegalResponsibleUncheckedCreateWithoutOtherExpenseInput>
  }

  export type CandidateUpsertWithoutOtherExpenseInput = {
    update: XOR<CandidateUpdateWithoutOtherExpenseInput, CandidateUncheckedUpdateWithoutOtherExpenseInput>
    create: XOR<CandidateCreateWithoutOtherExpenseInput, CandidateUncheckedCreateWithoutOtherExpenseInput>
    where?: CandidateWhereInput
  }

  export type CandidateUpdateToOneWithWhereWithoutOtherExpenseInput = {
    where?: CandidateWhereInput
    data: XOR<CandidateUpdateWithoutOtherExpenseInput, CandidateUncheckedUpdateWithoutOtherExpenseInput>
  }

  export type CandidateUpdateWithoutOtherExpenseInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUpdateManyWithoutCandidateNestedInput
    responsible?: LegalResponsibleUpdateOneWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateUncheckedUpdateWithoutOtherExpenseInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    responsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUncheckedUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type FamilyMemberUpsertWithoutOtherExpenseInput = {
    update: XOR<FamilyMemberUpdateWithoutOtherExpenseInput, FamilyMemberUncheckedUpdateWithoutOtherExpenseInput>
    create: XOR<FamilyMemberCreateWithoutOtherExpenseInput, FamilyMemberUncheckedCreateWithoutOtherExpenseInput>
    where?: FamilyMemberWhereInput
  }

  export type FamilyMemberUpdateToOneWithWhereWithoutOtherExpenseInput = {
    where?: FamilyMemberWhereInput
    data: XOR<FamilyMemberUpdateWithoutOtherExpenseInput, FamilyMemberUncheckedUpdateWithoutOtherExpenseInput>
  }

  export type FamilyMemberUpdateWithoutOtherExpenseInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    application_id?: StringFieldUpdateOperationsInput | string
    CreditCard?: CreditCardUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutFamilyMemberNestedInput
    Financing?: FinancingUpdateManyWithoutFamilyMemberNestedInput
    Loan?: LoanUpdateManyWithoutFamilyMemberNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUpdateManyWithoutFamilyMembersNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutFamilyMemberNestedInput
    candidate?: CandidateUpdateOneWithoutFamillyMemberNestedInput
    Medication?: MedicationUpdateManyWithoutFamilyMemberNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutFamillyMemberNestedInput
    BankAccount?: BankAccountUpdateManyWithoutFamilyMemberNestedInput
    Declarations?: DeclarationsUpdateManyWithoutFamilyMemberNestedInput
  }

  export type FamilyMemberUncheckedUpdateWithoutOtherExpenseInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    CreditCard?: CreditCardUncheckedUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutFamilyMemberNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedUpdateManyWithoutFamilyMembersNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutFamilyMemberNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutFamilyMemberNestedInput
  }

  export type LegalResponsibleUpsertWithoutOtherExpenseInput = {
    update: XOR<LegalResponsibleUpdateWithoutOtherExpenseInput, LegalResponsibleUncheckedUpdateWithoutOtherExpenseInput>
    create: XOR<LegalResponsibleCreateWithoutOtherExpenseInput, LegalResponsibleUncheckedCreateWithoutOtherExpenseInput>
    where?: LegalResponsibleWhereInput
  }

  export type LegalResponsibleUpdateToOneWithWhereWithoutOtherExpenseInput = {
    where?: LegalResponsibleWhereInput
    data: XOR<LegalResponsibleUpdateWithoutOtherExpenseInput, LegalResponsibleUncheckedUpdateWithoutOtherExpenseInput>
  }

  export type LegalResponsibleUpdateWithoutOtherExpenseInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type LegalResponsibleUncheckedUpdateWithoutOtherExpenseInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUncheckedUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type FamilyMemberCreateWithoutFamilyMemberDiseaseInput = {
    id?: string
    relationship: $Enums.Relationship
    otherRelationship?: string | null
    main_id?: string | null
    fullName: string
    socialName?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    numberOfBirthRegister?: string | null
    bookOfBirthRegister?: string | null
    pageOfBirthRegister?: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    email?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    educationPlace?: $Enums.INSTITUTION_TYPE | null
    institutionName?: string | null
    coursingEducationLevel?: $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: string | null
    turnOfEducation?: $Enums.SHIFT | null
    hasScholarship?: boolean | null
    percentageOfScholarship?: string | null
    monthlyAmount?: string | null
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    benefitedFromCebasScholarship_professional?: boolean | null
    CadUnico?: boolean | null
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    incomeSource?: FamilyMemberCreateincomeSourceInput | $Enums.IncomeSource[]
    application_id: string
    CreditCard?: CreditCardCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutFamilyMemberInput
    Financing?: FinancingCreateNestedManyWithoutFamilyMemberInput
    Loan?: LoanCreateNestedManyWithoutFamilyMemberInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutFamilyMemberInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleCreateNestedManyWithoutFamilyMembersInput
    candidate?: CandidateCreateNestedOneWithoutFamillyMemberInput
    Medication?: MedicationCreateNestedManyWithoutFamilyMemberInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutFamillyMemberInput
    BankAccount?: BankAccountCreateNestedManyWithoutFamilyMemberInput
    Declarations?: DeclarationsCreateNestedManyWithoutFamilyMemberInput
  }

  export type FamilyMemberUncheckedCreateWithoutFamilyMemberDiseaseInput = {
    id?: string
    relationship: $Enums.Relationship
    otherRelationship?: string | null
    main_id?: string | null
    fullName: string
    socialName?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    numberOfBirthRegister?: string | null
    bookOfBirthRegister?: string | null
    pageOfBirthRegister?: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    email?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    educationPlace?: $Enums.INSTITUTION_TYPE | null
    institutionName?: string | null
    coursingEducationLevel?: $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: string | null
    turnOfEducation?: $Enums.SHIFT | null
    hasScholarship?: boolean | null
    percentageOfScholarship?: string | null
    monthlyAmount?: string | null
    candidate_id?: string | null
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    benefitedFromCebasScholarship_professional?: boolean | null
    CadUnico?: boolean | null
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    incomeSource?: FamilyMemberCreateincomeSourceInput | $Enums.IncomeSource[]
    legalResponsibleId?: string | null
    application_id: string
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutFamilyMemberInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutFamilyMemberInput
    Loan?: LoanUncheckedCreateNestedManyWithoutFamilyMemberInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutFamilyMemberInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedCreateNestedManyWithoutFamilyMembersInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutFamilyMemberInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutFamilyMemberInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutFamilyMemberInput
  }

  export type FamilyMemberCreateOrConnectWithoutFamilyMemberDiseaseInput = {
    where: FamilyMemberWhereUniqueInput
    create: XOR<FamilyMemberCreateWithoutFamilyMemberDiseaseInput, FamilyMemberUncheckedCreateWithoutFamilyMemberDiseaseInput>
  }

  export type CandidateCreateWithoutFamilyMemberDiseaseInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseCreateNestedManyWithoutCandidateInput
    Financing?: FinancingCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutCandidateInput
    Loan?: LoanCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleCreateNestedManyWithoutCandidateInput
    responsible?: LegalResponsibleCreateNestedOneWithoutCandidateInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutCandidateInput
    Housing?: HousingCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutCandidateInput
    Medication?: MedicationCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsCreateNestedManyWithoutCandidateInput
  }

  export type CandidateUncheckedCreateWithoutFamilyMemberDiseaseInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    responsible_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationUncheckedCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutCandidateInput
    Loan?: LoanUncheckedCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutCandidateInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutCandidateInput
    Housing?: HousingUncheckedCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutCandidateInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type CandidateCreateOrConnectWithoutFamilyMemberDiseaseInput = {
    where: CandidateWhereUniqueInput
    create: XOR<CandidateCreateWithoutFamilyMemberDiseaseInput, CandidateUncheckedCreateWithoutFamilyMemberDiseaseInput>
  }

  export type LegalResponsibleCreateWithoutFamilyMemberDiseaseInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateCreateNestedManyWithoutResponsibleInput
    Housing?: HousingCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleUncheckedCreateWithoutFamilyMemberDiseaseInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateUncheckedCreateNestedManyWithoutResponsibleInput
    Housing?: HousingUncheckedCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanUncheckedCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleCreateOrConnectWithoutFamilyMemberDiseaseInput = {
    where: LegalResponsibleWhereUniqueInput
    create: XOR<LegalResponsibleCreateWithoutFamilyMemberDiseaseInput, LegalResponsibleUncheckedCreateWithoutFamilyMemberDiseaseInput>
  }

  export type MedicationCreateWithoutFamilyMemberDiseaseInput = {
    id?: string
    main_id?: string | null
    medicationName: string
    obtainedPublicly: boolean
    specificMedicationPublicly?: string | null
    application_id: string
    familyMember?: FamilyMemberCreateNestedOneWithoutMedicationInput
    candidate?: CandidateCreateNestedOneWithoutMedicationInput
    legalResponsible?: LegalResponsibleCreateNestedOneWithoutMedicationInput
  }

  export type MedicationUncheckedCreateWithoutFamilyMemberDiseaseInput = {
    id?: string
    main_id?: string | null
    medicationName: string
    obtainedPublicly: boolean
    specificMedicationPublicly?: string | null
    familyMember_id?: string | null
    candidate_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type MedicationCreateOrConnectWithoutFamilyMemberDiseaseInput = {
    where: MedicationWhereUniqueInput
    create: XOR<MedicationCreateWithoutFamilyMemberDiseaseInput, MedicationUncheckedCreateWithoutFamilyMemberDiseaseInput>
  }

  export type MedicationCreateManyFamilyMemberDiseaseInputEnvelope = {
    data: MedicationCreateManyFamilyMemberDiseaseInput | MedicationCreateManyFamilyMemberDiseaseInput[]
    skipDuplicates?: boolean
  }

  export type FamilyMemberUpsertWithoutFamilyMemberDiseaseInput = {
    update: XOR<FamilyMemberUpdateWithoutFamilyMemberDiseaseInput, FamilyMemberUncheckedUpdateWithoutFamilyMemberDiseaseInput>
    create: XOR<FamilyMemberCreateWithoutFamilyMemberDiseaseInput, FamilyMemberUncheckedCreateWithoutFamilyMemberDiseaseInput>
    where?: FamilyMemberWhereInput
  }

  export type FamilyMemberUpdateToOneWithWhereWithoutFamilyMemberDiseaseInput = {
    where?: FamilyMemberWhereInput
    data: XOR<FamilyMemberUpdateWithoutFamilyMemberDiseaseInput, FamilyMemberUncheckedUpdateWithoutFamilyMemberDiseaseInput>
  }

  export type FamilyMemberUpdateWithoutFamilyMemberDiseaseInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    application_id?: StringFieldUpdateOperationsInput | string
    CreditCard?: CreditCardUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutFamilyMemberNestedInput
    Financing?: FinancingUpdateManyWithoutFamilyMemberNestedInput
    Loan?: LoanUpdateManyWithoutFamilyMemberNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutFamilyMemberNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUpdateManyWithoutFamilyMembersNestedInput
    candidate?: CandidateUpdateOneWithoutFamillyMemberNestedInput
    Medication?: MedicationUpdateManyWithoutFamilyMemberNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutFamillyMemberNestedInput
    BankAccount?: BankAccountUpdateManyWithoutFamilyMemberNestedInput
    Declarations?: DeclarationsUpdateManyWithoutFamilyMemberNestedInput
  }

  export type FamilyMemberUncheckedUpdateWithoutFamilyMemberDiseaseInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    CreditCard?: CreditCardUncheckedUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutFamilyMemberNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutFamilyMemberNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedUpdateManyWithoutFamilyMembersNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutFamilyMemberNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutFamilyMemberNestedInput
  }

  export type CandidateUpsertWithoutFamilyMemberDiseaseInput = {
    update: XOR<CandidateUpdateWithoutFamilyMemberDiseaseInput, CandidateUncheckedUpdateWithoutFamilyMemberDiseaseInput>
    create: XOR<CandidateCreateWithoutFamilyMemberDiseaseInput, CandidateUncheckedCreateWithoutFamilyMemberDiseaseInput>
    where?: CandidateWhereInput
  }

  export type CandidateUpdateToOneWithWhereWithoutFamilyMemberDiseaseInput = {
    where?: CandidateWhereInput
    data: XOR<CandidateUpdateWithoutFamilyMemberDiseaseInput, CandidateUncheckedUpdateWithoutFamilyMemberDiseaseInput>
  }

  export type CandidateUpdateWithoutFamilyMemberDiseaseInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUpdateManyWithoutCandidateNestedInput
    responsible?: LegalResponsibleUpdateOneWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateUncheckedUpdateWithoutFamilyMemberDiseaseInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    responsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUncheckedUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type LegalResponsibleUpsertWithoutFamilyMemberDiseaseInput = {
    update: XOR<LegalResponsibleUpdateWithoutFamilyMemberDiseaseInput, LegalResponsibleUncheckedUpdateWithoutFamilyMemberDiseaseInput>
    create: XOR<LegalResponsibleCreateWithoutFamilyMemberDiseaseInput, LegalResponsibleUncheckedCreateWithoutFamilyMemberDiseaseInput>
    where?: LegalResponsibleWhereInput
  }

  export type LegalResponsibleUpdateToOneWithWhereWithoutFamilyMemberDiseaseInput = {
    where?: LegalResponsibleWhereInput
    data: XOR<LegalResponsibleUpdateWithoutFamilyMemberDiseaseInput, LegalResponsibleUncheckedUpdateWithoutFamilyMemberDiseaseInput>
  }

  export type LegalResponsibleUpdateWithoutFamilyMemberDiseaseInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type LegalResponsibleUncheckedUpdateWithoutFamilyMemberDiseaseInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUncheckedUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type MedicationUpsertWithWhereUniqueWithoutFamilyMemberDiseaseInput = {
    where: MedicationWhereUniqueInput
    update: XOR<MedicationUpdateWithoutFamilyMemberDiseaseInput, MedicationUncheckedUpdateWithoutFamilyMemberDiseaseInput>
    create: XOR<MedicationCreateWithoutFamilyMemberDiseaseInput, MedicationUncheckedCreateWithoutFamilyMemberDiseaseInput>
  }

  export type MedicationUpdateWithWhereUniqueWithoutFamilyMemberDiseaseInput = {
    where: MedicationWhereUniqueInput
    data: XOR<MedicationUpdateWithoutFamilyMemberDiseaseInput, MedicationUncheckedUpdateWithoutFamilyMemberDiseaseInput>
  }

  export type MedicationUpdateManyWithWhereWithoutFamilyMemberDiseaseInput = {
    where: MedicationScalarWhereInput
    data: XOR<MedicationUpdateManyMutationInput, MedicationUncheckedUpdateManyWithoutFamilyMemberDiseaseInput>
  }

  export type FamilyMemberCreateWithoutMedicationInput = {
    id?: string
    relationship: $Enums.Relationship
    otherRelationship?: string | null
    main_id?: string | null
    fullName: string
    socialName?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    numberOfBirthRegister?: string | null
    bookOfBirthRegister?: string | null
    pageOfBirthRegister?: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    email?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    educationPlace?: $Enums.INSTITUTION_TYPE | null
    institutionName?: string | null
    coursingEducationLevel?: $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: string | null
    turnOfEducation?: $Enums.SHIFT | null
    hasScholarship?: boolean | null
    percentageOfScholarship?: string | null
    monthlyAmount?: string | null
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    benefitedFromCebasScholarship_professional?: boolean | null
    CadUnico?: boolean | null
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    incomeSource?: FamilyMemberCreateincomeSourceInput | $Enums.IncomeSource[]
    application_id: string
    CreditCard?: CreditCardCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutFamilyMemberInput
    Financing?: FinancingCreateNestedManyWithoutFamilyMemberInput
    Loan?: LoanCreateNestedManyWithoutFamilyMemberInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutFamilyMemberInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleCreateNestedManyWithoutFamilyMembersInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutFamilyMemberInput
    candidate?: CandidateCreateNestedOneWithoutFamillyMemberInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutFamillyMemberInput
    BankAccount?: BankAccountCreateNestedManyWithoutFamilyMemberInput
    Declarations?: DeclarationsCreateNestedManyWithoutFamilyMemberInput
  }

  export type FamilyMemberUncheckedCreateWithoutMedicationInput = {
    id?: string
    relationship: $Enums.Relationship
    otherRelationship?: string | null
    main_id?: string | null
    fullName: string
    socialName?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    numberOfBirthRegister?: string | null
    bookOfBirthRegister?: string | null
    pageOfBirthRegister?: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    email?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    educationPlace?: $Enums.INSTITUTION_TYPE | null
    institutionName?: string | null
    coursingEducationLevel?: $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: string | null
    turnOfEducation?: $Enums.SHIFT | null
    hasScholarship?: boolean | null
    percentageOfScholarship?: string | null
    monthlyAmount?: string | null
    candidate_id?: string | null
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    benefitedFromCebasScholarship_professional?: boolean | null
    CadUnico?: boolean | null
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    incomeSource?: FamilyMemberCreateincomeSourceInput | $Enums.IncomeSource[]
    legalResponsibleId?: string | null
    application_id: string
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutFamilyMemberInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutFamilyMemberInput
    Loan?: LoanUncheckedCreateNestedManyWithoutFamilyMemberInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutFamilyMemberInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedCreateNestedManyWithoutFamilyMembersInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutFamilyMemberInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutFamilyMemberInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutFamilyMemberInput
  }

  export type FamilyMemberCreateOrConnectWithoutMedicationInput = {
    where: FamilyMemberWhereUniqueInput
    create: XOR<FamilyMemberCreateWithoutMedicationInput, FamilyMemberUncheckedCreateWithoutMedicationInput>
  }

  export type CandidateCreateWithoutMedicationInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseCreateNestedManyWithoutCandidateInput
    Financing?: FinancingCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutCandidateInput
    Loan?: LoanCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleCreateNestedManyWithoutCandidateInput
    responsible?: LegalResponsibleCreateNestedOneWithoutCandidateInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutCandidateInput
    Housing?: HousingCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsCreateNestedManyWithoutCandidateInput
  }

  export type CandidateUncheckedCreateWithoutMedicationInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    responsible_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationUncheckedCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutCandidateInput
    Loan?: LoanUncheckedCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutCandidateInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutCandidateInput
    Housing?: HousingUncheckedCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type CandidateCreateOrConnectWithoutMedicationInput = {
    where: CandidateWhereUniqueInput
    create: XOR<CandidateCreateWithoutMedicationInput, CandidateUncheckedCreateWithoutMedicationInput>
  }

  export type LegalResponsibleCreateWithoutMedicationInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateCreateNestedManyWithoutResponsibleInput
    Housing?: HousingCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleUncheckedCreateWithoutMedicationInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateUncheckedCreateNestedManyWithoutResponsibleInput
    Housing?: HousingUncheckedCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanUncheckedCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleCreateOrConnectWithoutMedicationInput = {
    where: LegalResponsibleWhereUniqueInput
    create: XOR<LegalResponsibleCreateWithoutMedicationInput, LegalResponsibleUncheckedCreateWithoutMedicationInput>
  }

  export type FamilyMemberDiseaseCreateWithoutMedicationInput = {
    id?: string
    main_id?: string | null
    disease?: $Enums.Disease | null
    diseases?: FamilyMemberDiseaseCreatediseasesInput | $Enums.Disease[]
    specificDisease?: string | null
    hasMedicalReport: boolean
    application_id: string
    familyMember?: FamilyMemberCreateNestedOneWithoutFamilyMemberDiseaseInput
    candidate?: CandidateCreateNestedOneWithoutFamilyMemberDiseaseInput
    legalResponsible?: LegalResponsibleCreateNestedOneWithoutFamilyMemberDiseaseInput
  }

  export type FamilyMemberDiseaseUncheckedCreateWithoutMedicationInput = {
    id?: string
    main_id?: string | null
    disease?: $Enums.Disease | null
    diseases?: FamilyMemberDiseaseCreatediseasesInput | $Enums.Disease[]
    specificDisease?: string | null
    hasMedicalReport: boolean
    familyMember_id?: string | null
    candidate_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type FamilyMemberDiseaseCreateOrConnectWithoutMedicationInput = {
    where: FamilyMemberDiseaseWhereUniqueInput
    create: XOR<FamilyMemberDiseaseCreateWithoutMedicationInput, FamilyMemberDiseaseUncheckedCreateWithoutMedicationInput>
  }

  export type FamilyMemberUpsertWithoutMedicationInput = {
    update: XOR<FamilyMemberUpdateWithoutMedicationInput, FamilyMemberUncheckedUpdateWithoutMedicationInput>
    create: XOR<FamilyMemberCreateWithoutMedicationInput, FamilyMemberUncheckedCreateWithoutMedicationInput>
    where?: FamilyMemberWhereInput
  }

  export type FamilyMemberUpdateToOneWithWhereWithoutMedicationInput = {
    where?: FamilyMemberWhereInput
    data: XOR<FamilyMemberUpdateWithoutMedicationInput, FamilyMemberUncheckedUpdateWithoutMedicationInput>
  }

  export type FamilyMemberUpdateWithoutMedicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    application_id?: StringFieldUpdateOperationsInput | string
    CreditCard?: CreditCardUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutFamilyMemberNestedInput
    Financing?: FinancingUpdateManyWithoutFamilyMemberNestedInput
    Loan?: LoanUpdateManyWithoutFamilyMemberNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutFamilyMemberNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUpdateManyWithoutFamilyMembersNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutFamilyMemberNestedInput
    candidate?: CandidateUpdateOneWithoutFamillyMemberNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutFamillyMemberNestedInput
    BankAccount?: BankAccountUpdateManyWithoutFamilyMemberNestedInput
    Declarations?: DeclarationsUpdateManyWithoutFamilyMemberNestedInput
  }

  export type FamilyMemberUncheckedUpdateWithoutMedicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    CreditCard?: CreditCardUncheckedUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutFamilyMemberNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutFamilyMemberNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedUpdateManyWithoutFamilyMembersNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutFamilyMemberNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutFamilyMemberNestedInput
  }

  export type CandidateUpsertWithoutMedicationInput = {
    update: XOR<CandidateUpdateWithoutMedicationInput, CandidateUncheckedUpdateWithoutMedicationInput>
    create: XOR<CandidateCreateWithoutMedicationInput, CandidateUncheckedCreateWithoutMedicationInput>
    where?: CandidateWhereInput
  }

  export type CandidateUpdateToOneWithWhereWithoutMedicationInput = {
    where?: CandidateWhereInput
    data: XOR<CandidateUpdateWithoutMedicationInput, CandidateUncheckedUpdateWithoutMedicationInput>
  }

  export type CandidateUpdateWithoutMedicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUpdateManyWithoutCandidateNestedInput
    responsible?: LegalResponsibleUpdateOneWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateUncheckedUpdateWithoutMedicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    responsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUncheckedUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type LegalResponsibleUpsertWithoutMedicationInput = {
    update: XOR<LegalResponsibleUpdateWithoutMedicationInput, LegalResponsibleUncheckedUpdateWithoutMedicationInput>
    create: XOR<LegalResponsibleCreateWithoutMedicationInput, LegalResponsibleUncheckedCreateWithoutMedicationInput>
    where?: LegalResponsibleWhereInput
  }

  export type LegalResponsibleUpdateToOneWithWhereWithoutMedicationInput = {
    where?: LegalResponsibleWhereInput
    data: XOR<LegalResponsibleUpdateWithoutMedicationInput, LegalResponsibleUncheckedUpdateWithoutMedicationInput>
  }

  export type LegalResponsibleUpdateWithoutMedicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type LegalResponsibleUncheckedUpdateWithoutMedicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUncheckedUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type FamilyMemberDiseaseUpsertWithoutMedicationInput = {
    update: XOR<FamilyMemberDiseaseUpdateWithoutMedicationInput, FamilyMemberDiseaseUncheckedUpdateWithoutMedicationInput>
    create: XOR<FamilyMemberDiseaseCreateWithoutMedicationInput, FamilyMemberDiseaseUncheckedCreateWithoutMedicationInput>
    where?: FamilyMemberDiseaseWhereInput
  }

  export type FamilyMemberDiseaseUpdateToOneWithWhereWithoutMedicationInput = {
    where?: FamilyMemberDiseaseWhereInput
    data: XOR<FamilyMemberDiseaseUpdateWithoutMedicationInput, FamilyMemberDiseaseUncheckedUpdateWithoutMedicationInput>
  }

  export type FamilyMemberDiseaseUpdateWithoutMedicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    disease?: NullableEnumDiseaseFieldUpdateOperationsInput | $Enums.Disease | null
    diseases?: FamilyMemberDiseaseUpdatediseasesInput | $Enums.Disease[]
    specificDisease?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: BoolFieldUpdateOperationsInput | boolean
    application_id?: StringFieldUpdateOperationsInput | string
    familyMember?: FamilyMemberUpdateOneWithoutFamilyMemberDiseaseNestedInput
    candidate?: CandidateUpdateOneWithoutFamilyMemberDiseaseNestedInput
    legalResponsible?: LegalResponsibleUpdateOneWithoutFamilyMemberDiseaseNestedInput
  }

  export type FamilyMemberDiseaseUncheckedUpdateWithoutMedicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    disease?: NullableEnumDiseaseFieldUpdateOperationsInput | $Enums.Disease | null
    diseases?: FamilyMemberDiseaseUpdatediseasesInput | $Enums.Disease[]
    specificDisease?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: BoolFieldUpdateOperationsInput | boolean
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type CandidateCreateWithoutDeclarationsInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseCreateNestedManyWithoutCandidateInput
    Financing?: FinancingCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutCandidateInput
    Loan?: LoanCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleCreateNestedManyWithoutCandidateInput
    responsible?: LegalResponsibleCreateNestedOneWithoutCandidateInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutCandidateInput
    Housing?: HousingCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutCandidateInput
    Medication?: MedicationCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountCreateNestedManyWithoutCandidateInput
  }

  export type CandidateUncheckedCreateWithoutDeclarationsInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    responsible_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    Application?: ApplicationUncheckedCreateNestedManyWithoutCandidateInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutCandidateInput
    Loan?: LoanUncheckedCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutCandidateInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutCandidateInput
    Housing?: HousingUncheckedCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutCandidateInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type CandidateCreateOrConnectWithoutDeclarationsInput = {
    where: CandidateWhereUniqueInput
    create: XOR<CandidateCreateWithoutDeclarationsInput, CandidateUncheckedCreateWithoutDeclarationsInput>
  }

  export type FamilyMemberCreateWithoutDeclarationsInput = {
    id?: string
    relationship: $Enums.Relationship
    otherRelationship?: string | null
    main_id?: string | null
    fullName: string
    socialName?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    numberOfBirthRegister?: string | null
    bookOfBirthRegister?: string | null
    pageOfBirthRegister?: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    email?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    educationPlace?: $Enums.INSTITUTION_TYPE | null
    institutionName?: string | null
    coursingEducationLevel?: $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: string | null
    turnOfEducation?: $Enums.SHIFT | null
    hasScholarship?: boolean | null
    percentageOfScholarship?: string | null
    monthlyAmount?: string | null
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    benefitedFromCebasScholarship_professional?: boolean | null
    CadUnico?: boolean | null
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    incomeSource?: FamilyMemberCreateincomeSourceInput | $Enums.IncomeSource[]
    application_id: string
    CreditCard?: CreditCardCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutFamilyMemberInput
    Financing?: FinancingCreateNestedManyWithoutFamilyMemberInput
    Loan?: LoanCreateNestedManyWithoutFamilyMemberInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutFamilyMemberInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleCreateNestedManyWithoutFamilyMembersInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutFamilyMemberInput
    candidate?: CandidateCreateNestedOneWithoutFamillyMemberInput
    Medication?: MedicationCreateNestedManyWithoutFamilyMemberInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutFamillyMemberInput
    BankAccount?: BankAccountCreateNestedManyWithoutFamilyMemberInput
  }

  export type FamilyMemberUncheckedCreateWithoutDeclarationsInput = {
    id?: string
    relationship: $Enums.Relationship
    otherRelationship?: string | null
    main_id?: string | null
    fullName: string
    socialName?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    numberOfBirthRegister?: string | null
    bookOfBirthRegister?: string | null
    pageOfBirthRegister?: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    email?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    educationPlace?: $Enums.INSTITUTION_TYPE | null
    institutionName?: string | null
    coursingEducationLevel?: $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: string | null
    turnOfEducation?: $Enums.SHIFT | null
    hasScholarship?: boolean | null
    percentageOfScholarship?: string | null
    monthlyAmount?: string | null
    candidate_id?: string | null
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    benefitedFromCebasScholarship_professional?: boolean | null
    CadUnico?: boolean | null
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    incomeSource?: FamilyMemberCreateincomeSourceInput | $Enums.IncomeSource[]
    legalResponsibleId?: string | null
    application_id: string
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutFamilyMemberInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutFamilyMemberInput
    Loan?: LoanUncheckedCreateNestedManyWithoutFamilyMemberInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutFamilyMemberInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedCreateNestedManyWithoutFamilyMembersInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutFamilyMemberInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutFamilyMemberInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutFamilyMemberInput
  }

  export type FamilyMemberCreateOrConnectWithoutDeclarationsInput = {
    where: FamilyMemberWhereUniqueInput
    create: XOR<FamilyMemberCreateWithoutDeclarationsInput, FamilyMemberUncheckedCreateWithoutDeclarationsInput>
  }

  export type LegalResponsibleCreateWithoutDeclarationsInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateCreateNestedManyWithoutResponsibleInput
    Housing?: HousingCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleUncheckedCreateWithoutDeclarationsInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateUncheckedCreateNestedManyWithoutResponsibleInput
    Housing?: HousingUncheckedCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanUncheckedCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleCreateOrConnectWithoutDeclarationsInput = {
    where: LegalResponsibleWhereUniqueInput
    create: XOR<LegalResponsibleCreateWithoutDeclarationsInput, LegalResponsibleUncheckedCreateWithoutDeclarationsInput>
  }

  export type CandidateUpsertWithoutDeclarationsInput = {
    update: XOR<CandidateUpdateWithoutDeclarationsInput, CandidateUncheckedUpdateWithoutDeclarationsInput>
    create: XOR<CandidateCreateWithoutDeclarationsInput, CandidateUncheckedCreateWithoutDeclarationsInput>
    where?: CandidateWhereInput
  }

  export type CandidateUpdateToOneWithWhereWithoutDeclarationsInput = {
    where?: CandidateWhereInput
    data: XOR<CandidateUpdateWithoutDeclarationsInput, CandidateUncheckedUpdateWithoutDeclarationsInput>
  }

  export type CandidateUpdateWithoutDeclarationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUpdateManyWithoutCandidateNestedInput
    responsible?: LegalResponsibleUpdateOneWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateUncheckedUpdateWithoutDeclarationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    responsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUncheckedUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type FamilyMemberUpsertWithoutDeclarationsInput = {
    update: XOR<FamilyMemberUpdateWithoutDeclarationsInput, FamilyMemberUncheckedUpdateWithoutDeclarationsInput>
    create: XOR<FamilyMemberCreateWithoutDeclarationsInput, FamilyMemberUncheckedCreateWithoutDeclarationsInput>
    where?: FamilyMemberWhereInput
  }

  export type FamilyMemberUpdateToOneWithWhereWithoutDeclarationsInput = {
    where?: FamilyMemberWhereInput
    data: XOR<FamilyMemberUpdateWithoutDeclarationsInput, FamilyMemberUncheckedUpdateWithoutDeclarationsInput>
  }

  export type FamilyMemberUpdateWithoutDeclarationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    application_id?: StringFieldUpdateOperationsInput | string
    CreditCard?: CreditCardUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutFamilyMemberNestedInput
    Financing?: FinancingUpdateManyWithoutFamilyMemberNestedInput
    Loan?: LoanUpdateManyWithoutFamilyMemberNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutFamilyMemberNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUpdateManyWithoutFamilyMembersNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutFamilyMemberNestedInput
    candidate?: CandidateUpdateOneWithoutFamillyMemberNestedInput
    Medication?: MedicationUpdateManyWithoutFamilyMemberNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutFamillyMemberNestedInput
    BankAccount?: BankAccountUpdateManyWithoutFamilyMemberNestedInput
  }

  export type FamilyMemberUncheckedUpdateWithoutDeclarationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    CreditCard?: CreditCardUncheckedUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutFamilyMemberNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutFamilyMemberNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedUpdateManyWithoutFamilyMembersNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutFamilyMemberNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutFamilyMemberNestedInput
  }

  export type LegalResponsibleUpsertWithoutDeclarationsInput = {
    update: XOR<LegalResponsibleUpdateWithoutDeclarationsInput, LegalResponsibleUncheckedUpdateWithoutDeclarationsInput>
    create: XOR<LegalResponsibleCreateWithoutDeclarationsInput, LegalResponsibleUncheckedCreateWithoutDeclarationsInput>
    where?: LegalResponsibleWhereInput
  }

  export type LegalResponsibleUpdateToOneWithWhereWithoutDeclarationsInput = {
    where?: LegalResponsibleWhereInput
    data: XOR<LegalResponsibleUpdateWithoutDeclarationsInput, LegalResponsibleUncheckedUpdateWithoutDeclarationsInput>
  }

  export type LegalResponsibleUpdateWithoutDeclarationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type LegalResponsibleUncheckedUpdateWithoutDeclarationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUncheckedUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type AnnouncementCreateWithoutInterviewInput = {
    id?: string
    entityChanged?: boolean | null
    branchChanged?: boolean | null
    announcementType: $Enums.AnnouncementType
    announcementNumber?: string | null
    announcementDate?: Date | string | null
    announcementBegin?: Date | string | null
    openDate?: Date | string | null
    closeDate?: Date | string | null
    waitingList?: boolean | null
    offeredVacancies?: number | null
    verifiedScholarships?: number | null
    description?: string | null
    announcementName?: string | null
    announcementLogo?: string | null
    type2?: string | null
    criteria?: AnnouncementCreatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementCreatetypes1Input | $Enums.scholarshipGrantedType[]
    entity: EntityCreateNestedOneWithoutAnnouncementInput
    entity_subsidiary?: EntitySubsidiaryCreateNestedManyWithoutAnnouncementInput
    Application?: ApplicationCreateNestedManyWithoutAnnouncementInput
    educationLevels?: EducationLevelCreateNestedManyWithoutAnnouncementInput
    ScholarshipGranted?: ScholarshipGrantedCreateNestedManyWithoutAnnounmententInput
    timelines?: TimelineCreateNestedManyWithoutAnnouncementInput
    socialAssistant?: SocialAssistantCreateNestedManyWithoutAnnouncementInput
  }

  export type AnnouncementUncheckedCreateWithoutInterviewInput = {
    id?: string
    entityChanged?: boolean | null
    branchChanged?: boolean | null
    announcementType: $Enums.AnnouncementType
    announcementNumber?: string | null
    announcementDate?: Date | string | null
    announcementBegin?: Date | string | null
    openDate?: Date | string | null
    closeDate?: Date | string | null
    waitingList?: boolean | null
    offeredVacancies?: number | null
    verifiedScholarships?: number | null
    description?: string | null
    entity_id: string
    announcementName?: string | null
    announcementLogo?: string | null
    type2?: string | null
    criteria?: AnnouncementCreatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementCreatetypes1Input | $Enums.scholarshipGrantedType[]
    entity_subsidiary?: EntitySubsidiaryUncheckedCreateNestedManyWithoutAnnouncementInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutAnnouncementInput
    educationLevels?: EducationLevelUncheckedCreateNestedManyWithoutAnnouncementInput
    ScholarshipGranted?: ScholarshipGrantedUncheckedCreateNestedManyWithoutAnnounmententInput
    timelines?: TimelineUncheckedCreateNestedManyWithoutAnnouncementInput
    socialAssistant?: SocialAssistantUncheckedCreateNestedManyWithoutAnnouncementInput
  }

  export type AnnouncementCreateOrConnectWithoutInterviewInput = {
    where: AnnouncementWhereUniqueInput
    create: XOR<AnnouncementCreateWithoutInterviewInput, AnnouncementUncheckedCreateWithoutInterviewInput>
  }

  export type AnnouncementUpsertWithoutInterviewInput = {
    update: XOR<AnnouncementUpdateWithoutInterviewInput, AnnouncementUncheckedUpdateWithoutInterviewInput>
    create: XOR<AnnouncementCreateWithoutInterviewInput, AnnouncementUncheckedCreateWithoutInterviewInput>
    where?: AnnouncementWhereInput
  }

  export type AnnouncementUpdateToOneWithWhereWithoutInterviewInput = {
    where?: AnnouncementWhereInput
    data: XOR<AnnouncementUpdateWithoutInterviewInput, AnnouncementUncheckedUpdateWithoutInterviewInput>
  }

  export type AnnouncementUpdateWithoutInterviewInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    branchChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    announcementType?: EnumAnnouncementTypeFieldUpdateOperationsInput | $Enums.AnnouncementType
    announcementNumber?: NullableStringFieldUpdateOperationsInput | string | null
    announcementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    announcementBegin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closeDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waitingList?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    announcementName?: NullableStringFieldUpdateOperationsInput | string | null
    announcementLogo?: NullableStringFieldUpdateOperationsInput | string | null
    type2?: NullableStringFieldUpdateOperationsInput | string | null
    criteria?: AnnouncementUpdatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementUpdatetypes1Input | $Enums.scholarshipGrantedType[]
    entity?: EntityUpdateOneRequiredWithoutAnnouncementNestedInput
    entity_subsidiary?: EntitySubsidiaryUpdateManyWithoutAnnouncementNestedInput
    Application?: ApplicationUpdateManyWithoutAnnouncementNestedInput
    educationLevels?: EducationLevelUpdateManyWithoutAnnouncementNestedInput
    ScholarshipGranted?: ScholarshipGrantedUpdateManyWithoutAnnounmententNestedInput
    timelines?: TimelineUpdateManyWithoutAnnouncementNestedInput
    socialAssistant?: SocialAssistantUpdateManyWithoutAnnouncementNestedInput
  }

  export type AnnouncementUncheckedUpdateWithoutInterviewInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    branchChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    announcementType?: EnumAnnouncementTypeFieldUpdateOperationsInput | $Enums.AnnouncementType
    announcementNumber?: NullableStringFieldUpdateOperationsInput | string | null
    announcementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    announcementBegin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closeDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waitingList?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    entity_id?: StringFieldUpdateOperationsInput | string
    announcementName?: NullableStringFieldUpdateOperationsInput | string | null
    announcementLogo?: NullableStringFieldUpdateOperationsInput | string | null
    type2?: NullableStringFieldUpdateOperationsInput | string | null
    criteria?: AnnouncementUpdatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementUpdatetypes1Input | $Enums.scholarshipGrantedType[]
    entity_subsidiary?: EntitySubsidiaryUncheckedUpdateManyWithoutAnnouncementNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutAnnouncementNestedInput
    educationLevels?: EducationLevelUncheckedUpdateManyWithoutAnnouncementNestedInput
    ScholarshipGranted?: ScholarshipGrantedUncheckedUpdateManyWithoutAnnounmententNestedInput
    timelines?: TimelineUncheckedUpdateManyWithoutAnnouncementNestedInput
    socialAssistant?: SocialAssistantUncheckedUpdateManyWithoutAnnouncementNestedInput
  }

  export type AnnouncementInterviewCreateWithoutAnnouncementInput = {
    startDate: Date | string
    endDate: Date | string
    beginHour: Date | string
    interval?: number
    endHour: Date | string
    duration?: number
  }

  export type AnnouncementInterviewUncheckedCreateWithoutAnnouncementInput = {
    startDate: Date | string
    endDate: Date | string
    beginHour: Date | string
    interval?: number
    endHour: Date | string
    duration?: number
  }

  export type AnnouncementInterviewCreateOrConnectWithoutAnnouncementInput = {
    where: AnnouncementInterviewWhereUniqueInput
    create: XOR<AnnouncementInterviewCreateWithoutAnnouncementInput, AnnouncementInterviewUncheckedCreateWithoutAnnouncementInput>
  }

  export type EntityCreateWithoutAnnouncementInput = {
    id?: string
    name?: string | null
    socialReason: string
    logo?: string | null
    CNPJ: string
    CEP: string
    address?: string
    addressNumber?: number | null
    neighborhood?: string
    UF?: $Enums.COUNTRY | null
    city?: string
    educationalInstitutionCode?: string | null
    EntityDirector?: EntityDirectorCreateNestedManyWithoutEntityInput
    EntitySubsidiary?: EntitySubsidiaryCreateNestedManyWithoutEntityInput
    SocialAssistant?: SocialAssistantCreateNestedManyWithoutEntityInput
    user: UserCreateNestedOneWithoutEntityInput
  }

  export type EntityUncheckedCreateWithoutAnnouncementInput = {
    id?: string
    name?: string | null
    socialReason: string
    logo?: string | null
    CNPJ: string
    CEP: string
    address?: string
    addressNumber?: number | null
    neighborhood?: string
    UF?: $Enums.COUNTRY | null
    city?: string
    educationalInstitutionCode?: string | null
    user_id: string
    EntityDirector?: EntityDirectorUncheckedCreateNestedManyWithoutEntityInput
    EntitySubsidiary?: EntitySubsidiaryUncheckedCreateNestedManyWithoutEntityInput
    SocialAssistant?: SocialAssistantUncheckedCreateNestedManyWithoutEntityInput
  }

  export type EntityCreateOrConnectWithoutAnnouncementInput = {
    where: EntityWhereUniqueInput
    create: XOR<EntityCreateWithoutAnnouncementInput, EntityUncheckedCreateWithoutAnnouncementInput>
  }

  export type EntitySubsidiaryCreateWithoutAnnouncementInput = {
    id?: string
    CNPJ: string
    name: string
    socialReason: string
    CEP: string
    address: string
    addressNumber?: number | null
    city?: string | null
    neighborhood?: string | null
    UF?: $Enums.COUNTRY | null
    educationalInstitutionCode?: string | null
    EntityDirector?: EntityDirectorCreateNestedManyWithoutEntity_subsidiaryInput
    entity: EntityCreateNestedOneWithoutEntitySubsidiaryInput
    user: UserCreateNestedOneWithoutEntitySubsidiaryInput
    SocialAssistant?: SocialAssistantCreateNestedManyWithoutEntity_subsidiaryInput
    EducationLevel?: EducationLevelCreateNestedManyWithoutEntitySubsidiaryInput
  }

  export type EntitySubsidiaryUncheckedCreateWithoutAnnouncementInput = {
    id?: string
    CNPJ: string
    name: string
    socialReason: string
    CEP: string
    address: string
    addressNumber?: number | null
    city?: string | null
    neighborhood?: string | null
    UF?: $Enums.COUNTRY | null
    educationalInstitutionCode?: string | null
    entity_id: string
    user_id: string
    EntityDirector?: EntityDirectorUncheckedCreateNestedManyWithoutEntity_subsidiaryInput
    SocialAssistant?: SocialAssistantUncheckedCreateNestedManyWithoutEntity_subsidiaryInput
    EducationLevel?: EducationLevelUncheckedCreateNestedManyWithoutEntitySubsidiaryInput
  }

  export type EntitySubsidiaryCreateOrConnectWithoutAnnouncementInput = {
    where: EntitySubsidiaryWhereUniqueInput
    create: XOR<EntitySubsidiaryCreateWithoutAnnouncementInput, EntitySubsidiaryUncheckedCreateWithoutAnnouncementInput>
  }

  export type ApplicationCreateWithoutAnnouncementInput = {
    id?: string
    status: $Enums.ApplicationStatus
    candidateName?: string | null
    SocialAssistantName?: string | null
    CadUnico?: boolean | null
    hasSevereDesease?: boolean | null
    averageIncome?: number | null
    perCapita?: number | null
    position?: number | null
    number?: number
    candidate: CandidateCreateNestedOneWithoutApplicationInput
    EducationLevel: EducationLevelCreateNestedOneWithoutApplicationInput
    SocialAssistant?: SocialAssistantCreateNestedOneWithoutApplicationInput
    applicationHistories?: ApplicationHistoryCreateNestedManyWithoutApplicationInput
    ScholarshipGranted?: ScholarshipGrantedCreateNestedOneWithoutApplicationInput
    responsible?: LegalResponsibleCreateNestedOneWithoutApplicationInput
  }

  export type ApplicationUncheckedCreateWithoutAnnouncementInput = {
    id?: string
    candidate_id: string
    status: $Enums.ApplicationStatus
    socialAssistant_id?: string | null
    educationLevel_id: string
    candidateName?: string | null
    SocialAssistantName?: string | null
    CadUnico?: boolean | null
    hasSevereDesease?: boolean | null
    averageIncome?: number | null
    perCapita?: number | null
    position?: number | null
    number?: number
    reponsible_id?: string | null
    applicationHistories?: ApplicationHistoryUncheckedCreateNestedManyWithoutApplicationInput
    ScholarshipGranted?: ScholarshipGrantedUncheckedCreateNestedOneWithoutApplicationInput
  }

  export type ApplicationCreateOrConnectWithoutAnnouncementInput = {
    where: ApplicationWhereUniqueInput
    create: XOR<ApplicationCreateWithoutAnnouncementInput, ApplicationUncheckedCreateWithoutAnnouncementInput>
  }

  export type ApplicationCreateManyAnnouncementInputEnvelope = {
    data: ApplicationCreateManyAnnouncementInput | ApplicationCreateManyAnnouncementInput[]
    skipDuplicates?: boolean
  }

  export type EducationLevelCreateWithoutAnnouncementInput = {
    id?: string
    level: $Enums.LevelType
    basicEduType?: $Enums.BasicEducationType | null
    scholarshipType?: $Enums.ScholarshipOfferType | null
    higherEduScholarshipType?: $Enums.HigherEducationScholarshipType | null
    offeredCourseType?: $Enums.OfferedCourseType | null
    availableCourses?: string | null
    offeredVacancies?: number | null
    verifiedScholarships?: number | null
    shift?: $Enums.SHIFT | null
    semester?: number | null
    grade?: string | null
    Application?: ApplicationCreateNestedManyWithoutEducationLevelInput
    entitySubsidiary?: EntitySubsidiaryCreateNestedOneWithoutEducationLevelInput
  }

  export type EducationLevelUncheckedCreateWithoutAnnouncementInput = {
    id?: string
    level: $Enums.LevelType
    basicEduType?: $Enums.BasicEducationType | null
    scholarshipType?: $Enums.ScholarshipOfferType | null
    higherEduScholarshipType?: $Enums.HigherEducationScholarshipType | null
    offeredCourseType?: $Enums.OfferedCourseType | null
    availableCourses?: string | null
    offeredVacancies?: number | null
    verifiedScholarships?: number | null
    shift?: $Enums.SHIFT | null
    semester?: number | null
    grade?: string | null
    entitySubsidiaryId?: string | null
    Application?: ApplicationUncheckedCreateNestedManyWithoutEducationLevelInput
  }

  export type EducationLevelCreateOrConnectWithoutAnnouncementInput = {
    where: EducationLevelWhereUniqueInput
    create: XOR<EducationLevelCreateWithoutAnnouncementInput, EducationLevelUncheckedCreateWithoutAnnouncementInput>
  }

  export type EducationLevelCreateManyAnnouncementInputEnvelope = {
    data: EducationLevelCreateManyAnnouncementInput | EducationLevelCreateManyAnnouncementInput[]
    skipDuplicates?: boolean
  }

  export type ScholarshipGrantedCreateWithoutAnnounmententInput = {
    id?: string
    gaveUp: boolean
    ScholarshipCode?: string | null
    types?: ScholarshipGrantedCreatetypesInput | $Enums.scholarshipGrantedType[]
    application: ApplicationCreateNestedOneWithoutScholarshipGrantedInput
  }

  export type ScholarshipGrantedUncheckedCreateWithoutAnnounmententInput = {
    id?: string
    gaveUp: boolean
    ScholarshipCode?: string | null
    types?: ScholarshipGrantedCreatetypesInput | $Enums.scholarshipGrantedType[]
    application_id: string
  }

  export type ScholarshipGrantedCreateOrConnectWithoutAnnounmententInput = {
    where: ScholarshipGrantedWhereUniqueInput
    create: XOR<ScholarshipGrantedCreateWithoutAnnounmententInput, ScholarshipGrantedUncheckedCreateWithoutAnnounmententInput>
  }

  export type ScholarshipGrantedCreateManyAnnounmententInputEnvelope = {
    data: ScholarshipGrantedCreateManyAnnounmententInput | ScholarshipGrantedCreateManyAnnounmententInput[]
    skipDuplicates?: boolean
  }

  export type TimelineCreateWithoutAnnouncementInput = {
    id?: string
    controlLine: number
    stage: string
    deadline: Date | string
  }

  export type TimelineUncheckedCreateWithoutAnnouncementInput = {
    id?: string
    controlLine: number
    stage: string
    deadline: Date | string
  }

  export type TimelineCreateOrConnectWithoutAnnouncementInput = {
    where: TimelineWhereUniqueInput
    create: XOR<TimelineCreateWithoutAnnouncementInput, TimelineUncheckedCreateWithoutAnnouncementInput>
  }

  export type TimelineCreateManyAnnouncementInputEnvelope = {
    data: TimelineCreateManyAnnouncementInput | TimelineCreateManyAnnouncementInput[]
    skipDuplicates?: boolean
  }

  export type SocialAssistantCreateWithoutAnnouncementInput = {
    id?: string
    name: string
    CPF: string
    RG: string
    CRESS: string
    phone: string
    Application?: ApplicationCreateNestedManyWithoutSocialAssistantInput
    entity: EntityCreateNestedOneWithoutSocialAssistantInput
    user: UserCreateNestedOneWithoutSocialAssistantInput
    entity_subsidiary?: EntitySubsidiaryCreateNestedManyWithoutSocialAssistantInput
  }

  export type SocialAssistantUncheckedCreateWithoutAnnouncementInput = {
    id?: string
    name: string
    CPF: string
    RG: string
    CRESS: string
    phone: string
    user_id: string
    entity_id: string
    Application?: ApplicationUncheckedCreateNestedManyWithoutSocialAssistantInput
    entity_subsidiary?: EntitySubsidiaryUncheckedCreateNestedManyWithoutSocialAssistantInput
  }

  export type SocialAssistantCreateOrConnectWithoutAnnouncementInput = {
    where: SocialAssistantWhereUniqueInput
    create: XOR<SocialAssistantCreateWithoutAnnouncementInput, SocialAssistantUncheckedCreateWithoutAnnouncementInput>
  }

  export type AnnouncementInterviewUpsertWithoutAnnouncementInput = {
    update: XOR<AnnouncementInterviewUpdateWithoutAnnouncementInput, AnnouncementInterviewUncheckedUpdateWithoutAnnouncementInput>
    create: XOR<AnnouncementInterviewCreateWithoutAnnouncementInput, AnnouncementInterviewUncheckedCreateWithoutAnnouncementInput>
    where?: AnnouncementInterviewWhereInput
  }

  export type AnnouncementInterviewUpdateToOneWithWhereWithoutAnnouncementInput = {
    where?: AnnouncementInterviewWhereInput
    data: XOR<AnnouncementInterviewUpdateWithoutAnnouncementInput, AnnouncementInterviewUncheckedUpdateWithoutAnnouncementInput>
  }

  export type AnnouncementInterviewUpdateWithoutAnnouncementInput = {
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    beginHour?: DateTimeFieldUpdateOperationsInput | Date | string
    interval?: IntFieldUpdateOperationsInput | number
    endHour?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
  }

  export type AnnouncementInterviewUncheckedUpdateWithoutAnnouncementInput = {
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    beginHour?: DateTimeFieldUpdateOperationsInput | Date | string
    interval?: IntFieldUpdateOperationsInput | number
    endHour?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
  }

  export type EntityUpsertWithoutAnnouncementInput = {
    update: XOR<EntityUpdateWithoutAnnouncementInput, EntityUncheckedUpdateWithoutAnnouncementInput>
    create: XOR<EntityCreateWithoutAnnouncementInput, EntityUncheckedCreateWithoutAnnouncementInput>
    where?: EntityWhereInput
  }

  export type EntityUpdateToOneWithWhereWithoutAnnouncementInput = {
    where?: EntityWhereInput
    data: XOR<EntityUpdateWithoutAnnouncementInput, EntityUncheckedUpdateWithoutAnnouncementInput>
  }

  export type EntityUpdateWithoutAnnouncementInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    socialReason?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    CNPJ?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    neighborhood?: StringFieldUpdateOperationsInput | string
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    city?: StringFieldUpdateOperationsInput | string
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
    EntityDirector?: EntityDirectorUpdateManyWithoutEntityNestedInput
    EntitySubsidiary?: EntitySubsidiaryUpdateManyWithoutEntityNestedInput
    SocialAssistant?: SocialAssistantUpdateManyWithoutEntityNestedInput
    user?: UserUpdateOneRequiredWithoutEntityNestedInput
  }

  export type EntityUncheckedUpdateWithoutAnnouncementInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    socialReason?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    CNPJ?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    neighborhood?: StringFieldUpdateOperationsInput | string
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    city?: StringFieldUpdateOperationsInput | string
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: StringFieldUpdateOperationsInput | string
    EntityDirector?: EntityDirectorUncheckedUpdateManyWithoutEntityNestedInput
    EntitySubsidiary?: EntitySubsidiaryUncheckedUpdateManyWithoutEntityNestedInput
    SocialAssistant?: SocialAssistantUncheckedUpdateManyWithoutEntityNestedInput
  }

  export type EntitySubsidiaryUpsertWithWhereUniqueWithoutAnnouncementInput = {
    where: EntitySubsidiaryWhereUniqueInput
    update: XOR<EntitySubsidiaryUpdateWithoutAnnouncementInput, EntitySubsidiaryUncheckedUpdateWithoutAnnouncementInput>
    create: XOR<EntitySubsidiaryCreateWithoutAnnouncementInput, EntitySubsidiaryUncheckedCreateWithoutAnnouncementInput>
  }

  export type EntitySubsidiaryUpdateWithWhereUniqueWithoutAnnouncementInput = {
    where: EntitySubsidiaryWhereUniqueInput
    data: XOR<EntitySubsidiaryUpdateWithoutAnnouncementInput, EntitySubsidiaryUncheckedUpdateWithoutAnnouncementInput>
  }

  export type EntitySubsidiaryUpdateManyWithWhereWithoutAnnouncementInput = {
    where: EntitySubsidiaryScalarWhereInput
    data: XOR<EntitySubsidiaryUpdateManyMutationInput, EntitySubsidiaryUncheckedUpdateManyWithoutAnnouncementInput>
  }

  export type ApplicationUpsertWithWhereUniqueWithoutAnnouncementInput = {
    where: ApplicationWhereUniqueInput
    update: XOR<ApplicationUpdateWithoutAnnouncementInput, ApplicationUncheckedUpdateWithoutAnnouncementInput>
    create: XOR<ApplicationCreateWithoutAnnouncementInput, ApplicationUncheckedCreateWithoutAnnouncementInput>
  }

  export type ApplicationUpdateWithWhereUniqueWithoutAnnouncementInput = {
    where: ApplicationWhereUniqueInput
    data: XOR<ApplicationUpdateWithoutAnnouncementInput, ApplicationUncheckedUpdateWithoutAnnouncementInput>
  }

  export type ApplicationUpdateManyWithWhereWithoutAnnouncementInput = {
    where: ApplicationScalarWhereInput
    data: XOR<ApplicationUpdateManyMutationInput, ApplicationUncheckedUpdateManyWithoutAnnouncementInput>
  }

  export type EducationLevelUpsertWithWhereUniqueWithoutAnnouncementInput = {
    where: EducationLevelWhereUniqueInput
    update: XOR<EducationLevelUpdateWithoutAnnouncementInput, EducationLevelUncheckedUpdateWithoutAnnouncementInput>
    create: XOR<EducationLevelCreateWithoutAnnouncementInput, EducationLevelUncheckedCreateWithoutAnnouncementInput>
  }

  export type EducationLevelUpdateWithWhereUniqueWithoutAnnouncementInput = {
    where: EducationLevelWhereUniqueInput
    data: XOR<EducationLevelUpdateWithoutAnnouncementInput, EducationLevelUncheckedUpdateWithoutAnnouncementInput>
  }

  export type EducationLevelUpdateManyWithWhereWithoutAnnouncementInput = {
    where: EducationLevelScalarWhereInput
    data: XOR<EducationLevelUpdateManyMutationInput, EducationLevelUncheckedUpdateManyWithoutAnnouncementInput>
  }

  export type ScholarshipGrantedUpsertWithWhereUniqueWithoutAnnounmententInput = {
    where: ScholarshipGrantedWhereUniqueInput
    update: XOR<ScholarshipGrantedUpdateWithoutAnnounmententInput, ScholarshipGrantedUncheckedUpdateWithoutAnnounmententInput>
    create: XOR<ScholarshipGrantedCreateWithoutAnnounmententInput, ScholarshipGrantedUncheckedCreateWithoutAnnounmententInput>
  }

  export type ScholarshipGrantedUpdateWithWhereUniqueWithoutAnnounmententInput = {
    where: ScholarshipGrantedWhereUniqueInput
    data: XOR<ScholarshipGrantedUpdateWithoutAnnounmententInput, ScholarshipGrantedUncheckedUpdateWithoutAnnounmententInput>
  }

  export type ScholarshipGrantedUpdateManyWithWhereWithoutAnnounmententInput = {
    where: ScholarshipGrantedScalarWhereInput
    data: XOR<ScholarshipGrantedUpdateManyMutationInput, ScholarshipGrantedUncheckedUpdateManyWithoutAnnounmententInput>
  }

  export type ScholarshipGrantedScalarWhereInput = {
    AND?: ScholarshipGrantedScalarWhereInput | ScholarshipGrantedScalarWhereInput[]
    OR?: ScholarshipGrantedScalarWhereInput[]
    NOT?: ScholarshipGrantedScalarWhereInput | ScholarshipGrantedScalarWhereInput[]
    id?: StringFilter<"ScholarshipGranted"> | string
    gaveUp?: BoolFilter<"ScholarshipGranted"> | boolean
    ScholarshipCode?: StringNullableFilter<"ScholarshipGranted"> | string | null
    types?: EnumscholarshipGrantedTypeNullableListFilter<"ScholarshipGranted">
    application_id?: StringFilter<"ScholarshipGranted"> | string
    announcement_id?: StringFilter<"ScholarshipGranted"> | string
  }

  export type TimelineUpsertWithWhereUniqueWithoutAnnouncementInput = {
    where: TimelineWhereUniqueInput
    update: XOR<TimelineUpdateWithoutAnnouncementInput, TimelineUncheckedUpdateWithoutAnnouncementInput>
    create: XOR<TimelineCreateWithoutAnnouncementInput, TimelineUncheckedCreateWithoutAnnouncementInput>
  }

  export type TimelineUpdateWithWhereUniqueWithoutAnnouncementInput = {
    where: TimelineWhereUniqueInput
    data: XOR<TimelineUpdateWithoutAnnouncementInput, TimelineUncheckedUpdateWithoutAnnouncementInput>
  }

  export type TimelineUpdateManyWithWhereWithoutAnnouncementInput = {
    where: TimelineScalarWhereInput
    data: XOR<TimelineUpdateManyMutationInput, TimelineUncheckedUpdateManyWithoutAnnouncementInput>
  }

  export type TimelineScalarWhereInput = {
    AND?: TimelineScalarWhereInput | TimelineScalarWhereInput[]
    OR?: TimelineScalarWhereInput[]
    NOT?: TimelineScalarWhereInput | TimelineScalarWhereInput[]
    id?: StringFilter<"Timeline"> | string
    controlLine?: IntFilter<"Timeline"> | number
    stage?: StringFilter<"Timeline"> | string
    deadline?: DateTimeFilter<"Timeline"> | Date | string
    announcementId?: StringFilter<"Timeline"> | string
  }

  export type SocialAssistantUpsertWithWhereUniqueWithoutAnnouncementInput = {
    where: SocialAssistantWhereUniqueInput
    update: XOR<SocialAssistantUpdateWithoutAnnouncementInput, SocialAssistantUncheckedUpdateWithoutAnnouncementInput>
    create: XOR<SocialAssistantCreateWithoutAnnouncementInput, SocialAssistantUncheckedCreateWithoutAnnouncementInput>
  }

  export type SocialAssistantUpdateWithWhereUniqueWithoutAnnouncementInput = {
    where: SocialAssistantWhereUniqueInput
    data: XOR<SocialAssistantUpdateWithoutAnnouncementInput, SocialAssistantUncheckedUpdateWithoutAnnouncementInput>
  }

  export type SocialAssistantUpdateManyWithWhereWithoutAnnouncementInput = {
    where: SocialAssistantScalarWhereInput
    data: XOR<SocialAssistantUpdateManyMutationInput, SocialAssistantUncheckedUpdateManyWithoutAnnouncementInput>
  }

  export type AnnouncementCreateWithoutTimelinesInput = {
    id?: string
    entityChanged?: boolean | null
    branchChanged?: boolean | null
    announcementType: $Enums.AnnouncementType
    announcementNumber?: string | null
    announcementDate?: Date | string | null
    announcementBegin?: Date | string | null
    openDate?: Date | string | null
    closeDate?: Date | string | null
    waitingList?: boolean | null
    offeredVacancies?: number | null
    verifiedScholarships?: number | null
    description?: string | null
    announcementName?: string | null
    announcementLogo?: string | null
    type2?: string | null
    criteria?: AnnouncementCreatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementCreatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewCreateNestedOneWithoutAnnouncementInput
    entity: EntityCreateNestedOneWithoutAnnouncementInput
    entity_subsidiary?: EntitySubsidiaryCreateNestedManyWithoutAnnouncementInput
    Application?: ApplicationCreateNestedManyWithoutAnnouncementInput
    educationLevels?: EducationLevelCreateNestedManyWithoutAnnouncementInput
    ScholarshipGranted?: ScholarshipGrantedCreateNestedManyWithoutAnnounmententInput
    socialAssistant?: SocialAssistantCreateNestedManyWithoutAnnouncementInput
  }

  export type AnnouncementUncheckedCreateWithoutTimelinesInput = {
    id?: string
    entityChanged?: boolean | null
    branchChanged?: boolean | null
    announcementType: $Enums.AnnouncementType
    announcementNumber?: string | null
    announcementDate?: Date | string | null
    announcementBegin?: Date | string | null
    openDate?: Date | string | null
    closeDate?: Date | string | null
    waitingList?: boolean | null
    offeredVacancies?: number | null
    verifiedScholarships?: number | null
    description?: string | null
    entity_id: string
    announcementName?: string | null
    announcementLogo?: string | null
    type2?: string | null
    criteria?: AnnouncementCreatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementCreatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewUncheckedCreateNestedOneWithoutAnnouncementInput
    entity_subsidiary?: EntitySubsidiaryUncheckedCreateNestedManyWithoutAnnouncementInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutAnnouncementInput
    educationLevels?: EducationLevelUncheckedCreateNestedManyWithoutAnnouncementInput
    ScholarshipGranted?: ScholarshipGrantedUncheckedCreateNestedManyWithoutAnnounmententInput
    socialAssistant?: SocialAssistantUncheckedCreateNestedManyWithoutAnnouncementInput
  }

  export type AnnouncementCreateOrConnectWithoutTimelinesInput = {
    where: AnnouncementWhereUniqueInput
    create: XOR<AnnouncementCreateWithoutTimelinesInput, AnnouncementUncheckedCreateWithoutTimelinesInput>
  }

  export type AnnouncementUpsertWithoutTimelinesInput = {
    update: XOR<AnnouncementUpdateWithoutTimelinesInput, AnnouncementUncheckedUpdateWithoutTimelinesInput>
    create: XOR<AnnouncementCreateWithoutTimelinesInput, AnnouncementUncheckedCreateWithoutTimelinesInput>
    where?: AnnouncementWhereInput
  }

  export type AnnouncementUpdateToOneWithWhereWithoutTimelinesInput = {
    where?: AnnouncementWhereInput
    data: XOR<AnnouncementUpdateWithoutTimelinesInput, AnnouncementUncheckedUpdateWithoutTimelinesInput>
  }

  export type AnnouncementUpdateWithoutTimelinesInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    branchChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    announcementType?: EnumAnnouncementTypeFieldUpdateOperationsInput | $Enums.AnnouncementType
    announcementNumber?: NullableStringFieldUpdateOperationsInput | string | null
    announcementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    announcementBegin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closeDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waitingList?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    announcementName?: NullableStringFieldUpdateOperationsInput | string | null
    announcementLogo?: NullableStringFieldUpdateOperationsInput | string | null
    type2?: NullableStringFieldUpdateOperationsInput | string | null
    criteria?: AnnouncementUpdatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementUpdatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewUpdateOneWithoutAnnouncementNestedInput
    entity?: EntityUpdateOneRequiredWithoutAnnouncementNestedInput
    entity_subsidiary?: EntitySubsidiaryUpdateManyWithoutAnnouncementNestedInput
    Application?: ApplicationUpdateManyWithoutAnnouncementNestedInput
    educationLevels?: EducationLevelUpdateManyWithoutAnnouncementNestedInput
    ScholarshipGranted?: ScholarshipGrantedUpdateManyWithoutAnnounmententNestedInput
    socialAssistant?: SocialAssistantUpdateManyWithoutAnnouncementNestedInput
  }

  export type AnnouncementUncheckedUpdateWithoutTimelinesInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    branchChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    announcementType?: EnumAnnouncementTypeFieldUpdateOperationsInput | $Enums.AnnouncementType
    announcementNumber?: NullableStringFieldUpdateOperationsInput | string | null
    announcementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    announcementBegin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closeDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waitingList?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    entity_id?: StringFieldUpdateOperationsInput | string
    announcementName?: NullableStringFieldUpdateOperationsInput | string | null
    announcementLogo?: NullableStringFieldUpdateOperationsInput | string | null
    type2?: NullableStringFieldUpdateOperationsInput | string | null
    criteria?: AnnouncementUpdatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementUpdatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewUncheckedUpdateOneWithoutAnnouncementNestedInput
    entity_subsidiary?: EntitySubsidiaryUncheckedUpdateManyWithoutAnnouncementNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutAnnouncementNestedInput
    educationLevels?: EducationLevelUncheckedUpdateManyWithoutAnnouncementNestedInput
    ScholarshipGranted?: ScholarshipGrantedUncheckedUpdateManyWithoutAnnounmententNestedInput
    socialAssistant?: SocialAssistantUncheckedUpdateManyWithoutAnnouncementNestedInput
  }

  export type ApplicationCreateWithoutEducationLevelInput = {
    id?: string
    status: $Enums.ApplicationStatus
    candidateName?: string | null
    SocialAssistantName?: string | null
    CadUnico?: boolean | null
    hasSevereDesease?: boolean | null
    averageIncome?: number | null
    perCapita?: number | null
    position?: number | null
    number?: number
    announcement: AnnouncementCreateNestedOneWithoutApplicationInput
    candidate: CandidateCreateNestedOneWithoutApplicationInput
    SocialAssistant?: SocialAssistantCreateNestedOneWithoutApplicationInput
    applicationHistories?: ApplicationHistoryCreateNestedManyWithoutApplicationInput
    ScholarshipGranted?: ScholarshipGrantedCreateNestedOneWithoutApplicationInput
    responsible?: LegalResponsibleCreateNestedOneWithoutApplicationInput
  }

  export type ApplicationUncheckedCreateWithoutEducationLevelInput = {
    id?: string
    candidate_id: string
    announcement_id: string
    status: $Enums.ApplicationStatus
    socialAssistant_id?: string | null
    candidateName?: string | null
    SocialAssistantName?: string | null
    CadUnico?: boolean | null
    hasSevereDesease?: boolean | null
    averageIncome?: number | null
    perCapita?: number | null
    position?: number | null
    number?: number
    reponsible_id?: string | null
    applicationHistories?: ApplicationHistoryUncheckedCreateNestedManyWithoutApplicationInput
    ScholarshipGranted?: ScholarshipGrantedUncheckedCreateNestedOneWithoutApplicationInput
  }

  export type ApplicationCreateOrConnectWithoutEducationLevelInput = {
    where: ApplicationWhereUniqueInput
    create: XOR<ApplicationCreateWithoutEducationLevelInput, ApplicationUncheckedCreateWithoutEducationLevelInput>
  }

  export type ApplicationCreateManyEducationLevelInputEnvelope = {
    data: ApplicationCreateManyEducationLevelInput | ApplicationCreateManyEducationLevelInput[]
    skipDuplicates?: boolean
  }

  export type AnnouncementCreateWithoutEducationLevelsInput = {
    id?: string
    entityChanged?: boolean | null
    branchChanged?: boolean | null
    announcementType: $Enums.AnnouncementType
    announcementNumber?: string | null
    announcementDate?: Date | string | null
    announcementBegin?: Date | string | null
    openDate?: Date | string | null
    closeDate?: Date | string | null
    waitingList?: boolean | null
    offeredVacancies?: number | null
    verifiedScholarships?: number | null
    description?: string | null
    announcementName?: string | null
    announcementLogo?: string | null
    type2?: string | null
    criteria?: AnnouncementCreatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementCreatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewCreateNestedOneWithoutAnnouncementInput
    entity: EntityCreateNestedOneWithoutAnnouncementInput
    entity_subsidiary?: EntitySubsidiaryCreateNestedManyWithoutAnnouncementInput
    Application?: ApplicationCreateNestedManyWithoutAnnouncementInput
    ScholarshipGranted?: ScholarshipGrantedCreateNestedManyWithoutAnnounmententInput
    timelines?: TimelineCreateNestedManyWithoutAnnouncementInput
    socialAssistant?: SocialAssistantCreateNestedManyWithoutAnnouncementInput
  }

  export type AnnouncementUncheckedCreateWithoutEducationLevelsInput = {
    id?: string
    entityChanged?: boolean | null
    branchChanged?: boolean | null
    announcementType: $Enums.AnnouncementType
    announcementNumber?: string | null
    announcementDate?: Date | string | null
    announcementBegin?: Date | string | null
    openDate?: Date | string | null
    closeDate?: Date | string | null
    waitingList?: boolean | null
    offeredVacancies?: number | null
    verifiedScholarships?: number | null
    description?: string | null
    entity_id: string
    announcementName?: string | null
    announcementLogo?: string | null
    type2?: string | null
    criteria?: AnnouncementCreatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementCreatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewUncheckedCreateNestedOneWithoutAnnouncementInput
    entity_subsidiary?: EntitySubsidiaryUncheckedCreateNestedManyWithoutAnnouncementInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutAnnouncementInput
    ScholarshipGranted?: ScholarshipGrantedUncheckedCreateNestedManyWithoutAnnounmententInput
    timelines?: TimelineUncheckedCreateNestedManyWithoutAnnouncementInput
    socialAssistant?: SocialAssistantUncheckedCreateNestedManyWithoutAnnouncementInput
  }

  export type AnnouncementCreateOrConnectWithoutEducationLevelsInput = {
    where: AnnouncementWhereUniqueInput
    create: XOR<AnnouncementCreateWithoutEducationLevelsInput, AnnouncementUncheckedCreateWithoutEducationLevelsInput>
  }

  export type EntitySubsidiaryCreateWithoutEducationLevelInput = {
    id?: string
    CNPJ: string
    name: string
    socialReason: string
    CEP: string
    address: string
    addressNumber?: number | null
    city?: string | null
    neighborhood?: string | null
    UF?: $Enums.COUNTRY | null
    educationalInstitutionCode?: string | null
    Announcement?: AnnouncementCreateNestedManyWithoutEntity_subsidiaryInput
    EntityDirector?: EntityDirectorCreateNestedManyWithoutEntity_subsidiaryInput
    entity: EntityCreateNestedOneWithoutEntitySubsidiaryInput
    user: UserCreateNestedOneWithoutEntitySubsidiaryInput
    SocialAssistant?: SocialAssistantCreateNestedManyWithoutEntity_subsidiaryInput
  }

  export type EntitySubsidiaryUncheckedCreateWithoutEducationLevelInput = {
    id?: string
    CNPJ: string
    name: string
    socialReason: string
    CEP: string
    address: string
    addressNumber?: number | null
    city?: string | null
    neighborhood?: string | null
    UF?: $Enums.COUNTRY | null
    educationalInstitutionCode?: string | null
    entity_id: string
    user_id: string
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutEntity_subsidiaryInput
    EntityDirector?: EntityDirectorUncheckedCreateNestedManyWithoutEntity_subsidiaryInput
    SocialAssistant?: SocialAssistantUncheckedCreateNestedManyWithoutEntity_subsidiaryInput
  }

  export type EntitySubsidiaryCreateOrConnectWithoutEducationLevelInput = {
    where: EntitySubsidiaryWhereUniqueInput
    create: XOR<EntitySubsidiaryCreateWithoutEducationLevelInput, EntitySubsidiaryUncheckedCreateWithoutEducationLevelInput>
  }

  export type ApplicationUpsertWithWhereUniqueWithoutEducationLevelInput = {
    where: ApplicationWhereUniqueInput
    update: XOR<ApplicationUpdateWithoutEducationLevelInput, ApplicationUncheckedUpdateWithoutEducationLevelInput>
    create: XOR<ApplicationCreateWithoutEducationLevelInput, ApplicationUncheckedCreateWithoutEducationLevelInput>
  }

  export type ApplicationUpdateWithWhereUniqueWithoutEducationLevelInput = {
    where: ApplicationWhereUniqueInput
    data: XOR<ApplicationUpdateWithoutEducationLevelInput, ApplicationUncheckedUpdateWithoutEducationLevelInput>
  }

  export type ApplicationUpdateManyWithWhereWithoutEducationLevelInput = {
    where: ApplicationScalarWhereInput
    data: XOR<ApplicationUpdateManyMutationInput, ApplicationUncheckedUpdateManyWithoutEducationLevelInput>
  }

  export type AnnouncementUpsertWithoutEducationLevelsInput = {
    update: XOR<AnnouncementUpdateWithoutEducationLevelsInput, AnnouncementUncheckedUpdateWithoutEducationLevelsInput>
    create: XOR<AnnouncementCreateWithoutEducationLevelsInput, AnnouncementUncheckedCreateWithoutEducationLevelsInput>
    where?: AnnouncementWhereInput
  }

  export type AnnouncementUpdateToOneWithWhereWithoutEducationLevelsInput = {
    where?: AnnouncementWhereInput
    data: XOR<AnnouncementUpdateWithoutEducationLevelsInput, AnnouncementUncheckedUpdateWithoutEducationLevelsInput>
  }

  export type AnnouncementUpdateWithoutEducationLevelsInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    branchChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    announcementType?: EnumAnnouncementTypeFieldUpdateOperationsInput | $Enums.AnnouncementType
    announcementNumber?: NullableStringFieldUpdateOperationsInput | string | null
    announcementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    announcementBegin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closeDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waitingList?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    announcementName?: NullableStringFieldUpdateOperationsInput | string | null
    announcementLogo?: NullableStringFieldUpdateOperationsInput | string | null
    type2?: NullableStringFieldUpdateOperationsInput | string | null
    criteria?: AnnouncementUpdatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementUpdatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewUpdateOneWithoutAnnouncementNestedInput
    entity?: EntityUpdateOneRequiredWithoutAnnouncementNestedInput
    entity_subsidiary?: EntitySubsidiaryUpdateManyWithoutAnnouncementNestedInput
    Application?: ApplicationUpdateManyWithoutAnnouncementNestedInput
    ScholarshipGranted?: ScholarshipGrantedUpdateManyWithoutAnnounmententNestedInput
    timelines?: TimelineUpdateManyWithoutAnnouncementNestedInput
    socialAssistant?: SocialAssistantUpdateManyWithoutAnnouncementNestedInput
  }

  export type AnnouncementUncheckedUpdateWithoutEducationLevelsInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    branchChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    announcementType?: EnumAnnouncementTypeFieldUpdateOperationsInput | $Enums.AnnouncementType
    announcementNumber?: NullableStringFieldUpdateOperationsInput | string | null
    announcementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    announcementBegin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closeDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waitingList?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    entity_id?: StringFieldUpdateOperationsInput | string
    announcementName?: NullableStringFieldUpdateOperationsInput | string | null
    announcementLogo?: NullableStringFieldUpdateOperationsInput | string | null
    type2?: NullableStringFieldUpdateOperationsInput | string | null
    criteria?: AnnouncementUpdatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementUpdatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewUncheckedUpdateOneWithoutAnnouncementNestedInput
    entity_subsidiary?: EntitySubsidiaryUncheckedUpdateManyWithoutAnnouncementNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutAnnouncementNestedInput
    ScholarshipGranted?: ScholarshipGrantedUncheckedUpdateManyWithoutAnnounmententNestedInput
    timelines?: TimelineUncheckedUpdateManyWithoutAnnouncementNestedInput
    socialAssistant?: SocialAssistantUncheckedUpdateManyWithoutAnnouncementNestedInput
  }

  export type EntitySubsidiaryUpsertWithoutEducationLevelInput = {
    update: XOR<EntitySubsidiaryUpdateWithoutEducationLevelInput, EntitySubsidiaryUncheckedUpdateWithoutEducationLevelInput>
    create: XOR<EntitySubsidiaryCreateWithoutEducationLevelInput, EntitySubsidiaryUncheckedCreateWithoutEducationLevelInput>
    where?: EntitySubsidiaryWhereInput
  }

  export type EntitySubsidiaryUpdateToOneWithWhereWithoutEducationLevelInput = {
    where?: EntitySubsidiaryWhereInput
    data: XOR<EntitySubsidiaryUpdateWithoutEducationLevelInput, EntitySubsidiaryUncheckedUpdateWithoutEducationLevelInput>
  }

  export type EntitySubsidiaryUpdateWithoutEducationLevelInput = {
    id?: StringFieldUpdateOperationsInput | string
    CNPJ?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    socialReason?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
    Announcement?: AnnouncementUpdateManyWithoutEntity_subsidiaryNestedInput
    EntityDirector?: EntityDirectorUpdateManyWithoutEntity_subsidiaryNestedInput
    entity?: EntityUpdateOneRequiredWithoutEntitySubsidiaryNestedInput
    user?: UserUpdateOneRequiredWithoutEntitySubsidiaryNestedInput
    SocialAssistant?: SocialAssistantUpdateManyWithoutEntity_subsidiaryNestedInput
  }

  export type EntitySubsidiaryUncheckedUpdateWithoutEducationLevelInput = {
    id?: StringFieldUpdateOperationsInput | string
    CNPJ?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    socialReason?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
    entity_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    Announcement?: AnnouncementUncheckedUpdateManyWithoutEntity_subsidiaryNestedInput
    EntityDirector?: EntityDirectorUncheckedUpdateManyWithoutEntity_subsidiaryNestedInput
    SocialAssistant?: SocialAssistantUncheckedUpdateManyWithoutEntity_subsidiaryNestedInput
  }

  export type AnnouncementCreateWithoutApplicationInput = {
    id?: string
    entityChanged?: boolean | null
    branchChanged?: boolean | null
    announcementType: $Enums.AnnouncementType
    announcementNumber?: string | null
    announcementDate?: Date | string | null
    announcementBegin?: Date | string | null
    openDate?: Date | string | null
    closeDate?: Date | string | null
    waitingList?: boolean | null
    offeredVacancies?: number | null
    verifiedScholarships?: number | null
    description?: string | null
    announcementName?: string | null
    announcementLogo?: string | null
    type2?: string | null
    criteria?: AnnouncementCreatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementCreatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewCreateNestedOneWithoutAnnouncementInput
    entity: EntityCreateNestedOneWithoutAnnouncementInput
    entity_subsidiary?: EntitySubsidiaryCreateNestedManyWithoutAnnouncementInput
    educationLevels?: EducationLevelCreateNestedManyWithoutAnnouncementInput
    ScholarshipGranted?: ScholarshipGrantedCreateNestedManyWithoutAnnounmententInput
    timelines?: TimelineCreateNestedManyWithoutAnnouncementInput
    socialAssistant?: SocialAssistantCreateNestedManyWithoutAnnouncementInput
  }

  export type AnnouncementUncheckedCreateWithoutApplicationInput = {
    id?: string
    entityChanged?: boolean | null
    branchChanged?: boolean | null
    announcementType: $Enums.AnnouncementType
    announcementNumber?: string | null
    announcementDate?: Date | string | null
    announcementBegin?: Date | string | null
    openDate?: Date | string | null
    closeDate?: Date | string | null
    waitingList?: boolean | null
    offeredVacancies?: number | null
    verifiedScholarships?: number | null
    description?: string | null
    entity_id: string
    announcementName?: string | null
    announcementLogo?: string | null
    type2?: string | null
    criteria?: AnnouncementCreatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementCreatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewUncheckedCreateNestedOneWithoutAnnouncementInput
    entity_subsidiary?: EntitySubsidiaryUncheckedCreateNestedManyWithoutAnnouncementInput
    educationLevels?: EducationLevelUncheckedCreateNestedManyWithoutAnnouncementInput
    ScholarshipGranted?: ScholarshipGrantedUncheckedCreateNestedManyWithoutAnnounmententInput
    timelines?: TimelineUncheckedCreateNestedManyWithoutAnnouncementInput
    socialAssistant?: SocialAssistantUncheckedCreateNestedManyWithoutAnnouncementInput
  }

  export type AnnouncementCreateOrConnectWithoutApplicationInput = {
    where: AnnouncementWhereUniqueInput
    create: XOR<AnnouncementCreateWithoutApplicationInput, AnnouncementUncheckedCreateWithoutApplicationInput>
  }

  export type CandidateCreateWithoutApplicationInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    CreditCard?: CreditCardCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseCreateNestedManyWithoutCandidateInput
    Financing?: FinancingCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutCandidateInput
    Loan?: LoanCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleCreateNestedManyWithoutCandidateInput
    responsible?: LegalResponsibleCreateNestedOneWithoutCandidateInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutCandidateInput
    Housing?: HousingCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutCandidateInput
    Medication?: MedicationCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsCreateNestedManyWithoutCandidateInput
  }

  export type CandidateUncheckedCreateWithoutApplicationInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    responsible_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutCandidateInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutCandidateInput
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutCandidateInput
    Loan?: LoanUncheckedCreateNestedManyWithoutCandidateInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutCandidateInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutCandidateInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutCandidateInput
    Housing?: HousingUncheckedCreateNestedManyWithoutCandidateInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutCandidateInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutCandidateInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutCandidateInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutCandidateInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutCandidateInput
  }

  export type CandidateCreateOrConnectWithoutApplicationInput = {
    where: CandidateWhereUniqueInput
    create: XOR<CandidateCreateWithoutApplicationInput, CandidateUncheckedCreateWithoutApplicationInput>
  }

  export type EducationLevelCreateWithoutApplicationInput = {
    id?: string
    level: $Enums.LevelType
    basicEduType?: $Enums.BasicEducationType | null
    scholarshipType?: $Enums.ScholarshipOfferType | null
    higherEduScholarshipType?: $Enums.HigherEducationScholarshipType | null
    offeredCourseType?: $Enums.OfferedCourseType | null
    availableCourses?: string | null
    offeredVacancies?: number | null
    verifiedScholarships?: number | null
    shift?: $Enums.SHIFT | null
    semester?: number | null
    grade?: string | null
    announcement: AnnouncementCreateNestedOneWithoutEducationLevelsInput
    entitySubsidiary?: EntitySubsidiaryCreateNestedOneWithoutEducationLevelInput
  }

  export type EducationLevelUncheckedCreateWithoutApplicationInput = {
    id?: string
    level: $Enums.LevelType
    basicEduType?: $Enums.BasicEducationType | null
    scholarshipType?: $Enums.ScholarshipOfferType | null
    higherEduScholarshipType?: $Enums.HigherEducationScholarshipType | null
    offeredCourseType?: $Enums.OfferedCourseType | null
    availableCourses?: string | null
    offeredVacancies?: number | null
    verifiedScholarships?: number | null
    shift?: $Enums.SHIFT | null
    semester?: number | null
    grade?: string | null
    announcementId: string
    entitySubsidiaryId?: string | null
  }

  export type EducationLevelCreateOrConnectWithoutApplicationInput = {
    where: EducationLevelWhereUniqueInput
    create: XOR<EducationLevelCreateWithoutApplicationInput, EducationLevelUncheckedCreateWithoutApplicationInput>
  }

  export type SocialAssistantCreateWithoutApplicationInput = {
    id?: string
    name: string
    CPF: string
    RG: string
    CRESS: string
    phone: string
    entity: EntityCreateNestedOneWithoutSocialAssistantInput
    user: UserCreateNestedOneWithoutSocialAssistantInput
    Announcement?: AnnouncementCreateNestedManyWithoutSocialAssistantInput
    entity_subsidiary?: EntitySubsidiaryCreateNestedManyWithoutSocialAssistantInput
  }

  export type SocialAssistantUncheckedCreateWithoutApplicationInput = {
    id?: string
    name: string
    CPF: string
    RG: string
    CRESS: string
    phone: string
    user_id: string
    entity_id: string
    Announcement?: AnnouncementUncheckedCreateNestedManyWithoutSocialAssistantInput
    entity_subsidiary?: EntitySubsidiaryUncheckedCreateNestedManyWithoutSocialAssistantInput
  }

  export type SocialAssistantCreateOrConnectWithoutApplicationInput = {
    where: SocialAssistantWhereUniqueInput
    create: XOR<SocialAssistantCreateWithoutApplicationInput, SocialAssistantUncheckedCreateWithoutApplicationInput>
  }

  export type ApplicationHistoryCreateWithoutApplicationInput = {
    id?: string
    description: string
    solicitation?: $Enums.SolicitationType | null
    report?: string | null
    answered?: boolean | null
    deadLine?: Date | string | null
    date?: Date | string
  }

  export type ApplicationHistoryUncheckedCreateWithoutApplicationInput = {
    id?: string
    description: string
    solicitation?: $Enums.SolicitationType | null
    report?: string | null
    answered?: boolean | null
    deadLine?: Date | string | null
    date?: Date | string
  }

  export type ApplicationHistoryCreateOrConnectWithoutApplicationInput = {
    where: ApplicationHistoryWhereUniqueInput
    create: XOR<ApplicationHistoryCreateWithoutApplicationInput, ApplicationHistoryUncheckedCreateWithoutApplicationInput>
  }

  export type ApplicationHistoryCreateManyApplicationInputEnvelope = {
    data: ApplicationHistoryCreateManyApplicationInput | ApplicationHistoryCreateManyApplicationInput[]
    skipDuplicates?: boolean
  }

  export type ScholarshipGrantedCreateWithoutApplicationInput = {
    id?: string
    gaveUp: boolean
    ScholarshipCode?: string | null
    types?: ScholarshipGrantedCreatetypesInput | $Enums.scholarshipGrantedType[]
    announmentent: AnnouncementCreateNestedOneWithoutScholarshipGrantedInput
  }

  export type ScholarshipGrantedUncheckedCreateWithoutApplicationInput = {
    id?: string
    gaveUp: boolean
    ScholarshipCode?: string | null
    types?: ScholarshipGrantedCreatetypesInput | $Enums.scholarshipGrantedType[]
    announcement_id: string
  }

  export type ScholarshipGrantedCreateOrConnectWithoutApplicationInput = {
    where: ScholarshipGrantedWhereUniqueInput
    create: XOR<ScholarshipGrantedCreateWithoutApplicationInput, ScholarshipGrantedUncheckedCreateWithoutApplicationInput>
  }

  export type LegalResponsibleCreateWithoutApplicationInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateCreateNestedManyWithoutResponsibleInput
    Housing?: HousingCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleUncheckedCreateWithoutApplicationInput = {
    id?: string
    name: string
    main_id?: string | null
    CPF: string
    birthDate: Date | string
    livesAtSameAddress?: boolean | null
    institutionType?: $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: string | null
    responsibleShift?: $Enums.SHIFT | null
    ResponsibleEducationInstitution?: string | null
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id: string
    hasScholarship?: boolean | null
    monthlyAmount?: string | null
    percentageOfScholarship?: string | null
    application_id?: string | null
    IdentityDetails?: IdentityDetailsUncheckedCreateNestedManyWithoutResponsibleInput
    Candidate?: CandidateUncheckedCreateNestedManyWithoutResponsibleInput
    Housing?: HousingUncheckedCreateNestedManyWithoutResponsibleInput
    FamillyMember?: FamilyMemberUncheckedCreateNestedManyWithoutLegalResponsibleInput
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Expense?: ExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Loan?: LoanUncheckedCreateNestedManyWithoutLegalResponsibleInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Vehicle?: VehicleUncheckedCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutLegalResponsibleInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutLegalResponsibleInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutLegalResponsibleInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutLegalResponsibleInput
  }

  export type LegalResponsibleCreateOrConnectWithoutApplicationInput = {
    where: LegalResponsibleWhereUniqueInput
    create: XOR<LegalResponsibleCreateWithoutApplicationInput, LegalResponsibleUncheckedCreateWithoutApplicationInput>
  }

  export type AnnouncementUpsertWithoutApplicationInput = {
    update: XOR<AnnouncementUpdateWithoutApplicationInput, AnnouncementUncheckedUpdateWithoutApplicationInput>
    create: XOR<AnnouncementCreateWithoutApplicationInput, AnnouncementUncheckedCreateWithoutApplicationInput>
    where?: AnnouncementWhereInput
  }

  export type AnnouncementUpdateToOneWithWhereWithoutApplicationInput = {
    where?: AnnouncementWhereInput
    data: XOR<AnnouncementUpdateWithoutApplicationInput, AnnouncementUncheckedUpdateWithoutApplicationInput>
  }

  export type AnnouncementUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    branchChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    announcementType?: EnumAnnouncementTypeFieldUpdateOperationsInput | $Enums.AnnouncementType
    announcementNumber?: NullableStringFieldUpdateOperationsInput | string | null
    announcementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    announcementBegin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closeDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waitingList?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    announcementName?: NullableStringFieldUpdateOperationsInput | string | null
    announcementLogo?: NullableStringFieldUpdateOperationsInput | string | null
    type2?: NullableStringFieldUpdateOperationsInput | string | null
    criteria?: AnnouncementUpdatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementUpdatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewUpdateOneWithoutAnnouncementNestedInput
    entity?: EntityUpdateOneRequiredWithoutAnnouncementNestedInput
    entity_subsidiary?: EntitySubsidiaryUpdateManyWithoutAnnouncementNestedInput
    educationLevels?: EducationLevelUpdateManyWithoutAnnouncementNestedInput
    ScholarshipGranted?: ScholarshipGrantedUpdateManyWithoutAnnounmententNestedInput
    timelines?: TimelineUpdateManyWithoutAnnouncementNestedInput
    socialAssistant?: SocialAssistantUpdateManyWithoutAnnouncementNestedInput
  }

  export type AnnouncementUncheckedUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    branchChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    announcementType?: EnumAnnouncementTypeFieldUpdateOperationsInput | $Enums.AnnouncementType
    announcementNumber?: NullableStringFieldUpdateOperationsInput | string | null
    announcementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    announcementBegin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closeDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waitingList?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    entity_id?: StringFieldUpdateOperationsInput | string
    announcementName?: NullableStringFieldUpdateOperationsInput | string | null
    announcementLogo?: NullableStringFieldUpdateOperationsInput | string | null
    type2?: NullableStringFieldUpdateOperationsInput | string | null
    criteria?: AnnouncementUpdatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementUpdatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewUncheckedUpdateOneWithoutAnnouncementNestedInput
    entity_subsidiary?: EntitySubsidiaryUncheckedUpdateManyWithoutAnnouncementNestedInput
    educationLevels?: EducationLevelUncheckedUpdateManyWithoutAnnouncementNestedInput
    ScholarshipGranted?: ScholarshipGrantedUncheckedUpdateManyWithoutAnnounmententNestedInput
    timelines?: TimelineUncheckedUpdateManyWithoutAnnouncementNestedInput
    socialAssistant?: SocialAssistantUncheckedUpdateManyWithoutAnnouncementNestedInput
  }

  export type CandidateUpsertWithoutApplicationInput = {
    update: XOR<CandidateUpdateWithoutApplicationInput, CandidateUncheckedUpdateWithoutApplicationInput>
    create: XOR<CandidateCreateWithoutApplicationInput, CandidateUncheckedCreateWithoutApplicationInput>
    where?: CandidateWhereInput
  }

  export type CandidateUpdateToOneWithWhereWithoutApplicationInput = {
    where?: CandidateWhereInput
    data: XOR<CandidateUpdateWithoutApplicationInput, CandidateUncheckedUpdateWithoutApplicationInput>
  }

  export type CandidateUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    CreditCard?: CreditCardUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUpdateManyWithoutCandidateNestedInput
    responsible?: LegalResponsibleUpdateOneWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateUncheckedUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    responsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    CreditCard?: CreditCardUncheckedUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type EducationLevelUpsertWithoutApplicationInput = {
    update: XOR<EducationLevelUpdateWithoutApplicationInput, EducationLevelUncheckedUpdateWithoutApplicationInput>
    create: XOR<EducationLevelCreateWithoutApplicationInput, EducationLevelUncheckedCreateWithoutApplicationInput>
    where?: EducationLevelWhereInput
  }

  export type EducationLevelUpdateToOneWithWhereWithoutApplicationInput = {
    where?: EducationLevelWhereInput
    data: XOR<EducationLevelUpdateWithoutApplicationInput, EducationLevelUncheckedUpdateWithoutApplicationInput>
  }

  export type EducationLevelUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    level?: EnumLevelTypeFieldUpdateOperationsInput | $Enums.LevelType
    basicEduType?: NullableEnumBasicEducationTypeFieldUpdateOperationsInput | $Enums.BasicEducationType | null
    scholarshipType?: NullableEnumScholarshipOfferTypeFieldUpdateOperationsInput | $Enums.ScholarshipOfferType | null
    higherEduScholarshipType?: NullableEnumHigherEducationScholarshipTypeFieldUpdateOperationsInput | $Enums.HigherEducationScholarshipType | null
    offeredCourseType?: NullableEnumOfferedCourseTypeFieldUpdateOperationsInput | $Enums.OfferedCourseType | null
    availableCourses?: NullableStringFieldUpdateOperationsInput | string | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    shift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    semester?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    announcement?: AnnouncementUpdateOneRequiredWithoutEducationLevelsNestedInput
    entitySubsidiary?: EntitySubsidiaryUpdateOneWithoutEducationLevelNestedInput
  }

  export type EducationLevelUncheckedUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    level?: EnumLevelTypeFieldUpdateOperationsInput | $Enums.LevelType
    basicEduType?: NullableEnumBasicEducationTypeFieldUpdateOperationsInput | $Enums.BasicEducationType | null
    scholarshipType?: NullableEnumScholarshipOfferTypeFieldUpdateOperationsInput | $Enums.ScholarshipOfferType | null
    higherEduScholarshipType?: NullableEnumHigherEducationScholarshipTypeFieldUpdateOperationsInput | $Enums.HigherEducationScholarshipType | null
    offeredCourseType?: NullableEnumOfferedCourseTypeFieldUpdateOperationsInput | $Enums.OfferedCourseType | null
    availableCourses?: NullableStringFieldUpdateOperationsInput | string | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    shift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    semester?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    announcementId?: StringFieldUpdateOperationsInput | string
    entitySubsidiaryId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SocialAssistantUpsertWithoutApplicationInput = {
    update: XOR<SocialAssistantUpdateWithoutApplicationInput, SocialAssistantUncheckedUpdateWithoutApplicationInput>
    create: XOR<SocialAssistantCreateWithoutApplicationInput, SocialAssistantUncheckedCreateWithoutApplicationInput>
    where?: SocialAssistantWhereInput
  }

  export type SocialAssistantUpdateToOneWithWhereWithoutApplicationInput = {
    where?: SocialAssistantWhereInput
    data: XOR<SocialAssistantUpdateWithoutApplicationInput, SocialAssistantUncheckedUpdateWithoutApplicationInput>
  }

  export type SocialAssistantUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    CRESS?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    entity?: EntityUpdateOneRequiredWithoutSocialAssistantNestedInput
    user?: UserUpdateOneRequiredWithoutSocialAssistantNestedInput
    Announcement?: AnnouncementUpdateManyWithoutSocialAssistantNestedInput
    entity_subsidiary?: EntitySubsidiaryUpdateManyWithoutSocialAssistantNestedInput
  }

  export type SocialAssistantUncheckedUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    CRESS?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    entity_id?: StringFieldUpdateOperationsInput | string
    Announcement?: AnnouncementUncheckedUpdateManyWithoutSocialAssistantNestedInput
    entity_subsidiary?: EntitySubsidiaryUncheckedUpdateManyWithoutSocialAssistantNestedInput
  }

  export type ApplicationHistoryUpsertWithWhereUniqueWithoutApplicationInput = {
    where: ApplicationHistoryWhereUniqueInput
    update: XOR<ApplicationHistoryUpdateWithoutApplicationInput, ApplicationHistoryUncheckedUpdateWithoutApplicationInput>
    create: XOR<ApplicationHistoryCreateWithoutApplicationInput, ApplicationHistoryUncheckedCreateWithoutApplicationInput>
  }

  export type ApplicationHistoryUpdateWithWhereUniqueWithoutApplicationInput = {
    where: ApplicationHistoryWhereUniqueInput
    data: XOR<ApplicationHistoryUpdateWithoutApplicationInput, ApplicationHistoryUncheckedUpdateWithoutApplicationInput>
  }

  export type ApplicationHistoryUpdateManyWithWhereWithoutApplicationInput = {
    where: ApplicationHistoryScalarWhereInput
    data: XOR<ApplicationHistoryUpdateManyMutationInput, ApplicationHistoryUncheckedUpdateManyWithoutApplicationInput>
  }

  export type ApplicationHistoryScalarWhereInput = {
    AND?: ApplicationHistoryScalarWhereInput | ApplicationHistoryScalarWhereInput[]
    OR?: ApplicationHistoryScalarWhereInput[]
    NOT?: ApplicationHistoryScalarWhereInput | ApplicationHistoryScalarWhereInput[]
    id?: StringFilter<"ApplicationHistory"> | string
    application_id?: StringFilter<"ApplicationHistory"> | string
    description?: StringFilter<"ApplicationHistory"> | string
    solicitation?: EnumSolicitationTypeNullableFilter<"ApplicationHistory"> | $Enums.SolicitationType | null
    report?: StringNullableFilter<"ApplicationHistory"> | string | null
    answered?: BoolNullableFilter<"ApplicationHistory"> | boolean | null
    deadLine?: DateTimeNullableFilter<"ApplicationHistory"> | Date | string | null
    date?: DateTimeFilter<"ApplicationHistory"> | Date | string
  }

  export type ScholarshipGrantedUpsertWithoutApplicationInput = {
    update: XOR<ScholarshipGrantedUpdateWithoutApplicationInput, ScholarshipGrantedUncheckedUpdateWithoutApplicationInput>
    create: XOR<ScholarshipGrantedCreateWithoutApplicationInput, ScholarshipGrantedUncheckedCreateWithoutApplicationInput>
    where?: ScholarshipGrantedWhereInput
  }

  export type ScholarshipGrantedUpdateToOneWithWhereWithoutApplicationInput = {
    where?: ScholarshipGrantedWhereInput
    data: XOR<ScholarshipGrantedUpdateWithoutApplicationInput, ScholarshipGrantedUncheckedUpdateWithoutApplicationInput>
  }

  export type ScholarshipGrantedUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    gaveUp?: BoolFieldUpdateOperationsInput | boolean
    ScholarshipCode?: NullableStringFieldUpdateOperationsInput | string | null
    types?: ScholarshipGrantedUpdatetypesInput | $Enums.scholarshipGrantedType[]
    announmentent?: AnnouncementUpdateOneRequiredWithoutScholarshipGrantedNestedInput
  }

  export type ScholarshipGrantedUncheckedUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    gaveUp?: BoolFieldUpdateOperationsInput | boolean
    ScholarshipCode?: NullableStringFieldUpdateOperationsInput | string | null
    types?: ScholarshipGrantedUpdatetypesInput | $Enums.scholarshipGrantedType[]
    announcement_id?: StringFieldUpdateOperationsInput | string
  }

  export type LegalResponsibleUpsertWithoutApplicationInput = {
    update: XOR<LegalResponsibleUpdateWithoutApplicationInput, LegalResponsibleUncheckedUpdateWithoutApplicationInput>
    create: XOR<LegalResponsibleCreateWithoutApplicationInput, LegalResponsibleUncheckedCreateWithoutApplicationInput>
    where?: LegalResponsibleWhereInput
  }

  export type LegalResponsibleUpdateToOneWithWhereWithoutApplicationInput = {
    where?: LegalResponsibleWhereInput
    data: XOR<LegalResponsibleUpdateWithoutApplicationInput, LegalResponsibleUncheckedUpdateWithoutApplicationInput>
  }

  export type LegalResponsibleUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type LegalResponsibleUncheckedUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    CPF?: StringFieldUpdateOperationsInput | string
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    livesAtSameAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    institutionType?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    responsibleEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    responsibleGradeOrSemester?: NullableStringFieldUpdateOperationsInput | string | null
    responsibleShift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    ResponsibleEducationInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutResponsibleNestedInput
    Candidate?: CandidateUncheckedUpdateManyWithoutResponsibleNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutResponsibleNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutLegalResponsibleNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutLegalResponsibleNestedInput
  }

  export type ApplicationCreateWithoutApplicationHistoriesInput = {
    id?: string
    status: $Enums.ApplicationStatus
    candidateName?: string | null
    SocialAssistantName?: string | null
    CadUnico?: boolean | null
    hasSevereDesease?: boolean | null
    averageIncome?: number | null
    perCapita?: number | null
    position?: number | null
    number?: number
    announcement: AnnouncementCreateNestedOneWithoutApplicationInput
    candidate: CandidateCreateNestedOneWithoutApplicationInput
    EducationLevel: EducationLevelCreateNestedOneWithoutApplicationInput
    SocialAssistant?: SocialAssistantCreateNestedOneWithoutApplicationInput
    ScholarshipGranted?: ScholarshipGrantedCreateNestedOneWithoutApplicationInput
    responsible?: LegalResponsibleCreateNestedOneWithoutApplicationInput
  }

  export type ApplicationUncheckedCreateWithoutApplicationHistoriesInput = {
    id?: string
    candidate_id: string
    announcement_id: string
    status: $Enums.ApplicationStatus
    socialAssistant_id?: string | null
    educationLevel_id: string
    candidateName?: string | null
    SocialAssistantName?: string | null
    CadUnico?: boolean | null
    hasSevereDesease?: boolean | null
    averageIncome?: number | null
    perCapita?: number | null
    position?: number | null
    number?: number
    reponsible_id?: string | null
    ScholarshipGranted?: ScholarshipGrantedUncheckedCreateNestedOneWithoutApplicationInput
  }

  export type ApplicationCreateOrConnectWithoutApplicationHistoriesInput = {
    where: ApplicationWhereUniqueInput
    create: XOR<ApplicationCreateWithoutApplicationHistoriesInput, ApplicationUncheckedCreateWithoutApplicationHistoriesInput>
  }

  export type ApplicationUpsertWithoutApplicationHistoriesInput = {
    update: XOR<ApplicationUpdateWithoutApplicationHistoriesInput, ApplicationUncheckedUpdateWithoutApplicationHistoriesInput>
    create: XOR<ApplicationCreateWithoutApplicationHistoriesInput, ApplicationUncheckedCreateWithoutApplicationHistoriesInput>
    where?: ApplicationWhereInput
  }

  export type ApplicationUpdateToOneWithWhereWithoutApplicationHistoriesInput = {
    where?: ApplicationWhereInput
    data: XOR<ApplicationUpdateWithoutApplicationHistoriesInput, ApplicationUncheckedUpdateWithoutApplicationHistoriesInput>
  }

  export type ApplicationUpdateWithoutApplicationHistoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    candidateName?: NullableStringFieldUpdateOperationsInput | string | null
    SocialAssistantName?: NullableStringFieldUpdateOperationsInput | string | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDesease?: NullableBoolFieldUpdateOperationsInput | boolean | null
    averageIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    perCapita?: NullableFloatFieldUpdateOperationsInput | number | null
    position?: NullableIntFieldUpdateOperationsInput | number | null
    number?: IntFieldUpdateOperationsInput | number
    announcement?: AnnouncementUpdateOneRequiredWithoutApplicationNestedInput
    candidate?: CandidateUpdateOneRequiredWithoutApplicationNestedInput
    EducationLevel?: EducationLevelUpdateOneRequiredWithoutApplicationNestedInput
    SocialAssistant?: SocialAssistantUpdateOneWithoutApplicationNestedInput
    ScholarshipGranted?: ScholarshipGrantedUpdateOneWithoutApplicationNestedInput
    responsible?: LegalResponsibleUpdateOneWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateWithoutApplicationHistoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    candidate_id?: StringFieldUpdateOperationsInput | string
    announcement_id?: StringFieldUpdateOperationsInput | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    socialAssistant_id?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel_id?: StringFieldUpdateOperationsInput | string
    candidateName?: NullableStringFieldUpdateOperationsInput | string | null
    SocialAssistantName?: NullableStringFieldUpdateOperationsInput | string | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDesease?: NullableBoolFieldUpdateOperationsInput | boolean | null
    averageIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    perCapita?: NullableFloatFieldUpdateOperationsInput | number | null
    position?: NullableIntFieldUpdateOperationsInput | number | null
    number?: IntFieldUpdateOperationsInput | number
    reponsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    ScholarshipGranted?: ScholarshipGrantedUncheckedUpdateOneWithoutApplicationNestedInput
  }

  export type AnnouncementCreateWithoutScholarshipGrantedInput = {
    id?: string
    entityChanged?: boolean | null
    branchChanged?: boolean | null
    announcementType: $Enums.AnnouncementType
    announcementNumber?: string | null
    announcementDate?: Date | string | null
    announcementBegin?: Date | string | null
    openDate?: Date | string | null
    closeDate?: Date | string | null
    waitingList?: boolean | null
    offeredVacancies?: number | null
    verifiedScholarships?: number | null
    description?: string | null
    announcementName?: string | null
    announcementLogo?: string | null
    type2?: string | null
    criteria?: AnnouncementCreatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementCreatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewCreateNestedOneWithoutAnnouncementInput
    entity: EntityCreateNestedOneWithoutAnnouncementInput
    entity_subsidiary?: EntitySubsidiaryCreateNestedManyWithoutAnnouncementInput
    Application?: ApplicationCreateNestedManyWithoutAnnouncementInput
    educationLevels?: EducationLevelCreateNestedManyWithoutAnnouncementInput
    timelines?: TimelineCreateNestedManyWithoutAnnouncementInput
    socialAssistant?: SocialAssistantCreateNestedManyWithoutAnnouncementInput
  }

  export type AnnouncementUncheckedCreateWithoutScholarshipGrantedInput = {
    id?: string
    entityChanged?: boolean | null
    branchChanged?: boolean | null
    announcementType: $Enums.AnnouncementType
    announcementNumber?: string | null
    announcementDate?: Date | string | null
    announcementBegin?: Date | string | null
    openDate?: Date | string | null
    closeDate?: Date | string | null
    waitingList?: boolean | null
    offeredVacancies?: number | null
    verifiedScholarships?: number | null
    description?: string | null
    entity_id: string
    announcementName?: string | null
    announcementLogo?: string | null
    type2?: string | null
    criteria?: AnnouncementCreatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementCreatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewUncheckedCreateNestedOneWithoutAnnouncementInput
    entity_subsidiary?: EntitySubsidiaryUncheckedCreateNestedManyWithoutAnnouncementInput
    Application?: ApplicationUncheckedCreateNestedManyWithoutAnnouncementInput
    educationLevels?: EducationLevelUncheckedCreateNestedManyWithoutAnnouncementInput
    timelines?: TimelineUncheckedCreateNestedManyWithoutAnnouncementInput
    socialAssistant?: SocialAssistantUncheckedCreateNestedManyWithoutAnnouncementInput
  }

  export type AnnouncementCreateOrConnectWithoutScholarshipGrantedInput = {
    where: AnnouncementWhereUniqueInput
    create: XOR<AnnouncementCreateWithoutScholarshipGrantedInput, AnnouncementUncheckedCreateWithoutScholarshipGrantedInput>
  }

  export type ApplicationCreateWithoutScholarshipGrantedInput = {
    id?: string
    status: $Enums.ApplicationStatus
    candidateName?: string | null
    SocialAssistantName?: string | null
    CadUnico?: boolean | null
    hasSevereDesease?: boolean | null
    averageIncome?: number | null
    perCapita?: number | null
    position?: number | null
    number?: number
    announcement: AnnouncementCreateNestedOneWithoutApplicationInput
    candidate: CandidateCreateNestedOneWithoutApplicationInput
    EducationLevel: EducationLevelCreateNestedOneWithoutApplicationInput
    SocialAssistant?: SocialAssistantCreateNestedOneWithoutApplicationInput
    applicationHistories?: ApplicationHistoryCreateNestedManyWithoutApplicationInput
    responsible?: LegalResponsibleCreateNestedOneWithoutApplicationInput
  }

  export type ApplicationUncheckedCreateWithoutScholarshipGrantedInput = {
    id?: string
    candidate_id: string
    announcement_id: string
    status: $Enums.ApplicationStatus
    socialAssistant_id?: string | null
    educationLevel_id: string
    candidateName?: string | null
    SocialAssistantName?: string | null
    CadUnico?: boolean | null
    hasSevereDesease?: boolean | null
    averageIncome?: number | null
    perCapita?: number | null
    position?: number | null
    number?: number
    reponsible_id?: string | null
    applicationHistories?: ApplicationHistoryUncheckedCreateNestedManyWithoutApplicationInput
  }

  export type ApplicationCreateOrConnectWithoutScholarshipGrantedInput = {
    where: ApplicationWhereUniqueInput
    create: XOR<ApplicationCreateWithoutScholarshipGrantedInput, ApplicationUncheckedCreateWithoutScholarshipGrantedInput>
  }

  export type AnnouncementUpsertWithoutScholarshipGrantedInput = {
    update: XOR<AnnouncementUpdateWithoutScholarshipGrantedInput, AnnouncementUncheckedUpdateWithoutScholarshipGrantedInput>
    create: XOR<AnnouncementCreateWithoutScholarshipGrantedInput, AnnouncementUncheckedCreateWithoutScholarshipGrantedInput>
    where?: AnnouncementWhereInput
  }

  export type AnnouncementUpdateToOneWithWhereWithoutScholarshipGrantedInput = {
    where?: AnnouncementWhereInput
    data: XOR<AnnouncementUpdateWithoutScholarshipGrantedInput, AnnouncementUncheckedUpdateWithoutScholarshipGrantedInput>
  }

  export type AnnouncementUpdateWithoutScholarshipGrantedInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    branchChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    announcementType?: EnumAnnouncementTypeFieldUpdateOperationsInput | $Enums.AnnouncementType
    announcementNumber?: NullableStringFieldUpdateOperationsInput | string | null
    announcementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    announcementBegin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closeDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waitingList?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    announcementName?: NullableStringFieldUpdateOperationsInput | string | null
    announcementLogo?: NullableStringFieldUpdateOperationsInput | string | null
    type2?: NullableStringFieldUpdateOperationsInput | string | null
    criteria?: AnnouncementUpdatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementUpdatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewUpdateOneWithoutAnnouncementNestedInput
    entity?: EntityUpdateOneRequiredWithoutAnnouncementNestedInput
    entity_subsidiary?: EntitySubsidiaryUpdateManyWithoutAnnouncementNestedInput
    Application?: ApplicationUpdateManyWithoutAnnouncementNestedInput
    educationLevels?: EducationLevelUpdateManyWithoutAnnouncementNestedInput
    timelines?: TimelineUpdateManyWithoutAnnouncementNestedInput
    socialAssistant?: SocialAssistantUpdateManyWithoutAnnouncementNestedInput
  }

  export type AnnouncementUncheckedUpdateWithoutScholarshipGrantedInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    branchChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    announcementType?: EnumAnnouncementTypeFieldUpdateOperationsInput | $Enums.AnnouncementType
    announcementNumber?: NullableStringFieldUpdateOperationsInput | string | null
    announcementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    announcementBegin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closeDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waitingList?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    entity_id?: StringFieldUpdateOperationsInput | string
    announcementName?: NullableStringFieldUpdateOperationsInput | string | null
    announcementLogo?: NullableStringFieldUpdateOperationsInput | string | null
    type2?: NullableStringFieldUpdateOperationsInput | string | null
    criteria?: AnnouncementUpdatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementUpdatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewUncheckedUpdateOneWithoutAnnouncementNestedInput
    entity_subsidiary?: EntitySubsidiaryUncheckedUpdateManyWithoutAnnouncementNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutAnnouncementNestedInput
    educationLevels?: EducationLevelUncheckedUpdateManyWithoutAnnouncementNestedInput
    timelines?: TimelineUncheckedUpdateManyWithoutAnnouncementNestedInput
    socialAssistant?: SocialAssistantUncheckedUpdateManyWithoutAnnouncementNestedInput
  }

  export type ApplicationUpsertWithoutScholarshipGrantedInput = {
    update: XOR<ApplicationUpdateWithoutScholarshipGrantedInput, ApplicationUncheckedUpdateWithoutScholarshipGrantedInput>
    create: XOR<ApplicationCreateWithoutScholarshipGrantedInput, ApplicationUncheckedCreateWithoutScholarshipGrantedInput>
    where?: ApplicationWhereInput
  }

  export type ApplicationUpdateToOneWithWhereWithoutScholarshipGrantedInput = {
    where?: ApplicationWhereInput
    data: XOR<ApplicationUpdateWithoutScholarshipGrantedInput, ApplicationUncheckedUpdateWithoutScholarshipGrantedInput>
  }

  export type ApplicationUpdateWithoutScholarshipGrantedInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    candidateName?: NullableStringFieldUpdateOperationsInput | string | null
    SocialAssistantName?: NullableStringFieldUpdateOperationsInput | string | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDesease?: NullableBoolFieldUpdateOperationsInput | boolean | null
    averageIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    perCapita?: NullableFloatFieldUpdateOperationsInput | number | null
    position?: NullableIntFieldUpdateOperationsInput | number | null
    number?: IntFieldUpdateOperationsInput | number
    announcement?: AnnouncementUpdateOneRequiredWithoutApplicationNestedInput
    candidate?: CandidateUpdateOneRequiredWithoutApplicationNestedInput
    EducationLevel?: EducationLevelUpdateOneRequiredWithoutApplicationNestedInput
    SocialAssistant?: SocialAssistantUpdateOneWithoutApplicationNestedInput
    applicationHistories?: ApplicationHistoryUpdateManyWithoutApplicationNestedInput
    responsible?: LegalResponsibleUpdateOneWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateWithoutScholarshipGrantedInput = {
    id?: StringFieldUpdateOperationsInput | string
    candidate_id?: StringFieldUpdateOperationsInput | string
    announcement_id?: StringFieldUpdateOperationsInput | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    socialAssistant_id?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel_id?: StringFieldUpdateOperationsInput | string
    candidateName?: NullableStringFieldUpdateOperationsInput | string | null
    SocialAssistantName?: NullableStringFieldUpdateOperationsInput | string | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDesease?: NullableBoolFieldUpdateOperationsInput | boolean | null
    averageIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    perCapita?: NullableFloatFieldUpdateOperationsInput | number | null
    position?: NullableIntFieldUpdateOperationsInput | number | null
    number?: IntFieldUpdateOperationsInput | number
    reponsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    applicationHistories?: ApplicationHistoryUncheckedUpdateManyWithoutApplicationNestedInput
  }

  export type FamilyMemberCreateWithoutFamilyMemberToVehicleInput = {
    id?: string
    relationship: $Enums.Relationship
    otherRelationship?: string | null
    main_id?: string | null
    fullName: string
    socialName?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    numberOfBirthRegister?: string | null
    bookOfBirthRegister?: string | null
    pageOfBirthRegister?: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    email?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    educationPlace?: $Enums.INSTITUTION_TYPE | null
    institutionName?: string | null
    coursingEducationLevel?: $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: string | null
    turnOfEducation?: $Enums.SHIFT | null
    hasScholarship?: boolean | null
    percentageOfScholarship?: string | null
    monthlyAmount?: string | null
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    benefitedFromCebasScholarship_professional?: boolean | null
    CadUnico?: boolean | null
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    incomeSource?: FamilyMemberCreateincomeSourceInput | $Enums.IncomeSource[]
    application_id: string
    CreditCard?: CreditCardCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberIncome?: FamilyMemberIncomeCreateNestedManyWithoutFamilyMemberInput
    Financing?: FinancingCreateNestedManyWithoutFamilyMemberInput
    Loan?: LoanCreateNestedManyWithoutFamilyMemberInput
    MonthlyIncome?: MonthlyIncomeCreateNestedManyWithoutFamilyMemberInput
    OtherExpense?: OtherExpenseCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberDisease?: FamilyMemberDiseaseCreateNestedManyWithoutFamilyMemberInput
    candidate?: CandidateCreateNestedOneWithoutFamillyMemberInput
    Medication?: MedicationCreateNestedManyWithoutFamilyMemberInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutFamillyMemberInput
    BankAccount?: BankAccountCreateNestedManyWithoutFamilyMemberInput
    Declarations?: DeclarationsCreateNestedManyWithoutFamilyMemberInput
  }

  export type FamilyMemberUncheckedCreateWithoutFamilyMemberToVehicleInput = {
    id?: string
    relationship: $Enums.Relationship
    otherRelationship?: string | null
    main_id?: string | null
    fullName: string
    socialName?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    numberOfBirthRegister?: string | null
    bookOfBirthRegister?: string | null
    pageOfBirthRegister?: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    email?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    educationPlace?: $Enums.INSTITUTION_TYPE | null
    institutionName?: string | null
    coursingEducationLevel?: $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: string | null
    turnOfEducation?: $Enums.SHIFT | null
    hasScholarship?: boolean | null
    percentageOfScholarship?: string | null
    monthlyAmount?: string | null
    candidate_id?: string | null
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    benefitedFromCebasScholarship_professional?: boolean | null
    CadUnico?: boolean | null
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    incomeSource?: FamilyMemberCreateincomeSourceInput | $Enums.IncomeSource[]
    legalResponsibleId?: string | null
    application_id: string
    CreditCard?: CreditCardUncheckedCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedCreateNestedManyWithoutFamilyMemberInput
    Financing?: FinancingUncheckedCreateNestedManyWithoutFamilyMemberInput
    Loan?: LoanUncheckedCreateNestedManyWithoutFamilyMemberInput
    MonthlyIncome?: MonthlyIncomeUncheckedCreateNestedManyWithoutFamilyMemberInput
    OtherExpense?: OtherExpenseUncheckedCreateNestedManyWithoutFamilyMemberInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedCreateNestedManyWithoutFamilyMemberInput
    Medication?: MedicationUncheckedCreateNestedManyWithoutFamilyMemberInput
    BankAccount?: BankAccountUncheckedCreateNestedManyWithoutFamilyMemberInput
    Declarations?: DeclarationsUncheckedCreateNestedManyWithoutFamilyMemberInput
  }

  export type FamilyMemberCreateOrConnectWithoutFamilyMemberToVehicleInput = {
    where: FamilyMemberWhereUniqueInput
    create: XOR<FamilyMemberCreateWithoutFamilyMemberToVehicleInput, FamilyMemberUncheckedCreateWithoutFamilyMemberToVehicleInput>
  }

  export type VehicleCreateWithoutFamilyMemberToVehicleInput = {
    id?: string
    vehicleType: $Enums.VehicleType
    modelAndBrand: string
    main_id?: string | null
    manufacturingYear: number
    situation: $Enums.VehicleSituation
    financedMonths?: number | null
    monthsToPayOff?: number | null
    hasInsurance?: boolean
    insuranceValue?: number | null
    usage: $Enums.VehicleUsage
    owners_id?: VehicleCreateowners_idInput | string[]
    application_id: string
    candidate?: CandidateCreateNestedOneWithoutVehicleInput
    LegalResponsible?: LegalResponsibleCreateNestedOneWithoutVehicleInput
  }

  export type VehicleUncheckedCreateWithoutFamilyMemberToVehicleInput = {
    id?: string
    vehicleType: $Enums.VehicleType
    modelAndBrand: string
    main_id?: string | null
    manufacturingYear: number
    situation: $Enums.VehicleSituation
    financedMonths?: number | null
    monthsToPayOff?: number | null
    hasInsurance?: boolean
    insuranceValue?: number | null
    usage: $Enums.VehicleUsage
    candidate_id?: string | null
    owners_id?: VehicleCreateowners_idInput | string[]
    legalResponsibleId?: string | null
    application_id: string
  }

  export type VehicleCreateOrConnectWithoutFamilyMemberToVehicleInput = {
    where: VehicleWhereUniqueInput
    create: XOR<VehicleCreateWithoutFamilyMemberToVehicleInput, VehicleUncheckedCreateWithoutFamilyMemberToVehicleInput>
  }

  export type FamilyMemberUpsertWithoutFamilyMemberToVehicleInput = {
    update: XOR<FamilyMemberUpdateWithoutFamilyMemberToVehicleInput, FamilyMemberUncheckedUpdateWithoutFamilyMemberToVehicleInput>
    create: XOR<FamilyMemberCreateWithoutFamilyMemberToVehicleInput, FamilyMemberUncheckedCreateWithoutFamilyMemberToVehicleInput>
    where?: FamilyMemberWhereInput
  }

  export type FamilyMemberUpdateToOneWithWhereWithoutFamilyMemberToVehicleInput = {
    where?: FamilyMemberWhereInput
    data: XOR<FamilyMemberUpdateWithoutFamilyMemberToVehicleInput, FamilyMemberUncheckedUpdateWithoutFamilyMemberToVehicleInput>
  }

  export type FamilyMemberUpdateWithoutFamilyMemberToVehicleInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    application_id?: StringFieldUpdateOperationsInput | string
    CreditCard?: CreditCardUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutFamilyMemberNestedInput
    Financing?: FinancingUpdateManyWithoutFamilyMemberNestedInput
    Loan?: LoanUpdateManyWithoutFamilyMemberNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutFamilyMemberNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutFamilyMemberNestedInput
    candidate?: CandidateUpdateOneWithoutFamillyMemberNestedInput
    Medication?: MedicationUpdateManyWithoutFamilyMemberNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutFamillyMemberNestedInput
    BankAccount?: BankAccountUpdateManyWithoutFamilyMemberNestedInput
    Declarations?: DeclarationsUpdateManyWithoutFamilyMemberNestedInput
  }

  export type FamilyMemberUncheckedUpdateWithoutFamilyMemberToVehicleInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    CreditCard?: CreditCardUncheckedUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutFamilyMemberNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutFamilyMemberNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutFamilyMemberNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutFamilyMemberNestedInput
  }

  export type VehicleUpsertWithoutFamilyMemberToVehicleInput = {
    update: XOR<VehicleUpdateWithoutFamilyMemberToVehicleInput, VehicleUncheckedUpdateWithoutFamilyMemberToVehicleInput>
    create: XOR<VehicleCreateWithoutFamilyMemberToVehicleInput, VehicleUncheckedCreateWithoutFamilyMemberToVehicleInput>
    where?: VehicleWhereInput
  }

  export type VehicleUpdateToOneWithWhereWithoutFamilyMemberToVehicleInput = {
    where?: VehicleWhereInput
    data: XOR<VehicleUpdateWithoutFamilyMemberToVehicleInput, VehicleUncheckedUpdateWithoutFamilyMemberToVehicleInput>
  }

  export type VehicleUpdateWithoutFamilyMemberToVehicleInput = {
    id?: StringFieldUpdateOperationsInput | string
    vehicleType?: EnumVehicleTypeFieldUpdateOperationsInput | $Enums.VehicleType
    modelAndBrand?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturingYear?: IntFieldUpdateOperationsInput | number
    situation?: EnumVehicleSituationFieldUpdateOperationsInput | $Enums.VehicleSituation
    financedMonths?: NullableIntFieldUpdateOperationsInput | number | null
    monthsToPayOff?: NullableIntFieldUpdateOperationsInput | number | null
    hasInsurance?: BoolFieldUpdateOperationsInput | boolean
    insuranceValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usage?: EnumVehicleUsageFieldUpdateOperationsInput | $Enums.VehicleUsage
    owners_id?: VehicleUpdateowners_idInput | string[]
    application_id?: StringFieldUpdateOperationsInput | string
    candidate?: CandidateUpdateOneWithoutVehicleNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutVehicleNestedInput
  }

  export type VehicleUncheckedUpdateWithoutFamilyMemberToVehicleInput = {
    id?: StringFieldUpdateOperationsInput | string
    vehicleType?: EnumVehicleTypeFieldUpdateOperationsInput | $Enums.VehicleType
    modelAndBrand?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturingYear?: IntFieldUpdateOperationsInput | number
    situation?: EnumVehicleSituationFieldUpdateOperationsInput | $Enums.VehicleSituation
    financedMonths?: NullableIntFieldUpdateOperationsInput | number | null
    monthsToPayOff?: NullableIntFieldUpdateOperationsInput | number | null
    hasInsurance?: BoolFieldUpdateOperationsInput | boolean
    insuranceValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usage?: EnumVehicleUsageFieldUpdateOperationsInput | $Enums.VehicleUsage
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    owners_id?: VehicleUpdateowners_idInput | string[]
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type ApplicationCreateManyCandidateInput = {
    id?: string
    announcement_id: string
    status: $Enums.ApplicationStatus
    socialAssistant_id?: string | null
    educationLevel_id: string
    candidateName?: string | null
    SocialAssistantName?: string | null
    CadUnico?: boolean | null
    hasSevereDesease?: boolean | null
    averageIncome?: number | null
    perCapita?: number | null
    position?: number | null
    number?: number
    reponsible_id?: string | null
  }

  export type CreditCardCreateManyCandidateInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    usersCount: number
    cardType: string
    bankName: string
    cardFlag: string
    invoiceValue: number
    familyMember_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type ExpenseCreateManyCandidateInput = {
    id?: string
    main_id?: string | null
    date: Date | string
    waterSewage?: number | null
    electricity?: number | null
    landlinePhone?: number | null
    mobilePhone?: number | null
    food?: number | null
    rent?: number | null
    garageRent?: number | null
    condominium?: number | null
    cableTV?: number | null
    streamingServices?: number | null
    fuel?: number | null
    annualIPVA?: number | null
    annualIPTU?: number | null
    annualITR?: number | null
    annualIR?: number | null
    INSS?: number | null
    publicTransport?: number | null
    schoolTransport?: number | null
    internet?: number | null
    courses?: number | null
    healthPlan?: number | null
    dentalPlan?: number | null
    medicationExpenses?: number | null
    totalExpense?: number | null
    installmentCountIPTU?: number | null
    installmentCountIPVA?: number | null
    installmentCountIR?: number | null
    installmentCountITR?: number | null
    installmentValueIPTU?: number | null
    installmentValueIPVA?: number | null
    installmentValueIR?: number | null
    installmentValueITR?: number | null
    financing?: number | null
    creditCard?: number | null
    optedForInstallmentIPTU?: boolean | null
    optedForInstallmentIPVA?: boolean | null
    optedForInstallmentIR?: boolean | null
    optedForInstallmentITR?: boolean | null
    otherExpensesDescription?: ExpenseCreateotherExpensesDescriptionInput | string[]
    otherExpensesValue?: ExpenseCreateotherExpensesValueInput | number[]
    legalResponsibleId?: string | null
    application_id: string
  }

  export type FinancingCreateManyCandidateInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    installmentValue: number
    totalInstallments: number
    paidInstallments: number
    bankName: string
    familyMember_id?: string | null
    otherFinancing?: string | null
    financingType: $Enums.FinancingType
    legalResponsibleId?: string | null
    application_id: string
  }

  export type IdentityDetailsCreateManyCandidateInput = {
    id?: string
    fullName: string
    socialName?: string | null
    main_id?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF?: string | null
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    CadUnico?: boolean
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    address?: string | null
    addressNumber?: string | null
    complement?: string | null
    neighborhood?: string | null
    city?: string | null
    UF?: $Enums.COUNTRY | null
    CEP?: string | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    email?: string | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    incomeSource?: IdentityDetailsCreateincomeSourceInput | $Enums.IncomeSource[]
    livesAlone: boolean
    intendsToGetScholarship: boolean
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    yearsBenefitedFromCebas_basic?: IdentityDetailsCreateyearsBenefitedFromCebas_basicInput | string[]
    scholarshipType_basic?: $Enums.ScholarshipType | null
    institutionName_basic?: string | null
    institutionCNPJ_basic?: string | null
    benefitedFromCebasScholarship_professional?: boolean | null
    lastYearBenefitedFromCebas_professional?: string | null
    scholarshipType_professional?: $Enums.ScholarshipType | null
    institutionName_professional?: string | null
    institutionCNPJ_professional?: string | null
    nameOfScholarshipCourse_professional?: string | null
    responsible_id?: string | null
    application_id: string
  }

  export type FamilyMemberIncomeCreateManyCandidateInput = {
    id?: string
    employmentType: $Enums.EmploymentType
    averageIncome: string
    main_id?: string | null
    admissionDate?: Date | string | null
    position?: string | null
    payingSource?: string | null
    payingSourcePhone?: string | null
    startDate?: Date | string | null
    CNPJ?: string | null
    financialAssistantCPF?: string | null
    socialReason?: string | null
    fantasyName?: string | null
    CPNJ?: string | null
    receivesUnemployment?: boolean | null
    parcels?: number | null
    firstParcelDate?: Date | string | null
    parcelValue?: number | null
    familyMember_id?: string | null
    quantity?: number
    application_id: string
    legalResponsibleId?: string | null
  }

  export type LoanCreateManyCandidateInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    installmentValue: number
    totalInstallments: number
    paidInstallments: number
    bankName: string
    familyMember_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type OtherExpenseCreateManyCandidateInput = {
    id?: string
    main_id?: string | null
    description: string
    value: number
    familyMember_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type VehicleCreateManyCandidateInput = {
    id?: string
    vehicleType: $Enums.VehicleType
    modelAndBrand: string
    main_id?: string | null
    manufacturingYear: number
    situation: $Enums.VehicleSituation
    financedMonths?: number | null
    monthsToPayOff?: number | null
    hasInsurance?: boolean
    insuranceValue?: number | null
    usage: $Enums.VehicleUsage
    owners_id?: VehicleCreateowners_idInput | string[]
    legalResponsibleId?: string | null
    application_id: string
  }

  export type FamilyMemberCreateManyCandidateInput = {
    id?: string
    relationship: $Enums.Relationship
    otherRelationship?: string | null
    main_id?: string | null
    fullName: string
    socialName?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    numberOfBirthRegister?: string | null
    bookOfBirthRegister?: string | null
    pageOfBirthRegister?: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    email?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    educationPlace?: $Enums.INSTITUTION_TYPE | null
    institutionName?: string | null
    coursingEducationLevel?: $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: string | null
    turnOfEducation?: $Enums.SHIFT | null
    hasScholarship?: boolean | null
    percentageOfScholarship?: string | null
    monthlyAmount?: string | null
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    benefitedFromCebasScholarship_professional?: boolean | null
    CadUnico?: boolean | null
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    incomeSource?: FamilyMemberCreateincomeSourceInput | $Enums.IncomeSource[]
    legalResponsibleId?: string | null
    application_id: string
  }

  export type HousingCreateManyCandidateInput = {
    id?: string
    propertyStatus: $Enums.PropertyStatus
    contractType?: $Enums.ContractType | null
    main_id?: string | null
    grantorName?: string | null
    timeLivingInProperty: $Enums.TimeLivingInProperty
    domicileType: $Enums.DomicileType
    numberOfRooms: $Enums.NumberOfRooms
    numberOfBedrooms: number
    responsible_id?: string | null
    application_id: string
  }

  export type MonthlyIncomeCreateManyCandidateInput = {
    id?: string
    date?: Date | string | null
    main_id?: string | null
    grossAmount?: number | null
    liquidAmount?: number | null
    proLabore?: number | null
    dividends?: number | null
    total?: number | null
    deductionValue?: Decimal | DecimalJsLike | number | string | null
    publicPension?: Decimal | DecimalJsLike | number | string | null
    incomeTax?: Decimal | DecimalJsLike | number | string | null
    otherDeductions?: Decimal | DecimalJsLike | number | string | null
    foodAllowanceValue?: Decimal | DecimalJsLike | number | string | null
    transportAllowanceValue?: Decimal | DecimalJsLike | number | string | null
    expenseReimbursementValue?: Decimal | DecimalJsLike | number | string | null
    advancePaymentValue?: Decimal | DecimalJsLike | number | string | null
    reversalValue?: Decimal | DecimalJsLike | number | string | null
    compensationValue?: Decimal | DecimalJsLike | number | string | null
    judicialPensionValue?: Decimal | DecimalJsLike | number | string | null
    familyMember_id?: string | null
    incomeSource?: $Enums.IncomeSource | null
    application_id: string
    legalResponsibleId?: string | null
  }

  export type FamilyMemberDiseaseCreateManyCandidateInput = {
    id?: string
    main_id?: string | null
    disease?: $Enums.Disease | null
    diseases?: FamilyMemberDiseaseCreatediseasesInput | $Enums.Disease[]
    specificDisease?: string | null
    hasMedicalReport: boolean
    familyMember_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type MedicationCreateManyCandidateInput = {
    id?: string
    main_id?: string | null
    medicationName: string
    obtainedPublicly: boolean
    specificMedicationPublicly?: string | null
    familyMember_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
    familyMemberDiseaseId?: string | null
  }

  export type BankAccountCreateManyCandidateInput = {
    id?: string
    main_id?: string | null
    bankName: string
    agencyNumber: string
    accountNumber: string
    accountType: $Enums.AccountType
    familyMember_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type DeclarationsCreateManyCandidateInput = {
    id?: string
    declarationType: $Enums.Declaration_Type
    text: string
    familyMember_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type ApplicationUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    candidateName?: NullableStringFieldUpdateOperationsInput | string | null
    SocialAssistantName?: NullableStringFieldUpdateOperationsInput | string | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDesease?: NullableBoolFieldUpdateOperationsInput | boolean | null
    averageIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    perCapita?: NullableFloatFieldUpdateOperationsInput | number | null
    position?: NullableIntFieldUpdateOperationsInput | number | null
    number?: IntFieldUpdateOperationsInput | number
    announcement?: AnnouncementUpdateOneRequiredWithoutApplicationNestedInput
    EducationLevel?: EducationLevelUpdateOneRequiredWithoutApplicationNestedInput
    SocialAssistant?: SocialAssistantUpdateOneWithoutApplicationNestedInput
    applicationHistories?: ApplicationHistoryUpdateManyWithoutApplicationNestedInput
    ScholarshipGranted?: ScholarshipGrantedUpdateOneWithoutApplicationNestedInput
    responsible?: LegalResponsibleUpdateOneWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    announcement_id?: StringFieldUpdateOperationsInput | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    socialAssistant_id?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel_id?: StringFieldUpdateOperationsInput | string
    candidateName?: NullableStringFieldUpdateOperationsInput | string | null
    SocialAssistantName?: NullableStringFieldUpdateOperationsInput | string | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDesease?: NullableBoolFieldUpdateOperationsInput | boolean | null
    averageIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    perCapita?: NullableFloatFieldUpdateOperationsInput | number | null
    position?: NullableIntFieldUpdateOperationsInput | number | null
    number?: IntFieldUpdateOperationsInput | number
    reponsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    applicationHistories?: ApplicationHistoryUncheckedUpdateManyWithoutApplicationNestedInput
    ScholarshipGranted?: ScholarshipGrantedUncheckedUpdateOneWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateManyWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    announcement_id?: StringFieldUpdateOperationsInput | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    socialAssistant_id?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel_id?: StringFieldUpdateOperationsInput | string
    candidateName?: NullableStringFieldUpdateOperationsInput | string | null
    SocialAssistantName?: NullableStringFieldUpdateOperationsInput | string | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDesease?: NullableBoolFieldUpdateOperationsInput | boolean | null
    averageIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    perCapita?: NullableFloatFieldUpdateOperationsInput | number | null
    position?: NullableIntFieldUpdateOperationsInput | number | null
    number?: IntFieldUpdateOperationsInput | number
    reponsible_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CreditCardUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    usersCount?: IntFieldUpdateOperationsInput | number
    cardType?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    cardFlag?: StringFieldUpdateOperationsInput | string
    invoiceValue?: FloatFieldUpdateOperationsInput | number
    application_id?: StringFieldUpdateOperationsInput | string
    familyMember?: FamilyMemberUpdateOneWithoutCreditCardNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutCreditCardNestedInput
  }

  export type CreditCardUncheckedUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    usersCount?: IntFieldUpdateOperationsInput | number
    cardType?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    cardFlag?: StringFieldUpdateOperationsInput | string
    invoiceValue?: FloatFieldUpdateOperationsInput | number
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type CreditCardUncheckedUpdateManyWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    usersCount?: IntFieldUpdateOperationsInput | number
    cardType?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    cardFlag?: StringFieldUpdateOperationsInput | string
    invoiceValue?: FloatFieldUpdateOperationsInput | number
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type ExpenseUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    waterSewage?: NullableFloatFieldUpdateOperationsInput | number | null
    electricity?: NullableFloatFieldUpdateOperationsInput | number | null
    landlinePhone?: NullableFloatFieldUpdateOperationsInput | number | null
    mobilePhone?: NullableFloatFieldUpdateOperationsInput | number | null
    food?: NullableFloatFieldUpdateOperationsInput | number | null
    rent?: NullableFloatFieldUpdateOperationsInput | number | null
    garageRent?: NullableFloatFieldUpdateOperationsInput | number | null
    condominium?: NullableFloatFieldUpdateOperationsInput | number | null
    cableTV?: NullableFloatFieldUpdateOperationsInput | number | null
    streamingServices?: NullableFloatFieldUpdateOperationsInput | number | null
    fuel?: NullableFloatFieldUpdateOperationsInput | number | null
    annualIPVA?: NullableFloatFieldUpdateOperationsInput | number | null
    annualIPTU?: NullableFloatFieldUpdateOperationsInput | number | null
    annualITR?: NullableFloatFieldUpdateOperationsInput | number | null
    annualIR?: NullableFloatFieldUpdateOperationsInput | number | null
    INSS?: NullableFloatFieldUpdateOperationsInput | number | null
    publicTransport?: NullableFloatFieldUpdateOperationsInput | number | null
    schoolTransport?: NullableFloatFieldUpdateOperationsInput | number | null
    internet?: NullableFloatFieldUpdateOperationsInput | number | null
    courses?: NullableFloatFieldUpdateOperationsInput | number | null
    healthPlan?: NullableFloatFieldUpdateOperationsInput | number | null
    dentalPlan?: NullableFloatFieldUpdateOperationsInput | number | null
    medicationExpenses?: NullableFloatFieldUpdateOperationsInput | number | null
    totalExpense?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentCountIPTU?: NullableIntFieldUpdateOperationsInput | number | null
    installmentCountIPVA?: NullableIntFieldUpdateOperationsInput | number | null
    installmentCountIR?: NullableIntFieldUpdateOperationsInput | number | null
    installmentCountITR?: NullableIntFieldUpdateOperationsInput | number | null
    installmentValueIPTU?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentValueIPVA?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentValueIR?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentValueITR?: NullableFloatFieldUpdateOperationsInput | number | null
    financing?: NullableFloatFieldUpdateOperationsInput | number | null
    creditCard?: NullableFloatFieldUpdateOperationsInput | number | null
    optedForInstallmentIPTU?: NullableBoolFieldUpdateOperationsInput | boolean | null
    optedForInstallmentIPVA?: NullableBoolFieldUpdateOperationsInput | boolean | null
    optedForInstallmentIR?: NullableBoolFieldUpdateOperationsInput | boolean | null
    optedForInstallmentITR?: NullableBoolFieldUpdateOperationsInput | boolean | null
    otherExpensesDescription?: ExpenseUpdateotherExpensesDescriptionInput | string[]
    otherExpensesValue?: ExpenseUpdateotherExpensesValueInput | number[]
    application_id?: StringFieldUpdateOperationsInput | string
    LegalResponsible?: LegalResponsibleUpdateOneWithoutExpenseNestedInput
  }

  export type ExpenseUncheckedUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    waterSewage?: NullableFloatFieldUpdateOperationsInput | number | null
    electricity?: NullableFloatFieldUpdateOperationsInput | number | null
    landlinePhone?: NullableFloatFieldUpdateOperationsInput | number | null
    mobilePhone?: NullableFloatFieldUpdateOperationsInput | number | null
    food?: NullableFloatFieldUpdateOperationsInput | number | null
    rent?: NullableFloatFieldUpdateOperationsInput | number | null
    garageRent?: NullableFloatFieldUpdateOperationsInput | number | null
    condominium?: NullableFloatFieldUpdateOperationsInput | number | null
    cableTV?: NullableFloatFieldUpdateOperationsInput | number | null
    streamingServices?: NullableFloatFieldUpdateOperationsInput | number | null
    fuel?: NullableFloatFieldUpdateOperationsInput | number | null
    annualIPVA?: NullableFloatFieldUpdateOperationsInput | number | null
    annualIPTU?: NullableFloatFieldUpdateOperationsInput | number | null
    annualITR?: NullableFloatFieldUpdateOperationsInput | number | null
    annualIR?: NullableFloatFieldUpdateOperationsInput | number | null
    INSS?: NullableFloatFieldUpdateOperationsInput | number | null
    publicTransport?: NullableFloatFieldUpdateOperationsInput | number | null
    schoolTransport?: NullableFloatFieldUpdateOperationsInput | number | null
    internet?: NullableFloatFieldUpdateOperationsInput | number | null
    courses?: NullableFloatFieldUpdateOperationsInput | number | null
    healthPlan?: NullableFloatFieldUpdateOperationsInput | number | null
    dentalPlan?: NullableFloatFieldUpdateOperationsInput | number | null
    medicationExpenses?: NullableFloatFieldUpdateOperationsInput | number | null
    totalExpense?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentCountIPTU?: NullableIntFieldUpdateOperationsInput | number | null
    installmentCountIPVA?: NullableIntFieldUpdateOperationsInput | number | null
    installmentCountIR?: NullableIntFieldUpdateOperationsInput | number | null
    installmentCountITR?: NullableIntFieldUpdateOperationsInput | number | null
    installmentValueIPTU?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentValueIPVA?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentValueIR?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentValueITR?: NullableFloatFieldUpdateOperationsInput | number | null
    financing?: NullableFloatFieldUpdateOperationsInput | number | null
    creditCard?: NullableFloatFieldUpdateOperationsInput | number | null
    optedForInstallmentIPTU?: NullableBoolFieldUpdateOperationsInput | boolean | null
    optedForInstallmentIPVA?: NullableBoolFieldUpdateOperationsInput | boolean | null
    optedForInstallmentIR?: NullableBoolFieldUpdateOperationsInput | boolean | null
    optedForInstallmentITR?: NullableBoolFieldUpdateOperationsInput | boolean | null
    otherExpensesDescription?: ExpenseUpdateotherExpensesDescriptionInput | string[]
    otherExpensesValue?: ExpenseUpdateotherExpensesValueInput | number[]
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type ExpenseUncheckedUpdateManyWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    waterSewage?: NullableFloatFieldUpdateOperationsInput | number | null
    electricity?: NullableFloatFieldUpdateOperationsInput | number | null
    landlinePhone?: NullableFloatFieldUpdateOperationsInput | number | null
    mobilePhone?: NullableFloatFieldUpdateOperationsInput | number | null
    food?: NullableFloatFieldUpdateOperationsInput | number | null
    rent?: NullableFloatFieldUpdateOperationsInput | number | null
    garageRent?: NullableFloatFieldUpdateOperationsInput | number | null
    condominium?: NullableFloatFieldUpdateOperationsInput | number | null
    cableTV?: NullableFloatFieldUpdateOperationsInput | number | null
    streamingServices?: NullableFloatFieldUpdateOperationsInput | number | null
    fuel?: NullableFloatFieldUpdateOperationsInput | number | null
    annualIPVA?: NullableFloatFieldUpdateOperationsInput | number | null
    annualIPTU?: NullableFloatFieldUpdateOperationsInput | number | null
    annualITR?: NullableFloatFieldUpdateOperationsInput | number | null
    annualIR?: NullableFloatFieldUpdateOperationsInput | number | null
    INSS?: NullableFloatFieldUpdateOperationsInput | number | null
    publicTransport?: NullableFloatFieldUpdateOperationsInput | number | null
    schoolTransport?: NullableFloatFieldUpdateOperationsInput | number | null
    internet?: NullableFloatFieldUpdateOperationsInput | number | null
    courses?: NullableFloatFieldUpdateOperationsInput | number | null
    healthPlan?: NullableFloatFieldUpdateOperationsInput | number | null
    dentalPlan?: NullableFloatFieldUpdateOperationsInput | number | null
    medicationExpenses?: NullableFloatFieldUpdateOperationsInput | number | null
    totalExpense?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentCountIPTU?: NullableIntFieldUpdateOperationsInput | number | null
    installmentCountIPVA?: NullableIntFieldUpdateOperationsInput | number | null
    installmentCountIR?: NullableIntFieldUpdateOperationsInput | number | null
    installmentCountITR?: NullableIntFieldUpdateOperationsInput | number | null
    installmentValueIPTU?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentValueIPVA?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentValueIR?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentValueITR?: NullableFloatFieldUpdateOperationsInput | number | null
    financing?: NullableFloatFieldUpdateOperationsInput | number | null
    creditCard?: NullableFloatFieldUpdateOperationsInput | number | null
    optedForInstallmentIPTU?: NullableBoolFieldUpdateOperationsInput | boolean | null
    optedForInstallmentIPVA?: NullableBoolFieldUpdateOperationsInput | boolean | null
    optedForInstallmentIR?: NullableBoolFieldUpdateOperationsInput | boolean | null
    optedForInstallmentITR?: NullableBoolFieldUpdateOperationsInput | boolean | null
    otherExpensesDescription?: ExpenseUpdateotherExpensesDescriptionInput | string[]
    otherExpensesValue?: ExpenseUpdateotherExpensesValueInput | number[]
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type FinancingUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    installmentValue?: FloatFieldUpdateOperationsInput | number
    totalInstallments?: IntFieldUpdateOperationsInput | number
    paidInstallments?: IntFieldUpdateOperationsInput | number
    bankName?: StringFieldUpdateOperationsInput | string
    otherFinancing?: NullableStringFieldUpdateOperationsInput | string | null
    financingType?: EnumFinancingTypeFieldUpdateOperationsInput | $Enums.FinancingType
    application_id?: StringFieldUpdateOperationsInput | string
    familyMember?: FamilyMemberUpdateOneWithoutFinancingNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutFinancingNestedInput
  }

  export type FinancingUncheckedUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    installmentValue?: FloatFieldUpdateOperationsInput | number
    totalInstallments?: IntFieldUpdateOperationsInput | number
    paidInstallments?: IntFieldUpdateOperationsInput | number
    bankName?: StringFieldUpdateOperationsInput | string
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    otherFinancing?: NullableStringFieldUpdateOperationsInput | string | null
    financingType?: EnumFinancingTypeFieldUpdateOperationsInput | $Enums.FinancingType
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type FinancingUncheckedUpdateManyWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    installmentValue?: FloatFieldUpdateOperationsInput | number
    totalInstallments?: IntFieldUpdateOperationsInput | number
    paidInstallments?: IntFieldUpdateOperationsInput | number
    bankName?: StringFieldUpdateOperationsInput | string
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    otherFinancing?: NullableStringFieldUpdateOperationsInput | string | null
    financingType?: EnumFinancingTypeFieldUpdateOperationsInput | $Enums.FinancingType
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type IdentityDetailsUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: NullableStringFieldUpdateOperationsInput | string | null
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    CadUnico?: BoolFieldUpdateOperationsInput | boolean
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    addressNumber?: NullableStringFieldUpdateOperationsInput | string | null
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    CEP?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: IdentityDetailsUpdateincomeSourceInput | $Enums.IncomeSource[]
    livesAlone?: BoolFieldUpdateOperationsInput | boolean
    intendsToGetScholarship?: BoolFieldUpdateOperationsInput | boolean
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    yearsBenefitedFromCebas_basic?: IdentityDetailsUpdateyearsBenefitedFromCebas_basicInput | string[]
    scholarshipType_basic?: NullableEnumScholarshipTypeFieldUpdateOperationsInput | $Enums.ScholarshipType | null
    institutionName_basic?: NullableStringFieldUpdateOperationsInput | string | null
    institutionCNPJ_basic?: NullableStringFieldUpdateOperationsInput | string | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    lastYearBenefitedFromCebas_professional?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipType_professional?: NullableEnumScholarshipTypeFieldUpdateOperationsInput | $Enums.ScholarshipType | null
    institutionName_professional?: NullableStringFieldUpdateOperationsInput | string | null
    institutionCNPJ_professional?: NullableStringFieldUpdateOperationsInput | string | null
    nameOfScholarshipCourse_professional?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    responsible?: LegalResponsibleUpdateOneWithoutIdentityDetailsNestedInput
  }

  export type IdentityDetailsUncheckedUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: NullableStringFieldUpdateOperationsInput | string | null
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    CadUnico?: BoolFieldUpdateOperationsInput | boolean
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    addressNumber?: NullableStringFieldUpdateOperationsInput | string | null
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    CEP?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: IdentityDetailsUpdateincomeSourceInput | $Enums.IncomeSource[]
    livesAlone?: BoolFieldUpdateOperationsInput | boolean
    intendsToGetScholarship?: BoolFieldUpdateOperationsInput | boolean
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    yearsBenefitedFromCebas_basic?: IdentityDetailsUpdateyearsBenefitedFromCebas_basicInput | string[]
    scholarshipType_basic?: NullableEnumScholarshipTypeFieldUpdateOperationsInput | $Enums.ScholarshipType | null
    institutionName_basic?: NullableStringFieldUpdateOperationsInput | string | null
    institutionCNPJ_basic?: NullableStringFieldUpdateOperationsInput | string | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    lastYearBenefitedFromCebas_professional?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipType_professional?: NullableEnumScholarshipTypeFieldUpdateOperationsInput | $Enums.ScholarshipType | null
    institutionName_professional?: NullableStringFieldUpdateOperationsInput | string | null
    institutionCNPJ_professional?: NullableStringFieldUpdateOperationsInput | string | null
    nameOfScholarshipCourse_professional?: NullableStringFieldUpdateOperationsInput | string | null
    responsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type IdentityDetailsUncheckedUpdateManyWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: NullableStringFieldUpdateOperationsInput | string | null
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    CadUnico?: BoolFieldUpdateOperationsInput | boolean
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    addressNumber?: NullableStringFieldUpdateOperationsInput | string | null
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    CEP?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: IdentityDetailsUpdateincomeSourceInput | $Enums.IncomeSource[]
    livesAlone?: BoolFieldUpdateOperationsInput | boolean
    intendsToGetScholarship?: BoolFieldUpdateOperationsInput | boolean
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    yearsBenefitedFromCebas_basic?: IdentityDetailsUpdateyearsBenefitedFromCebas_basicInput | string[]
    scholarshipType_basic?: NullableEnumScholarshipTypeFieldUpdateOperationsInput | $Enums.ScholarshipType | null
    institutionName_basic?: NullableStringFieldUpdateOperationsInput | string | null
    institutionCNPJ_basic?: NullableStringFieldUpdateOperationsInput | string | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    lastYearBenefitedFromCebas_professional?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipType_professional?: NullableEnumScholarshipTypeFieldUpdateOperationsInput | $Enums.ScholarshipType | null
    institutionName_professional?: NullableStringFieldUpdateOperationsInput | string | null
    institutionCNPJ_professional?: NullableStringFieldUpdateOperationsInput | string | null
    nameOfScholarshipCourse_professional?: NullableStringFieldUpdateOperationsInput | string | null
    responsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type FamilyMemberIncomeUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    employmentType?: EnumEmploymentTypeFieldUpdateOperationsInput | $Enums.EmploymentType
    averageIncome?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    payingSource?: NullableStringFieldUpdateOperationsInput | string | null
    payingSourcePhone?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CNPJ?: NullableStringFieldUpdateOperationsInput | string | null
    financialAssistantCPF?: NullableStringFieldUpdateOperationsInput | string | null
    socialReason?: NullableStringFieldUpdateOperationsInput | string | null
    fantasyName?: NullableStringFieldUpdateOperationsInput | string | null
    CPNJ?: NullableStringFieldUpdateOperationsInput | string | null
    receivesUnemployment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parcels?: NullableIntFieldUpdateOperationsInput | number | null
    firstParcelDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parcelValue?: NullableFloatFieldUpdateOperationsInput | number | null
    quantity?: IntFieldUpdateOperationsInput | number
    application_id?: StringFieldUpdateOperationsInput | string
    familyMember?: FamilyMemberUpdateOneWithoutFamilyMemberIncomeNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutFamilyMemberIncomeNestedInput
  }

  export type FamilyMemberIncomeUncheckedUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    employmentType?: EnumEmploymentTypeFieldUpdateOperationsInput | $Enums.EmploymentType
    averageIncome?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    payingSource?: NullableStringFieldUpdateOperationsInput | string | null
    payingSourcePhone?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CNPJ?: NullableStringFieldUpdateOperationsInput | string | null
    financialAssistantCPF?: NullableStringFieldUpdateOperationsInput | string | null
    socialReason?: NullableStringFieldUpdateOperationsInput | string | null
    fantasyName?: NullableStringFieldUpdateOperationsInput | string | null
    CPNJ?: NullableStringFieldUpdateOperationsInput | string | null
    receivesUnemployment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parcels?: NullableIntFieldUpdateOperationsInput | number | null
    firstParcelDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parcelValue?: NullableFloatFieldUpdateOperationsInput | number | null
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    application_id?: StringFieldUpdateOperationsInput | string
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FamilyMemberIncomeUncheckedUpdateManyWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    employmentType?: EnumEmploymentTypeFieldUpdateOperationsInput | $Enums.EmploymentType
    averageIncome?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    payingSource?: NullableStringFieldUpdateOperationsInput | string | null
    payingSourcePhone?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CNPJ?: NullableStringFieldUpdateOperationsInput | string | null
    financialAssistantCPF?: NullableStringFieldUpdateOperationsInput | string | null
    socialReason?: NullableStringFieldUpdateOperationsInput | string | null
    fantasyName?: NullableStringFieldUpdateOperationsInput | string | null
    CPNJ?: NullableStringFieldUpdateOperationsInput | string | null
    receivesUnemployment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parcels?: NullableIntFieldUpdateOperationsInput | number | null
    firstParcelDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parcelValue?: NullableFloatFieldUpdateOperationsInput | number | null
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    application_id?: StringFieldUpdateOperationsInput | string
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LoanUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    installmentValue?: FloatFieldUpdateOperationsInput | number
    totalInstallments?: IntFieldUpdateOperationsInput | number
    paidInstallments?: IntFieldUpdateOperationsInput | number
    bankName?: StringFieldUpdateOperationsInput | string
    application_id?: StringFieldUpdateOperationsInput | string
    familyMember?: FamilyMemberUpdateOneWithoutLoanNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutLoanNestedInput
  }

  export type LoanUncheckedUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    installmentValue?: FloatFieldUpdateOperationsInput | number
    totalInstallments?: IntFieldUpdateOperationsInput | number
    paidInstallments?: IntFieldUpdateOperationsInput | number
    bankName?: StringFieldUpdateOperationsInput | string
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type LoanUncheckedUpdateManyWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    installmentValue?: FloatFieldUpdateOperationsInput | number
    totalInstallments?: IntFieldUpdateOperationsInput | number
    paidInstallments?: IntFieldUpdateOperationsInput | number
    bankName?: StringFieldUpdateOperationsInput | string
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type OtherExpenseUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    value?: FloatFieldUpdateOperationsInput | number
    application_id?: StringFieldUpdateOperationsInput | string
    familyMember?: FamilyMemberUpdateOneWithoutOtherExpenseNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutOtherExpenseNestedInput
  }

  export type OtherExpenseUncheckedUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    value?: FloatFieldUpdateOperationsInput | number
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type OtherExpenseUncheckedUpdateManyWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    value?: FloatFieldUpdateOperationsInput | number
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type VehicleUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    vehicleType?: EnumVehicleTypeFieldUpdateOperationsInput | $Enums.VehicleType
    modelAndBrand?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturingYear?: IntFieldUpdateOperationsInput | number
    situation?: EnumVehicleSituationFieldUpdateOperationsInput | $Enums.VehicleSituation
    financedMonths?: NullableIntFieldUpdateOperationsInput | number | null
    monthsToPayOff?: NullableIntFieldUpdateOperationsInput | number | null
    hasInsurance?: BoolFieldUpdateOperationsInput | boolean
    insuranceValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usage?: EnumVehicleUsageFieldUpdateOperationsInput | $Enums.VehicleUsage
    owners_id?: VehicleUpdateowners_idInput | string[]
    application_id?: StringFieldUpdateOperationsInput | string
    FamilyMemberToVehicle?: FamilyMemberToVehicleUpdateManyWithoutVehicleNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutVehicleNestedInput
  }

  export type VehicleUncheckedUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    vehicleType?: EnumVehicleTypeFieldUpdateOperationsInput | $Enums.VehicleType
    modelAndBrand?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturingYear?: IntFieldUpdateOperationsInput | number
    situation?: EnumVehicleSituationFieldUpdateOperationsInput | $Enums.VehicleSituation
    financedMonths?: NullableIntFieldUpdateOperationsInput | number | null
    monthsToPayOff?: NullableIntFieldUpdateOperationsInput | number | null
    hasInsurance?: BoolFieldUpdateOperationsInput | boolean
    insuranceValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usage?: EnumVehicleUsageFieldUpdateOperationsInput | $Enums.VehicleUsage
    owners_id?: VehicleUpdateowners_idInput | string[]
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedUpdateManyWithoutVehicleNestedInput
  }

  export type VehicleUncheckedUpdateManyWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    vehicleType?: EnumVehicleTypeFieldUpdateOperationsInput | $Enums.VehicleType
    modelAndBrand?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturingYear?: IntFieldUpdateOperationsInput | number
    situation?: EnumVehicleSituationFieldUpdateOperationsInput | $Enums.VehicleSituation
    financedMonths?: NullableIntFieldUpdateOperationsInput | number | null
    monthsToPayOff?: NullableIntFieldUpdateOperationsInput | number | null
    hasInsurance?: BoolFieldUpdateOperationsInput | boolean
    insuranceValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usage?: EnumVehicleUsageFieldUpdateOperationsInput | $Enums.VehicleUsage
    owners_id?: VehicleUpdateowners_idInput | string[]
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type FamilyMemberUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    application_id?: StringFieldUpdateOperationsInput | string
    CreditCard?: CreditCardUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutFamilyMemberNestedInput
    Financing?: FinancingUpdateManyWithoutFamilyMemberNestedInput
    Loan?: LoanUpdateManyWithoutFamilyMemberNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutFamilyMemberNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUpdateManyWithoutFamilyMembersNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutFamilyMemberNestedInput
    Medication?: MedicationUpdateManyWithoutFamilyMemberNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutFamillyMemberNestedInput
    BankAccount?: BankAccountUpdateManyWithoutFamilyMemberNestedInput
    Declarations?: DeclarationsUpdateManyWithoutFamilyMemberNestedInput
  }

  export type FamilyMemberUncheckedUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    CreditCard?: CreditCardUncheckedUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutFamilyMemberNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutFamilyMemberNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedUpdateManyWithoutFamilyMembersNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutFamilyMemberNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutFamilyMemberNestedInput
  }

  export type FamilyMemberUncheckedUpdateManyWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type HousingUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    propertyStatus?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    contractType?: NullableEnumContractTypeFieldUpdateOperationsInput | $Enums.ContractType | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    grantorName?: NullableStringFieldUpdateOperationsInput | string | null
    timeLivingInProperty?: EnumTimeLivingInPropertyFieldUpdateOperationsInput | $Enums.TimeLivingInProperty
    domicileType?: EnumDomicileTypeFieldUpdateOperationsInput | $Enums.DomicileType
    numberOfRooms?: EnumNumberOfRoomsFieldUpdateOperationsInput | $Enums.NumberOfRooms
    numberOfBedrooms?: IntFieldUpdateOperationsInput | number
    application_id?: StringFieldUpdateOperationsInput | string
    responsible?: LegalResponsibleUpdateOneWithoutHousingNestedInput
  }

  export type HousingUncheckedUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    propertyStatus?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    contractType?: NullableEnumContractTypeFieldUpdateOperationsInput | $Enums.ContractType | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    grantorName?: NullableStringFieldUpdateOperationsInput | string | null
    timeLivingInProperty?: EnumTimeLivingInPropertyFieldUpdateOperationsInput | $Enums.TimeLivingInProperty
    domicileType?: EnumDomicileTypeFieldUpdateOperationsInput | $Enums.DomicileType
    numberOfRooms?: EnumNumberOfRoomsFieldUpdateOperationsInput | $Enums.NumberOfRooms
    numberOfBedrooms?: IntFieldUpdateOperationsInput | number
    responsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type HousingUncheckedUpdateManyWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    propertyStatus?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    contractType?: NullableEnumContractTypeFieldUpdateOperationsInput | $Enums.ContractType | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    grantorName?: NullableStringFieldUpdateOperationsInput | string | null
    timeLivingInProperty?: EnumTimeLivingInPropertyFieldUpdateOperationsInput | $Enums.TimeLivingInProperty
    domicileType?: EnumDomicileTypeFieldUpdateOperationsInput | $Enums.DomicileType
    numberOfRooms?: EnumNumberOfRoomsFieldUpdateOperationsInput | $Enums.NumberOfRooms
    numberOfBedrooms?: IntFieldUpdateOperationsInput | number
    responsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type MonthlyIncomeUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    grossAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    liquidAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    proLabore?: NullableFloatFieldUpdateOperationsInput | number | null
    dividends?: NullableFloatFieldUpdateOperationsInput | number | null
    total?: NullableFloatFieldUpdateOperationsInput | number | null
    deductionValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    publicPension?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    incomeTax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    otherDeductions?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    foodAllowanceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transportAllowanceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    expenseReimbursementValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    advancePaymentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reversalValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compensationValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    judicialPensionValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    incomeSource?: NullableEnumIncomeSourceFieldUpdateOperationsInput | $Enums.IncomeSource | null
    application_id?: StringFieldUpdateOperationsInput | string
    familyMember?: FamilyMemberUpdateOneWithoutMonthlyIncomeNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutMonthlyIncomeNestedInput
  }

  export type MonthlyIncomeUncheckedUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    grossAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    liquidAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    proLabore?: NullableFloatFieldUpdateOperationsInput | number | null
    dividends?: NullableFloatFieldUpdateOperationsInput | number | null
    total?: NullableFloatFieldUpdateOperationsInput | number | null
    deductionValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    publicPension?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    incomeTax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    otherDeductions?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    foodAllowanceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transportAllowanceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    expenseReimbursementValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    advancePaymentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reversalValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compensationValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    judicialPensionValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: NullableEnumIncomeSourceFieldUpdateOperationsInput | $Enums.IncomeSource | null
    application_id?: StringFieldUpdateOperationsInput | string
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MonthlyIncomeUncheckedUpdateManyWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    grossAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    liquidAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    proLabore?: NullableFloatFieldUpdateOperationsInput | number | null
    dividends?: NullableFloatFieldUpdateOperationsInput | number | null
    total?: NullableFloatFieldUpdateOperationsInput | number | null
    deductionValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    publicPension?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    incomeTax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    otherDeductions?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    foodAllowanceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transportAllowanceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    expenseReimbursementValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    advancePaymentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reversalValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compensationValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    judicialPensionValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: NullableEnumIncomeSourceFieldUpdateOperationsInput | $Enums.IncomeSource | null
    application_id?: StringFieldUpdateOperationsInput | string
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FamilyMemberDiseaseUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    disease?: NullableEnumDiseaseFieldUpdateOperationsInput | $Enums.Disease | null
    diseases?: FamilyMemberDiseaseUpdatediseasesInput | $Enums.Disease[]
    specificDisease?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: BoolFieldUpdateOperationsInput | boolean
    application_id?: StringFieldUpdateOperationsInput | string
    familyMember?: FamilyMemberUpdateOneWithoutFamilyMemberDiseaseNestedInput
    legalResponsible?: LegalResponsibleUpdateOneWithoutFamilyMemberDiseaseNestedInput
    Medication?: MedicationUpdateManyWithoutFamilyMemberDiseaseNestedInput
  }

  export type FamilyMemberDiseaseUncheckedUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    disease?: NullableEnumDiseaseFieldUpdateOperationsInput | $Enums.Disease | null
    diseases?: FamilyMemberDiseaseUpdatediseasesInput | $Enums.Disease[]
    specificDisease?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: BoolFieldUpdateOperationsInput | boolean
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    Medication?: MedicationUncheckedUpdateManyWithoutFamilyMemberDiseaseNestedInput
  }

  export type FamilyMemberDiseaseUncheckedUpdateManyWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    disease?: NullableEnumDiseaseFieldUpdateOperationsInput | $Enums.Disease | null
    diseases?: FamilyMemberDiseaseUpdatediseasesInput | $Enums.Disease[]
    specificDisease?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: BoolFieldUpdateOperationsInput | boolean
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type MedicationUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    medicationName?: StringFieldUpdateOperationsInput | string
    obtainedPublicly?: BoolFieldUpdateOperationsInput | boolean
    specificMedicationPublicly?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    familyMember?: FamilyMemberUpdateOneWithoutMedicationNestedInput
    legalResponsible?: LegalResponsibleUpdateOneWithoutMedicationNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateOneWithoutMedicationNestedInput
  }

  export type MedicationUncheckedUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    medicationName?: StringFieldUpdateOperationsInput | string
    obtainedPublicly?: BoolFieldUpdateOperationsInput | boolean
    specificMedicationPublicly?: NullableStringFieldUpdateOperationsInput | string | null
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    familyMemberDiseaseId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MedicationUncheckedUpdateManyWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    medicationName?: StringFieldUpdateOperationsInput | string
    obtainedPublicly?: BoolFieldUpdateOperationsInput | boolean
    specificMedicationPublicly?: NullableStringFieldUpdateOperationsInput | string | null
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    familyMemberDiseaseId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BankAccountUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: StringFieldUpdateOperationsInput | string
    agencyNumber?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    accountType?: EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType
    application_id?: StringFieldUpdateOperationsInput | string
    familyMember?: FamilyMemberUpdateOneWithoutBankAccountNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutBankAccountNestedInput
  }

  export type BankAccountUncheckedUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: StringFieldUpdateOperationsInput | string
    agencyNumber?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    accountType?: EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type BankAccountUncheckedUpdateManyWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: StringFieldUpdateOperationsInput | string
    agencyNumber?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    accountType?: EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type DeclarationsUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    declarationType?: EnumDeclaration_TypeFieldUpdateOperationsInput | $Enums.Declaration_Type
    text?: StringFieldUpdateOperationsInput | string
    application_id?: StringFieldUpdateOperationsInput | string
    familyMember?: FamilyMemberUpdateOneWithoutDeclarationsNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutDeclarationsNestedInput
  }

  export type DeclarationsUncheckedUpdateWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    declarationType?: EnumDeclaration_TypeFieldUpdateOperationsInput | $Enums.Declaration_Type
    text?: StringFieldUpdateOperationsInput | string
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type DeclarationsUncheckedUpdateManyWithoutCandidateInput = {
    id?: StringFieldUpdateOperationsInput | string
    declarationType?: EnumDeclaration_TypeFieldUpdateOperationsInput | $Enums.Declaration_Type
    text?: StringFieldUpdateOperationsInput | string
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type IdentityDetailsCreateManyResponsibleInput = {
    id?: string
    fullName: string
    socialName?: string | null
    main_id?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF?: string | null
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    CadUnico?: boolean
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    address?: string | null
    addressNumber?: string | null
    complement?: string | null
    neighborhood?: string | null
    city?: string | null
    UF?: $Enums.COUNTRY | null
    CEP?: string | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    email?: string | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    incomeSource?: IdentityDetailsCreateincomeSourceInput | $Enums.IncomeSource[]
    livesAlone: boolean
    intendsToGetScholarship: boolean
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    yearsBenefitedFromCebas_basic?: IdentityDetailsCreateyearsBenefitedFromCebas_basicInput | string[]
    scholarshipType_basic?: $Enums.ScholarshipType | null
    institutionName_basic?: string | null
    institutionCNPJ_basic?: string | null
    benefitedFromCebasScholarship_professional?: boolean | null
    lastYearBenefitedFromCebas_professional?: string | null
    scholarshipType_professional?: $Enums.ScholarshipType | null
    institutionName_professional?: string | null
    institutionCNPJ_professional?: string | null
    nameOfScholarshipCourse_professional?: string | null
    candidate_id?: string | null
    application_id: string
  }

  export type CandidateCreateManyResponsibleInput = {
    id?: string
    name: string
    CPF: string
    main_id?: string | null
    birthDate: Date | string
    role?: $Enums.ROLE
    createdAt?: Date | string
    user_id?: string | null
    profilePicture?: string | null
    email?: string | null
    finishedapplication?: boolean
    application_id?: string | null
  }

  export type HousingCreateManyResponsibleInput = {
    id?: string
    propertyStatus: $Enums.PropertyStatus
    contractType?: $Enums.ContractType | null
    main_id?: string | null
    grantorName?: string | null
    timeLivingInProperty: $Enums.TimeLivingInProperty
    domicileType: $Enums.DomicileType
    numberOfRooms: $Enums.NumberOfRooms
    numberOfBedrooms: number
    candidate_id?: string | null
    application_id: string
  }

  export type FamilyMemberCreateManyLegalResponsibleInput = {
    id?: string
    relationship: $Enums.Relationship
    otherRelationship?: string | null
    main_id?: string | null
    fullName: string
    socialName?: string | null
    birthDate: Date | string
    gender: $Enums.GENDER
    nationality: string
    natural_city: string
    natural_UF: $Enums.COUNTRY
    CPF: string
    RG: string
    rgIssuingAuthority: string
    rgIssuingState: string
    documentType?: $Enums.DOCUMENT_TYPE | null
    documentNumber?: string | null
    documentValidity?: Date | string | null
    numberOfBirthRegister?: string | null
    bookOfBirthRegister?: string | null
    pageOfBirthRegister?: string | null
    maritalStatus: $Enums.MARITAL_STATUS
    skinColor: $Enums.SkinColor
    religion: $Enums.RELIGION
    educationLevel: $Enums.SCHOLARSHIP
    specialNeeds?: boolean | null
    specialNeedsDescription?: string | null
    specialNeedsType?: string | null
    hasMedicalReport?: boolean | null
    landlinePhone?: string | null
    workPhone?: string | null
    contactNameForMessage?: string | null
    email?: string | null
    profession: string
    enrolledGovernmentProgram?: string | null
    NIS?: string | null
    educationPlace?: $Enums.INSTITUTION_TYPE | null
    institutionName?: string | null
    coursingEducationLevel?: $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: string | null
    turnOfEducation?: $Enums.SHIFT | null
    hasScholarship?: boolean | null
    percentageOfScholarship?: string | null
    monthlyAmount?: string | null
    candidate_id?: string | null
    attendedPublicHighSchool?: boolean | null
    benefitedFromCebasScholarship_basic?: boolean | null
    benefitedFromCebasScholarship_professional?: boolean | null
    CadUnico?: boolean | null
    hasSevereDeseaseOrUsesMedication?: boolean | null
    hasBankAccount?: boolean | null
    incomeSource?: FamilyMemberCreateincomeSourceInput | $Enums.IncomeSource[]
    application_id: string
  }

  export type CreditCardCreateManyLegalResponsibleInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    usersCount: number
    cardType: string
    bankName: string
    cardFlag: string
    invoiceValue: number
    familyMember_id?: string | null
    candidate_id?: string | null
    application_id: string
  }

  export type ExpenseCreateManyLegalResponsibleInput = {
    id?: string
    main_id?: string | null
    date: Date | string
    waterSewage?: number | null
    electricity?: number | null
    landlinePhone?: number | null
    mobilePhone?: number | null
    food?: number | null
    rent?: number | null
    garageRent?: number | null
    condominium?: number | null
    cableTV?: number | null
    streamingServices?: number | null
    fuel?: number | null
    annualIPVA?: number | null
    annualIPTU?: number | null
    annualITR?: number | null
    annualIR?: number | null
    INSS?: number | null
    publicTransport?: number | null
    schoolTransport?: number | null
    internet?: number | null
    courses?: number | null
    healthPlan?: number | null
    dentalPlan?: number | null
    medicationExpenses?: number | null
    totalExpense?: number | null
    candidate_id?: string | null
    installmentCountIPTU?: number | null
    installmentCountIPVA?: number | null
    installmentCountIR?: number | null
    installmentCountITR?: number | null
    installmentValueIPTU?: number | null
    installmentValueIPVA?: number | null
    installmentValueIR?: number | null
    installmentValueITR?: number | null
    financing?: number | null
    creditCard?: number | null
    optedForInstallmentIPTU?: boolean | null
    optedForInstallmentIPVA?: boolean | null
    optedForInstallmentIR?: boolean | null
    optedForInstallmentITR?: boolean | null
    otherExpensesDescription?: ExpenseCreateotherExpensesDescriptionInput | string[]
    otherExpensesValue?: ExpenseCreateotherExpensesValueInput | number[]
    application_id: string
  }

  export type FinancingCreateManyLegalResponsibleInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    installmentValue: number
    totalInstallments: number
    paidInstallments: number
    bankName: string
    familyMember_id?: string | null
    candidate_id?: string | null
    otherFinancing?: string | null
    financingType: $Enums.FinancingType
    application_id: string
  }

  export type LoanCreateManyLegalResponsibleInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    installmentValue: number
    totalInstallments: number
    paidInstallments: number
    bankName: string
    familyMember_id?: string | null
    candidate_id?: string | null
    application_id: string
  }

  export type OtherExpenseCreateManyLegalResponsibleInput = {
    id?: string
    main_id?: string | null
    description: string
    value: number
    familyMember_id?: string | null
    candidate_id?: string | null
    application_id: string
  }

  export type VehicleCreateManyLegalResponsibleInput = {
    id?: string
    vehicleType: $Enums.VehicleType
    modelAndBrand: string
    main_id?: string | null
    manufacturingYear: number
    situation: $Enums.VehicleSituation
    financedMonths?: number | null
    monthsToPayOff?: number | null
    hasInsurance?: boolean
    insuranceValue?: number | null
    usage: $Enums.VehicleUsage
    candidate_id?: string | null
    owners_id?: VehicleCreateowners_idInput | string[]
    application_id: string
  }

  export type FamilyMemberDiseaseCreateManyLegalResponsibleInput = {
    id?: string
    main_id?: string | null
    disease?: $Enums.Disease | null
    diseases?: FamilyMemberDiseaseCreatediseasesInput | $Enums.Disease[]
    specificDisease?: string | null
    hasMedicalReport: boolean
    familyMember_id?: string | null
    candidate_id?: string | null
    application_id: string
  }

  export type MedicationCreateManyLegalResponsibleInput = {
    id?: string
    main_id?: string | null
    medicationName: string
    obtainedPublicly: boolean
    specificMedicationPublicly?: string | null
    familyMember_id?: string | null
    candidate_id?: string | null
    application_id: string
    familyMemberDiseaseId?: string | null
  }

  export type ApplicationCreateManyResponsibleInput = {
    id?: string
    candidate_id: string
    announcement_id: string
    status: $Enums.ApplicationStatus
    socialAssistant_id?: string | null
    educationLevel_id: string
    candidateName?: string | null
    SocialAssistantName?: string | null
    CadUnico?: boolean | null
    hasSevereDesease?: boolean | null
    averageIncome?: number | null
    perCapita?: number | null
    position?: number | null
    number?: number
  }

  export type FamilyMemberIncomeCreateManyLegalResponsibleInput = {
    id?: string
    employmentType: $Enums.EmploymentType
    averageIncome: string
    main_id?: string | null
    admissionDate?: Date | string | null
    position?: string | null
    payingSource?: string | null
    payingSourcePhone?: string | null
    startDate?: Date | string | null
    CNPJ?: string | null
    financialAssistantCPF?: string | null
    socialReason?: string | null
    fantasyName?: string | null
    CPNJ?: string | null
    receivesUnemployment?: boolean | null
    parcels?: number | null
    firstParcelDate?: Date | string | null
    parcelValue?: number | null
    familyMember_id?: string | null
    quantity?: number
    candidate_id?: string | null
    application_id: string
  }

  export type MonthlyIncomeCreateManyLegalResponsibleInput = {
    id?: string
    date?: Date | string | null
    main_id?: string | null
    grossAmount?: number | null
    liquidAmount?: number | null
    proLabore?: number | null
    dividends?: number | null
    total?: number | null
    deductionValue?: Decimal | DecimalJsLike | number | string | null
    publicPension?: Decimal | DecimalJsLike | number | string | null
    incomeTax?: Decimal | DecimalJsLike | number | string | null
    otherDeductions?: Decimal | DecimalJsLike | number | string | null
    foodAllowanceValue?: Decimal | DecimalJsLike | number | string | null
    transportAllowanceValue?: Decimal | DecimalJsLike | number | string | null
    expenseReimbursementValue?: Decimal | DecimalJsLike | number | string | null
    advancePaymentValue?: Decimal | DecimalJsLike | number | string | null
    reversalValue?: Decimal | DecimalJsLike | number | string | null
    compensationValue?: Decimal | DecimalJsLike | number | string | null
    judicialPensionValue?: Decimal | DecimalJsLike | number | string | null
    familyMember_id?: string | null
    candidate_id?: string | null
    incomeSource?: $Enums.IncomeSource | null
    application_id: string
  }

  export type BankAccountCreateManyLegalResponsibleInput = {
    id?: string
    main_id?: string | null
    bankName: string
    agencyNumber: string
    accountNumber: string
    accountType: $Enums.AccountType
    familyMember_id?: string | null
    candidate_id?: string | null
    application_id: string
  }

  export type DeclarationsCreateManyLegalResponsibleInput = {
    id?: string
    declarationType: $Enums.Declaration_Type
    text: string
    familyMember_id?: string | null
    candidate_id?: string | null
    application_id: string
  }

  export type IdentityDetailsUpdateWithoutResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: NullableStringFieldUpdateOperationsInput | string | null
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    CadUnico?: BoolFieldUpdateOperationsInput | boolean
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    addressNumber?: NullableStringFieldUpdateOperationsInput | string | null
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    CEP?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: IdentityDetailsUpdateincomeSourceInput | $Enums.IncomeSource[]
    livesAlone?: BoolFieldUpdateOperationsInput | boolean
    intendsToGetScholarship?: BoolFieldUpdateOperationsInput | boolean
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    yearsBenefitedFromCebas_basic?: IdentityDetailsUpdateyearsBenefitedFromCebas_basicInput | string[]
    scholarshipType_basic?: NullableEnumScholarshipTypeFieldUpdateOperationsInput | $Enums.ScholarshipType | null
    institutionName_basic?: NullableStringFieldUpdateOperationsInput | string | null
    institutionCNPJ_basic?: NullableStringFieldUpdateOperationsInput | string | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    lastYearBenefitedFromCebas_professional?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipType_professional?: NullableEnumScholarshipTypeFieldUpdateOperationsInput | $Enums.ScholarshipType | null
    institutionName_professional?: NullableStringFieldUpdateOperationsInput | string | null
    institutionCNPJ_professional?: NullableStringFieldUpdateOperationsInput | string | null
    nameOfScholarshipCourse_professional?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    candidate?: CandidateUpdateOneWithoutIdentityDetailsNestedInput
  }

  export type IdentityDetailsUncheckedUpdateWithoutResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: NullableStringFieldUpdateOperationsInput | string | null
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    CadUnico?: BoolFieldUpdateOperationsInput | boolean
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    addressNumber?: NullableStringFieldUpdateOperationsInput | string | null
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    CEP?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: IdentityDetailsUpdateincomeSourceInput | $Enums.IncomeSource[]
    livesAlone?: BoolFieldUpdateOperationsInput | boolean
    intendsToGetScholarship?: BoolFieldUpdateOperationsInput | boolean
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    yearsBenefitedFromCebas_basic?: IdentityDetailsUpdateyearsBenefitedFromCebas_basicInput | string[]
    scholarshipType_basic?: NullableEnumScholarshipTypeFieldUpdateOperationsInput | $Enums.ScholarshipType | null
    institutionName_basic?: NullableStringFieldUpdateOperationsInput | string | null
    institutionCNPJ_basic?: NullableStringFieldUpdateOperationsInput | string | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    lastYearBenefitedFromCebas_professional?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipType_professional?: NullableEnumScholarshipTypeFieldUpdateOperationsInput | $Enums.ScholarshipType | null
    institutionName_professional?: NullableStringFieldUpdateOperationsInput | string | null
    institutionCNPJ_professional?: NullableStringFieldUpdateOperationsInput | string | null
    nameOfScholarshipCourse_professional?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type IdentityDetailsUncheckedUpdateManyWithoutResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: NullableStringFieldUpdateOperationsInput | string | null
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    CadUnico?: BoolFieldUpdateOperationsInput | boolean
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    addressNumber?: NullableStringFieldUpdateOperationsInput | string | null
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    CEP?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: IdentityDetailsUpdateincomeSourceInput | $Enums.IncomeSource[]
    livesAlone?: BoolFieldUpdateOperationsInput | boolean
    intendsToGetScholarship?: BoolFieldUpdateOperationsInput | boolean
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    yearsBenefitedFromCebas_basic?: IdentityDetailsUpdateyearsBenefitedFromCebas_basicInput | string[]
    scholarshipType_basic?: NullableEnumScholarshipTypeFieldUpdateOperationsInput | $Enums.ScholarshipType | null
    institutionName_basic?: NullableStringFieldUpdateOperationsInput | string | null
    institutionCNPJ_basic?: NullableStringFieldUpdateOperationsInput | string | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    lastYearBenefitedFromCebas_professional?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipType_professional?: NullableEnumScholarshipTypeFieldUpdateOperationsInput | $Enums.ScholarshipType | null
    institutionName_professional?: NullableStringFieldUpdateOperationsInput | string | null
    institutionCNPJ_professional?: NullableStringFieldUpdateOperationsInput | string | null
    nameOfScholarshipCourse_professional?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type CandidateUpdateWithoutResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUpdateManyWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateUncheckedUpdateWithoutResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUncheckedUpdateManyWithoutCandidateNestedInput
    CreditCard?: CreditCardUncheckedUpdateManyWithoutCandidateNestedInput
    Expense?: ExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutCandidateNestedInput
    IdentityDetails?: IdentityDetailsUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutCandidateNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutCandidateNestedInput
    Vehicle?: VehicleUncheckedUpdateManyWithoutCandidateNestedInput
    FamillyMember?: FamilyMemberUncheckedUpdateManyWithoutCandidateNestedInput
    Housing?: HousingUncheckedUpdateManyWithoutCandidateNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutCandidateNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutCandidateNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutCandidateNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutCandidateNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutCandidateNestedInput
  }

  export type CandidateUncheckedUpdateManyWithoutResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumROLEFieldUpdateOperationsInput | $Enums.ROLE
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    finishedapplication?: BoolFieldUpdateOperationsInput | boolean
    application_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type HousingUpdateWithoutResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    propertyStatus?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    contractType?: NullableEnumContractTypeFieldUpdateOperationsInput | $Enums.ContractType | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    grantorName?: NullableStringFieldUpdateOperationsInput | string | null
    timeLivingInProperty?: EnumTimeLivingInPropertyFieldUpdateOperationsInput | $Enums.TimeLivingInProperty
    domicileType?: EnumDomicileTypeFieldUpdateOperationsInput | $Enums.DomicileType
    numberOfRooms?: EnumNumberOfRoomsFieldUpdateOperationsInput | $Enums.NumberOfRooms
    numberOfBedrooms?: IntFieldUpdateOperationsInput | number
    application_id?: StringFieldUpdateOperationsInput | string
    candidate?: CandidateUpdateOneWithoutHousingNestedInput
  }

  export type HousingUncheckedUpdateWithoutResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    propertyStatus?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    contractType?: NullableEnumContractTypeFieldUpdateOperationsInput | $Enums.ContractType | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    grantorName?: NullableStringFieldUpdateOperationsInput | string | null
    timeLivingInProperty?: EnumTimeLivingInPropertyFieldUpdateOperationsInput | $Enums.TimeLivingInProperty
    domicileType?: EnumDomicileTypeFieldUpdateOperationsInput | $Enums.DomicileType
    numberOfRooms?: EnumNumberOfRoomsFieldUpdateOperationsInput | $Enums.NumberOfRooms
    numberOfBedrooms?: IntFieldUpdateOperationsInput | number
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type HousingUncheckedUpdateManyWithoutResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    propertyStatus?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    contractType?: NullableEnumContractTypeFieldUpdateOperationsInput | $Enums.ContractType | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    grantorName?: NullableStringFieldUpdateOperationsInput | string | null
    timeLivingInProperty?: EnumTimeLivingInPropertyFieldUpdateOperationsInput | $Enums.TimeLivingInProperty
    domicileType?: EnumDomicileTypeFieldUpdateOperationsInput | $Enums.DomicileType
    numberOfRooms?: EnumNumberOfRoomsFieldUpdateOperationsInput | $Enums.NumberOfRooms
    numberOfBedrooms?: IntFieldUpdateOperationsInput | number
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type FamilyMemberUpdateWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    application_id?: StringFieldUpdateOperationsInput | string
    CreditCard?: CreditCardUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUpdateManyWithoutFamilyMemberNestedInput
    Financing?: FinancingUpdateManyWithoutFamilyMemberNestedInput
    Loan?: LoanUpdateManyWithoutFamilyMemberNestedInput
    MonthlyIncome?: MonthlyIncomeUpdateManyWithoutFamilyMemberNestedInput
    OtherExpense?: OtherExpenseUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUpdateManyWithoutFamilyMembersNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateManyWithoutFamilyMemberNestedInput
    candidate?: CandidateUpdateOneWithoutFamillyMemberNestedInput
    Medication?: MedicationUpdateManyWithoutFamilyMemberNestedInput
    BankAccount?: BankAccountUpdateManyWithoutFamilyMemberNestedInput
    Declarations?: DeclarationsUpdateManyWithoutFamilyMemberNestedInput
  }

  export type FamilyMemberUncheckedUpdateWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    application_id?: StringFieldUpdateOperationsInput | string
    CreditCard?: CreditCardUncheckedUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberIncome?: FamilyMemberIncomeUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Financing?: FinancingUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutFamilyMemberNestedInput
    MonthlyIncome?: MonthlyIncomeUncheckedUpdateManyWithoutFamilyMemberNestedInput
    OtherExpense?: OtherExpenseUncheckedUpdateManyWithoutFamilyMemberNestedInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedUpdateManyWithoutFamilyMembersNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Medication?: MedicationUncheckedUpdateManyWithoutFamilyMemberNestedInput
    BankAccount?: BankAccountUncheckedUpdateManyWithoutFamilyMemberNestedInput
    Declarations?: DeclarationsUncheckedUpdateManyWithoutFamilyMemberNestedInput
  }

  export type FamilyMemberUncheckedUpdateManyWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    relationship?: EnumRelationshipFieldUpdateOperationsInput | $Enums.Relationship
    otherRelationship?: NullableStringFieldUpdateOperationsInput | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: StringFieldUpdateOperationsInput | string
    socialName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: DateTimeFieldUpdateOperationsInput | Date | string
    gender?: EnumGENDERFieldUpdateOperationsInput | $Enums.GENDER
    nationality?: StringFieldUpdateOperationsInput | string
    natural_city?: StringFieldUpdateOperationsInput | string
    natural_UF?: EnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    rgIssuingAuthority?: StringFieldUpdateOperationsInput | string
    rgIssuingState?: StringFieldUpdateOperationsInput | string
    documentType?: NullableEnumDOCUMENT_TYPEFieldUpdateOperationsInput | $Enums.DOCUMENT_TYPE | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentValidity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numberOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    bookOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    pageOfBirthRegister?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: EnumMARITAL_STATUSFieldUpdateOperationsInput | $Enums.MARITAL_STATUS
    skinColor?: EnumSkinColorFieldUpdateOperationsInput | $Enums.SkinColor
    religion?: EnumRELIGIONFieldUpdateOperationsInput | $Enums.RELIGION
    educationLevel?: EnumSCHOLARSHIPFieldUpdateOperationsInput | $Enums.SCHOLARSHIP
    specialNeeds?: NullableBoolFieldUpdateOperationsInput | boolean | null
    specialNeedsDescription?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeedsType?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: NullableBoolFieldUpdateOperationsInput | boolean | null
    landlinePhone?: NullableStringFieldUpdateOperationsInput | string | null
    workPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactNameForMessage?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: StringFieldUpdateOperationsInput | string
    enrolledGovernmentProgram?: NullableStringFieldUpdateOperationsInput | string | null
    NIS?: NullableStringFieldUpdateOperationsInput | string | null
    educationPlace?: NullableEnumINSTITUTION_TYPEFieldUpdateOperationsInput | $Enums.INSTITUTION_TYPE | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    coursingEducationLevel?: NullableEnumEDUCATION_TYPEFieldUpdateOperationsInput | $Enums.EDUCATION_TYPE | null
    cycleOfEducation?: NullableStringFieldUpdateOperationsInput | string | null
    turnOfEducation?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    hasScholarship?: NullableBoolFieldUpdateOperationsInput | boolean | null
    percentageOfScholarship?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyAmount?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    attendedPublicHighSchool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_basic?: NullableBoolFieldUpdateOperationsInput | boolean | null
    benefitedFromCebasScholarship_professional?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDeseaseOrUsesMedication?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasBankAccount?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incomeSource?: FamilyMemberUpdateincomeSourceInput | $Enums.IncomeSource[]
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type CreditCardUpdateWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    usersCount?: IntFieldUpdateOperationsInput | number
    cardType?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    cardFlag?: StringFieldUpdateOperationsInput | string
    invoiceValue?: FloatFieldUpdateOperationsInput | number
    application_id?: StringFieldUpdateOperationsInput | string
    candidate?: CandidateUpdateOneWithoutCreditCardNestedInput
    familyMember?: FamilyMemberUpdateOneWithoutCreditCardNestedInput
  }

  export type CreditCardUncheckedUpdateWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    usersCount?: IntFieldUpdateOperationsInput | number
    cardType?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    cardFlag?: StringFieldUpdateOperationsInput | string
    invoiceValue?: FloatFieldUpdateOperationsInput | number
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type CreditCardUncheckedUpdateManyWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    usersCount?: IntFieldUpdateOperationsInput | number
    cardType?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    cardFlag?: StringFieldUpdateOperationsInput | string
    invoiceValue?: FloatFieldUpdateOperationsInput | number
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type ExpenseUpdateWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    waterSewage?: NullableFloatFieldUpdateOperationsInput | number | null
    electricity?: NullableFloatFieldUpdateOperationsInput | number | null
    landlinePhone?: NullableFloatFieldUpdateOperationsInput | number | null
    mobilePhone?: NullableFloatFieldUpdateOperationsInput | number | null
    food?: NullableFloatFieldUpdateOperationsInput | number | null
    rent?: NullableFloatFieldUpdateOperationsInput | number | null
    garageRent?: NullableFloatFieldUpdateOperationsInput | number | null
    condominium?: NullableFloatFieldUpdateOperationsInput | number | null
    cableTV?: NullableFloatFieldUpdateOperationsInput | number | null
    streamingServices?: NullableFloatFieldUpdateOperationsInput | number | null
    fuel?: NullableFloatFieldUpdateOperationsInput | number | null
    annualIPVA?: NullableFloatFieldUpdateOperationsInput | number | null
    annualIPTU?: NullableFloatFieldUpdateOperationsInput | number | null
    annualITR?: NullableFloatFieldUpdateOperationsInput | number | null
    annualIR?: NullableFloatFieldUpdateOperationsInput | number | null
    INSS?: NullableFloatFieldUpdateOperationsInput | number | null
    publicTransport?: NullableFloatFieldUpdateOperationsInput | number | null
    schoolTransport?: NullableFloatFieldUpdateOperationsInput | number | null
    internet?: NullableFloatFieldUpdateOperationsInput | number | null
    courses?: NullableFloatFieldUpdateOperationsInput | number | null
    healthPlan?: NullableFloatFieldUpdateOperationsInput | number | null
    dentalPlan?: NullableFloatFieldUpdateOperationsInput | number | null
    medicationExpenses?: NullableFloatFieldUpdateOperationsInput | number | null
    totalExpense?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentCountIPTU?: NullableIntFieldUpdateOperationsInput | number | null
    installmentCountIPVA?: NullableIntFieldUpdateOperationsInput | number | null
    installmentCountIR?: NullableIntFieldUpdateOperationsInput | number | null
    installmentCountITR?: NullableIntFieldUpdateOperationsInput | number | null
    installmentValueIPTU?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentValueIPVA?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentValueIR?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentValueITR?: NullableFloatFieldUpdateOperationsInput | number | null
    financing?: NullableFloatFieldUpdateOperationsInput | number | null
    creditCard?: NullableFloatFieldUpdateOperationsInput | number | null
    optedForInstallmentIPTU?: NullableBoolFieldUpdateOperationsInput | boolean | null
    optedForInstallmentIPVA?: NullableBoolFieldUpdateOperationsInput | boolean | null
    optedForInstallmentIR?: NullableBoolFieldUpdateOperationsInput | boolean | null
    optedForInstallmentITR?: NullableBoolFieldUpdateOperationsInput | boolean | null
    otherExpensesDescription?: ExpenseUpdateotherExpensesDescriptionInput | string[]
    otherExpensesValue?: ExpenseUpdateotherExpensesValueInput | number[]
    application_id?: StringFieldUpdateOperationsInput | string
    candidate?: CandidateUpdateOneWithoutExpenseNestedInput
  }

  export type ExpenseUncheckedUpdateWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    waterSewage?: NullableFloatFieldUpdateOperationsInput | number | null
    electricity?: NullableFloatFieldUpdateOperationsInput | number | null
    landlinePhone?: NullableFloatFieldUpdateOperationsInput | number | null
    mobilePhone?: NullableFloatFieldUpdateOperationsInput | number | null
    food?: NullableFloatFieldUpdateOperationsInput | number | null
    rent?: NullableFloatFieldUpdateOperationsInput | number | null
    garageRent?: NullableFloatFieldUpdateOperationsInput | number | null
    condominium?: NullableFloatFieldUpdateOperationsInput | number | null
    cableTV?: NullableFloatFieldUpdateOperationsInput | number | null
    streamingServices?: NullableFloatFieldUpdateOperationsInput | number | null
    fuel?: NullableFloatFieldUpdateOperationsInput | number | null
    annualIPVA?: NullableFloatFieldUpdateOperationsInput | number | null
    annualIPTU?: NullableFloatFieldUpdateOperationsInput | number | null
    annualITR?: NullableFloatFieldUpdateOperationsInput | number | null
    annualIR?: NullableFloatFieldUpdateOperationsInput | number | null
    INSS?: NullableFloatFieldUpdateOperationsInput | number | null
    publicTransport?: NullableFloatFieldUpdateOperationsInput | number | null
    schoolTransport?: NullableFloatFieldUpdateOperationsInput | number | null
    internet?: NullableFloatFieldUpdateOperationsInput | number | null
    courses?: NullableFloatFieldUpdateOperationsInput | number | null
    healthPlan?: NullableFloatFieldUpdateOperationsInput | number | null
    dentalPlan?: NullableFloatFieldUpdateOperationsInput | number | null
    medicationExpenses?: NullableFloatFieldUpdateOperationsInput | number | null
    totalExpense?: NullableFloatFieldUpdateOperationsInput | number | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    installmentCountIPTU?: NullableIntFieldUpdateOperationsInput | number | null
    installmentCountIPVA?: NullableIntFieldUpdateOperationsInput | number | null
    installmentCountIR?: NullableIntFieldUpdateOperationsInput | number | null
    installmentCountITR?: NullableIntFieldUpdateOperationsInput | number | null
    installmentValueIPTU?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentValueIPVA?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentValueIR?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentValueITR?: NullableFloatFieldUpdateOperationsInput | number | null
    financing?: NullableFloatFieldUpdateOperationsInput | number | null
    creditCard?: NullableFloatFieldUpdateOperationsInput | number | null
    optedForInstallmentIPTU?: NullableBoolFieldUpdateOperationsInput | boolean | null
    optedForInstallmentIPVA?: NullableBoolFieldUpdateOperationsInput | boolean | null
    optedForInstallmentIR?: NullableBoolFieldUpdateOperationsInput | boolean | null
    optedForInstallmentITR?: NullableBoolFieldUpdateOperationsInput | boolean | null
    otherExpensesDescription?: ExpenseUpdateotherExpensesDescriptionInput | string[]
    otherExpensesValue?: ExpenseUpdateotherExpensesValueInput | number[]
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type ExpenseUncheckedUpdateManyWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    waterSewage?: NullableFloatFieldUpdateOperationsInput | number | null
    electricity?: NullableFloatFieldUpdateOperationsInput | number | null
    landlinePhone?: NullableFloatFieldUpdateOperationsInput | number | null
    mobilePhone?: NullableFloatFieldUpdateOperationsInput | number | null
    food?: NullableFloatFieldUpdateOperationsInput | number | null
    rent?: NullableFloatFieldUpdateOperationsInput | number | null
    garageRent?: NullableFloatFieldUpdateOperationsInput | number | null
    condominium?: NullableFloatFieldUpdateOperationsInput | number | null
    cableTV?: NullableFloatFieldUpdateOperationsInput | number | null
    streamingServices?: NullableFloatFieldUpdateOperationsInput | number | null
    fuel?: NullableFloatFieldUpdateOperationsInput | number | null
    annualIPVA?: NullableFloatFieldUpdateOperationsInput | number | null
    annualIPTU?: NullableFloatFieldUpdateOperationsInput | number | null
    annualITR?: NullableFloatFieldUpdateOperationsInput | number | null
    annualIR?: NullableFloatFieldUpdateOperationsInput | number | null
    INSS?: NullableFloatFieldUpdateOperationsInput | number | null
    publicTransport?: NullableFloatFieldUpdateOperationsInput | number | null
    schoolTransport?: NullableFloatFieldUpdateOperationsInput | number | null
    internet?: NullableFloatFieldUpdateOperationsInput | number | null
    courses?: NullableFloatFieldUpdateOperationsInput | number | null
    healthPlan?: NullableFloatFieldUpdateOperationsInput | number | null
    dentalPlan?: NullableFloatFieldUpdateOperationsInput | number | null
    medicationExpenses?: NullableFloatFieldUpdateOperationsInput | number | null
    totalExpense?: NullableFloatFieldUpdateOperationsInput | number | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    installmentCountIPTU?: NullableIntFieldUpdateOperationsInput | number | null
    installmentCountIPVA?: NullableIntFieldUpdateOperationsInput | number | null
    installmentCountIR?: NullableIntFieldUpdateOperationsInput | number | null
    installmentCountITR?: NullableIntFieldUpdateOperationsInput | number | null
    installmentValueIPTU?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentValueIPVA?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentValueIR?: NullableFloatFieldUpdateOperationsInput | number | null
    installmentValueITR?: NullableFloatFieldUpdateOperationsInput | number | null
    financing?: NullableFloatFieldUpdateOperationsInput | number | null
    creditCard?: NullableFloatFieldUpdateOperationsInput | number | null
    optedForInstallmentIPTU?: NullableBoolFieldUpdateOperationsInput | boolean | null
    optedForInstallmentIPVA?: NullableBoolFieldUpdateOperationsInput | boolean | null
    optedForInstallmentIR?: NullableBoolFieldUpdateOperationsInput | boolean | null
    optedForInstallmentITR?: NullableBoolFieldUpdateOperationsInput | boolean | null
    otherExpensesDescription?: ExpenseUpdateotherExpensesDescriptionInput | string[]
    otherExpensesValue?: ExpenseUpdateotherExpensesValueInput | number[]
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type FinancingUpdateWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    installmentValue?: FloatFieldUpdateOperationsInput | number
    totalInstallments?: IntFieldUpdateOperationsInput | number
    paidInstallments?: IntFieldUpdateOperationsInput | number
    bankName?: StringFieldUpdateOperationsInput | string
    otherFinancing?: NullableStringFieldUpdateOperationsInput | string | null
    financingType?: EnumFinancingTypeFieldUpdateOperationsInput | $Enums.FinancingType
    application_id?: StringFieldUpdateOperationsInput | string
    candidate?: CandidateUpdateOneWithoutFinancingNestedInput
    familyMember?: FamilyMemberUpdateOneWithoutFinancingNestedInput
  }

  export type FinancingUncheckedUpdateWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    installmentValue?: FloatFieldUpdateOperationsInput | number
    totalInstallments?: IntFieldUpdateOperationsInput | number
    paidInstallments?: IntFieldUpdateOperationsInput | number
    bankName?: StringFieldUpdateOperationsInput | string
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    otherFinancing?: NullableStringFieldUpdateOperationsInput | string | null
    financingType?: EnumFinancingTypeFieldUpdateOperationsInput | $Enums.FinancingType
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type FinancingUncheckedUpdateManyWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    installmentValue?: FloatFieldUpdateOperationsInput | number
    totalInstallments?: IntFieldUpdateOperationsInput | number
    paidInstallments?: IntFieldUpdateOperationsInput | number
    bankName?: StringFieldUpdateOperationsInput | string
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    otherFinancing?: NullableStringFieldUpdateOperationsInput | string | null
    financingType?: EnumFinancingTypeFieldUpdateOperationsInput | $Enums.FinancingType
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type LoanUpdateWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    installmentValue?: FloatFieldUpdateOperationsInput | number
    totalInstallments?: IntFieldUpdateOperationsInput | number
    paidInstallments?: IntFieldUpdateOperationsInput | number
    bankName?: StringFieldUpdateOperationsInput | string
    application_id?: StringFieldUpdateOperationsInput | string
    candidate?: CandidateUpdateOneWithoutLoanNestedInput
    familyMember?: FamilyMemberUpdateOneWithoutLoanNestedInput
  }

  export type LoanUncheckedUpdateWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    installmentValue?: FloatFieldUpdateOperationsInput | number
    totalInstallments?: IntFieldUpdateOperationsInput | number
    paidInstallments?: IntFieldUpdateOperationsInput | number
    bankName?: StringFieldUpdateOperationsInput | string
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type LoanUncheckedUpdateManyWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    installmentValue?: FloatFieldUpdateOperationsInput | number
    totalInstallments?: IntFieldUpdateOperationsInput | number
    paidInstallments?: IntFieldUpdateOperationsInput | number
    bankName?: StringFieldUpdateOperationsInput | string
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type OtherExpenseUpdateWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    value?: FloatFieldUpdateOperationsInput | number
    application_id?: StringFieldUpdateOperationsInput | string
    candidate?: CandidateUpdateOneWithoutOtherExpenseNestedInput
    familyMember?: FamilyMemberUpdateOneWithoutOtherExpenseNestedInput
  }

  export type OtherExpenseUncheckedUpdateWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    value?: FloatFieldUpdateOperationsInput | number
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type OtherExpenseUncheckedUpdateManyWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    value?: FloatFieldUpdateOperationsInput | number
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type VehicleUpdateWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    vehicleType?: EnumVehicleTypeFieldUpdateOperationsInput | $Enums.VehicleType
    modelAndBrand?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturingYear?: IntFieldUpdateOperationsInput | number
    situation?: EnumVehicleSituationFieldUpdateOperationsInput | $Enums.VehicleSituation
    financedMonths?: NullableIntFieldUpdateOperationsInput | number | null
    monthsToPayOff?: NullableIntFieldUpdateOperationsInput | number | null
    hasInsurance?: BoolFieldUpdateOperationsInput | boolean
    insuranceValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usage?: EnumVehicleUsageFieldUpdateOperationsInput | $Enums.VehicleUsage
    owners_id?: VehicleUpdateowners_idInput | string[]
    application_id?: StringFieldUpdateOperationsInput | string
    candidate?: CandidateUpdateOneWithoutVehicleNestedInput
    FamilyMemberToVehicle?: FamilyMemberToVehicleUpdateManyWithoutVehicleNestedInput
  }

  export type VehicleUncheckedUpdateWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    vehicleType?: EnumVehicleTypeFieldUpdateOperationsInput | $Enums.VehicleType
    modelAndBrand?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturingYear?: IntFieldUpdateOperationsInput | number
    situation?: EnumVehicleSituationFieldUpdateOperationsInput | $Enums.VehicleSituation
    financedMonths?: NullableIntFieldUpdateOperationsInput | number | null
    monthsToPayOff?: NullableIntFieldUpdateOperationsInput | number | null
    hasInsurance?: BoolFieldUpdateOperationsInput | boolean
    insuranceValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usage?: EnumVehicleUsageFieldUpdateOperationsInput | $Enums.VehicleUsage
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    owners_id?: VehicleUpdateowners_idInput | string[]
    application_id?: StringFieldUpdateOperationsInput | string
    FamilyMemberToVehicle?: FamilyMemberToVehicleUncheckedUpdateManyWithoutVehicleNestedInput
  }

  export type VehicleUncheckedUpdateManyWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    vehicleType?: EnumVehicleTypeFieldUpdateOperationsInput | $Enums.VehicleType
    modelAndBrand?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturingYear?: IntFieldUpdateOperationsInput | number
    situation?: EnumVehicleSituationFieldUpdateOperationsInput | $Enums.VehicleSituation
    financedMonths?: NullableIntFieldUpdateOperationsInput | number | null
    monthsToPayOff?: NullableIntFieldUpdateOperationsInput | number | null
    hasInsurance?: BoolFieldUpdateOperationsInput | boolean
    insuranceValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usage?: EnumVehicleUsageFieldUpdateOperationsInput | $Enums.VehicleUsage
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    owners_id?: VehicleUpdateowners_idInput | string[]
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type FamilyMemberDiseaseUpdateWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    disease?: NullableEnumDiseaseFieldUpdateOperationsInput | $Enums.Disease | null
    diseases?: FamilyMemberDiseaseUpdatediseasesInput | $Enums.Disease[]
    specificDisease?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: BoolFieldUpdateOperationsInput | boolean
    application_id?: StringFieldUpdateOperationsInput | string
    familyMember?: FamilyMemberUpdateOneWithoutFamilyMemberDiseaseNestedInput
    candidate?: CandidateUpdateOneWithoutFamilyMemberDiseaseNestedInput
    Medication?: MedicationUpdateManyWithoutFamilyMemberDiseaseNestedInput
  }

  export type FamilyMemberDiseaseUncheckedUpdateWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    disease?: NullableEnumDiseaseFieldUpdateOperationsInput | $Enums.Disease | null
    diseases?: FamilyMemberDiseaseUpdatediseasesInput | $Enums.Disease[]
    specificDisease?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: BoolFieldUpdateOperationsInput | boolean
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    Medication?: MedicationUncheckedUpdateManyWithoutFamilyMemberDiseaseNestedInput
  }

  export type FamilyMemberDiseaseUncheckedUpdateManyWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    disease?: NullableEnumDiseaseFieldUpdateOperationsInput | $Enums.Disease | null
    diseases?: FamilyMemberDiseaseUpdatediseasesInput | $Enums.Disease[]
    specificDisease?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: BoolFieldUpdateOperationsInput | boolean
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type MedicationUpdateWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    medicationName?: StringFieldUpdateOperationsInput | string
    obtainedPublicly?: BoolFieldUpdateOperationsInput | boolean
    specificMedicationPublicly?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    familyMember?: FamilyMemberUpdateOneWithoutMedicationNestedInput
    candidate?: CandidateUpdateOneWithoutMedicationNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateOneWithoutMedicationNestedInput
  }

  export type MedicationUncheckedUpdateWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    medicationName?: StringFieldUpdateOperationsInput | string
    obtainedPublicly?: BoolFieldUpdateOperationsInput | boolean
    specificMedicationPublicly?: NullableStringFieldUpdateOperationsInput | string | null
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    familyMemberDiseaseId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MedicationUncheckedUpdateManyWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    medicationName?: StringFieldUpdateOperationsInput | string
    obtainedPublicly?: BoolFieldUpdateOperationsInput | boolean
    specificMedicationPublicly?: NullableStringFieldUpdateOperationsInput | string | null
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    familyMemberDiseaseId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ApplicationUpdateWithoutResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    candidateName?: NullableStringFieldUpdateOperationsInput | string | null
    SocialAssistantName?: NullableStringFieldUpdateOperationsInput | string | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDesease?: NullableBoolFieldUpdateOperationsInput | boolean | null
    averageIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    perCapita?: NullableFloatFieldUpdateOperationsInput | number | null
    position?: NullableIntFieldUpdateOperationsInput | number | null
    number?: IntFieldUpdateOperationsInput | number
    announcement?: AnnouncementUpdateOneRequiredWithoutApplicationNestedInput
    candidate?: CandidateUpdateOneRequiredWithoutApplicationNestedInput
    EducationLevel?: EducationLevelUpdateOneRequiredWithoutApplicationNestedInput
    SocialAssistant?: SocialAssistantUpdateOneWithoutApplicationNestedInput
    applicationHistories?: ApplicationHistoryUpdateManyWithoutApplicationNestedInput
    ScholarshipGranted?: ScholarshipGrantedUpdateOneWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateWithoutResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    candidate_id?: StringFieldUpdateOperationsInput | string
    announcement_id?: StringFieldUpdateOperationsInput | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    socialAssistant_id?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel_id?: StringFieldUpdateOperationsInput | string
    candidateName?: NullableStringFieldUpdateOperationsInput | string | null
    SocialAssistantName?: NullableStringFieldUpdateOperationsInput | string | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDesease?: NullableBoolFieldUpdateOperationsInput | boolean | null
    averageIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    perCapita?: NullableFloatFieldUpdateOperationsInput | number | null
    position?: NullableIntFieldUpdateOperationsInput | number | null
    number?: IntFieldUpdateOperationsInput | number
    applicationHistories?: ApplicationHistoryUncheckedUpdateManyWithoutApplicationNestedInput
    ScholarshipGranted?: ScholarshipGrantedUncheckedUpdateOneWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateManyWithoutResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    candidate_id?: StringFieldUpdateOperationsInput | string
    announcement_id?: StringFieldUpdateOperationsInput | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    socialAssistant_id?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel_id?: StringFieldUpdateOperationsInput | string
    candidateName?: NullableStringFieldUpdateOperationsInput | string | null
    SocialAssistantName?: NullableStringFieldUpdateOperationsInput | string | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDesease?: NullableBoolFieldUpdateOperationsInput | boolean | null
    averageIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    perCapita?: NullableFloatFieldUpdateOperationsInput | number | null
    position?: NullableIntFieldUpdateOperationsInput | number | null
    number?: IntFieldUpdateOperationsInput | number
  }

  export type FamilyMemberIncomeUpdateWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    employmentType?: EnumEmploymentTypeFieldUpdateOperationsInput | $Enums.EmploymentType
    averageIncome?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    payingSource?: NullableStringFieldUpdateOperationsInput | string | null
    payingSourcePhone?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CNPJ?: NullableStringFieldUpdateOperationsInput | string | null
    financialAssistantCPF?: NullableStringFieldUpdateOperationsInput | string | null
    socialReason?: NullableStringFieldUpdateOperationsInput | string | null
    fantasyName?: NullableStringFieldUpdateOperationsInput | string | null
    CPNJ?: NullableStringFieldUpdateOperationsInput | string | null
    receivesUnemployment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parcels?: NullableIntFieldUpdateOperationsInput | number | null
    firstParcelDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parcelValue?: NullableFloatFieldUpdateOperationsInput | number | null
    quantity?: IntFieldUpdateOperationsInput | number
    application_id?: StringFieldUpdateOperationsInput | string
    familyMember?: FamilyMemberUpdateOneWithoutFamilyMemberIncomeNestedInput
    candidate?: CandidateUpdateOneWithoutFamilyMemberIncomeNestedInput
  }

  export type FamilyMemberIncomeUncheckedUpdateWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    employmentType?: EnumEmploymentTypeFieldUpdateOperationsInput | $Enums.EmploymentType
    averageIncome?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    payingSource?: NullableStringFieldUpdateOperationsInput | string | null
    payingSourcePhone?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CNPJ?: NullableStringFieldUpdateOperationsInput | string | null
    financialAssistantCPF?: NullableStringFieldUpdateOperationsInput | string | null
    socialReason?: NullableStringFieldUpdateOperationsInput | string | null
    fantasyName?: NullableStringFieldUpdateOperationsInput | string | null
    CPNJ?: NullableStringFieldUpdateOperationsInput | string | null
    receivesUnemployment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parcels?: NullableIntFieldUpdateOperationsInput | number | null
    firstParcelDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parcelValue?: NullableFloatFieldUpdateOperationsInput | number | null
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type FamilyMemberIncomeUncheckedUpdateManyWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    employmentType?: EnumEmploymentTypeFieldUpdateOperationsInput | $Enums.EmploymentType
    averageIncome?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    payingSource?: NullableStringFieldUpdateOperationsInput | string | null
    payingSourcePhone?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CNPJ?: NullableStringFieldUpdateOperationsInput | string | null
    financialAssistantCPF?: NullableStringFieldUpdateOperationsInput | string | null
    socialReason?: NullableStringFieldUpdateOperationsInput | string | null
    fantasyName?: NullableStringFieldUpdateOperationsInput | string | null
    CPNJ?: NullableStringFieldUpdateOperationsInput | string | null
    receivesUnemployment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parcels?: NullableIntFieldUpdateOperationsInput | number | null
    firstParcelDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parcelValue?: NullableFloatFieldUpdateOperationsInput | number | null
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type MonthlyIncomeUpdateWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    grossAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    liquidAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    proLabore?: NullableFloatFieldUpdateOperationsInput | number | null
    dividends?: NullableFloatFieldUpdateOperationsInput | number | null
    total?: NullableFloatFieldUpdateOperationsInput | number | null
    deductionValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    publicPension?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    incomeTax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    otherDeductions?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    foodAllowanceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transportAllowanceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    expenseReimbursementValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    advancePaymentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reversalValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compensationValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    judicialPensionValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    incomeSource?: NullableEnumIncomeSourceFieldUpdateOperationsInput | $Enums.IncomeSource | null
    application_id?: StringFieldUpdateOperationsInput | string
    familyMember?: FamilyMemberUpdateOneWithoutMonthlyIncomeNestedInput
    candidate?: CandidateUpdateOneWithoutMonthlyIncomeNestedInput
  }

  export type MonthlyIncomeUncheckedUpdateWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    grossAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    liquidAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    proLabore?: NullableFloatFieldUpdateOperationsInput | number | null
    dividends?: NullableFloatFieldUpdateOperationsInput | number | null
    total?: NullableFloatFieldUpdateOperationsInput | number | null
    deductionValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    publicPension?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    incomeTax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    otherDeductions?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    foodAllowanceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transportAllowanceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    expenseReimbursementValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    advancePaymentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reversalValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compensationValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    judicialPensionValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: NullableEnumIncomeSourceFieldUpdateOperationsInput | $Enums.IncomeSource | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type MonthlyIncomeUncheckedUpdateManyWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    grossAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    liquidAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    proLabore?: NullableFloatFieldUpdateOperationsInput | number | null
    dividends?: NullableFloatFieldUpdateOperationsInput | number | null
    total?: NullableFloatFieldUpdateOperationsInput | number | null
    deductionValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    publicPension?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    incomeTax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    otherDeductions?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    foodAllowanceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transportAllowanceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    expenseReimbursementValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    advancePaymentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reversalValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compensationValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    judicialPensionValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: NullableEnumIncomeSourceFieldUpdateOperationsInput | $Enums.IncomeSource | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type BankAccountUpdateWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: StringFieldUpdateOperationsInput | string
    agencyNumber?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    accountType?: EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType
    application_id?: StringFieldUpdateOperationsInput | string
    familyMember?: FamilyMemberUpdateOneWithoutBankAccountNestedInput
    candidate?: CandidateUpdateOneWithoutBankAccountNestedInput
  }

  export type BankAccountUncheckedUpdateWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: StringFieldUpdateOperationsInput | string
    agencyNumber?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    accountType?: EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type BankAccountUncheckedUpdateManyWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: StringFieldUpdateOperationsInput | string
    agencyNumber?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    accountType?: EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type DeclarationsUpdateWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    declarationType?: EnumDeclaration_TypeFieldUpdateOperationsInput | $Enums.Declaration_Type
    text?: StringFieldUpdateOperationsInput | string
    application_id?: StringFieldUpdateOperationsInput | string
    candidate?: CandidateUpdateOneWithoutDeclarationsNestedInput
    familyMember?: FamilyMemberUpdateOneWithoutDeclarationsNestedInput
  }

  export type DeclarationsUncheckedUpdateWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    declarationType?: EnumDeclaration_TypeFieldUpdateOperationsInput | $Enums.Declaration_Type
    text?: StringFieldUpdateOperationsInput | string
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type DeclarationsUncheckedUpdateManyWithoutLegalResponsibleInput = {
    id?: StringFieldUpdateOperationsInput | string
    declarationType?: EnumDeclaration_TypeFieldUpdateOperationsInput | $Enums.Declaration_Type
    text?: StringFieldUpdateOperationsInput | string
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type ApplicationCreateManySocialAssistantInput = {
    id?: string
    candidate_id: string
    announcement_id: string
    status: $Enums.ApplicationStatus
    educationLevel_id: string
    candidateName?: string | null
    SocialAssistantName?: string | null
    CadUnico?: boolean | null
    hasSevereDesease?: boolean | null
    averageIncome?: number | null
    perCapita?: number | null
    position?: number | null
    number?: number
    reponsible_id?: string | null
  }

  export type ApplicationUpdateWithoutSocialAssistantInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    candidateName?: NullableStringFieldUpdateOperationsInput | string | null
    SocialAssistantName?: NullableStringFieldUpdateOperationsInput | string | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDesease?: NullableBoolFieldUpdateOperationsInput | boolean | null
    averageIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    perCapita?: NullableFloatFieldUpdateOperationsInput | number | null
    position?: NullableIntFieldUpdateOperationsInput | number | null
    number?: IntFieldUpdateOperationsInput | number
    announcement?: AnnouncementUpdateOneRequiredWithoutApplicationNestedInput
    candidate?: CandidateUpdateOneRequiredWithoutApplicationNestedInput
    EducationLevel?: EducationLevelUpdateOneRequiredWithoutApplicationNestedInput
    applicationHistories?: ApplicationHistoryUpdateManyWithoutApplicationNestedInput
    ScholarshipGranted?: ScholarshipGrantedUpdateOneWithoutApplicationNestedInput
    responsible?: LegalResponsibleUpdateOneWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateWithoutSocialAssistantInput = {
    id?: StringFieldUpdateOperationsInput | string
    candidate_id?: StringFieldUpdateOperationsInput | string
    announcement_id?: StringFieldUpdateOperationsInput | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    educationLevel_id?: StringFieldUpdateOperationsInput | string
    candidateName?: NullableStringFieldUpdateOperationsInput | string | null
    SocialAssistantName?: NullableStringFieldUpdateOperationsInput | string | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDesease?: NullableBoolFieldUpdateOperationsInput | boolean | null
    averageIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    perCapita?: NullableFloatFieldUpdateOperationsInput | number | null
    position?: NullableIntFieldUpdateOperationsInput | number | null
    number?: IntFieldUpdateOperationsInput | number
    reponsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    applicationHistories?: ApplicationHistoryUncheckedUpdateManyWithoutApplicationNestedInput
    ScholarshipGranted?: ScholarshipGrantedUncheckedUpdateOneWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateManyWithoutSocialAssistantInput = {
    id?: StringFieldUpdateOperationsInput | string
    candidate_id?: StringFieldUpdateOperationsInput | string
    announcement_id?: StringFieldUpdateOperationsInput | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    educationLevel_id?: StringFieldUpdateOperationsInput | string
    candidateName?: NullableStringFieldUpdateOperationsInput | string | null
    SocialAssistantName?: NullableStringFieldUpdateOperationsInput | string | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDesease?: NullableBoolFieldUpdateOperationsInput | boolean | null
    averageIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    perCapita?: NullableFloatFieldUpdateOperationsInput | number | null
    position?: NullableIntFieldUpdateOperationsInput | number | null
    number?: IntFieldUpdateOperationsInput | number
    reponsible_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AnnouncementUpdateWithoutSocialAssistantInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    branchChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    announcementType?: EnumAnnouncementTypeFieldUpdateOperationsInput | $Enums.AnnouncementType
    announcementNumber?: NullableStringFieldUpdateOperationsInput | string | null
    announcementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    announcementBegin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closeDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waitingList?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    announcementName?: NullableStringFieldUpdateOperationsInput | string | null
    announcementLogo?: NullableStringFieldUpdateOperationsInput | string | null
    type2?: NullableStringFieldUpdateOperationsInput | string | null
    criteria?: AnnouncementUpdatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementUpdatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewUpdateOneWithoutAnnouncementNestedInput
    entity?: EntityUpdateOneRequiredWithoutAnnouncementNestedInput
    entity_subsidiary?: EntitySubsidiaryUpdateManyWithoutAnnouncementNestedInput
    Application?: ApplicationUpdateManyWithoutAnnouncementNestedInput
    educationLevels?: EducationLevelUpdateManyWithoutAnnouncementNestedInput
    ScholarshipGranted?: ScholarshipGrantedUpdateManyWithoutAnnounmententNestedInput
    timelines?: TimelineUpdateManyWithoutAnnouncementNestedInput
  }

  export type AnnouncementUncheckedUpdateWithoutSocialAssistantInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    branchChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    announcementType?: EnumAnnouncementTypeFieldUpdateOperationsInput | $Enums.AnnouncementType
    announcementNumber?: NullableStringFieldUpdateOperationsInput | string | null
    announcementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    announcementBegin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closeDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waitingList?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    entity_id?: StringFieldUpdateOperationsInput | string
    announcementName?: NullableStringFieldUpdateOperationsInput | string | null
    announcementLogo?: NullableStringFieldUpdateOperationsInput | string | null
    type2?: NullableStringFieldUpdateOperationsInput | string | null
    criteria?: AnnouncementUpdatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementUpdatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewUncheckedUpdateOneWithoutAnnouncementNestedInput
    entity_subsidiary?: EntitySubsidiaryUncheckedUpdateManyWithoutAnnouncementNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutAnnouncementNestedInput
    educationLevels?: EducationLevelUncheckedUpdateManyWithoutAnnouncementNestedInput
    ScholarshipGranted?: ScholarshipGrantedUncheckedUpdateManyWithoutAnnounmententNestedInput
    timelines?: TimelineUncheckedUpdateManyWithoutAnnouncementNestedInput
  }

  export type AnnouncementUncheckedUpdateManyWithoutSocialAssistantInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    branchChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    announcementType?: EnumAnnouncementTypeFieldUpdateOperationsInput | $Enums.AnnouncementType
    announcementNumber?: NullableStringFieldUpdateOperationsInput | string | null
    announcementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    announcementBegin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closeDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waitingList?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    entity_id?: StringFieldUpdateOperationsInput | string
    announcementName?: NullableStringFieldUpdateOperationsInput | string | null
    announcementLogo?: NullableStringFieldUpdateOperationsInput | string | null
    type2?: NullableStringFieldUpdateOperationsInput | string | null
    criteria?: AnnouncementUpdatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementUpdatetypes1Input | $Enums.scholarshipGrantedType[]
  }

  export type EntitySubsidiaryUpdateWithoutSocialAssistantInput = {
    id?: StringFieldUpdateOperationsInput | string
    CNPJ?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    socialReason?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
    Announcement?: AnnouncementUpdateManyWithoutEntity_subsidiaryNestedInput
    EntityDirector?: EntityDirectorUpdateManyWithoutEntity_subsidiaryNestedInput
    entity?: EntityUpdateOneRequiredWithoutEntitySubsidiaryNestedInput
    user?: UserUpdateOneRequiredWithoutEntitySubsidiaryNestedInput
    EducationLevel?: EducationLevelUpdateManyWithoutEntitySubsidiaryNestedInput
  }

  export type EntitySubsidiaryUncheckedUpdateWithoutSocialAssistantInput = {
    id?: StringFieldUpdateOperationsInput | string
    CNPJ?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    socialReason?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
    entity_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    Announcement?: AnnouncementUncheckedUpdateManyWithoutEntity_subsidiaryNestedInput
    EntityDirector?: EntityDirectorUncheckedUpdateManyWithoutEntity_subsidiaryNestedInput
    EducationLevel?: EducationLevelUncheckedUpdateManyWithoutEntitySubsidiaryNestedInput
  }

  export type EntitySubsidiaryUncheckedUpdateManyWithoutSocialAssistantInput = {
    id?: StringFieldUpdateOperationsInput | string
    CNPJ?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    socialReason?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
    entity_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
  }

  export type AnnouncementCreateManyEntityInput = {
    id?: string
    entityChanged?: boolean | null
    branchChanged?: boolean | null
    announcementType: $Enums.AnnouncementType
    announcementNumber?: string | null
    announcementDate?: Date | string | null
    announcementBegin?: Date | string | null
    openDate?: Date | string | null
    closeDate?: Date | string | null
    waitingList?: boolean | null
    offeredVacancies?: number | null
    verifiedScholarships?: number | null
    description?: string | null
    announcementName?: string | null
    announcementLogo?: string | null
    type2?: string | null
    criteria?: AnnouncementCreatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementCreatetypes1Input | $Enums.scholarshipGrantedType[]
  }

  export type EntityDirectorCreateManyEntityInput = {
    id?: string
    name: string
    CPF: string
    phone: string
    user_id: string
    entity_subsidiary_id?: string | null
  }

  export type EntitySubsidiaryCreateManyEntityInput = {
    id?: string
    CNPJ: string
    name: string
    socialReason: string
    CEP: string
    address: string
    addressNumber?: number | null
    city?: string | null
    neighborhood?: string | null
    UF?: $Enums.COUNTRY | null
    educationalInstitutionCode?: string | null
    user_id: string
  }

  export type SocialAssistantCreateManyEntityInput = {
    id?: string
    name: string
    CPF: string
    RG: string
    CRESS: string
    phone: string
    user_id: string
  }

  export type AnnouncementUpdateWithoutEntityInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    branchChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    announcementType?: EnumAnnouncementTypeFieldUpdateOperationsInput | $Enums.AnnouncementType
    announcementNumber?: NullableStringFieldUpdateOperationsInput | string | null
    announcementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    announcementBegin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closeDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waitingList?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    announcementName?: NullableStringFieldUpdateOperationsInput | string | null
    announcementLogo?: NullableStringFieldUpdateOperationsInput | string | null
    type2?: NullableStringFieldUpdateOperationsInput | string | null
    criteria?: AnnouncementUpdatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementUpdatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewUpdateOneWithoutAnnouncementNestedInput
    entity_subsidiary?: EntitySubsidiaryUpdateManyWithoutAnnouncementNestedInput
    Application?: ApplicationUpdateManyWithoutAnnouncementNestedInput
    educationLevels?: EducationLevelUpdateManyWithoutAnnouncementNestedInput
    ScholarshipGranted?: ScholarshipGrantedUpdateManyWithoutAnnounmententNestedInput
    timelines?: TimelineUpdateManyWithoutAnnouncementNestedInput
    socialAssistant?: SocialAssistantUpdateManyWithoutAnnouncementNestedInput
  }

  export type AnnouncementUncheckedUpdateWithoutEntityInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    branchChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    announcementType?: EnumAnnouncementTypeFieldUpdateOperationsInput | $Enums.AnnouncementType
    announcementNumber?: NullableStringFieldUpdateOperationsInput | string | null
    announcementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    announcementBegin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closeDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waitingList?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    announcementName?: NullableStringFieldUpdateOperationsInput | string | null
    announcementLogo?: NullableStringFieldUpdateOperationsInput | string | null
    type2?: NullableStringFieldUpdateOperationsInput | string | null
    criteria?: AnnouncementUpdatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementUpdatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewUncheckedUpdateOneWithoutAnnouncementNestedInput
    entity_subsidiary?: EntitySubsidiaryUncheckedUpdateManyWithoutAnnouncementNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutAnnouncementNestedInput
    educationLevels?: EducationLevelUncheckedUpdateManyWithoutAnnouncementNestedInput
    ScholarshipGranted?: ScholarshipGrantedUncheckedUpdateManyWithoutAnnounmententNestedInput
    timelines?: TimelineUncheckedUpdateManyWithoutAnnouncementNestedInput
    socialAssistant?: SocialAssistantUncheckedUpdateManyWithoutAnnouncementNestedInput
  }

  export type AnnouncementUncheckedUpdateManyWithoutEntityInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    branchChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    announcementType?: EnumAnnouncementTypeFieldUpdateOperationsInput | $Enums.AnnouncementType
    announcementNumber?: NullableStringFieldUpdateOperationsInput | string | null
    announcementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    announcementBegin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closeDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waitingList?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    announcementName?: NullableStringFieldUpdateOperationsInput | string | null
    announcementLogo?: NullableStringFieldUpdateOperationsInput | string | null
    type2?: NullableStringFieldUpdateOperationsInput | string | null
    criteria?: AnnouncementUpdatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementUpdatetypes1Input | $Enums.scholarshipGrantedType[]
  }

  export type EntityDirectorUpdateWithoutEntityInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    entity_subsidiary?: EntitySubsidiaryUpdateOneWithoutEntityDirectorNestedInput
    user?: UserUpdateOneRequiredWithoutEntityDirectorNestedInput
  }

  export type EntityDirectorUncheckedUpdateWithoutEntityInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    entity_subsidiary_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EntityDirectorUncheckedUpdateManyWithoutEntityInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    entity_subsidiary_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EntitySubsidiaryUpdateWithoutEntityInput = {
    id?: StringFieldUpdateOperationsInput | string
    CNPJ?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    socialReason?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
    Announcement?: AnnouncementUpdateManyWithoutEntity_subsidiaryNestedInput
    EntityDirector?: EntityDirectorUpdateManyWithoutEntity_subsidiaryNestedInput
    user?: UserUpdateOneRequiredWithoutEntitySubsidiaryNestedInput
    SocialAssistant?: SocialAssistantUpdateManyWithoutEntity_subsidiaryNestedInput
    EducationLevel?: EducationLevelUpdateManyWithoutEntitySubsidiaryNestedInput
  }

  export type EntitySubsidiaryUncheckedUpdateWithoutEntityInput = {
    id?: StringFieldUpdateOperationsInput | string
    CNPJ?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    socialReason?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: StringFieldUpdateOperationsInput | string
    Announcement?: AnnouncementUncheckedUpdateManyWithoutEntity_subsidiaryNestedInput
    EntityDirector?: EntityDirectorUncheckedUpdateManyWithoutEntity_subsidiaryNestedInput
    SocialAssistant?: SocialAssistantUncheckedUpdateManyWithoutEntity_subsidiaryNestedInput
    EducationLevel?: EducationLevelUncheckedUpdateManyWithoutEntitySubsidiaryNestedInput
  }

  export type EntitySubsidiaryUncheckedUpdateManyWithoutEntityInput = {
    id?: StringFieldUpdateOperationsInput | string
    CNPJ?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    socialReason?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: StringFieldUpdateOperationsInput | string
  }

  export type SocialAssistantUpdateWithoutEntityInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    CRESS?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    Application?: ApplicationUpdateManyWithoutSocialAssistantNestedInput
    user?: UserUpdateOneRequiredWithoutSocialAssistantNestedInput
    Announcement?: AnnouncementUpdateManyWithoutSocialAssistantNestedInput
    entity_subsidiary?: EntitySubsidiaryUpdateManyWithoutSocialAssistantNestedInput
  }

  export type SocialAssistantUncheckedUpdateWithoutEntityInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    CRESS?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    Application?: ApplicationUncheckedUpdateManyWithoutSocialAssistantNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutSocialAssistantNestedInput
    entity_subsidiary?: EntitySubsidiaryUncheckedUpdateManyWithoutSocialAssistantNestedInput
  }

  export type SocialAssistantUncheckedUpdateManyWithoutEntityInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    CRESS?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
  }

  export type EntityDirectorCreateManyEntity_subsidiaryInput = {
    id?: string
    name: string
    CPF: string
    phone: string
    user_id: string
    entity_id?: string | null
  }

  export type EducationLevelCreateManyEntitySubsidiaryInput = {
    id?: string
    level: $Enums.LevelType
    basicEduType?: $Enums.BasicEducationType | null
    scholarshipType?: $Enums.ScholarshipOfferType | null
    higherEduScholarshipType?: $Enums.HigherEducationScholarshipType | null
    offeredCourseType?: $Enums.OfferedCourseType | null
    availableCourses?: string | null
    offeredVacancies?: number | null
    verifiedScholarships?: number | null
    shift?: $Enums.SHIFT | null
    semester?: number | null
    grade?: string | null
    announcementId: string
  }

  export type AnnouncementUpdateWithoutEntity_subsidiaryInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    branchChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    announcementType?: EnumAnnouncementTypeFieldUpdateOperationsInput | $Enums.AnnouncementType
    announcementNumber?: NullableStringFieldUpdateOperationsInput | string | null
    announcementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    announcementBegin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closeDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waitingList?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    announcementName?: NullableStringFieldUpdateOperationsInput | string | null
    announcementLogo?: NullableStringFieldUpdateOperationsInput | string | null
    type2?: NullableStringFieldUpdateOperationsInput | string | null
    criteria?: AnnouncementUpdatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementUpdatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewUpdateOneWithoutAnnouncementNestedInput
    entity?: EntityUpdateOneRequiredWithoutAnnouncementNestedInput
    Application?: ApplicationUpdateManyWithoutAnnouncementNestedInput
    educationLevels?: EducationLevelUpdateManyWithoutAnnouncementNestedInput
    ScholarshipGranted?: ScholarshipGrantedUpdateManyWithoutAnnounmententNestedInput
    timelines?: TimelineUpdateManyWithoutAnnouncementNestedInput
    socialAssistant?: SocialAssistantUpdateManyWithoutAnnouncementNestedInput
  }

  export type AnnouncementUncheckedUpdateWithoutEntity_subsidiaryInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    branchChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    announcementType?: EnumAnnouncementTypeFieldUpdateOperationsInput | $Enums.AnnouncementType
    announcementNumber?: NullableStringFieldUpdateOperationsInput | string | null
    announcementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    announcementBegin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closeDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waitingList?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    entity_id?: StringFieldUpdateOperationsInput | string
    announcementName?: NullableStringFieldUpdateOperationsInput | string | null
    announcementLogo?: NullableStringFieldUpdateOperationsInput | string | null
    type2?: NullableStringFieldUpdateOperationsInput | string | null
    criteria?: AnnouncementUpdatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementUpdatetypes1Input | $Enums.scholarshipGrantedType[]
    interview?: AnnouncementInterviewUncheckedUpdateOneWithoutAnnouncementNestedInput
    Application?: ApplicationUncheckedUpdateManyWithoutAnnouncementNestedInput
    educationLevels?: EducationLevelUncheckedUpdateManyWithoutAnnouncementNestedInput
    ScholarshipGranted?: ScholarshipGrantedUncheckedUpdateManyWithoutAnnounmententNestedInput
    timelines?: TimelineUncheckedUpdateManyWithoutAnnouncementNestedInput
    socialAssistant?: SocialAssistantUncheckedUpdateManyWithoutAnnouncementNestedInput
  }

  export type AnnouncementUncheckedUpdateManyWithoutEntity_subsidiaryInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    branchChanged?: NullableBoolFieldUpdateOperationsInput | boolean | null
    announcementType?: EnumAnnouncementTypeFieldUpdateOperationsInput | $Enums.AnnouncementType
    announcementNumber?: NullableStringFieldUpdateOperationsInput | string | null
    announcementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    announcementBegin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closeDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waitingList?: NullableBoolFieldUpdateOperationsInput | boolean | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    entity_id?: StringFieldUpdateOperationsInput | string
    announcementName?: NullableStringFieldUpdateOperationsInput | string | null
    announcementLogo?: NullableStringFieldUpdateOperationsInput | string | null
    type2?: NullableStringFieldUpdateOperationsInput | string | null
    criteria?: AnnouncementUpdatecriteriaInput | $Enums.TiebreakerCriterias[]
    types1?: AnnouncementUpdatetypes1Input | $Enums.scholarshipGrantedType[]
  }

  export type EntityDirectorUpdateWithoutEntity_subsidiaryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    entity?: EntityUpdateOneWithoutEntityDirectorNestedInput
    user?: UserUpdateOneRequiredWithoutEntityDirectorNestedInput
  }

  export type EntityDirectorUncheckedUpdateWithoutEntity_subsidiaryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    entity_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EntityDirectorUncheckedUpdateManyWithoutEntity_subsidiaryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    entity_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SocialAssistantUpdateWithoutEntity_subsidiaryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    CRESS?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    Application?: ApplicationUpdateManyWithoutSocialAssistantNestedInput
    entity?: EntityUpdateOneRequiredWithoutSocialAssistantNestedInput
    user?: UserUpdateOneRequiredWithoutSocialAssistantNestedInput
    Announcement?: AnnouncementUpdateManyWithoutSocialAssistantNestedInput
  }

  export type SocialAssistantUncheckedUpdateWithoutEntity_subsidiaryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    CRESS?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    entity_id?: StringFieldUpdateOperationsInput | string
    Application?: ApplicationUncheckedUpdateManyWithoutSocialAssistantNestedInput
    Announcement?: AnnouncementUncheckedUpdateManyWithoutSocialAssistantNestedInput
  }

  export type SocialAssistantUncheckedUpdateManyWithoutEntity_subsidiaryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    CRESS?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    entity_id?: StringFieldUpdateOperationsInput | string
  }

  export type EducationLevelUpdateWithoutEntitySubsidiaryInput = {
    id?: StringFieldUpdateOperationsInput | string
    level?: EnumLevelTypeFieldUpdateOperationsInput | $Enums.LevelType
    basicEduType?: NullableEnumBasicEducationTypeFieldUpdateOperationsInput | $Enums.BasicEducationType | null
    scholarshipType?: NullableEnumScholarshipOfferTypeFieldUpdateOperationsInput | $Enums.ScholarshipOfferType | null
    higherEduScholarshipType?: NullableEnumHigherEducationScholarshipTypeFieldUpdateOperationsInput | $Enums.HigherEducationScholarshipType | null
    offeredCourseType?: NullableEnumOfferedCourseTypeFieldUpdateOperationsInput | $Enums.OfferedCourseType | null
    availableCourses?: NullableStringFieldUpdateOperationsInput | string | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    shift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    semester?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUpdateManyWithoutEducationLevelNestedInput
    announcement?: AnnouncementUpdateOneRequiredWithoutEducationLevelsNestedInput
  }

  export type EducationLevelUncheckedUpdateWithoutEntitySubsidiaryInput = {
    id?: StringFieldUpdateOperationsInput | string
    level?: EnumLevelTypeFieldUpdateOperationsInput | $Enums.LevelType
    basicEduType?: NullableEnumBasicEducationTypeFieldUpdateOperationsInput | $Enums.BasicEducationType | null
    scholarshipType?: NullableEnumScholarshipOfferTypeFieldUpdateOperationsInput | $Enums.ScholarshipOfferType | null
    higherEduScholarshipType?: NullableEnumHigherEducationScholarshipTypeFieldUpdateOperationsInput | $Enums.HigherEducationScholarshipType | null
    offeredCourseType?: NullableEnumOfferedCourseTypeFieldUpdateOperationsInput | $Enums.OfferedCourseType | null
    availableCourses?: NullableStringFieldUpdateOperationsInput | string | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    shift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    semester?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    announcementId?: StringFieldUpdateOperationsInput | string
    Application?: ApplicationUncheckedUpdateManyWithoutEducationLevelNestedInput
  }

  export type EducationLevelUncheckedUpdateManyWithoutEntitySubsidiaryInput = {
    id?: StringFieldUpdateOperationsInput | string
    level?: EnumLevelTypeFieldUpdateOperationsInput | $Enums.LevelType
    basicEduType?: NullableEnumBasicEducationTypeFieldUpdateOperationsInput | $Enums.BasicEducationType | null
    scholarshipType?: NullableEnumScholarshipOfferTypeFieldUpdateOperationsInput | $Enums.ScholarshipOfferType | null
    higherEduScholarshipType?: NullableEnumHigherEducationScholarshipTypeFieldUpdateOperationsInput | $Enums.HigherEducationScholarshipType | null
    offeredCourseType?: NullableEnumOfferedCourseTypeFieldUpdateOperationsInput | $Enums.OfferedCourseType | null
    availableCourses?: NullableStringFieldUpdateOperationsInput | string | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    shift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    semester?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    announcementId?: StringFieldUpdateOperationsInput | string
  }

  export type CreditCardCreateManyFamilyMemberInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    usersCount: number
    cardType: string
    bankName: string
    cardFlag: string
    invoiceValue: number
    candidate_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type FamilyMemberIncomeCreateManyFamilyMemberInput = {
    id?: string
    employmentType: $Enums.EmploymentType
    averageIncome: string
    main_id?: string | null
    admissionDate?: Date | string | null
    position?: string | null
    payingSource?: string | null
    payingSourcePhone?: string | null
    startDate?: Date | string | null
    CNPJ?: string | null
    financialAssistantCPF?: string | null
    socialReason?: string | null
    fantasyName?: string | null
    CPNJ?: string | null
    receivesUnemployment?: boolean | null
    parcels?: number | null
    firstParcelDate?: Date | string | null
    parcelValue?: number | null
    quantity?: number
    candidate_id?: string | null
    application_id: string
    legalResponsibleId?: string | null
  }

  export type FinancingCreateManyFamilyMemberInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    installmentValue: number
    totalInstallments: number
    paidInstallments: number
    bankName: string
    candidate_id?: string | null
    otherFinancing?: string | null
    financingType: $Enums.FinancingType
    legalResponsibleId?: string | null
    application_id: string
  }

  export type LoanCreateManyFamilyMemberInput = {
    id?: string
    main_id?: string | null
    familyMemberName: string
    installmentValue: number
    totalInstallments: number
    paidInstallments: number
    bankName: string
    candidate_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type MonthlyIncomeCreateManyFamilyMemberInput = {
    id?: string
    date?: Date | string | null
    main_id?: string | null
    grossAmount?: number | null
    liquidAmount?: number | null
    proLabore?: number | null
    dividends?: number | null
    total?: number | null
    deductionValue?: Decimal | DecimalJsLike | number | string | null
    publicPension?: Decimal | DecimalJsLike | number | string | null
    incomeTax?: Decimal | DecimalJsLike | number | string | null
    otherDeductions?: Decimal | DecimalJsLike | number | string | null
    foodAllowanceValue?: Decimal | DecimalJsLike | number | string | null
    transportAllowanceValue?: Decimal | DecimalJsLike | number | string | null
    expenseReimbursementValue?: Decimal | DecimalJsLike | number | string | null
    advancePaymentValue?: Decimal | DecimalJsLike | number | string | null
    reversalValue?: Decimal | DecimalJsLike | number | string | null
    compensationValue?: Decimal | DecimalJsLike | number | string | null
    judicialPensionValue?: Decimal | DecimalJsLike | number | string | null
    candidate_id?: string | null
    incomeSource?: $Enums.IncomeSource | null
    application_id: string
    legalResponsibleId?: string | null
  }

  export type OtherExpenseCreateManyFamilyMemberInput = {
    id?: string
    main_id?: string | null
    description: string
    value: number
    candidate_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type FamilyMemberToVehicleCreateManyFamilyMembersInput = {
    B: string
    application_id: string
    main_id?: string | null
  }

  export type FamilyMemberDiseaseCreateManyFamilyMemberInput = {
    id?: string
    main_id?: string | null
    disease?: $Enums.Disease | null
    diseases?: FamilyMemberDiseaseCreatediseasesInput | $Enums.Disease[]
    specificDisease?: string | null
    hasMedicalReport: boolean
    candidate_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type MedicationCreateManyFamilyMemberInput = {
    id?: string
    main_id?: string | null
    medicationName: string
    obtainedPublicly: boolean
    specificMedicationPublicly?: string | null
    candidate_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
    familyMemberDiseaseId?: string | null
  }

  export type BankAccountCreateManyFamilyMemberInput = {
    id?: string
    main_id?: string | null
    bankName: string
    agencyNumber: string
    accountNumber: string
    accountType: $Enums.AccountType
    candidate_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type DeclarationsCreateManyFamilyMemberInput = {
    id?: string
    declarationType: $Enums.Declaration_Type
    text: string
    candidate_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type CreditCardUpdateWithoutFamilyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    usersCount?: IntFieldUpdateOperationsInput | number
    cardType?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    cardFlag?: StringFieldUpdateOperationsInput | string
    invoiceValue?: FloatFieldUpdateOperationsInput | number
    application_id?: StringFieldUpdateOperationsInput | string
    candidate?: CandidateUpdateOneWithoutCreditCardNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutCreditCardNestedInput
  }

  export type CreditCardUncheckedUpdateWithoutFamilyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    usersCount?: IntFieldUpdateOperationsInput | number
    cardType?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    cardFlag?: StringFieldUpdateOperationsInput | string
    invoiceValue?: FloatFieldUpdateOperationsInput | number
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type CreditCardUncheckedUpdateManyWithoutFamilyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    usersCount?: IntFieldUpdateOperationsInput | number
    cardType?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    cardFlag?: StringFieldUpdateOperationsInput | string
    invoiceValue?: FloatFieldUpdateOperationsInput | number
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type FamilyMemberIncomeUpdateWithoutFamilyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    employmentType?: EnumEmploymentTypeFieldUpdateOperationsInput | $Enums.EmploymentType
    averageIncome?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    payingSource?: NullableStringFieldUpdateOperationsInput | string | null
    payingSourcePhone?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CNPJ?: NullableStringFieldUpdateOperationsInput | string | null
    financialAssistantCPF?: NullableStringFieldUpdateOperationsInput | string | null
    socialReason?: NullableStringFieldUpdateOperationsInput | string | null
    fantasyName?: NullableStringFieldUpdateOperationsInput | string | null
    CPNJ?: NullableStringFieldUpdateOperationsInput | string | null
    receivesUnemployment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parcels?: NullableIntFieldUpdateOperationsInput | number | null
    firstParcelDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parcelValue?: NullableFloatFieldUpdateOperationsInput | number | null
    quantity?: IntFieldUpdateOperationsInput | number
    application_id?: StringFieldUpdateOperationsInput | string
    candidate?: CandidateUpdateOneWithoutFamilyMemberIncomeNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutFamilyMemberIncomeNestedInput
  }

  export type FamilyMemberIncomeUncheckedUpdateWithoutFamilyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    employmentType?: EnumEmploymentTypeFieldUpdateOperationsInput | $Enums.EmploymentType
    averageIncome?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    payingSource?: NullableStringFieldUpdateOperationsInput | string | null
    payingSourcePhone?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CNPJ?: NullableStringFieldUpdateOperationsInput | string | null
    financialAssistantCPF?: NullableStringFieldUpdateOperationsInput | string | null
    socialReason?: NullableStringFieldUpdateOperationsInput | string | null
    fantasyName?: NullableStringFieldUpdateOperationsInput | string | null
    CPNJ?: NullableStringFieldUpdateOperationsInput | string | null
    receivesUnemployment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parcels?: NullableIntFieldUpdateOperationsInput | number | null
    firstParcelDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parcelValue?: NullableFloatFieldUpdateOperationsInput | number | null
    quantity?: IntFieldUpdateOperationsInput | number
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FamilyMemberIncomeUncheckedUpdateManyWithoutFamilyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    employmentType?: EnumEmploymentTypeFieldUpdateOperationsInput | $Enums.EmploymentType
    averageIncome?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    payingSource?: NullableStringFieldUpdateOperationsInput | string | null
    payingSourcePhone?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CNPJ?: NullableStringFieldUpdateOperationsInput | string | null
    financialAssistantCPF?: NullableStringFieldUpdateOperationsInput | string | null
    socialReason?: NullableStringFieldUpdateOperationsInput | string | null
    fantasyName?: NullableStringFieldUpdateOperationsInput | string | null
    CPNJ?: NullableStringFieldUpdateOperationsInput | string | null
    receivesUnemployment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    parcels?: NullableIntFieldUpdateOperationsInput | number | null
    firstParcelDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parcelValue?: NullableFloatFieldUpdateOperationsInput | number | null
    quantity?: IntFieldUpdateOperationsInput | number
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FinancingUpdateWithoutFamilyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    installmentValue?: FloatFieldUpdateOperationsInput | number
    totalInstallments?: IntFieldUpdateOperationsInput | number
    paidInstallments?: IntFieldUpdateOperationsInput | number
    bankName?: StringFieldUpdateOperationsInput | string
    otherFinancing?: NullableStringFieldUpdateOperationsInput | string | null
    financingType?: EnumFinancingTypeFieldUpdateOperationsInput | $Enums.FinancingType
    application_id?: StringFieldUpdateOperationsInput | string
    candidate?: CandidateUpdateOneWithoutFinancingNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutFinancingNestedInput
  }

  export type FinancingUncheckedUpdateWithoutFamilyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    installmentValue?: FloatFieldUpdateOperationsInput | number
    totalInstallments?: IntFieldUpdateOperationsInput | number
    paidInstallments?: IntFieldUpdateOperationsInput | number
    bankName?: StringFieldUpdateOperationsInput | string
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    otherFinancing?: NullableStringFieldUpdateOperationsInput | string | null
    financingType?: EnumFinancingTypeFieldUpdateOperationsInput | $Enums.FinancingType
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type FinancingUncheckedUpdateManyWithoutFamilyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    installmentValue?: FloatFieldUpdateOperationsInput | number
    totalInstallments?: IntFieldUpdateOperationsInput | number
    paidInstallments?: IntFieldUpdateOperationsInput | number
    bankName?: StringFieldUpdateOperationsInput | string
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    otherFinancing?: NullableStringFieldUpdateOperationsInput | string | null
    financingType?: EnumFinancingTypeFieldUpdateOperationsInput | $Enums.FinancingType
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type LoanUpdateWithoutFamilyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    installmentValue?: FloatFieldUpdateOperationsInput | number
    totalInstallments?: IntFieldUpdateOperationsInput | number
    paidInstallments?: IntFieldUpdateOperationsInput | number
    bankName?: StringFieldUpdateOperationsInput | string
    application_id?: StringFieldUpdateOperationsInput | string
    candidate?: CandidateUpdateOneWithoutLoanNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutLoanNestedInput
  }

  export type LoanUncheckedUpdateWithoutFamilyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    installmentValue?: FloatFieldUpdateOperationsInput | number
    totalInstallments?: IntFieldUpdateOperationsInput | number
    paidInstallments?: IntFieldUpdateOperationsInput | number
    bankName?: StringFieldUpdateOperationsInput | string
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type LoanUncheckedUpdateManyWithoutFamilyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMemberName?: StringFieldUpdateOperationsInput | string
    installmentValue?: FloatFieldUpdateOperationsInput | number
    totalInstallments?: IntFieldUpdateOperationsInput | number
    paidInstallments?: IntFieldUpdateOperationsInput | number
    bankName?: StringFieldUpdateOperationsInput | string
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type MonthlyIncomeUpdateWithoutFamilyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    grossAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    liquidAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    proLabore?: NullableFloatFieldUpdateOperationsInput | number | null
    dividends?: NullableFloatFieldUpdateOperationsInput | number | null
    total?: NullableFloatFieldUpdateOperationsInput | number | null
    deductionValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    publicPension?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    incomeTax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    otherDeductions?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    foodAllowanceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transportAllowanceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    expenseReimbursementValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    advancePaymentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reversalValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compensationValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    judicialPensionValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    incomeSource?: NullableEnumIncomeSourceFieldUpdateOperationsInput | $Enums.IncomeSource | null
    application_id?: StringFieldUpdateOperationsInput | string
    candidate?: CandidateUpdateOneWithoutMonthlyIncomeNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutMonthlyIncomeNestedInput
  }

  export type MonthlyIncomeUncheckedUpdateWithoutFamilyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    grossAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    liquidAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    proLabore?: NullableFloatFieldUpdateOperationsInput | number | null
    dividends?: NullableFloatFieldUpdateOperationsInput | number | null
    total?: NullableFloatFieldUpdateOperationsInput | number | null
    deductionValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    publicPension?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    incomeTax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    otherDeductions?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    foodAllowanceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transportAllowanceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    expenseReimbursementValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    advancePaymentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reversalValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compensationValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    judicialPensionValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: NullableEnumIncomeSourceFieldUpdateOperationsInput | $Enums.IncomeSource | null
    application_id?: StringFieldUpdateOperationsInput | string
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MonthlyIncomeUncheckedUpdateManyWithoutFamilyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    grossAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    liquidAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    proLabore?: NullableFloatFieldUpdateOperationsInput | number | null
    dividends?: NullableFloatFieldUpdateOperationsInput | number | null
    total?: NullableFloatFieldUpdateOperationsInput | number | null
    deductionValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    publicPension?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    incomeTax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    otherDeductions?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    foodAllowanceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transportAllowanceValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    expenseReimbursementValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    advancePaymentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reversalValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compensationValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    judicialPensionValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: NullableEnumIncomeSourceFieldUpdateOperationsInput | $Enums.IncomeSource | null
    application_id?: StringFieldUpdateOperationsInput | string
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OtherExpenseUpdateWithoutFamilyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    value?: FloatFieldUpdateOperationsInput | number
    application_id?: StringFieldUpdateOperationsInput | string
    candidate?: CandidateUpdateOneWithoutOtherExpenseNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutOtherExpenseNestedInput
  }

  export type OtherExpenseUncheckedUpdateWithoutFamilyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    value?: FloatFieldUpdateOperationsInput | number
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type OtherExpenseUncheckedUpdateManyWithoutFamilyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    value?: FloatFieldUpdateOperationsInput | number
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type FamilyMemberToVehicleUpdateWithoutFamilyMembersInput = {
    application_id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    Vehicle?: VehicleUpdateOneRequiredWithoutFamilyMemberToVehicleNestedInput
  }

  export type FamilyMemberToVehicleUncheckedUpdateWithoutFamilyMembersInput = {
    B?: StringFieldUpdateOperationsInput | string
    application_id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FamilyMemberToVehicleUncheckedUpdateManyWithoutFamilyMembersInput = {
    B?: StringFieldUpdateOperationsInput | string
    application_id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FamilyMemberDiseaseUpdateWithoutFamilyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    disease?: NullableEnumDiseaseFieldUpdateOperationsInput | $Enums.Disease | null
    diseases?: FamilyMemberDiseaseUpdatediseasesInput | $Enums.Disease[]
    specificDisease?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: BoolFieldUpdateOperationsInput | boolean
    application_id?: StringFieldUpdateOperationsInput | string
    candidate?: CandidateUpdateOneWithoutFamilyMemberDiseaseNestedInput
    legalResponsible?: LegalResponsibleUpdateOneWithoutFamilyMemberDiseaseNestedInput
    Medication?: MedicationUpdateManyWithoutFamilyMemberDiseaseNestedInput
  }

  export type FamilyMemberDiseaseUncheckedUpdateWithoutFamilyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    disease?: NullableEnumDiseaseFieldUpdateOperationsInput | $Enums.Disease | null
    diseases?: FamilyMemberDiseaseUpdatediseasesInput | $Enums.Disease[]
    specificDisease?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: BoolFieldUpdateOperationsInput | boolean
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    Medication?: MedicationUncheckedUpdateManyWithoutFamilyMemberDiseaseNestedInput
  }

  export type FamilyMemberDiseaseUncheckedUpdateManyWithoutFamilyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    disease?: NullableEnumDiseaseFieldUpdateOperationsInput | $Enums.Disease | null
    diseases?: FamilyMemberDiseaseUpdatediseasesInput | $Enums.Disease[]
    specificDisease?: NullableStringFieldUpdateOperationsInput | string | null
    hasMedicalReport?: BoolFieldUpdateOperationsInput | boolean
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type MedicationUpdateWithoutFamilyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    medicationName?: StringFieldUpdateOperationsInput | string
    obtainedPublicly?: BoolFieldUpdateOperationsInput | boolean
    specificMedicationPublicly?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    candidate?: CandidateUpdateOneWithoutMedicationNestedInput
    legalResponsible?: LegalResponsibleUpdateOneWithoutMedicationNestedInput
    FamilyMemberDisease?: FamilyMemberDiseaseUpdateOneWithoutMedicationNestedInput
  }

  export type MedicationUncheckedUpdateWithoutFamilyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    medicationName?: StringFieldUpdateOperationsInput | string
    obtainedPublicly?: BoolFieldUpdateOperationsInput | boolean
    specificMedicationPublicly?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    familyMemberDiseaseId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MedicationUncheckedUpdateManyWithoutFamilyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    medicationName?: StringFieldUpdateOperationsInput | string
    obtainedPublicly?: BoolFieldUpdateOperationsInput | boolean
    specificMedicationPublicly?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    familyMemberDiseaseId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BankAccountUpdateWithoutFamilyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: StringFieldUpdateOperationsInput | string
    agencyNumber?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    accountType?: EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType
    application_id?: StringFieldUpdateOperationsInput | string
    candidate?: CandidateUpdateOneWithoutBankAccountNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutBankAccountNestedInput
  }

  export type BankAccountUncheckedUpdateWithoutFamilyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: StringFieldUpdateOperationsInput | string
    agencyNumber?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    accountType?: EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type BankAccountUncheckedUpdateManyWithoutFamilyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    bankName?: StringFieldUpdateOperationsInput | string
    agencyNumber?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    accountType?: EnumAccountTypeFieldUpdateOperationsInput | $Enums.AccountType
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type DeclarationsUpdateWithoutFamilyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    declarationType?: EnumDeclaration_TypeFieldUpdateOperationsInput | $Enums.Declaration_Type
    text?: StringFieldUpdateOperationsInput | string
    application_id?: StringFieldUpdateOperationsInput | string
    candidate?: CandidateUpdateOneWithoutDeclarationsNestedInput
    LegalResponsible?: LegalResponsibleUpdateOneWithoutDeclarationsNestedInput
  }

  export type DeclarationsUncheckedUpdateWithoutFamilyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    declarationType?: EnumDeclaration_TypeFieldUpdateOperationsInput | $Enums.Declaration_Type
    text?: StringFieldUpdateOperationsInput | string
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type DeclarationsUncheckedUpdateManyWithoutFamilyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    declarationType?: EnumDeclaration_TypeFieldUpdateOperationsInput | $Enums.Declaration_Type
    text?: StringFieldUpdateOperationsInput | string
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type FamilyMemberToVehicleCreateManyVehicleInput = {
    A: string
    application_id: string
    main_id?: string | null
  }

  export type FamilyMemberToVehicleUpdateWithoutVehicleInput = {
    application_id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    familyMembers?: FamilyMemberUpdateOneRequiredWithoutFamilyMemberToVehicleNestedInput
  }

  export type FamilyMemberToVehicleUncheckedUpdateWithoutVehicleInput = {
    A?: StringFieldUpdateOperationsInput | string
    application_id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FamilyMemberToVehicleUncheckedUpdateManyWithoutVehicleInput = {
    A?: StringFieldUpdateOperationsInput | string
    application_id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MedicationCreateManyFamilyMemberDiseaseInput = {
    id?: string
    main_id?: string | null
    medicationName: string
    obtainedPublicly: boolean
    specificMedicationPublicly?: string | null
    familyMember_id?: string | null
    candidate_id?: string | null
    legalResponsibleId?: string | null
    application_id: string
  }

  export type MedicationUpdateWithoutFamilyMemberDiseaseInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    medicationName?: StringFieldUpdateOperationsInput | string
    obtainedPublicly?: BoolFieldUpdateOperationsInput | boolean
    specificMedicationPublicly?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
    familyMember?: FamilyMemberUpdateOneWithoutMedicationNestedInput
    candidate?: CandidateUpdateOneWithoutMedicationNestedInput
    legalResponsible?: LegalResponsibleUpdateOneWithoutMedicationNestedInput
  }

  export type MedicationUncheckedUpdateWithoutFamilyMemberDiseaseInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    medicationName?: StringFieldUpdateOperationsInput | string
    obtainedPublicly?: BoolFieldUpdateOperationsInput | boolean
    specificMedicationPublicly?: NullableStringFieldUpdateOperationsInput | string | null
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type MedicationUncheckedUpdateManyWithoutFamilyMemberDiseaseInput = {
    id?: StringFieldUpdateOperationsInput | string
    main_id?: NullableStringFieldUpdateOperationsInput | string | null
    medicationName?: StringFieldUpdateOperationsInput | string
    obtainedPublicly?: BoolFieldUpdateOperationsInput | boolean
    specificMedicationPublicly?: NullableStringFieldUpdateOperationsInput | string | null
    familyMember_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidate_id?: NullableStringFieldUpdateOperationsInput | string | null
    legalResponsibleId?: NullableStringFieldUpdateOperationsInput | string | null
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type ApplicationCreateManyAnnouncementInput = {
    id?: string
    candidate_id: string
    status: $Enums.ApplicationStatus
    socialAssistant_id?: string | null
    educationLevel_id: string
    candidateName?: string | null
    SocialAssistantName?: string | null
    CadUnico?: boolean | null
    hasSevereDesease?: boolean | null
    averageIncome?: number | null
    perCapita?: number | null
    position?: number | null
    number?: number
    reponsible_id?: string | null
  }

  export type EducationLevelCreateManyAnnouncementInput = {
    id?: string
    level: $Enums.LevelType
    basicEduType?: $Enums.BasicEducationType | null
    scholarshipType?: $Enums.ScholarshipOfferType | null
    higherEduScholarshipType?: $Enums.HigherEducationScholarshipType | null
    offeredCourseType?: $Enums.OfferedCourseType | null
    availableCourses?: string | null
    offeredVacancies?: number | null
    verifiedScholarships?: number | null
    shift?: $Enums.SHIFT | null
    semester?: number | null
    grade?: string | null
    entitySubsidiaryId?: string | null
  }

  export type ScholarshipGrantedCreateManyAnnounmententInput = {
    id?: string
    gaveUp: boolean
    ScholarshipCode?: string | null
    types?: ScholarshipGrantedCreatetypesInput | $Enums.scholarshipGrantedType[]
    application_id: string
  }

  export type TimelineCreateManyAnnouncementInput = {
    id?: string
    controlLine: number
    stage: string
    deadline: Date | string
  }

  export type EntitySubsidiaryUpdateWithoutAnnouncementInput = {
    id?: StringFieldUpdateOperationsInput | string
    CNPJ?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    socialReason?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
    EntityDirector?: EntityDirectorUpdateManyWithoutEntity_subsidiaryNestedInput
    entity?: EntityUpdateOneRequiredWithoutEntitySubsidiaryNestedInput
    user?: UserUpdateOneRequiredWithoutEntitySubsidiaryNestedInput
    SocialAssistant?: SocialAssistantUpdateManyWithoutEntity_subsidiaryNestedInput
    EducationLevel?: EducationLevelUpdateManyWithoutEntitySubsidiaryNestedInput
  }

  export type EntitySubsidiaryUncheckedUpdateWithoutAnnouncementInput = {
    id?: StringFieldUpdateOperationsInput | string
    CNPJ?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    socialReason?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
    entity_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    EntityDirector?: EntityDirectorUncheckedUpdateManyWithoutEntity_subsidiaryNestedInput
    SocialAssistant?: SocialAssistantUncheckedUpdateManyWithoutEntity_subsidiaryNestedInput
    EducationLevel?: EducationLevelUncheckedUpdateManyWithoutEntitySubsidiaryNestedInput
  }

  export type EntitySubsidiaryUncheckedUpdateManyWithoutAnnouncementInput = {
    id?: StringFieldUpdateOperationsInput | string
    CNPJ?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    socialReason?: StringFieldUpdateOperationsInput | string
    CEP?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    addressNumber?: NullableIntFieldUpdateOperationsInput | number | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    UF?: NullableEnumCOUNTRYFieldUpdateOperationsInput | $Enums.COUNTRY | null
    educationalInstitutionCode?: NullableStringFieldUpdateOperationsInput | string | null
    entity_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
  }

  export type ApplicationUpdateWithoutAnnouncementInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    candidateName?: NullableStringFieldUpdateOperationsInput | string | null
    SocialAssistantName?: NullableStringFieldUpdateOperationsInput | string | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDesease?: NullableBoolFieldUpdateOperationsInput | boolean | null
    averageIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    perCapita?: NullableFloatFieldUpdateOperationsInput | number | null
    position?: NullableIntFieldUpdateOperationsInput | number | null
    number?: IntFieldUpdateOperationsInput | number
    candidate?: CandidateUpdateOneRequiredWithoutApplicationNestedInput
    EducationLevel?: EducationLevelUpdateOneRequiredWithoutApplicationNestedInput
    SocialAssistant?: SocialAssistantUpdateOneWithoutApplicationNestedInput
    applicationHistories?: ApplicationHistoryUpdateManyWithoutApplicationNestedInput
    ScholarshipGranted?: ScholarshipGrantedUpdateOneWithoutApplicationNestedInput
    responsible?: LegalResponsibleUpdateOneWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateWithoutAnnouncementInput = {
    id?: StringFieldUpdateOperationsInput | string
    candidate_id?: StringFieldUpdateOperationsInput | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    socialAssistant_id?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel_id?: StringFieldUpdateOperationsInput | string
    candidateName?: NullableStringFieldUpdateOperationsInput | string | null
    SocialAssistantName?: NullableStringFieldUpdateOperationsInput | string | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDesease?: NullableBoolFieldUpdateOperationsInput | boolean | null
    averageIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    perCapita?: NullableFloatFieldUpdateOperationsInput | number | null
    position?: NullableIntFieldUpdateOperationsInput | number | null
    number?: IntFieldUpdateOperationsInput | number
    reponsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    applicationHistories?: ApplicationHistoryUncheckedUpdateManyWithoutApplicationNestedInput
    ScholarshipGranted?: ScholarshipGrantedUncheckedUpdateOneWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateManyWithoutAnnouncementInput = {
    id?: StringFieldUpdateOperationsInput | string
    candidate_id?: StringFieldUpdateOperationsInput | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    socialAssistant_id?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel_id?: StringFieldUpdateOperationsInput | string
    candidateName?: NullableStringFieldUpdateOperationsInput | string | null
    SocialAssistantName?: NullableStringFieldUpdateOperationsInput | string | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDesease?: NullableBoolFieldUpdateOperationsInput | boolean | null
    averageIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    perCapita?: NullableFloatFieldUpdateOperationsInput | number | null
    position?: NullableIntFieldUpdateOperationsInput | number | null
    number?: IntFieldUpdateOperationsInput | number
    reponsible_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EducationLevelUpdateWithoutAnnouncementInput = {
    id?: StringFieldUpdateOperationsInput | string
    level?: EnumLevelTypeFieldUpdateOperationsInput | $Enums.LevelType
    basicEduType?: NullableEnumBasicEducationTypeFieldUpdateOperationsInput | $Enums.BasicEducationType | null
    scholarshipType?: NullableEnumScholarshipOfferTypeFieldUpdateOperationsInput | $Enums.ScholarshipOfferType | null
    higherEduScholarshipType?: NullableEnumHigherEducationScholarshipTypeFieldUpdateOperationsInput | $Enums.HigherEducationScholarshipType | null
    offeredCourseType?: NullableEnumOfferedCourseTypeFieldUpdateOperationsInput | $Enums.OfferedCourseType | null
    availableCourses?: NullableStringFieldUpdateOperationsInput | string | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    shift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    semester?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUpdateManyWithoutEducationLevelNestedInput
    entitySubsidiary?: EntitySubsidiaryUpdateOneWithoutEducationLevelNestedInput
  }

  export type EducationLevelUncheckedUpdateWithoutAnnouncementInput = {
    id?: StringFieldUpdateOperationsInput | string
    level?: EnumLevelTypeFieldUpdateOperationsInput | $Enums.LevelType
    basicEduType?: NullableEnumBasicEducationTypeFieldUpdateOperationsInput | $Enums.BasicEducationType | null
    scholarshipType?: NullableEnumScholarshipOfferTypeFieldUpdateOperationsInput | $Enums.ScholarshipOfferType | null
    higherEduScholarshipType?: NullableEnumHigherEducationScholarshipTypeFieldUpdateOperationsInput | $Enums.HigherEducationScholarshipType | null
    offeredCourseType?: NullableEnumOfferedCourseTypeFieldUpdateOperationsInput | $Enums.OfferedCourseType | null
    availableCourses?: NullableStringFieldUpdateOperationsInput | string | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    shift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    semester?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    entitySubsidiaryId?: NullableStringFieldUpdateOperationsInput | string | null
    Application?: ApplicationUncheckedUpdateManyWithoutEducationLevelNestedInput
  }

  export type EducationLevelUncheckedUpdateManyWithoutAnnouncementInput = {
    id?: StringFieldUpdateOperationsInput | string
    level?: EnumLevelTypeFieldUpdateOperationsInput | $Enums.LevelType
    basicEduType?: NullableEnumBasicEducationTypeFieldUpdateOperationsInput | $Enums.BasicEducationType | null
    scholarshipType?: NullableEnumScholarshipOfferTypeFieldUpdateOperationsInput | $Enums.ScholarshipOfferType | null
    higherEduScholarshipType?: NullableEnumHigherEducationScholarshipTypeFieldUpdateOperationsInput | $Enums.HigherEducationScholarshipType | null
    offeredCourseType?: NullableEnumOfferedCourseTypeFieldUpdateOperationsInput | $Enums.OfferedCourseType | null
    availableCourses?: NullableStringFieldUpdateOperationsInput | string | null
    offeredVacancies?: NullableIntFieldUpdateOperationsInput | number | null
    verifiedScholarships?: NullableIntFieldUpdateOperationsInput | number | null
    shift?: NullableEnumSHIFTFieldUpdateOperationsInput | $Enums.SHIFT | null
    semester?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    entitySubsidiaryId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ScholarshipGrantedUpdateWithoutAnnounmententInput = {
    id?: StringFieldUpdateOperationsInput | string
    gaveUp?: BoolFieldUpdateOperationsInput | boolean
    ScholarshipCode?: NullableStringFieldUpdateOperationsInput | string | null
    types?: ScholarshipGrantedUpdatetypesInput | $Enums.scholarshipGrantedType[]
    application?: ApplicationUpdateOneRequiredWithoutScholarshipGrantedNestedInput
  }

  export type ScholarshipGrantedUncheckedUpdateWithoutAnnounmententInput = {
    id?: StringFieldUpdateOperationsInput | string
    gaveUp?: BoolFieldUpdateOperationsInput | boolean
    ScholarshipCode?: NullableStringFieldUpdateOperationsInput | string | null
    types?: ScholarshipGrantedUpdatetypesInput | $Enums.scholarshipGrantedType[]
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type ScholarshipGrantedUncheckedUpdateManyWithoutAnnounmententInput = {
    id?: StringFieldUpdateOperationsInput | string
    gaveUp?: BoolFieldUpdateOperationsInput | boolean
    ScholarshipCode?: NullableStringFieldUpdateOperationsInput | string | null
    types?: ScholarshipGrantedUpdatetypesInput | $Enums.scholarshipGrantedType[]
    application_id?: StringFieldUpdateOperationsInput | string
  }

  export type TimelineUpdateWithoutAnnouncementInput = {
    id?: StringFieldUpdateOperationsInput | string
    controlLine?: IntFieldUpdateOperationsInput | number
    stage?: StringFieldUpdateOperationsInput | string
    deadline?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TimelineUncheckedUpdateWithoutAnnouncementInput = {
    id?: StringFieldUpdateOperationsInput | string
    controlLine?: IntFieldUpdateOperationsInput | number
    stage?: StringFieldUpdateOperationsInput | string
    deadline?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TimelineUncheckedUpdateManyWithoutAnnouncementInput = {
    id?: StringFieldUpdateOperationsInput | string
    controlLine?: IntFieldUpdateOperationsInput | number
    stage?: StringFieldUpdateOperationsInput | string
    deadline?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SocialAssistantUpdateWithoutAnnouncementInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    CRESS?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    Application?: ApplicationUpdateManyWithoutSocialAssistantNestedInput
    entity?: EntityUpdateOneRequiredWithoutSocialAssistantNestedInput
    user?: UserUpdateOneRequiredWithoutSocialAssistantNestedInput
    entity_subsidiary?: EntitySubsidiaryUpdateManyWithoutSocialAssistantNestedInput
  }

  export type SocialAssistantUncheckedUpdateWithoutAnnouncementInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    CRESS?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    entity_id?: StringFieldUpdateOperationsInput | string
    Application?: ApplicationUncheckedUpdateManyWithoutSocialAssistantNestedInput
    entity_subsidiary?: EntitySubsidiaryUncheckedUpdateManyWithoutSocialAssistantNestedInput
  }

  export type SocialAssistantUncheckedUpdateManyWithoutAnnouncementInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CPF?: StringFieldUpdateOperationsInput | string
    RG?: StringFieldUpdateOperationsInput | string
    CRESS?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    entity_id?: StringFieldUpdateOperationsInput | string
  }

  export type ApplicationCreateManyEducationLevelInput = {
    id?: string
    candidate_id: string
    announcement_id: string
    status: $Enums.ApplicationStatus
    socialAssistant_id?: string | null
    candidateName?: string | null
    SocialAssistantName?: string | null
    CadUnico?: boolean | null
    hasSevereDesease?: boolean | null
    averageIncome?: number | null
    perCapita?: number | null
    position?: number | null
    number?: number
    reponsible_id?: string | null
  }

  export type ApplicationUpdateWithoutEducationLevelInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    candidateName?: NullableStringFieldUpdateOperationsInput | string | null
    SocialAssistantName?: NullableStringFieldUpdateOperationsInput | string | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDesease?: NullableBoolFieldUpdateOperationsInput | boolean | null
    averageIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    perCapita?: NullableFloatFieldUpdateOperationsInput | number | null
    position?: NullableIntFieldUpdateOperationsInput | number | null
    number?: IntFieldUpdateOperationsInput | number
    announcement?: AnnouncementUpdateOneRequiredWithoutApplicationNestedInput
    candidate?: CandidateUpdateOneRequiredWithoutApplicationNestedInput
    SocialAssistant?: SocialAssistantUpdateOneWithoutApplicationNestedInput
    applicationHistories?: ApplicationHistoryUpdateManyWithoutApplicationNestedInput
    ScholarshipGranted?: ScholarshipGrantedUpdateOneWithoutApplicationNestedInput
    responsible?: LegalResponsibleUpdateOneWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateWithoutEducationLevelInput = {
    id?: StringFieldUpdateOperationsInput | string
    candidate_id?: StringFieldUpdateOperationsInput | string
    announcement_id?: StringFieldUpdateOperationsInput | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    socialAssistant_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidateName?: NullableStringFieldUpdateOperationsInput | string | null
    SocialAssistantName?: NullableStringFieldUpdateOperationsInput | string | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDesease?: NullableBoolFieldUpdateOperationsInput | boolean | null
    averageIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    perCapita?: NullableFloatFieldUpdateOperationsInput | number | null
    position?: NullableIntFieldUpdateOperationsInput | number | null
    number?: IntFieldUpdateOperationsInput | number
    reponsible_id?: NullableStringFieldUpdateOperationsInput | string | null
    applicationHistories?: ApplicationHistoryUncheckedUpdateManyWithoutApplicationNestedInput
    ScholarshipGranted?: ScholarshipGrantedUncheckedUpdateOneWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateManyWithoutEducationLevelInput = {
    id?: StringFieldUpdateOperationsInput | string
    candidate_id?: StringFieldUpdateOperationsInput | string
    announcement_id?: StringFieldUpdateOperationsInput | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    socialAssistant_id?: NullableStringFieldUpdateOperationsInput | string | null
    candidateName?: NullableStringFieldUpdateOperationsInput | string | null
    SocialAssistantName?: NullableStringFieldUpdateOperationsInput | string | null
    CadUnico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hasSevereDesease?: NullableBoolFieldUpdateOperationsInput | boolean | null
    averageIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    perCapita?: NullableFloatFieldUpdateOperationsInput | number | null
    position?: NullableIntFieldUpdateOperationsInput | number | null
    number?: IntFieldUpdateOperationsInput | number
    reponsible_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ApplicationHistoryCreateManyApplicationInput = {
    id?: string
    description: string
    solicitation?: $Enums.SolicitationType | null
    report?: string | null
    answered?: boolean | null
    deadLine?: Date | string | null
    date?: Date | string
  }

  export type ApplicationHistoryUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    solicitation?: NullableEnumSolicitationTypeFieldUpdateOperationsInput | $Enums.SolicitationType | null
    report?: NullableStringFieldUpdateOperationsInput | string | null
    answered?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deadLine?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationHistoryUncheckedUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    solicitation?: NullableEnumSolicitationTypeFieldUpdateOperationsInput | $Enums.SolicitationType | null
    report?: NullableStringFieldUpdateOperationsInput | string | null
    answered?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deadLine?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationHistoryUncheckedUpdateManyWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    solicitation?: NullableEnumSolicitationTypeFieldUpdateOperationsInput | $Enums.SolicitationType | null
    report?: NullableStringFieldUpdateOperationsInput | string | null
    answered?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deadLine?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use CandidateCountOutputTypeDefaultArgs instead
     */
    export type CandidateCountOutputTypeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = CandidateCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use LegalResponsibleCountOutputTypeDefaultArgs instead
     */
    export type LegalResponsibleCountOutputTypeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = LegalResponsibleCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SocialAssistantCountOutputTypeDefaultArgs instead
     */
    export type SocialAssistantCountOutputTypeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = SocialAssistantCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EntityCountOutputTypeDefaultArgs instead
     */
    export type EntityCountOutputTypeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = EntityCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EntitySubsidiaryCountOutputTypeDefaultArgs instead
     */
    export type EntitySubsidiaryCountOutputTypeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = EntitySubsidiaryCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FamilyMemberCountOutputTypeDefaultArgs instead
     */
    export type FamilyMemberCountOutputTypeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = FamilyMemberCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use VehicleCountOutputTypeDefaultArgs instead
     */
    export type VehicleCountOutputTypeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = VehicleCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FamilyMemberDiseaseCountOutputTypeDefaultArgs instead
     */
    export type FamilyMemberDiseaseCountOutputTypeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = FamilyMemberDiseaseCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AnnouncementCountOutputTypeDefaultArgs instead
     */
    export type AnnouncementCountOutputTypeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = AnnouncementCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EducationLevelCountOutputTypeDefaultArgs instead
     */
    export type EducationLevelCountOutputTypeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = EducationLevelCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ApplicationCountOutputTypeDefaultArgs instead
     */
    export type ApplicationCountOutputTypeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = ApplicationCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use IdMappingDefaultArgs instead
     */
    export type IdMappingArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = IdMappingDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CandidateDefaultArgs instead
     */
    export type CandidateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = CandidateDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserDefaultArgs instead
     */
    export type UserArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = UserDefaultArgs<ExtArgs>
    /**
     * @deprecated Use LegalResponsibleDefaultArgs instead
     */
    export type LegalResponsibleArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = LegalResponsibleDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SocialAssistantDefaultArgs instead
     */
    export type SocialAssistantArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = SocialAssistantDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EntityDefaultArgs instead
     */
    export type EntityArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = EntityDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EntitySubsidiaryDefaultArgs instead
     */
    export type EntitySubsidiaryArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = EntitySubsidiaryDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EntityDirectorDefaultArgs instead
     */
    export type EntityDirectorArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = EntityDirectorDefaultArgs<ExtArgs>
    /**
     * @deprecated Use IdentityDetailsDefaultArgs instead
     */
    export type IdentityDetailsArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = IdentityDetailsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FamilyMemberDefaultArgs instead
     */
    export type FamilyMemberArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = FamilyMemberDefaultArgs<ExtArgs>
    /**
     * @deprecated Use HousingDefaultArgs instead
     */
    export type HousingArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = HousingDefaultArgs<ExtArgs>
    /**
     * @deprecated Use VehicleDefaultArgs instead
     */
    export type VehicleArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = VehicleDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FamilyMemberIncomeDefaultArgs instead
     */
    export type FamilyMemberIncomeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = FamilyMemberIncomeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MonthlyIncomeDefaultArgs instead
     */
    export type MonthlyIncomeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = MonthlyIncomeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BankAccountDefaultArgs instead
     */
    export type BankAccountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = BankAccountDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ExpenseDefaultArgs instead
     */
    export type ExpenseArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = ExpenseDefaultArgs<ExtArgs>
    /**
     * @deprecated Use LoanDefaultArgs instead
     */
    export type LoanArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = LoanDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FinancingDefaultArgs instead
     */
    export type FinancingArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = FinancingDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CreditCardDefaultArgs instead
     */
    export type CreditCardArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = CreditCardDefaultArgs<ExtArgs>
    /**
     * @deprecated Use OtherExpenseDefaultArgs instead
     */
    export type OtherExpenseArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = OtherExpenseDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FamilyMemberDiseaseDefaultArgs instead
     */
    export type FamilyMemberDiseaseArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = FamilyMemberDiseaseDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MedicationDefaultArgs instead
     */
    export type MedicationArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = MedicationDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DeclarationsDefaultArgs instead
     */
    export type DeclarationsArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = DeclarationsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AnnouncementInterviewDefaultArgs instead
     */
    export type AnnouncementInterviewArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = AnnouncementInterviewDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AnnouncementDefaultArgs instead
     */
    export type AnnouncementArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = AnnouncementDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TimelineDefaultArgs instead
     */
    export type TimelineArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = TimelineDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EducationLevelDefaultArgs instead
     */
    export type EducationLevelArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = EducationLevelDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ApplicationDefaultArgs instead
     */
    export type ApplicationArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = ApplicationDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ApplicationHistoryDefaultArgs instead
     */
    export type ApplicationHistoryArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = ApplicationHistoryDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ScholarshipGrantedDefaultArgs instead
     */
    export type ScholarshipGrantedArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = ScholarshipGrantedDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FamilyMemberToVehicleDefaultArgs instead
     */
    export type FamilyMemberToVehicleArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = FamilyMemberToVehicleDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}